[{"_path":"/docs/dev/beam-dex","_dir":"dev","_draft":false,"_partial":false,"_locale":"","title":"Beam DEX","description":"Documentation for the Beam DEX contract and application","body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"beam-dex"},"children":[{"type":"text","value":"Beam DEX"}]},{"type":"element","tag":"h3","props":{"id":"details"},"children":[{"type":"text","value":"Details:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Repository: "},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/tree/master/bvm/Shaders/amm","rel":["nofollow"]},"children":[{"type":"text","value":"https://github.com/BeamMW/beam/tree/master/bvm/Shaders/amm"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Dappnet CID: 4e0a28b2b2a83b811ad17ba8228b0645dbce2969fd453a68fbc0b60bc8860e02"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Status: In development (14.11.2022)"}]},{"type":"element","tag":"h3","props":{"id":"shader-api"},"children":[{"type":"text","value":"Shader API"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"To learn how to use Shader API pleasse refer to "},{"type":"element","tag":"a","props":{"href":"using-beam-shaders-with-cli-wallet","title":"mention"},"children":[{"type":"text","value":"using-beam-shaders-with-cli-wallet.md"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Some notes regarding the API:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"pool_view and pools_view methods can be called by user role"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"\"kind\": \"uint32_t\" parameter has three values for different types of pool with different fees:"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"\n0 : low volatility, fee is 0.05%"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"\n1 :  mid volatility, fee is 0.3%"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"\n2 : high volatility, fee is 1% (default value)\\"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"roles\":\n    {\n        \"admin\":\n        {\n            \"view\":\n            {},\n            \"destroy\":\n            {\n                \"cid\": \"ContractID\"\n            },\n            \"deploy\":\n            {\n                \"hUpgradeDelay\": \"Height\",\n                \"nMinApprovers\": \"uint32_t\",\n                \"bSkipVerifyVer\": \"uint32_t\",\n                \"cidDaoVault\": \"ContractID\"\n            },\n            \"schedule_upgrade\":\n            {\n                \"cid\": \"ContractID\",\n                \"hTarget\": \"Height\",\n                \"bSkipVerifyVer\": \"uint32_t\",\n                \"iSender\": \"uint32_t\",\n                \"approve_mask\": \"uint32_t\"\n            },\n            \"replace_admin\":\n            {\n                \"cid\": \"ContractID\",\n                \"iAdmin\": \"uint32_t\",\n                \"pk\": \"PubKey\",\n                \"iSender\": \"uint32_t\",\n                \"approve_mask\": \"uint32_t\"\n            },\n            \"set_min_approvers\":\n            {\n                \"cid\": \"ContractID\",\n                \"newVal\": \"uint32_t\",\n                \"iSender\": \"uint32_t\",\n                \"approve_mask\": \"uint32_t\"\n            },\n            \"explicit_upgrade\":\n            {\n                \"cid\": \"ContractID\"\n            },\n            \"pool_view\":\n            {\n                \"cid\": \"ContractID\",\n                \"aid1\": \"AssetID\",\n                \"aid2\": \"AssetID\",\n                \"kind\": \"uint32_t\"\n            },\n            \"pools_view\":\n            {\n                \"cid\": \"ContractID\"\n            }\n        },\n        \"user\":\n        {\n            \"pool_create\":\n            {\n                \"cid\": \"ContractID\",\n                \"aid1\": \"AssetID\",\n                \"aid2\": \"AssetID\",\n                \"kind\": \"uint32_t\"\n            },\n            \"pool_destroy\":\n            {\n                \"cid\": \"ContractID\",\n                \"aid1\": \"AssetID\",\n                \"aid2\": \"AssetID\",\n                \"kind\": \"uint32_t\"\n            },\n            \"add_liquidity\":\n            {\n                \"cid\": \"ContractID\",\n                \"aid1\": \"AssetID\",\n                \"aid2\": \"AssetID\",\n                \"kind\": \"uint32_t\",\n                \"val1\": \"Amount\",\n                \"val2\": \"Amount\",\n                \"bPredictOnly\": \"uint32_t\"\n            },\n            \"withdraw\":\n            {\n                \"cid\": \"ContractID\",\n                \"aid1\": \"AssetID\",\n                \"aid2\": \"AssetID\",\n                \"kind\": \"uint32_t\",\n                \"ctl\": \"Amount\",\n                \"bPredictOnly\": \"uint32_t\"\n            },\n            \"trade\":\n            {\n                \"cid\": \"ContractID\",\n                \"aid1\": \"AssetID\",\n                \"aid2\": \"AssetID\",\n                \"kind\": \"uint32_t\",\n                \"val1_buy\": \"Amount\",\n                \"bPredictOnly\": \"uint32_t\"\n            }\n        }\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"roles\":\n    {\n        \"admin\":\n        {\n            \"view\":\n            {},\n            \"destroy\":\n            {\n                \"cid\": \"ContractID\"\n            },\n            \"deploy\":\n            {\n                \"hUpgradeDelay\": \"Height\",\n                \"nMinApprovers\": \"uint32_t\",\n                \"bSkipVerifyVer\": \"uint32_t\",\n                \"cidDaoVault\": \"ContractID\"\n            },\n            \"schedule_upgrade\":\n            {\n                \"cid\": \"ContractID\",\n                \"hTarget\": \"Height\",\n                \"bSkipVerifyVer\": \"uint32_t\",\n                \"iSender\": \"uint32_t\",\n                \"approve_mask\": \"uint32_t\"\n            },\n            \"replace_admin\":\n            {\n                \"cid\": \"ContractID\",\n                \"iAdmin\": \"uint32_t\",\n                \"pk\": \"PubKey\",\n                \"iSender\": \"uint32_t\",\n                \"approve_mask\": \"uint32_t\"\n            },\n            \"set_min_approvers\":\n            {\n                \"cid\": \"ContractID\",\n                \"newVal\": \"uint32_t\",\n                \"iSender\": \"uint32_t\",\n                \"approve_mask\": \"uint32_t\"\n            },\n            \"explicit_upgrade\":\n            {\n                \"cid\": \"ContractID\"\n            },\n            \"pool_view\":\n            {\n                \"cid\": \"ContractID\",\n                \"aid1\": \"AssetID\",\n                \"aid2\": \"AssetID\",\n                \"kind\": \"uint32_t\"\n            },\n            \"pools_view\":\n            {\n                \"cid\": \"ContractID\"\n            }\n        },\n        \"user\":\n        {\n            \"pool_create\":\n            {\n                \"cid\": \"ContractID\",\n                \"aid1\": \"AssetID\",\n                \"aid2\": \"AssetID\",\n                \"kind\": \"uint32_t\"\n            },\n            \"pool_destroy\":\n            {\n                \"cid\": \"ContractID\",\n                \"aid1\": \"AssetID\",\n                \"aid2\": \"AssetID\",\n                \"kind\": \"uint32_t\"\n            },\n            \"add_liquidity\":\n            {\n                \"cid\": \"ContractID\",\n                \"aid1\": \"AssetID\",\n                \"aid2\": \"AssetID\",\n                \"kind\": \"uint32_t\",\n                \"val1\": \"Amount\",\n                \"val2\": \"Amount\",\n                \"bPredictOnly\": \"uint32_t\"\n            },\n            \"withdraw\":\n            {\n                \"cid\": \"ContractID\",\n                \"aid1\": \"AssetID\",\n                \"aid2\": \"AssetID\",\n                \"kind\": \"uint32_t\",\n                \"ctl\": \"Amount\",\n                \"bPredictOnly\": \"uint32_t\"\n            },\n            \"trade\":\n            {\n                \"cid\": \"ContractID\",\n                \"aid1\": \"AssetID\",\n                \"aid2\": \"AssetID\",\n                \"kind\": \"uint32_t\",\n                \"val1_buy\": \"Amount\",\n                \"bPredictOnly\": \"uint32_t\"\n            }\n        }\n    }\n}\n"}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"details","depth":3,"text":"Details:"},{"id":"shader-api","depth":3,"text":"Shader API"}]}},"_type":"markdown","_id":"content:docs:dev:beam-dex.md","_source":"content","_file":"docs/dev/beam-dex.md","_extension":"md"},{"_path":"/docs/dev/beam-platform-architecture","_dir":"dev","_draft":false,"_partial":false,"_locale":"","title":"Beam Platform Architecture","description":"","body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"beam-platform-architecture"},"children":[{"type":"text","value":"Beam Platform Architecture"}]},{"type":"element","tag":"h2","props":{"id":"confidential-assets"},"children":[{"type":"text","value":"Confidential Assets"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Beam Blockchain natively supports creating new types of tokens called Confidential Assets (CA). Confidential Assets inherit all the properties of the Beam Coin (a native token on Beam Blockchain), namely, confidentiality and scalability using MimbleWimble's cut-through process."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Unlike Ethereum ERC-20 contracts, Beam assets are implemented on Layer 1 and are native citizens of Beam's ecosystem. Each Beam transaction can simultaneously include various CA types as inputs and outputs, provided they match the CA type sum to zero, i.e., no type conversion can occur within a transaction."}]},{"type":"element","tag":"h2","props":{"id":"transaction-kernels"},"children":[{"type":"text","value":"Transaction Kernels"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Beam transactions are comprised of inputs and outputs, which are represented by Pedersen Commitments with adjacent zero-knowledge range proofs to ensure committed values are positive within a specific range. While inputs and outputs can be removed during the cut-through process, transaction kernels remain in the blockchain and are crucial for protocol validation. "}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Initially, kernels contained the signed difference between the blinding factors but were extended to support various purposes during Beam's development, including reflecting transaction type and supporting Lelantus shielded pool. Additionally, the kernels were further repurposed to enable the deployment of smart contracts on the Beam blockchain"}]},{"type":"element","tag":"h2","props":{"id":"kernels-with-side-effects"},"children":[{"type":"text","value":"Kernels with Side Effects"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"A transaction kernel can identify any side effects, i.e., direct changes to the node state, including transformations to tx inputs and outputs. When this occurs, Beam coins transform into a hybrid UTXO based <> State Based cryptocurrency. When a side effect modifies the outputs, the value stored records on the blockchain as the kernel \"consumed\" the output. This results in the kernel \"emitting\" new inputs using the value stored in the node state."}]},{"type":"element","tag":"h2","props":{"id":"beam-shaders-and-beam-virtual-machine"},"children":[{"type":"text","value":"Beam Shaders and Beam Virtual Machine"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The encapsulation of each node state is done using Beam Shaders while defining the state variables and correlating business logic to modify them. These shaders are coded using WebAssembly (WASM), allowing seamless deployment on Beam Virtual Machines."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Beam uses WASM's binary instruction format for stack-based virtual machines and takes advantage of WASM's industry-standard support for various web for client and server applications. "}]},{"type":"element","tag":"h2","props":{"id":"using-beam-shaders-to-implement-smart-contracts"},"children":[{"type":"text","value":"Using Beam Shaders to Implement Smart Contracts"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"For a more technical description of Beam Smart Contracts, read here"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"According to "},{"type":"element","tag":"a","props":{"href":"https://www.investopedia.com/terms/s/smart-contracts.asp","rel":["nofollow"]},"children":[{"type":"text","value":"Investopedia"}]},{"type":"text","value":", Smart Contracts are "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"\"a self-executing contract with the terms of the agreement between buyer and seller being directly written into lines of code\""}]},{"type":"text","value":" Smart Contracts on the Beam blockchain are executed via Beam Shaders."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Each Beam Shader is a collection of state variables and methods, including a constructor and a destructor. The "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"shader constructer"}]},{"type":"text","value":" is only executed once when the Contract Creator defines parameters when registering a new shader. When a new Beam Shader code and construction parameters records on the blockchain, it creates a unique Shader Instance."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"It is important to note the same code with different parameters will produce a distinct unique Shader ID, thus creating a separate Shader Instance."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"A "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"destructor"}]},{"type":"text","value":" runs when the Beam Shader is deactivated and cleans all used resources.  A Beam Shader can only be deactivated if it does not contain any funds, preventing the destruction of value during the Shader deactivation process."}]},{"type":"element","tag":"h2","props":{"id":"properties-of-chain-side-beam-shaders"},"children":[{"type":"text","value":"Properties of Chain Side Beam Shaders"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The section below details key properties of smart contract (Beam Chain Side Shaders) implementation on the Beam blockchain."}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Beam Shaders utilize several limiting mechanisms (charging execution fees, maximum execution fees) to avoid blocking the node with an unbounded cycle and ensure bounded execution time."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Shaders cannot be automated"}]},{"type":"text","value":" and only record on the blockchain via sent transactions with required parameters, signatures, and fees. "}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Shaders can claim a portion of fees from provided sources of decentralized application requests. Shaders can then store and issue disbursements, including refunding excess payments to special "},{"type":"element","tag":"a","props":{"href":"https://blog.giveth.io/the-vault-contract-open-sourced-by-giveth-fe2261f7b91b","rel":["nofollow"]},"children":[{"type":"text","value":"Vault contracts"}]},{"type":"text","value":"."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Shaders can communicate with other Shaders to delegate operations in the transaction context, activating the initial Shader on the chain."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The Shader that controls the assets can burn CA emissions, and the shaders defined logic conducts emission burning when manual emission burn cannot function. "}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"When a Shader deploys, it results in one of two outcomes: either the Shader consumes funds (transaction inputs) or unlocks funds (transaction outputs) recorded on the blockchain. "}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Overdraft protection"}]},{"type":"text","value":". BVM only validates equal amounts of locked and unlocked funds to discourage bad actors from creating confidential assets. "}]}]},{"type":"element","tag":"h2","props":{"id":"wallet-side-shaders"},"children":[{"type":"text","value":"Wallet Side Shaders"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Thus far, we have explored smart contracts activated by sent transactions (Chain-side Shaders). We now review the wallet-side architecture, i.e., the framework that interacts with Shaders via new transactions and retrieval of Shader metadata to Beam Wallets."}]},{"type":"element","tag":"h3","props":{"id":"wallet-web-application-platform"},"children":[{"type":"text","value":"Wallet Web Application Platform"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Since v6.0, Beam Desktop Wallets have a built-in web application platform that allows first-party and third-party app development (Mobile version TBA)."}]},{"type":"element","tag":"h3","props":{"id":"the-role-of-wallet-side-shaders"},"children":[{"type":"text","value":"The role of Wallet Side Shaders"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Due to Beam's confidential blockchain ecosystem, any blockchain-altering function requires wallets. Beam's DeFi architecture leverages the Wallet-side shader's client logic and API required for each smart contract, simplifying interactions between wallets and Chain-side Shaders"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Wallet-side Shaders offer great flexibility in separating client and chain-side logic, enabling complex flows that create operations across multiple wallets through a single UI."}]},{"type":"element","tag":"h2","props":{"id":"resources"},"children":[{"type":"text","value":"Resources"}]},{"type":"element","tag":"h3","props":{"id":"concepts"},"children":[{"type":"text","value":"Concepts"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"DLC (Discreet Log Contract)\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://adiabat.github.io/dlc.pdf","rel":["nofollow"]},"children":[{"type":"text","value":"paper"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://www.youtube.com/watch?v=P6AX8KdXAts","rel":["nofollow"]},"children":[{"type":"text","value":"video"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://medium.com/@gertjaap/discreet-log-contracts-invisible-smart-contracts-on-the-bitcoin-blockchain-cc8afbdbf0db","rel":["nofollow"]},"children":[{"type":"text","value":"article"}]}]}]}]}]},{"type":"element","tag":"h3","props":{"id":"whitepapers"},"children":[{"type":"text","value":"Whitepapers"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://www.semanticscholar.org/paper/The-Rainbow-Network-%3A-An-Off-Chain-Decentralized-Robinson/03b035bc6fea62caef3455ad383cd7f8164adf2f?p2df","rel":["nofollow"]},"children":[{"type":"text","value":"Rainbow Protocol Whitepaper"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://arwen.io/whitepaper.pdf","rel":["nofollow"]},"children":[{"type":"text","value":"Arwen Protocol Whitepaper"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://compound.finance/documents/Compound.Whitepaper.pdf","rel":["nofollow"]},"children":[{"type":"text","value":"Compound Whitepaper"}]}]}]},{"type":"element","tag":"h3","props":{"id":"wrapped-assets"},"children":[{"type":"text","value":"Wrapped assets"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://tbtc.network/developers/tbtc-technical-system-overview/","rel":["nofollow"]},"children":[{"type":"text","value":"tBTC - Bitcoin on Ethereum via Liquid"}]}]}]},{"type":"element","tag":"h3","props":{"id":"terms"},"children":[{"type":"text","value":"Terms"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://defitutorials.substack.com/p/collateralized-debt-positions-cdps","rel":["nofollow"]},"children":[{"type":"text","value":"Collateralized Debt Position"}]}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"confidential-assets","depth":2,"text":"Confidential Assets"},{"id":"transaction-kernels","depth":2,"text":"Transaction Kernels"},{"id":"kernels-with-side-effects","depth":2,"text":"Kernels with Side Effects"},{"id":"beam-shaders-and-beam-virtual-machine","depth":2,"text":"Beam Shaders and Beam Virtual Machine"},{"id":"using-beam-shaders-to-implement-smart-contracts","depth":2,"text":"Using Beam Shaders to Implement Smart Contracts"},{"id":"properties-of-chain-side-beam-shaders","depth":2,"text":"Properties of Chain Side Beam Shaders"},{"id":"wallet-side-shaders","depth":2,"text":"Wallet Side Shaders","children":[{"id":"wallet-web-application-platform","depth":3,"text":"Wallet Web Application Platform"},{"id":"the-role-of-wallet-side-shaders","depth":3,"text":"The role of Wallet Side Shaders"}]},{"id":"resources","depth":2,"text":"Resources","children":[{"id":"concepts","depth":3,"text":"Concepts"},{"id":"whitepapers","depth":3,"text":"Whitepapers"},{"id":"wrapped-assets","depth":3,"text":"Wrapped assets"},{"id":"terms","depth":3,"text":"Terms"}]}]}},"_type":"markdown","_id":"content:docs:dev:beam-platform-architecture.md","_source":"content","_file":"docs/dev/beam-platform-architecture.md","_extension":"md"},{"_path":"/docs/dev/beam-shaders/readme","_dir":"beam-shaders","_draft":false,"_partial":false,"_locale":"","title":"Beam Shaders","description":"","body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"beam-shaders"},"children":[{"type":"text","value":"Beam Shaders"}]},{"type":"element","tag":"h2","props":{"id":"beam-smart-contracts-overview"},"children":[{"type":"text","value":"Beam Smart Contracts Overview"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This section will give an overview of Beam's Smart Contracts. Beam's blockchain offers fully featured Smart Contracts that support "},{"type":"element","tag":"a","props":{"href":"https://www.geeksforgeeks.org/what-is-meant-by-turing-complete-in-ethereum/","rel":["nofollow"]},"children":[{"type":"text","value":"Turing complete programming"}]},{"type":"text","value":", enabling the construction of complex Decentralized Applications. Beam's implementation and architecture differ from most other blockchains. "}]},{"type":"element","tag":"h3","props":{"id":"contract-shaders-and-application-shaders"},"children":[{"type":"text","value":"Contract Shaders and Application Shaders"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In Beam, Smart Contracts have two components, Contract Shaders and Application Shaders."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"{% hint style=\"info\" %}\nThe term \"shader\" originated from 3D graphics and refers to a custom program, as opposed to a pre-defined fixed function.\n{% endhint %}"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Deployed on the blockchain, Contract Shaders are executed by the Beam Virtual Machine when a wallet constructs a transaction that accesses one of the public methods of the contract. "}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"On the other hand, Application Shaders run within the Beam Wallet and act as helpers to expose the contract API to decentralized applications. One Application Shader can interac with several Contract Shaders, providing complex functionality."}]},{"type":"element","tag":"figure","props":{},"children":[{"type":"element","tag":"img","props":{"src":"../.gitbook/assets/Beam Shaders.png","alt":""},"children":[]},{"type":"element","tag":"figcaption","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Conceptual Diagram of Applications and Contract Shaders"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Beam Shaders are implemented in WebAssembly and can be written in any programming language that can be compiled into WASM. Currently most shader are implemented in C++. Many examples of smart contracts can be found in the Beam "},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/tree/master/bvm/Shaders","rel":["nofollow"]},"children":[{"type":"text","value":"repository"}]},{"type":"text","value":"."}]},{"type":"element","tag":"h2","props":{"id":"contract-shader"},"children":[{"type":"text","value":"Contract Shader"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Contract Shaders may do the following:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Save/load its custom variables (access contract state)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Lock/unlock funds."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Create and manage assets"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Invoke public methods of other contracts"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Demand signatures for arbitrary public keys (more about this later)"}]}]},{"type":"element","tag":"h3","props":{"id":"contract-life-cycle"},"children":[{"type":"text","value":"Contract life cycle"}]},{"type":"element","tag":"h4","props":{"id":"creation"},"children":[{"type":"text","value":"Creation"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The contract shader is created from 2 parameters:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Shader (the bytecode)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Constructor argument"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"A valid shader must have a "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Constructor"}]},{"type":"text","value":" public method, which is invoked only once, during contract creation. If the constructor is executed successfully, the new contract is created. It is assigned a unique ID which is calculated according to:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"ID := DeriveID[ Hash(Shader) | Constructor-Argument ]"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Note: Same shader may be used in different contracts, if they were created with different constructor arguments. Hence the Shader defines the contract "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"type"}]},{"type":"text","value":". Since the Contract ID explicitly depends on the shader and constructor arguments, it can't be tampered with."}]},{"type":"element","tag":"h4","props":{"id":"method-invocation-arbitrary-number-of-times"},"children":[{"type":"text","value":"Method invocation (arbitrary number of times)."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Must provide the following:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Contract ID"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Method number"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Arbitrary arguments"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"For the invocation the Node locates the requested contract shader, and invokes its appropriate public method with the given argument."}]},{"type":"element","tag":"h4","props":{"id":"destruction-optional"},"children":[{"type":"text","value":"Destruction (optional)"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Must provide the following:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Destructor argument"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The contract destruction is considered successful iff:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The shader "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Destructor"}]},{"type":"text","value":" method is executed successfully"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The contract deleted all its custom variables it stored."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The BVM that tracks the external contract state ensures that\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"no locked funds left in the contract"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"no assets left created by this contract"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"there are no external references (i.e. other contracts that explicitly depend on it)"}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The ability of destruction is optional."}]},{"type":"element","tag":"h3","props":{"id":"how-and-when-contacts-are-invoked"},"children":[{"type":"text","value":"How and when contacts are invoked"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Contracts are passive, means they can only be invoked directly. There's no background processing, auto-activation on specific events, timers, or etc. This is a deliberate design decision."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"To work with contracts we added 2 additional kernel types: "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"ContractCreate"}]},{"type":"text","value":" and "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"ContractInvoke"}]},{"type":"text","value":"."}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"ContractCreate"}]},{"type":"text","value":" contains the shader of the being-created contract, and its constructor arguments"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"ContractInvoke"}]},{"type":"text","value":" has the target Contract ID, its public method number, and the appropriate arguments\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Note: contract destruction is also invoked by ContractInvoke, with the appropriate method number Contracts can only be invoked during interpretation of those kernels. Which, in turn, occurs in the context of a specific block or transaction interpretation."}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"We preserve the MW principle (means there're no transactions per se), means those kernels can come in a transaction in any combination, be mixed with other special kernels (CA and Lelantus-MW), and be complemented by arbitrary inputs and outputs, built by arbitrary number of users."}]},{"type":"element","tag":"h3","props":{"id":"kernel-validation"},"children":[{"type":"text","value":"Kernel validation"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In MW each transaction element (input, output, and kernel) comes with a "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"commitment"}]},{"type":"text","value":" and validated appropriately. Originally in MW kernels's commitment may contain blinding factor only, not the value, and it's signed by the Schnorr's signature to prove this (as well as protect other kernel parameters from tampering)."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Starting from HF2 we extended this concept, and introduced special kernel types (Lelantus-MW and asset control), which come with a commitment that may contain a value (which contributes to the transaction balance), and signed by appropriate means specific to the kernel type."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"So we stick to the same principle with the contract invocation kernels. Their commitment, in addition to arbitrary blinding factor, should reflect the amounts that the contract invocation is supposed to lock/unlock. Their signature, in turn, is supposed to prove the following:"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"After accounting for the funds locked/unlocked by the contract, the "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Commitment"}]},{"type":"text","value":" indeed consists of the blinding factor only"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Argument of knowledge of the corresponding secret keys to all the additional public keys that the contract requested during its execution."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Technically the kernel validation goes as following:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Kernel shader's method is executed"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"During the execution the shader may:\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Lock or unlock funds"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Specify specific public keys "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Pk[i]"}]},{"type":"text","value":" that must be signed"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"After the shader execution\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Adjust the specified kernel commitment "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"C"}]},{"type":"text","value":" w.r.t. funds locked/unlocked\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"For each locked/unlocked asset type add/subtract "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"H[i] * value"}]},{"type":"text","value":", whereas "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"H[i]"}]},{"type":"text","value":" is the generator for the specified CA type."}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"For the resulting commitment "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"C'"}]},{"type":"text","value":" the prover must prove knowledge of the appropriate blinding factor."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Verify the provided Multi-Signature of the argument of knowledge of the preimages of "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"C'"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Pk[i]"}]},{"type":"text","value":"."}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Hence to build a valid transaction with the contract invocation, the user must "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"predict"}]},{"type":"text","value":" how much "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"funds"}]},{"type":"text","value":" the contract invocation will contribute to the transaction, as well as which "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"public"}]},{"type":"text","value":" keys it will demand for validation."}]},{"type":"element","tag":"h4","props":{"id":"multi-signature"},"children":[{"type":"text","value":"Multi-signature"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"We use a variation of the Schnorr's signature to provide argument of knowledge of multiple secret keys. Unlike standard Schnorr's multisignature, which only proves the knowledge of the sum of the secret keys, our variant proves the knowledge of each individual secret key. This is important to mitigate the possible rogue key attack (a.k.a. key cancellation attack)."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Consequently the verifier needs all the appropriate public keys in advance."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"To accomplish this, we generalize the Schnorr's protocol in the following way for "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"M"}]},{"type":"text","value":" keys:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Prover -> Verifier\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Context to where the signature applies (kernel parameters, etc.)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Set of "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"M"}]},{"type":"text","value":" public keys "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Pk[i]"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Public nonce "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"N"}]}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Verifier -> Prover\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Set of "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"M"}]},{"type":"text","value":" challenges "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"e[i]"}]}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Prover -> Verifier\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Signature preimage "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"k"}]}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Verifier\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Accept iff: "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"N + Sum(Pk[i] * e[i]) == G*k"}]}]}]}]}]},{"type":"element","tag":"h3","props":{"id":"constraints-and-limitations"},"children":[{"type":"text","value":"Constraints and limitations"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"As we mentioned, shaders are executed by the BVM in a sandbox (isolated environment) to ensure that bugs or malicious behavior won't affect blockchain integrity."}]},{"type":"element","tag":"h4","props":{"id":"maximum-complexity"},"children":[{"type":"text","value":"Maximum complexity"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The length of the execution (number of cycles) is limited, as well as specific support functions of the BVM have their limitations (such as max number of signatures to check, max length of the variable to store, and etc.). This is to keep execution time within sane bounds, and prevent the blockchain bloat."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"For most real-world cases those limitations are adequate. If, however, for some reason the shader method is complex, and those limitations can't be met, then we recommend splitting it into several smaller ones, while the intermediate calculation result is saved in some custom variables."}]},{"type":"element","tag":"h4","props":{"id":"repeatability"},"children":[{"type":"text","value":"Repeatability"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In addition it's critically important to ensure that the shader executes in an exactly the same way on all the nodes, and produces exactly the same side effects (if not - attacker can easily cause chain split). Because of this:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"All the memory that the shader can access is initialized the same way on all the nodes.\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Developers however should not assume that it's necessarily zero-initialized."}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"By design, there are no BVM functions for the shader that can yield different results. Such as generating randoms, getting current time, and so on."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Native floating-point operations are currently not supported"}]},{"type":"text","value":".\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"This is because there may be subtle differences in FPU (floating-point unit) behavior on different machines (like the positive/negative sign of zero). In the future we may support it, once all the potential problems are solved."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Instead we recommend using multi-precision integer arithmetics."}]}]}]}]},{"type":"element","tag":"h4","props":{"id":"contract-bounds"},"children":[{"type":"text","value":"Contract bounds"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Contract can access its custom variables only. It can't access the variables that belong to other contract, not even for reading. This is a deliberate design decision. By such it's possible for the contract to protect its data from unauthorized usage by other contracts (though that data itself is visible to all the users)."}]},{"type":"element","tag":"h4","props":{"id":"other-considerations"},"children":[{"type":"text","value":"Other considerations"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"We detect and protect against malicious behavior toward the blockchain integrity (such as invalid memory access, attempt to unlock more funds that had been locked, attempt to manage an asset that doesn't belong to the contract, and so on)."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"With all the precautions from our side, there is "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"literally no guarantee that contract behaves as described by its creator"}]},{"type":"text","value":". Innocently-looking code may have bugs or disguised backdoors. This is the price of the flexibility, an inevitable trade-off of the customizable logic."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Hence users should only trust contracts after thorough source code audit. The compilation process should be transparent, i.e. everyone should be able to take the source code, compile it with publicly-available compiler, and get exactly the same shader bytecode."}]},{"type":"element","tag":"h2","props":{"id":"wallet-side-shaders"},"children":[{"type":"text","value":"Wallet-side shaders"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"As we mentioned, wallet-side shaders are designed for wallets (user-side software), to provide an interface to specific contract types. In contrast to contract-side shaders, the wallet-side shaders don't have strict complexity limitations, and are allowed to read any blockchain information (state and variables of any contract, block headers). There is also no consideration regarding repeatability, so they can access current time, generate random, and so on."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"We make sure however that they can't do anything potentially dangerous without user authorization."}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Shader can get public keys generated by the user account, but not private keys."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"It can ask to communicate with other users (via SBBS system), this may be necessary for multi-user signatures in specific contracts\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Communication must be allowed by the user explicitly."}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Shader may prepare contract control kernel and ask the wallet to build and broadcast the appropriate transaction\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Of course this requires user authorization. The user sees how much funds it gets/spends in the transaction."}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Technically the wallet-side shaders is executed with user-supplied parameters (in a textual form), and can do either of the following:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"produce json-style document with the relevant information for the user"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"prepare contract control kernel, that, after user authorization, is signed by the wallet and used in the appropriate transaction."}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"beam-smart-contracts-overview","depth":2,"text":"Beam Smart Contracts Overview","children":[{"id":"contract-shaders-and-application-shaders","depth":3,"text":"Contract Shaders and Application Shaders"}]},{"id":"contract-shader","depth":2,"text":"Contract Shader","children":[{"id":"contract-life-cycle","depth":3,"text":"Contract life cycle"},{"id":"how-and-when-contacts-are-invoked","depth":3,"text":"How and when contacts are invoked"},{"id":"kernel-validation","depth":3,"text":"Kernel validation"},{"id":"constraints-and-limitations","depth":3,"text":"Constraints and limitations"}]},{"id":"wallet-side-shaders","depth":2,"text":"Wallet-side shaders"}]}},"_type":"markdown","_id":"content:docs:dev:beam-shaders:README.md","_source":"content","_file":"docs/dev/beam-shaders/README.md","_extension":"md"},{"_path":"/docs/dev/beam-shaders/using-beam-shaders-with-cli-wallet-masternet","_dir":"beam-shaders","_draft":false,"_partial":false,"_locale":"","title":"Using Beam Shaders with CLI Wallet (masternet)","description":"This document describes how to use Beam Shaders with CLI wallet running on a local network.","body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"using-beam-shaders-with-cli-wallet-masternet"},"children":[{"type":"text","value":"Using Beam Shaders with CLI Wallet (masternet)"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"{% hint style=\"info\" %}\n"},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"All examples refer to a sample application \"mydapp\" which has two"}]},{"type":"text","value":" "},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/tree/master/bvm/Shaders/vault","rel":["nofollow"]},"children":[{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Vault"}]}]},{"type":"text","value":" "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Shaders: App Shader ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"app.wasm"}]},{"type":"text","value":") and Contract Shader ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"contract.wasm"}]},{"type":"text","value":")."}]},{"type":"text","value":"\n{% endhint %}"}]},{"type":"element","tag":"h3","props":{"id":"overview"},"children":[{"type":"text","value":"Overview"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Beam shaders support requires "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Fork3"}]},{"type":"text","value":" and at least "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"v6.0"}]},{"type":"text","value":" CLI."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"There are two types of Shaders in Beam:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Contract Shader"}]},{"type":"text","value":" - implements Smart Contract functionality, is stored on the blockchain and are running on Beam nodes."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"App Shader"}]},{"type":"text","value":" - implements Smart Contract API and is running in Beam wallet."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"To perform any transactions with shaders, you must specify the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"shader"}]},{"type":"text","value":" command."}]},{"type":"element","tag":"h3","props":{"id":"prerequisites"},"children":[{"type":"text","value":"Prerequisites"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Make sure you have node running and connected to "},{"type":"element","tag":"a","props":{"href":"broken-reference"},"children":[{"type":"text","value":"local network"}]},{"type":"text","value":"."},{"type":"element","tag":"br","props":{},"children":[]},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Notice:"}]},{"type":"text","value":" Shaders are applied after the third fork with height 1500. Therefore, for faster testing, we recommend to define lower heights using the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Fork1"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Fork2"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Fork3"}]},{"type":"text","value":" attributes."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Create at least one Beam node with "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--peer=<ip:port of the first node>"}]},{"type":"text","value":" for the transaction replication."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Make sure you have Beam "},{"type":"element","tag":"a","props":{"href":"../beam-wallets/command-line-wallet"},"children":[{"type":"text","value":"CLI wallet"}]},{"type":"text","value":" connected to your Beam node."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"You must have funds in your wallet to pay the fee."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"{% hint style=\"warning\" %}\nSince this tutorial is based on a local network, each command must be specified with the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--FakePoW=1"}]},{"type":"text","value":" flag. For convenience we recommend adding this flag to your "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"beam-node.cfg"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"beam-wallet.cfg"}]},{"type":"text","value":" files.\n{% endhint %}"}]},{"type":"element","tag":"h3","props":{"id":"shader-api"},"children":[{"type":"text","value":"Shader API"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"First of all, you need to know the available actions of a contract. To see all commands supported by the App Shader enter the following command with "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"shader"}]},{"type":"text","value":" command:"}]},{"type":"element","tag":"pre","props":{"code":"./beam-wallet-masternet shader --pass=1 --shader_app_file=mydapp/app.wasm -n localhost:10000\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"./beam-wallet-masternet shader --pass=1 --shader_app_file=mydapp/app.wasm -n localhost:10000\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"You need to specify your wallet password, shader application file and node address."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The output is a json format line:"}]},{"type":"element","tag":"pre","props":{"code":"Shader output: {\"roles\": {\"manager\": {\"create\": {},\"destroy\": {\"cid\": \"ContractID\"},\"view\": {},\"view_logs\": {\"cid\": \"ContractID\"},\"view_accounts\": {\"cid\": \"ContractID\"},\"view_account\": {\"cid\": \"ContractID\",\"pubKey\": \"PubKey\"}},\"my_account\": {\"view\": {\"cid\": \"ContractID\"},\"get_key\": {\"cid\": \"ContractID\"},\"get_proof\": {\"cid\": \"ContractID\",\"aid\": \"AssetID\"},\"deposit\": {\"cid\": \"ContractID\",\"pkForeign\": \"PubKey\",\"bCoSigner\": \"uint32_t\",\"amount\": \"Amount\",\"aid\": \"AssetID\"},\"withdraw\": {\"cid\": \"ContractID\",\"pkForeign\": \"PubKey\",\"bCoSigner\": \"uint32_t\",\"amount\": \"Amount\",\"aid\": \"AssetID\"}}}}\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"Shader output: {\"roles\": {\"manager\": {\"create\": {},\"destroy\": {\"cid\": \"ContractID\"},\"view\": {},\"view_logs\": {\"cid\": \"ContractID\"},\"view_accounts\": {\"cid\": \"ContractID\"},\"view_account\": {\"cid\": \"ContractID\",\"pubKey\": \"PubKey\"}},\"my_account\": {\"view\": {\"cid\": \"ContractID\"},\"get_key\": {\"cid\": \"ContractID\"},\"get_proof\": {\"cid\": \"ContractID\",\"aid\": \"AssetID\"},\"deposit\": {\"cid\": \"ContractID\",\"pkForeign\": \"PubKey\",\"bCoSigner\": \"uint32_t\",\"amount\": \"Amount\",\"aid\": \"AssetID\"},\"withdraw\": {\"cid\": \"ContractID\",\"pkForeign\": \"PubKey\",\"bCoSigner\": \"uint32_t\",\"amount\": \"Amount\",\"aid\": \"AssetID\"}}}}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"For convenience, let's put it this way:"}]},{"type":"element","tag":"pre","props":{"code":"{\n  \"roles\": {\n    \"manager\": {\n      \"create\": {},\n      \"destroy\": { \"cid\": \"ContractID\" },\n      \"view\": {},\n      \"view_logs\": { \"cid\": \"ContractID\" },\n      \"view_accounts\": { \"cid\": \"ContractID\" },\n      \"view_account\": { \"cid\": \"ContractID\", \"pubKey\": \"PubKey\" }\n    },\n    \"my_account\": {\n      \"view\": { \"cid\": \"ContractID\" },\n      \"get_key\": { \"cid\": \"ContractID\" },\n      \"get_proof\": { \"cid\": \"ContractID\", \"aid\": \"AssetID\" },\n      \"deposit\": {\n        \"cid\": \"ContractID\",\n        \"pkForeign\": \"PubKey\",\n        \"bCoSigner\": \"uint32_t\",\n        \"amount\": \"Amount\",\n        \"aid\": \"AssetID\"\n      },\n      \"withdraw\": {\n        \"cid\": \"ContractID\",\n        \"pkForeign\": \"PubKey\",\n        \"bCoSigner\": \"uint32_t\",\n        \"amount\": \"Amount\",\n        \"aid\": \"AssetID\"\n      }\n    }\n  }\n}\n","language":"json","meta":"","className":["language-json"]},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n  \"roles\": {\n    \"manager\": {\n      \"create\": {},\n      \"destroy\": { \"cid\": \"ContractID\" },\n      \"view\": {},\n      \"view_logs\": { \"cid\": \"ContractID\" },\n      \"view_accounts\": { \"cid\": \"ContractID\" },\n      \"view_account\": { \"cid\": \"ContractID\", \"pubKey\": \"PubKey\" }\n    },\n    \"my_account\": {\n      \"view\": { \"cid\": \"ContractID\" },\n      \"get_key\": { \"cid\": \"ContractID\" },\n      \"get_proof\": { \"cid\": \"ContractID\", \"aid\": \"AssetID\" },\n      \"deposit\": {\n        \"cid\": \"ContractID\",\n        \"pkForeign\": \"PubKey\",\n        \"bCoSigner\": \"uint32_t\",\n        \"amount\": \"Amount\",\n        \"aid\": \"AssetID\"\n      },\n      \"withdraw\": {\n        \"cid\": \"ContractID\",\n        \"pkForeign\": \"PubKey\",\n        \"bCoSigner\": \"uint32_t\",\n        \"amount\": \"Amount\",\n        \"aid\": \"AssetID\"\n      }\n    }\n  }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"As you can see above, there are two roles in this example: "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"manager"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"my_account"}]},{"type":"text","value":". Each role has its own available actions with or without required attributes. Consider the role "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"manager"}]},{"type":"text","value":" , it has the following actions:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"create"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"destroy"}]},{"type":"text","value":", requires the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"cid"}]},{"type":"text","value":" attribute"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"view"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"view_logs"}]},{"type":"text","value":", requires the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"cid"}]},{"type":"text","value":" attribute"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"view_accounts"}]},{"type":"text","value":", requires the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"cid"}]},{"type":"text","value":" attribute"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"view_account"}]},{"type":"text","value":", requires "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"cid"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"pubKey"}]},{"type":"text","value":" attributes"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This means that if, for example, we want to deploy a contract (in Vault, deployment is "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"create"}]},{"type":"text","value":" argument), we must specify "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"shader_args"}]},{"type":"text","value":"(consider below) with the role "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"manager"}]},{"type":"text","value":" and the action "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"create"}]},{"type":"text","value":":"}]},{"type":"element","tag":"pre","props":{"code":"--shader_args=\"role=manager,action=create\"\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"--shader_args=\"role=manager,action=create\"\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"{% hint style=\"warning\" %}\nSpecifying a "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"role"}]},{"type":"text","value":" and an "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"action"}]},{"type":"text","value":" in a "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"key=value"}]},{"type":"text","value":" pair representation is a requirement for working with shaders. But each contract has its own API and the arguments can be different.\n{% endhint %}"}]},{"type":"element","tag":"h3","props":{"id":"cid"},"children":[{"type":"text","value":"Cid"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"cid"}]},{"type":"text","value":" (i.e. "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"contract id"}]},{"type":"text","value":") is the frequently required attribute. We get it after our contract has been deployed. The same contract which has been deployed with different attributes, will have different values."}]},{"type":"element","tag":"h3","props":{"id":"working-with-shaders"},"children":[{"type":"text","value":"Working with shaders"}]},{"type":"element","tag":"h4","props":{"id":"commands-rules"},"children":[{"type":"text","value":"Commands rules"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"There are required flags that need to be passed in the wallet CLI to work with the contract:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--shader_app_file=<app.wasm>"}]},{"type":"text","value":" - for application shader"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--shader_contract_file=<contract.wasm>"}]},{"type":"text","value":" - for contract shader"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--shader_args=\"role=<role>,action=<action>\""}]},{"type":"text","value":" - shader arguments"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-n <node address>"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"All arguments in "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"shader_args"}]},{"type":"text","value":" are passed separated by commas without spaces. For example:"}]},{"type":"element","tag":"pre","props":{"code":"--shader_args=\"role=manager,action=view\"\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"--shader_args=\"role=manager,action=view\"\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"If the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"action"}]},{"type":"text","value":" has additional attributes, they also are separated by commas without spaces:"}]},{"type":"element","tag":"pre","props":{"code":"--shader_args=\"role=manager,action=view_logs,cid=d9c5d1782b2d2b6f733486be480bb0d8bcf34d5fdc63bbac996ed76af541cc14\"\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"--shader_args=\"role=manager,action=view_logs,cid=d9c5d1782b2d2b6f733486be480bb0d8bcf34d5fdc63bbac996ed76af541cc14\"\n"}]}]},{"type":"element","tag":"h4","props":{"id":"deploy-contract"},"children":[{"type":"text","value":"Deploy contract"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"To work with the contract, you first need to deploy it. As we said, in our Vault example contract, the deployment corresponds to the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"manager"}]},{"type":"text","value":" role and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"create"}]},{"type":"text","value":" action."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Based on our knowledge, we got the following command to "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"deploy contract"}]},{"type":"text","value":":"}]},{"type":"element","tag":"pre","props":{"code":"./beam-wallet-masternet shader --shader_app_file=mydapp/app.wasm --shader_args=\"role=manager,action=create\" --shader_contract_file=mydapp/contract.wasm -n localhost:10000\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"./beam-wallet-masternet shader --shader_app_file=mydapp/app.wasm --shader_args=\"role=manager,action=create\" --shader_contract_file=mydapp/contract.wasm -n localhost:10000\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Output example:"}]},{"type":"element","tag":"pre","props":{"code":"Creating new contract invocation tx on behalf of the shader\nContract ID: d9c5d1782b2d2b6f733486be480bb0d8bcf34d5fdc63bbac996ed76af541cc14\n        Comment: create Vault contract  Total fee: 1100000 GROTH\nI 2022-06-06.11:43:08.288 [ac09d5dc897647bf876b7d17d8219a77][1] Get proof for kernel: 6625e9f7756a98eb\nI 2022-06-06.11:43:08.289 Synchronizing with node: 100% (1/1)\nI 2022-06-06.11:43:08.289 Current state is 8-65a2ecdf447ad942\nI 2022-06-06.11:43:18.354 Sync up to 9-7d15da24d2717100\nI 2022-06-06.11:43:18.354 Synchronizing with node: 0% (0/2)\nI 2022-06-06.11:43:18.355 CoinID: Key=mine-1:1:1, Value=8000000000 Maturity=6 Spent, Height=9\nI 2022-06-06.11:43:18.356 CoinID: Key=chng-1:0:3958598515398969808, Value=7998900000 Maturity=9 Confirmed, Height=9\nI 2022-06-06.11:43:18.356 Synchronizing with node: 50% (1/2)\nI 2022-06-06.11:43:18.356 Synchronizing with node: 100% (2/2)\nI 2022-06-06.11:43:18.356 Current state is 9-7d15da24d2717100\nI 2022-06-06.11:43:18.356 [ac09d5dc897647bf876b7d17d8219a77][1] Get proof for kernel: 6625e9f7756a98eb\nI 2022-06-06.11:43:18.357 [ac09d5dc897647bf876b7d17d8219a77] Transaction completed\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"Creating new contract invocation tx on behalf of the shader\nContract ID: d9c5d1782b2d2b6f733486be480bb0d8bcf34d5fdc63bbac996ed76af541cc14\n        Comment: create Vault contract  Total fee: 1100000 GROTH\nI 2022-06-06.11:43:08.288 [ac09d5dc897647bf876b7d17d8219a77][1] Get proof for kernel: 6625e9f7756a98eb\nI 2022-06-06.11:43:08.289 Synchronizing with node: 100% (1/1)\nI 2022-06-06.11:43:08.289 Current state is 8-65a2ecdf447ad942\nI 2022-06-06.11:43:18.354 Sync up to 9-7d15da24d2717100\nI 2022-06-06.11:43:18.354 Synchronizing with node: 0% (0/2)\nI 2022-06-06.11:43:18.355 CoinID: Key=mine-1:1:1, Value=8000000000 Maturity=6 Spent, Height=9\nI 2022-06-06.11:43:18.356 CoinID: Key=chng-1:0:3958598515398969808, Value=7998900000 Maturity=9 Confirmed, Height=9\nI 2022-06-06.11:43:18.356 Synchronizing with node: 50% (1/2)\nI 2022-06-06.11:43:18.356 Synchronizing with node: 100% (2/2)\nI 2022-06-06.11:43:18.356 Current state is 9-7d15da24d2717100\nI 2022-06-06.11:43:18.356 [ac09d5dc897647bf876b7d17d8219a77][1] Get proof for kernel: 6625e9f7756a98eb\nI 2022-06-06.11:43:18.357 [ac09d5dc897647bf876b7d17d8219a77] Transaction completed\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Contract ID"}]},{"type":"text","value":" line we got the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"cid"}]},{"type":"text","value":" for this deployed contract."}]},{"type":"element","tag":"h4","props":{"id":"command-examples"},"children":[{"type":"text","value":"Command examples"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"View"}]},{"type":"text","value":" deployed contracts:"},{"type":"element","tag":"pre","props":{"code":"./beam-wallet-masternet shader --shader_app_file=mydapp/app.wasm --shader_args=\"role=manager,action=view\" --shader_contract_file=mydapp/contract.wasm -n localhost:10000\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"./beam-wallet-masternet shader --shader_app_file=mydapp/app.wasm --shader_args=\"role=manager,action=view\" --shader_contract_file=mydapp/contract.wasm -n localhost:10000\n"}]}]},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"The output could be like this:"},{"type":"element","tag":"pre","props":{"code":"Shader output: {\"contracts\": [{\"cid\": \"d9c5d1782b2d2b6f733486be480bb0d8bcf34d5fdc63bbac996ed76af541cc14\",\"Height\": 9}]}\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"Shader output: {\"contracts\": [{\"cid\": \"d9c5d1782b2d2b6f733486be480bb0d8bcf34d5fdc63bbac996ed76af541cc14\",\"Height\": 9}]}\n"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Destroy"}]},{"type":"text","value":" contract (with "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"cid"}]},{"type":"text","value":" from the example above)"},{"type":"element","tag":"pre","props":{"code":"./beam-wallet-masternet shader --shader_app_file=mydapp/app.wasm --shader_contract_file=mydapp/contract.wasm --shader_args=\"role=manager,action=destroy,cid=d9c5d1782b2d2b6f733486be480bb0d8bcf34d5fdc63bbac996ed76af541cc14\" -n localhost:10000\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"./beam-wallet-masternet shader --shader_app_file=mydapp/app.wasm --shader_contract_file=mydapp/contract.wasm --shader_args=\"role=manager,action=destroy,cid=d9c5d1782b2d2b6f733486be480bb0d8bcf34d5fdc63bbac996ed76af541cc14\" -n localhost:10000\n"}]}]},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"Output example:"},{"type":"element","tag":"pre","props":{"code":"Creating new contract invocation tx on behalf of the shader\nContract ID: d9c5d1782b2d2b6f733486be480bb0d8bcf34d5fdc63bbac996ed76af541cc14\n      Comment: destroy Vault contract   Total fee: 1100000 GROTH\nI 2022-06-06.12:34:15.962 Sync up to 311-788f821396683a25\nI 2022-06-06.12:34:15.962 Synchronizing with node: 0% (0/2)\nI 2022-06-06.12:34:15.967 Synchronizing with node: 0% (0/2)\nI 2022-06-06.12:34:15.967 CoinID: Key=mine-1:1:307, Value=8000000000 Maturity=312 Confirmed, Height=307\nI 2022-06-06.12:34:15.968 CoinID: Key=mine-1:1:308, Value=8000000000 Maturity=313 Confirmed, Height=308\nI 2022-06-06.12:34:15.968 CoinID: Key=mine-1:1:309, Value=8000000000 Maturity=314 Confirmed, Height=309\nI 2022-06-06.12:34:15.968 CoinID: Key=mine-1:1:310, Value=8000000000 Maturity=315 Confirmed, Height=310\nI 2022-06-06.12:34:15.969 CoinID: Key=mine-1:1:311, Value=8000000000 Maturity=316 Confirmed, Height=311\nI 2022-06-06.12:34:15.969 Synchronizing with node: 50% (1/2)\nI 2022-06-06.12:34:15.969 Synchronizing with node: 100% (2/2)\nI 2022-06-06.12:34:15.969 Current state is 311-788f821396683a25\nI 2022-06-06.12:34:15.969 [7b8eb0b0bd2340529996c7598d3ebaff][1] Get proof for kernel: eb45c335bca2e17c\nI 2022-06-06.12:34:15.970 Synchronizing with node: 100% (1/1)\nI 2022-06-06.12:34:15.970 Current state is 311-788f821396683a25\nI 2022-06-06.12:34:26.111 Rolled back to 306-910bc6ca48d05757\nI 2022-06-06.12:34:26.112 Sync up to 312-d156e1bf16939393\nI 2022-06-06.12:34:26.113 Synchronizing with node: 0% (0/2)\nI 2022-06-06.12:34:26.113 CoinID: Key=mine-1:1:307, Value=8000000000 Maturity=312 Confirmed, Height=307\nI 2022-06-06.12:34:26.113 CoinID: Key=mine-1:1:308, Value=8000000000 Maturity=313 Confirmed, Height=308\nI 2022-06-06.12:34:26.114 CoinID: Key=chng-1:0:3958598515398969808, Value=7998900000 Maturity=9 Spent, Height=312\nI 2022-06-06.12:34:26.114 CoinID: Key=chng-1:0:12345322638362229725, Value=7997800000 Maturity=312 Confirmed, Height=312\nI 2022-06-06.12:34:26.115 Synchronizing with node: 50% (1/2)\nI 2022-06-06.12:34:26.115 Synchronizing with node: 100% (2/2)\nI 2022-06-06.12:34:26.115 Current state is 312-d156e1bf16939393\nI 2022-06-06.12:34:26.115 [7b8eb0b0bd2340529996c7598d3ebaff][1] Get proof for kernel: eb45c335bca2e17c\nI 2022-06-06.12:34:26.116 [7b8eb0b0bd2340529996c7598d3ebaff] Transaction completed\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"Creating new contract invocation tx on behalf of the shader\nContract ID: d9c5d1782b2d2b6f733486be480bb0d8bcf34d5fdc63bbac996ed76af541cc14\n      Comment: destroy Vault contract   Total fee: 1100000 GROTH\nI 2022-06-06.12:34:15.962 Sync up to 311-788f821396683a25\nI 2022-06-06.12:34:15.962 Synchronizing with node: 0% (0/2)\nI 2022-06-06.12:34:15.967 Synchronizing with node: 0% (0/2)\nI 2022-06-06.12:34:15.967 CoinID: Key=mine-1:1:307, Value=8000000000 Maturity=312 Confirmed, Height=307\nI 2022-06-06.12:34:15.968 CoinID: Key=mine-1:1:308, Value=8000000000 Maturity=313 Confirmed, Height=308\nI 2022-06-06.12:34:15.968 CoinID: Key=mine-1:1:309, Value=8000000000 Maturity=314 Confirmed, Height=309\nI 2022-06-06.12:34:15.968 CoinID: Key=mine-1:1:310, Value=8000000000 Maturity=315 Confirmed, Height=310\nI 2022-06-06.12:34:15.969 CoinID: Key=mine-1:1:311, Value=8000000000 Maturity=316 Confirmed, Height=311\nI 2022-06-06.12:34:15.969 Synchronizing with node: 50% (1/2)\nI 2022-06-06.12:34:15.969 Synchronizing with node: 100% (2/2)\nI 2022-06-06.12:34:15.969 Current state is 311-788f821396683a25\nI 2022-06-06.12:34:15.969 [7b8eb0b0bd2340529996c7598d3ebaff][1] Get proof for kernel: eb45c335bca2e17c\nI 2022-06-06.12:34:15.970 Synchronizing with node: 100% (1/1)\nI 2022-06-06.12:34:15.970 Current state is 311-788f821396683a25\nI 2022-06-06.12:34:26.111 Rolled back to 306-910bc6ca48d05757\nI 2022-06-06.12:34:26.112 Sync up to 312-d156e1bf16939393\nI 2022-06-06.12:34:26.113 Synchronizing with node: 0% (0/2)\nI 2022-06-06.12:34:26.113 CoinID: Key=mine-1:1:307, Value=8000000000 Maturity=312 Confirmed, Height=307\nI 2022-06-06.12:34:26.113 CoinID: Key=mine-1:1:308, Value=8000000000 Maturity=313 Confirmed, Height=308\nI 2022-06-06.12:34:26.114 CoinID: Key=chng-1:0:3958598515398969808, Value=7998900000 Maturity=9 Spent, Height=312\nI 2022-06-06.12:34:26.114 CoinID: Key=chng-1:0:12345322638362229725, Value=7997800000 Maturity=312 Confirmed, Height=312\nI 2022-06-06.12:34:26.115 Synchronizing with node: 50% (1/2)\nI 2022-06-06.12:34:26.115 Synchronizing with node: 100% (2/2)\nI 2022-06-06.12:34:26.115 Current state is 312-d156e1bf16939393\nI 2022-06-06.12:34:26.115 [7b8eb0b0bd2340529996c7598d3ebaff][1] Get proof for kernel: eb45c335bca2e17c\nI 2022-06-06.12:34:26.116 [7b8eb0b0bd2340529996c7598d3ebaff] Transaction completed\n"}]}]}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"overview","depth":3,"text":"Overview"},{"id":"prerequisites","depth":3,"text":"Prerequisites"},{"id":"shader-api","depth":3,"text":"Shader API"},{"id":"cid","depth":3,"text":"Cid"},{"id":"working-with-shaders","depth":3,"text":"Working with shaders"}]}},"_type":"markdown","_id":"content:docs:dev:beam-shaders:using-beam-shaders-with-cli-wallet-masternet.md","_source":"content","_file":"docs/dev/beam-shaders/using-beam-shaders-with-cli-wallet-masternet.md","_extension":"md"},{"_path":"/docs/dev/beam-technology/atomic-swaps","_dir":"beam-technology","_draft":false,"_partial":false,"_locale":"","title":"Atomic Swaps","description":"Beam offers Atomic Swap functionality, enabling peer-to-peer trading of Beam for Bitcoin, Ethereum, Litecoin, DOGE (and more) in a completely decentralized way without an exchange or third-party intermediary. Atomic Swaps are the pinnacle of decentralization, censorship resistance, and core values of cryptocurrencies.","body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"atomic-swaps"},"children":[{"type":"text","value":"Atomic Swaps"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Beam offers Atomic Swap functionality, enabling peer-to-peer trading of Beam for Bitcoin, Ethereum, Litecoin, DOGE (and more) in a completely decentralized way without an exchange or third-party intermediary. Atomic Swaps are the pinnacle of decentralization, censorship resistance, and core values of cryptocurrencies."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Atomic Swaps are supported only on Beam Desktop Wallets, including the Atomic Swap Marketplace for publishing and accepting swap offers."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"See "},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/wiki/Atomic-swap","rel":["nofollow"]},"children":[{"type":"text","value":"Atomic Swaps design"}]},{"type":"text","value":" or "},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/wiki/Atomic-swap-token","rel":["nofollow"]},"children":[{"type":"text","value":"Atomic Swap token format"}]},{"type":"text","value":" for more detailed information regarding Atomic Swaps."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"Screenshot of Atomic Swap marketplace in Beam wallet","src":"../.gitbook/assets/swaps.PNG"},"children":[]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[]}},"_type":"markdown","_id":"content:docs:dev:beam-technology:atomic-swaps.md","_source":"content","_file":"docs/dev/beam-technology/atomic-swaps.md","_extension":"md"},{"_path":"/docs/dev/beam-technology/laser-beam","_dir":"beam-technology","_draft":false,"_partial":false,"_locale":"","title":"Laser Beam","description":"Beam added relative kernels (e.g., kernels that are only valid if another kernel exists on the blockchain) as a part of our expansion of the Mimblewimble protocol, which birthed the creation of Laser Beam direct payment channels similar to those used in the Lightning Network.","body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"laser-beam"},"children":[{"type":"text","value":"Laser Beam"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Beam added relative kernels (e.g., kernels that are only valid if another kernel exists on the blockchain) as a part of our expansion of the Mimblewimble protocol, which birthed the creation of Laser Beam direct payment channels similar to those used in the Lightning Network."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Fast transactions and scalability is an issue that most cryptocurrencies have yet to solve. Laser Beam establishes a funded channel between two wallets that performs instant transactions that later settle on-chain. Laser Beam is operational on Beam Mainnet (Command-Line support, only)."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"See our Beam wiki for more information regarding "},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/wiki/Lightning-Network","rel":["nofollow"]},"children":[{"type":"text","value":"Laser Beam"}]},{"type":"text","value":"."}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[]}},"_type":"markdown","_id":"content:docs:dev:beam-technology:laser-beam.md","_source":"content","_file":"docs/dev/beam-technology/laser-beam.md","_extension":"md"},{"_path":"/docs/dev/beam-technology/lelantusmw","_dir":"beam-technology","_draft":false,"_partial":false,"_locale":"","title":"LelantusMW","description":"Cryptographer Aram Jivanyan of Firo (formerly ZCoin) initially developed Lelantus as a new protocol for a confidential exchange of value.","body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"lelantusmw"},"children":[{"type":"text","value":"LelantusMW"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Cryptographer "},{"type":"element","tag":"a","props":{"href":"https://www.linkedin.com/in/aramjivanyan/","rel":["nofollow"]},"children":[{"type":"text","value":"Aram Jivanyan"}]},{"type":"text","value":" of Firo (formerly ZCoin) initially developed Lelantus as a new protocol for a confidential exchange of value."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The core principles of Lelantus describe the related proofs placing a UTXO set into a "},{"type":"element","tag":"a","props":{"href":"https://beamx.gitbook.io/glossary/-Ma56WMqUB1AsnhoithB/","rel":["nofollow"]},"children":[{"type":"text","value":"shielded pool"}]},{"type":"text","value":" while the "},{"type":"element","tag":"a","props":{"href":"https://www.google.com/search?q=anonymity+set+crypto&sxsrf=ALeKk03stmb--lt3dzzlAfJEASZzekFidw%3A1625620539632&ei=OwDlYKXhJfW3qtsP4f6o8Aw&oq=anonymity+set+crypto&gs_lcp=Cgdnd3Mtd2l6EAMyBQghEKABMgUIIRCgAToHCCMQsAMQJzoHCAAQRxCwAzoCCAA6BggAEBYQHjoFCCEQqwJKBAhBGABQ2UdY1FdggVpoAXACeACAAcYBiAGFCZIBAzAuOJgBAKABAaoBB2d3cy13aXrIAQnAAQE&sclient=gws-wiz&ved=0ahUKEwjl6ra25M_xAhX1m2oFHWE_Cs4Q4dUDCA8&uact=5","rel":["nofollow"]},"children":[{"type":"text","value":"anonymity set"}]},{"type":"text","value":" accumulates. The UTXO set leaves the shielded pool as a \"new\" UTXO set equally the exact total value as UTXO set initially submitted. "}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Beam combined Lelantus with Mimblewimble to create a hybrid"},{"type":"element","tag":"a","props":{"href":"https://docs.beam.mw/Lelantus-MW.pdf","rel":["nofollow"]},"children":[{"type":"text","value":" LelantusMW protocol"}]},{"type":"text","value":". This hybrid protocol resolves the issue of "},{"type":"element","tag":"a","props":{"href":"https://ieeexplore.ieee.org/document/8806723","rel":["nofollow"]},"children":[{"type":"text","value":"linkability"}]},{"type":"text","value":", which in some instances could allow an active attack to establish a link between wallets (though not to determine identities or values of the transactions)."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"See "},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/wiki/Lelantus-MW","rel":["nofollow"]},"children":[{"type":"text","value":"LelantusMW"}]},{"type":"text","value":" and "},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/wiki/MW-CLA","rel":["nofollow"]},"children":[{"type":"text","value":"MW Confidential Lelantus Assets"}]},{"type":"text","value":" for a more in-depth description of our protocol."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"{% embed url=\""},{"type":"element","tag":"a","props":{"href":"https://www.youtube.com/watch?v=cQGQZ1OWPmc&ab_channel=ZKProofStandards","rel":["nofollow"]},"children":[{"type":"text","value":"https://www.youtube.com/watch?v=cQGQZ1OWPmc&ab_channel=ZKProofStandards"}]},{"type":"text","value":"\" %}"}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[]}},"_type":"markdown","_id":"content:docs:dev:beam-technology:lelantusmw.md","_source":"content","_file":"docs/dev/beam-technology/lelantusmw.md","_extension":"md"},{"_path":"/docs/dev/beam-technology/mimblewimble","_dir":"beam-technology","_draft":false,"_partial":false,"_locale":"","title":"Mimblewimble","description":"Mimblewimble is an innovative confidential cryptocurrency protocol described initially in a whitepaper published in October 2016 by an anonymous author under the pseudonym of Tom Elvis Jedusor. ","body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"mimblewimble"},"children":[{"type":"text","value":"Mimblewimble"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Mimblewimble is an innovative confidential cryptocurrency protocol described initially in a whitepaper published in October 2016 by an anonymous author under the pseudonym of Tom Elvis Jedusor. "}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"Screenshot of MW whitepaper as it was published","src":"../.gitbook/assets/MW.PNG"},"children":[]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In this relatively short whitepaper (only six pages), the author has presented a fantastic idea: building a confidential value exchange protocol that does not bloat the blockchain size but instead compressing the blockchain by removing the intermediate transactions while validating the entire blockchain."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"To achieve this, replacing the UTXO with Pedersen Commitments and then validating block validity by summing up all inputs and outputs and ensuring that the resulting sum is zero (or more precisely equal to coinbase transaction). Since the same approach can extend to all blocks, the resulting blockchain size growth is a function of UTXOs rather than transactions (which, in average cases, produces an order of magnitude smaller blockchain). Each UTXO also contains a zero-knowledge range proof that ensures the UTXO value is positive.."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"Explanation of the UTXO structure using Pedersen Commitments","src":"../.gitbook/assets/mw2.PNG"},"children":[]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"To balance the difference in blinding factors, each transaction also contains the \"kernel,\" which includes the signed difference in its simplest form. "}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Mathematician "},{"type":"element","tag":"a","props":{"href":"https://www.linkedin.com/in/andrew-poelstra-958a75106/","rel":["nofollow"]},"children":[{"type":"text","value":"Andrew Poelstra"}]},{"type":"text","value":" first reviewed the protocol and published a paper validating the approach."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"{% embed url=\""},{"type":"element","tag":"a","props":{"href":"https://www.youtube.com/watch?v=aHTRlbCaUyM&ab_channel=SFBitcoinDevelopers","rel":["nofollow"]},"children":[{"type":"text","value":"https://www.youtube.com/watch?v=aHTRlbCaUyM&ab_channel=SFBitcoinDevelopers"}]},{"type":"text","value":"\" %}"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Beam started by implementing the whitepaper verbatim and later expanded it by first adding relative kernels and later Lelantus shielded pool and eventually the Beam Virtual Machine that allows to run smart contracts thus transforming Beam into a fully functional Confidential DeFi Platform."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The Beam development team's initial approach was to implement the whitepaper verbatim. They later tweaked the protocol by adding relative kernels before implementing a Lelantus shielded pool. Finally, the Beam Virtual Machine ran smart contracts, thus transforming Beam into a fully functional Confidential DeFi Platform."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"See "},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/wiki/Beam-Technical-Specifications","rel":["nofollow"]},"children":[{"type":"text","value":"Beam technical specifications"}]},{"type":"text","value":" and "},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/wiki/Transaction-creation-protocol","rel":["nofollow"]},"children":[{"type":"text","value":"Transaction Creation Protocol"}]},{"type":"text","value":" for additional information detailing the math and design decisions behind Beam Mimblewimble implementation."}]},{"type":"element","tag":"h4","props":{"id":""},"children":[]},{"type":"element","tag":"h4","props":{"id":"_1"},"children":[]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[]}},"_type":"markdown","_id":"content:docs:dev:beam-technology:mimblewimble.md","_source":"content","_file":"docs/dev/beam-technology/mimblewimble.md","_extension":"md"},{"_path":"/docs/dev/beam-technology/sbbs","_dir":"beam-technology","_draft":false,"_partial":false,"_locale":"","title":"SBBS","description":"SBBS (Secure Bulletin Board System) is an encrypted messaging protocol used to secure communication between Beam wallets. Initially, this protocol only allowed for the interactive creation of Mimblewimble transactions. Eventually, SBBS was adapted to fit many different scenarios of passing information between wallets, such as Atomic Swap marketplace, price feed metadata, and more.","body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"sbbs"},"children":[{"type":"text","value":"SBBS"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"SBBS (Secure Bulletin Board System) is an encrypted messaging protocol used to secure communication between Beam wallets. Initially, this protocol only allowed for the interactive creation of Mimblewimble transactions. Eventually, SBBS was adapted to fit many different scenarios of passing information between wallets, such as Atomic Swap marketplace, price feed metadata, and more."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"SBBS is a subsystem within each Beam node designed to leak no metadata that can aid in the deanonymization of Beam users. See "},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/wiki/Secure-bulletin-board-system-(SBBS)","rel":["nofollow"]},"children":[{"type":"text","value":"SBBS Design"}]},{"type":"text","value":" and "},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/wiki/Beam-news-channels","rel":["nofollow"]},"children":[{"type":"text","value":"Beam News Channels"}]},{"type":"text","value":" for additional information regarding SBBS."}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[]}},"_type":"markdown","_id":"content:docs:dev:beam-technology:sbbs.md","_source":"content","_file":"docs/dev/beam-technology/sbbs.md","_extension":"md"},{"_path":"/docs/dev/beam-virtual-machine","_dir":"dev","_draft":false,"_partial":false,"_locale":"","title":"Beam Virtual Machine","description":"Beam Virtual Machine (BVM) is a crucial building block in Beam Confidential DeFi platform. BVM follows the WebAssembly technology stack that allows Beam Shaders (smart contract running on Beam blockchain) to support any programming language compiled into WebAssembly, including C++ (currently supported), with Go and Rust to be added at a later date.","body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"beam-virtual-machine"},"children":[{"type":"text","value":"Beam Virtual Machine"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Beam Virtual Machine (BVM) is a crucial building block in Beam Confidential DeFi platform. BVM follows the WebAssembly technology stack that allows Beam Shaders (smart contract running on Beam blockchain) to support any programming language compiled into WebAssembly, including C++ (currently supported), with Go and Rust to be added at a later date."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"‌See "},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/wiki/BVM-functions-for-shaders","rel":["nofollow"]},"children":[{"type":"text","value":"Beam Virtual Machine Specifications"}]},{"type":"text","value":" for more information regarding BVM."}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[]}},"_type":"markdown","_id":"content:docs:dev:beam-virtual-machine.md","_source":"content","_file":"docs/dev/beam-virtual-machine.md","_extension":"md"},{"_path":"/docs/dev/beam-wallets/command-line-wallet","_dir":"beam-wallets","_draft":false,"_partial":false,"_locale":"","title":"Command Line Wallet","description":"","body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"command-line-wallet"},"children":[{"type":"text","value":"Command Line Wallet"}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[]}},"_type":"markdown","_id":"content:docs:dev:beam-wallets:command-line-wallet.md","_source":"content","_file":"docs/dev/beam-wallets/command-line-wallet.md","_extension":"md"},{"_path":"/docs/dev/beam-wallets/desktop-wallet","_dir":"beam-wallets","_draft":false,"_partial":false,"_locale":"","title":"Desktop Wallet","description":"","body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"desktop-wallet"},"children":[{"type":"text","value":"Desktop Wallet"}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[]}},"_type":"markdown","_id":"content:docs:dev:beam-wallets:desktop-wallet.md","_source":"content","_file":"docs/dev/beam-wallets/desktop-wallet.md","_extension":"md"},{"_path":"/docs/dev/beam-wallets/mobile-wallet","_dir":"beam-wallets","_draft":false,"_partial":false,"_locale":"","title":"Mobile Wallet","description":"","body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"mobile-wallet"},"children":[{"type":"text","value":"Mobile Wallet"}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[]}},"_type":"markdown","_id":"content:docs:dev:beam-wallets:mobile-wallet.md","_source":"content","_file":"docs/dev/beam-wallets/mobile-wallet.md","_extension":"md"},{"_path":"/docs/dev/beam-wallets/web-wallet","_dir":"beam-wallets","_draft":false,"_partial":false,"_locale":"","title":"Web Wallet","description":"Beam Web Wallet is the latest addition to the Beam wallet family. It is implemented as a chrome extension and can be used for sending and receiving Beam coins and Confidential Assets as well as interacting with decentralized applications (DApps) on Beam chain. ","body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"web-wallet"},"children":[{"type":"text","value":"Web Wallet"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Beam Web Wallet is the latest addition to the Beam wallet family. It is implemented as a chrome extension and can be used for sending and receiving Beam coins and Confidential Assets as well as interacting with decentralized applications (DApps) on Beam chain. "}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"To get started with Beam Web Wallet you can get the latest mainnet version here, or install the testnet version for experiments. You are also welcome to review the user documentation here. "}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Source code for Beam Web Wallet is available in this "},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/web-wallet","rel":["nofollow"]},"children":[{"type":"text","value":"repository"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"From the architectural point of view, Beam Web Wallet uses the WASM component that wraps Beam Wallet Library. More information about this is available in our wiki "},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/wiki/WASM-wallet-client","rel":["nofollow"]},"children":[{"type":"text","value":"here"}]},{"type":"text","value":"."}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[]}},"_type":"markdown","_id":"content:docs:dev:beam-wallets:web-wallet.md","_source":"content","_file":"docs/dev/beam-wallets/web-wallet.md","_extension":"md"},{"_path":"/docs/dev/confidential-assets/implementation-of-confidential-assets","_dir":"confidential-assets","_draft":false,"_partial":false,"_locale":"","title":"Implementation of Confidential Assets","description":"This page describes CA(Confidential Assets), Lelantus-MW, as well as will enable adding more features in the future.","body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"implementation-of-confidential-assets"},"children":[{"type":"text","value":"Implementation of Confidential Assets"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Implementing confidential assets on the Beam blockchain takes advantage of the LelantusMW protocol enhancing the privacy and security for all transactions."}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"CA support"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Blinded asset tags, similar to the Elements design by A. Poelstra, can optionally be associated with each Unspent Transaction Output (UTXO)."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Asset tags have a proof of validity based on the 1-out-of-many Sigma protocol, developed by "},{"type":"element","tag":"a","props":{"href":"https://eprint.iacr.org/2014/764.pdf","rel":["nofollow"]},"children":[{"type":"text","value":"Jens Groth"}]},{"type":"text","value":"."}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Shielded pool (e.g., LelantusMW)"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"CA support for shielded operations."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"One-side payments and direct anonymous payments support."}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The system design is heterogeneous in nature:\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"All kernels carry excess blinding factors and may include extra validation rules such as height lock and relative lock."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Some kernels may control subsystems:\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Asset control (creation, emission)."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Shielded operations (mint, spend)."}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Kernels not only affect the balance but include side effects."}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"confidential-assets-support"},"children":[{"type":"text","value":"Confidential assets support"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"{% hint style=\"info\" %}\nThis current design differs significantly from the previous, older design.\n{% endhint %}"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"We identify each asset by "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"AssetID"}]},{"type":"text","value":" as a 32-bit integer. For each asset there's an appropriate NUMS generator, which is generates deterministically from the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"AssetID"}]},{"type":"text","value":" (via hashing). The "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"AssetID == 0"}]},{"type":"text","value":" is reserved for default asset (Beam)."}]},{"type":"element","tag":"h3","props":{"id":"utxo-encoding"},"children":[{"type":"text","value":"UTXO encoding"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Due Mimblewimble (MW), it is feasible to encode UTXOs (asset types) using different NUMS (nothing-up-my-sleeve) generators. The UTXO representing the asset is comprises the following:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Blinded generator: $$H^* = H_i + k_A•G$$"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Asset surjection proof (verifies the provided generator is indeed one of the generators listed (with arbitrary blinding factor added)."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Pedersen commitment: $$C = k•G + v•H^*$$"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Rangeproof (bulletproof): in terms of this blinded generator."}]}]},{"type":"element","tag":"h4","props":{"id":"asset-surjection-proof"},"children":[{"type":"text","value":"Asset surjection proof"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Derived from the Sigma protocol, where the prover specifies a range of "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"AssetID"}]},{"type":"text","value":" values, and proves that the specified generator with arbitrary blinded factor is one of the generators within that range. "}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Meanwhile, the verifier generates a list of asset generators for the provided range, methodically subtracting the provided blinded generator from each element on the list. The Prover confirms the Sigma protocol by providing the opening of one of the elements for the blinding factor, i.e., the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"G"}]},{"type":"text","value":" generator."}]},{"type":"element","tag":"h3","props":{"id":"asset-control"},"children":[{"type":"text","value":"Asset control"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Asset controls grants any user permission to create new asset types vs Beam which are automatically released into circulation with each new block generated. Assets are emitted and burned by the asset owner. The asset lifecycle has three stages: Asset creation, asset emission/burn and asset destroying."}]},{"type":"element","tag":"h4","props":{"id":"asset-creation"},"children":[{"type":"text","value":"Asset creation"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"When sending an asset creating transaction type, it provides both the "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Owner key"}]},{"type":"text","value":" and associated "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"metadata"}]},{"type":"text","value":". Any proceeding asset actions will require a private key signature, and metadata visible to all users is immutable once the asset is created."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"{% hint style=\"info\" %}\nMetadata reserves a significant number of Beams when locking an asset, meaning that this transaction implicitly uses up that amount. If the transaction is successful, the system assigns the lowest available and unused "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"AssetID"}]},{"type":"text","value":" to the asset and links it to the asset.\n{% endhint %}"}]},{"type":"element","tag":"h4","props":{"id":"asset-emissionburn"},"children":[{"type":"text","value":"Asset emission/burn"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The user initiates a transaction by sending a unique asset emission kernel, which can have a positive or negative emission amount. To complete the transaction, the kernel excess blinding factor must be signed by the appropriate private key of the asset owner. "}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This transaction will automatically create or consume a certain amount of the asset, which should be balanced out by other transaction elements such as inputs and outputs."}]},{"type":"element","tag":"h4","props":{"id":"asset-destroying"},"children":[{"type":"text","value":"Asset destroying"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"To destroy an asset, an asset-destroying kernel with owner key signature is required. Once the asset has been destroyed, the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"AssetID"}]},{"type":"text","value":" is no longer linked to the owner, and the locked Beams  return to the user."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"{% hint style=\"warning\" %}\nAsset can be destroyed only if:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Total burn occurs."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Minimum lock period elapsed after asset burn completes without an emitted event.\n{% endhint %}"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This minimum lock period prevents any asset owner manipulation or tampering. For example, if a user requests a specific asset, the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"AssetID"}]},{"type":"text","value":" must be directly linked with the asset info (Metadata and owner key) before its transaction expires. This tweak prevents the asset owner from destroying or re-create an asset during the lock period."}]},{"type":"element","tag":"h3","props":{"id":"asset-state"},"children":[{"type":"text","value":"Asset state"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The current state of the system includes a commitment to the latest state of assets, represented as an MMR root of all active assets and their relevant information:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Static info (Metadata and owner public key)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Current emission value"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Lockheight:  The system maintains the latest height of the asset's transition from being burned to not being burned. Based on this information, users can take certain actions:\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Asset owner can determine whether and when the asset can be destroyed, and consequently unlock the funds that were previously locked."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Other users can estimate the minimum height range within which the asset can be safely used. This helps determine whether the asset was subject to reorgs in the past or could be tampered with in the future."}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"{% hint style=\"info\" %}\nLocking funds for asset creation is necessary to prevent spamming in the system. If there are too many assets, it can cause the Nodes to become heavier and can also reduce the effectiveness of the asset surjection proof due to a limited anonymity set. Although a significant amount of funds need to be locked, this design should not be an issue for users who are experimenting with assets as they will receive their funds back upon completion. "}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"However, for organizations selling assets to users, it is unclear if they will ever be able to burn their assets back, as they must first own all of their assets. Despite this, the risk seems justified.\n{% endhint %}"}]},{"type":"element","tag":"h3","props":{"id":"note-on-transaction-repeatability"},"children":[{"type":"text","value":"Note on transaction repeatability"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"UTXO-based systems, including MW, face a unique issue of repeatability. When an attacker possesses all the inputs of a transaction where they pay someone (which is typically the case), they can repeat this transaction in the future without the recipient's consent. Furthermore, if the recipient spends only the inputs received from the attacker, the attacker can repeat those transactions as well, and so on. This process can continue until a certain depth is reached where additional inputs are required, which were not initially obtained from the attacker."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Trading only beams reduces the impact of 'replays' since users can only receive beams, not lose them. However, the situation is different when it comes to asset-controlling transactions. Since assets are created through transactions, attackers can potentially replay these transactions and cause additional asset emissions, leading to a significant problem. Additionally, by replaying these transactions, attackers may be able to gain some of the newly created assets, further compounding the issue."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"To mitigate this threat, starting from Fork2, duplicating kernels will be forbidden. Technically this is achieved by the following:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Additional consensus parameter ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"MaxKernelLifespan)"}]},{"type":"text","value":" equivalent to roughly ~ one month."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Starting from Fork2, kernels with "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"HeightLock.Min"}]},{"type":"text","value":" (minimum height) lower than Fork2 will be rejected."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Each kernel, in addition to the optional "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"HeightLock.Max"}]},{"type":"text","value":" (maximum height) will have an implicit max height lock as "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"HeightLock.Min + MaxKernelLifespan"}]},{"type":"text","value":". This (and the previous restriction) will make repeating old kernels impossible."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Each node will track all recent kernels down to the current height minus "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"MaxKernelLifespan"}]},{"type":"text","value":". Kernels that are below this height may be removed from the system for the purpose of blockchain verification."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Side effect: Kernels with relative height lock (available on mainnet) will not be able to reference a kernel older than "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"MaxKernelLifespan"}]},{"type":"text","value":". However, this should not pose an issue as relative locks require much shorter duration. This effectively makes kernel replaying illegal, reducing the burden on the nodes to track only the most recent kernels."}]}]},{"type":"element","tag":"h2","props":{"id":"shielded-pool-aka-lelantus-mw"},"children":[{"type":"text","value":"Shielded pool (a.k.a. Lelantus-MW)"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Disclaimer"}]},{"type":"text","value":": The "},{"type":"element","tag":"a","props":{"href":"https://lelantus.io/","rel":["nofollow"]},"children":[{"type":"text","value":"Lelantus Protocol"}]},{"type":"text","value":" is the creation of Zcoin's cryptographer Aram Jivanyan as part of research aimed at improving privacy protocols. Our team's design and implementation are based on the publicly-available Lelantus scientific paper. All our code was developed from scratch based on this paper as our reference."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"While Lelantus greatly improves upon privacy, to solve the issue of MW linkability, users can recycle funds via a shielded pool. This tweak from the original Lelantus protocol is unique in the following ways:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Transaction values are never revealed."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The Lelantus Protocol formulates transactions as mint/spend primitives, which can be combined with MW and shielded parts in any way that satisfies the balance-to-zero principle used in MW."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Native CA support."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In technical terms, the system supports the following in addition to standard transaction elements:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Shielded output: transfers a portion of MW into shielded pool"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Shielded input: withdraws a portion of the shielded pool back into MW (both are deemed as special transaction kernels on the blockchain."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"To supplement the standard MW blinding factor generator "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"G"}]},{"type":"text","value":", an extra generator "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"J"}]},{"type":"text","value":" is available for the secondary blinding factor, i.e., the "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"serial number"}]},{"type":"text","value":"."}]},{"type":"element","tag":"h3","props":{"id":"shielded-output"},"children":[{"type":"text","value":"Shielded output"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Consists of the following:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Blinded serial number commitment: $$C_s = k_s•G + s•J$$"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Generalized Schnorr's signature that proves the above commitment is indeed of this form"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Optionally asset info: the blinded asset generator + asset surjection proof."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"UTXO commitment $$C_ = k_•G + v•H$$"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Rangeproof"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The UTXO commitment $$C_$$ (without the serial number) is accounted for when verifying the transaction balance. After verification, rather than combining UTXO set, the following double-blinded commitment goes into the shielded pool:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"$$C = C_s + C_ = s•J + (k_s + k_)•G + v•H$$"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The shielded outputs in the pool form a sequence of commitments (EC points)."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"{% hint style=\"warning\" %}\nThe serial number ("},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"s"}]},{"type":"text","value":") is obtained from a different public key ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"SpendKey)"}]},{"type":"text","value":" which discloses during the spending process. In addition, the prover will need to prove the knowledge of the appropriate private key."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In addition, the $$C_s$$ commitment must be unique. This prevents accidental misuse, and avoids making subsequent element withdrawal impossible.\n{% endhint %}"}]},{"type":"element","tag":"h3","props":{"id":"shielded-input"},"children":[{"type":"text","value":"Shielded input"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Consists of the following:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Range within the shielded poo containing the being-spent element."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"SpendKey"}]},{"type":"text","value":" is disclosed, providing the key signature needed for the shielded input."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Optionally asset info: the blinded asset generator + asset surjection proof."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Output commitment $$C_ = k_•G + v•H$$\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"It should commit to the same value, but the blinding factor $$k_$$ differs from that used in shielded output."}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Generalized Schnorr's signature, that proves the $$C_$$ is indeed of this form."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Sigma proof for the rest."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"SpendKey"}]},{"type":"text","value":" must be unique to prevent double-spending of an asset."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"During verification, the verifier computes the serial number ("},{"type":"element","tag":"strong","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"s"}]}]},{"type":"text","value":") from the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"SpendKey"}]},{"type":"text","value":" while calculating the following:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"$$C = C_ + s•J$$ This EC point is subtracted (methodically) from all the elements in the referenced range of the shielded pool."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"If everything is correct, then the element spent transforms into:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"$$C = (k_s + k_ - k_)•G$$ Note that both as the set and serial number generators "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"H"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"J"}]},{"type":"text","value":" are eliminated. The prover proceeds to demonstrate their knowledge of the opening of one of the elements within the range, using only the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"G"}]},{"type":"text","value":" generator."}]}]},{"type":"element","tag":"h3","props":{"id":"one-side-payments-and-direct-anonymous-payments"},"children":[{"type":"text","value":"One-side payments, and direct anonymous payments"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The shielded pool enables one-side payments (MW transactions require mutual agreement from both parties). This is because the serial number ("},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"S"}]},{"type":"text","value":") is derived from an arbitrary public key "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"SpendKey"}]},{"type":"text","value":", which can be calculated by the sender without the disclosure of the appropriate private key."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"However, this method is not totally anonymous as the sender can see when the receiver spends the funds. To solve this issue, the shielded output consists of two parts: the $$C_s$$ and $$C_$$. During the initial setup, the receiver generates and sends an arbitrary number of different $$C_s$$ elements (with their Schnorr's signatures). The sender then uses these elements in the shielded output without knowledge of the serial number."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Our scheme enables the receiver to scan the blockchain to detect all its shielded outputs without needing an auxiliary channel. For $$C_s$$ all the owner info is embedded within the Schnorr's signature (which has a degree of freedom). For the $$C_$$, the owner info is embedded in the Schnorr's signature, while the requires info recovery from the bulletproof. "}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Ultimately, the following information is recovered:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"All the relevant parameters: blinding factor, "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"SpendKey"}]},{"type":"text","value":", value, "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"AssetID"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Is it visible to the sender, i.e., was the $$C_s$$ created by the sender or the receiver in advance."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Sender ID (a public key belonging to the sender)."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Default 32-byte message."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"{% hint style=\"info\" %}\nThe aforementioned information can be retrieved through the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Owner"}]},{"type":"text","value":" key. However, the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"master"}]},{"type":"text","value":" key is still necessary to spend it. This enables the utilization of the owner key in owned nodes to recognize owned TXOs and shielded elements without jeopardizing the funds in the event of a node compromise.\n{% endhint %}"}]},{"type":"element","tag":"h3","props":{"id":"implications-and-constraints"},"children":[{"type":"text","value":"Implications and constraints"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The Lelantus is a great technology, "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"but it comes with known limitations"}]},{"type":"text","value":"."}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Scalability (size).\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"No MW cut-through for the shielded inputs/outputs. MW cut-through applies to non-shielded inputs/outputs.\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Shielded output ~800 bytes."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Shielded input ~1.6KB, can vary depending on anonymity set size."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"If asset type is blinded: two more asset proofs (output and input), another ~2KB"}]}]}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Verification time.\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Roughly one second for 64KB elements (very big)."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Easily parallelized"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Only 10 milliseconds for each additional proof for the same anonymity set (batch verification)."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"During initial sync, many blocks can be batch-verified at once."}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Thus, in order to create a sensible system that reaps the advantages of MW while also disrupting linkability, we have developed the following design:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The majority of transactions should still use MW."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The number of shielded inputs/outputs in a block is limited, creating a competitive fee market."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The spend window, which determines the anonymity set size, is limited, and this limit is further reduced if the element being spent is not one of the most recent."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The maximum spend window or anonymity set size is yet to be decided but will likely be between 50,000 to 100,000 KB. The number of shielded elements in a block will be limited to create this window over several days. "}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Additionally, users can only spend their shielded elements with the maximum spend window if it references the most recent elements. If they miss their opportunity, they will have to spend it in a smaller spend window of around 1,000 elements. However, they can recycle it through the shielded pool again."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"As a result, our team has designed a network that offers equal amounts of "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"scalability and performance"}]},{"type":"text","value":":"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Not too many elements that can't be cut-through"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Reasonable verification times: shielded inputs will have large overlap."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"But importantly, those restrictions will also lead to "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"better privacy"}]},{"type":"text","value":". Here's why:"}]},{"type":"element","tag":"h3","props":{"id":"privacy"},"children":[{"type":"text","value":"Privacy"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In order to understand how effectively privacy is achieved through hiding within a crowd, it's important to define two terms: absolute and relative anonymity sets. "}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The absolute anonymity set size refers to the total number of individuals in the set that the user has chosen to hide among. "}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The relative anonymity set size, on the other hand, is the ratio of the chosen absolute set size to the overall set size weighted by the probabilities of hiding in each potential subset."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In simpler terms, the relative set size represents the probability that a user will choose a specific absolute set. To achieve a high level of privacy, both the absolute and relative sets should be maximized. If the absolute set size is small, the user may already be suspected. If the relative set size is small, the user can still be de-anonymized through repeated transactions, even if the absolute anonymity set is large. "},{"type":"element","tag":"a","props":{"href":"https://zfnd.org/blockchain-privacy-equal-parts-theory-and-practice/","rel":["nofollow"]},"children":[{"type":"text","value":"A good explanation by Ian Miers is here"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Due to the finite size of the anonymity set in Lelantus, a compromise must be made."}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"If too few users use the system, then each user's activity can be easily identified."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"However, if too many users use the system, the anonymity set is filled up quickly, resulting in a smaller relative set size and a lower probability of an unrelated user falling into the same set."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In contrast, systems with an unlimited anonymity set size, such as Zcash, have an advantage in this regard. However, in practice, the difference may not be significant since users typically spend their recent outputs, which can be assumed by attackers with a significant probability even in Lelantus. "}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"To accurately estimate the practical privacy of the system, real-world usage data may be needed."}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"confidential-assets-support","depth":2,"text":"Confidential assets support","children":[{"id":"utxo-encoding","depth":3,"text":"UTXO encoding"},{"id":"asset-control","depth":3,"text":"Asset control"},{"id":"asset-state","depth":3,"text":"Asset state"},{"id":"note-on-transaction-repeatability","depth":3,"text":"Note on transaction repeatability"}]},{"id":"shielded-pool-aka-lelantus-mw","depth":2,"text":"Shielded pool (a.k.a. Lelantus-MW)","children":[{"id":"shielded-output","depth":3,"text":"Shielded output"},{"id":"shielded-input","depth":3,"text":"Shielded input"},{"id":"one-side-payments-and-direct-anonymous-payments","depth":3,"text":"One-side payments, and direct anonymous payments"},{"id":"implications-and-constraints","depth":3,"text":"Implications and constraints"},{"id":"privacy","depth":3,"text":"Privacy"}]}]}},"_type":"markdown","_id":"content:docs:dev:confidential-assets:implementation-of-confidential-assets.md","_source":"content","_file":"docs/dev/confidential-assets/implementation-of-confidential-assets.md","_extension":"md"},{"_path":"/docs/dev/confidential-assets/readme","_dir":"confidential-assets","_draft":false,"_partial":false,"_locale":"","title":"Confidential Assets","description":"Beam Confidential Assets (CA) are an important extension that allows users to register new asset types and emit (or burn) these assets by simply running commands in the CLI wallet, without any need for programming or smart contracts. ","body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"confidential-assets"},"children":[{"type":"text","value":"Confidential Assets"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Beam Confidential Assets (CA) are an important extension that allows users to register new asset types and emit (or burn) these assets by simply running commands in the CLI wallet, without any need for programming or smart contracts. "}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In the screenshot below you see an example of Beam Desktop Wallet holding RAYS - which are Beam Community engagement tokes implemented as CA on Beam chain:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"Example of RAYS confidential asset in Beam Wallet","src":"../.gitbook/assets/rays.PNG"},"children":[]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Information about CA includes the following topics:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"implementation-of-confidential-assets"},"children":[{"type":"text","value":"Implementing Confidential Assets"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"using-confidential-assets/"},"children":[{"type":"text","value":"Using Confidential Assets"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Using Confidential Assets through Wallet API"}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[]}},"_type":"markdown","_id":"content:docs:dev:confidential-assets:README.md","_source":"content","_file":"docs/dev/confidential-assets/README.md","_extension":"md"},{"_path":"/docs/dev/confidential-assets/using-confidential-assets/asset-metadata-descriptor","_dir":"using-confidential-assets","_draft":false,"_partial":false,"_locale":"","title":"Asset Metadata Descriptor","description":"This document's purpose is to specify the asset metadata, to enable 3rd party tools to consume and display the subset of asset-related information in a simple and well-standardized manner.","body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"asset-metadata-descriptor"},"children":[{"type":"text","value":"Asset Metadata Descriptor"}]},{"type":"element","tag":"h2","props":{"id":"requirements"},"children":[{"type":"text","value":"Requirements"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Asset meta is a byte buffer associated with the asset and stored on chain."}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Asset metadata should be an UTF-8 string"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Asset metadata should be serialized as a simple "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"name=value"}]},{"type":"text","value":" set of pairs, delimited with "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":";"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"keyN=valueN;"}]},{"type":"text","value":" sequence must be preceded with "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"STD:"}]},{"type":"text","value":" prefix, there is no need for "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":";"}]},{"type":"text","value":" at the sequence end"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The total size of the metadata cannot exceed 16 Kbytes (16,384 bytes)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Every description should be in English"}]}]},{"type":"element","tag":"h2","props":{"id":"properties"},"children":[{"type":"text","value":"Properties"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Asset metadata has 2 groups of properties:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Standard properties"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Optional properties"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"{% hint style=\"warning\" %}\nBoth types of properties are immutable and can't be changed after the asset is created. Therefore, double-checking the values before starting the asset registration is strongly recommended\n{% endhint %}"}]},{"type":"element","tag":"h3","props":{"id":"required-properties"},"children":[{"type":"text","value":"Required properties:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"SCH_VER="}]},{"type":"text","value":" metadata schema version currently must be "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"1"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"N="}]},{"type":"text","value":" human-readable asset name, for example "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Beam Coin"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"SN="}]},{"type":"text","value":" human-readable short name/asset code, for example "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"BEAM"}]},{"type":"text","value":". Length should not exceed 6 characters"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"UN="}]},{"type":"text","value":" human-readable asset unit name, for example "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Beam"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"NTHUN="}]},{"type":"text","value":" human-readable smallest asset unit name (nth-unit name), for example "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Groth"}]}]}]},{"type":"element","tag":"h3","props":{"id":"optional-properties"},"children":[{"type":"text","value":"Optional properties"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"NTH_RATIO="}]},{"type":"text","value":" integer that represents the ratio of the smallest asset unit to regular unit. If omitted default value of "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"100000000"}]},{"type":"text","value":" is used"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"OPT_SHORT_DESC="}]},{"type":"text","value":" an one-liner, should not exceed 128 characters"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"OPT_LONG_DESC="}]},{"type":"text","value":" a paragraph, should not exceed 1024 characters"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"OPT_SITE_URL="}]},{"type":"text","value":" URL of the asset website"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"OPT_PDF_URL="}]},{"type":"text","value":" URL for the description paper"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"OPT_FAVICON_URL="}]},{"type":"text","value":" URL of the favicon"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"OPT_LOGO_URL="}]},{"type":"text","value":" URL of the logo in SVG vector format"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"OPT_COLOR="}]},{"type":"text","value":" color in the hex format (#FF00FF for example) to be used by the UI to display this asset. If not specified default color would be generated. Currently default colors are based on the asset id"}]}]},{"type":"element","tag":"h2","props":{"id":"examples"},"children":[{"type":"text","value":"Examples"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"with required properties only:"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--asset_meta \"STD:SCH_VER=1;N=Beam Coin;SN=BEAM;UN=Beam;NTHUN=Groth\""}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"with required and optional properties:"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--asset_meta \"STD:SCH_VER=1;N=Beam Coin;SN=BEAM;UN=Beam;NTHUN=Groth;NTH_RATIO=1000;OPT_SHORT_DESC=Off with their heads!;OPT_LONG_DESC=The fact that this catch phrase ... this story remains a part of popular culture.;OPT_SITE_URL=https://***/*;OPT_PDF_URL=https://***;OPT_FAVICON_URL=https://***/;OPT_LOGO_URL=https://***;OPT_COLOR=#FF00FF\" --fee 100000 --enable_assets"}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"requirements","depth":2,"text":"Requirements"},{"id":"properties","depth":2,"text":"Properties","children":[{"id":"required-properties","depth":3,"text":"Required properties:"},{"id":"optional-properties","depth":3,"text":"Optional properties"}]},{"id":"examples","depth":2,"text":"Examples"}]}},"_type":"markdown","_id":"content:docs:dev:confidential-assets:using-confidential-assets:asset-metadata-descriptor.md","_source":"content","_file":"docs/dev/confidential-assets/using-confidential-assets/asset-metadata-descriptor.md","_extension":"md"},{"_path":"/docs/dev/confidential-assets/using-confidential-assets/readme","_dir":"using-confidential-assets","_draft":false,"_partial":false,"_locale":"","title":"Using Confidential Assets","description":"This documents describes CLI Confidential Assets workflow.","body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"using-confidential-assets"},"children":[{"type":"text","value":"Using Confidential Assets"}]},{"type":"element","tag":"h2","props":{"id":"overview"},"children":[{"type":"text","value":"Overview"}]},{"type":"element","tag":"h3","props":{"id":"assets-support"},"children":[{"type":"text","value":"Assets Support"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"{% hint style=\"info\" %}\nConfidential Assets (CA) support requires "},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/discussions/1889","rel":["nofollow"]},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Fork2"}]}]},{"type":"text","value":" and at least "},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/wiki/Beam-wallet-protocol-API","rel":["nofollow"]},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"v5.0"}]}]},{"type":"text","value":" CLI/API. Any CA operation before "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Fork2"}]},{"type":"text","value":" would fail with the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"AssetsDisabledFork2 (45)"}]},{"type":"text","value":" error code.\n{% endhint %}"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"v5.0"}]},{"type":"text","value":" CA support is disabled by default to prevent compatibility issues. Currently, CA transactions are not supported in the GUI wallet, and the GUI wallet would reject all incoming CA transactions with the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"AssetsDisabled (43)"}]},{"type":"text","value":" error code. Rejected CA transactions do not display in the GUI wallet. Full GUI assets support is planned for later releases."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Users must specify the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--enable_assets"}]},{"type":"text","value":" flag to perform  CA transactions with the CLI and API Without this flag, CA transactions would be rejected with the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"AssetsDisabled (43)"}]},{"type":"text","value":" error code."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Information about Assets UTXOs/Shielded Coins/Assets Transactions/Assets Summary can be displayed using "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--assets"}]},{"type":"text","value":" or "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--asset_id"}]},{"type":"text","value":" ID parameters added to the corresponding commands."}]},{"type":"element","tag":"h3","props":{"id":"fees"},"children":[{"type":"text","value":"Fees"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"All fees (transaction fees and registration deposit) are always paid in BEAM/Groth. It is not possible to pay any fees using assets."}]},{"type":"element","tag":"h3","props":{"id":"asset-owner"},"children":[{"type":"text","value":"Asset Owner"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Asset Owner"}]},{"type":"text","value":" is the person (wallet) who registered the asset. The asset owner owns the private key used for signing asset "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"issue/consume/unreg"}]},{"type":"text","value":" operations. "}]},{"type":"element","tag":"h3","props":{"id":"asset-id"},"children":[{"type":"text","value":"Asset ID"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The asset is identified to the network by its"},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Asset ID"}]},{"type":"text","value":" which is an unsigned integer. All asset-related actions are performed using the asset ID. The node automatically assigns the first available asset ID when registering an asset."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Technically there can be a situation when one asset is unregistered, "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset id"}]},{"type":"text","value":" becomes available, and the next registered asset takes the id that has been previously used. A "},{"type":"element","tag":"a","props":{"href":"./#lock-period"},"children":[{"type":"text","value":"Lock period"}]},{"type":"text","value":" is introduced to ensure that asset receiver would never receive an unexpected (forged) asset."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Asset ID"}]},{"type":"text","value":" of 0 is reserved and represents an original BEAM."}]},{"type":"element","tag":"h3","props":{"id":"asset-info"},"children":[{"type":"text","value":"Asset Info"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Asset info"}]},{"type":"text","value":" is information about the asset. It includes asset metadata, total emission and lock height. Asset info is received by the wallet automatically during asset transactions or can be requested manually using "},{"type":"element","tag":"a","props":{"href":"./#getting-asset-info"},"children":[{"type":"text","value":"asset_info"}]},{"type":"text","value":" command."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Some parts of the asset info are valid only at the height the asset info has been received ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"refresh height"}]},{"type":"text","value":"). In subsequent blocks total asset emission can change or the asset become unregistered. Unregistering the asset invalidates all the information associated with the particular asset id."}]},{"type":"element","tag":"h3","props":{"id":"limits"},"children":[{"type":"text","value":"Limits"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Maximum Asset emission is $$2^{128}-1$$ asset nth units. Maximum amount for a single asset transaction (issue, consume, send, receive &c.) is $$2^{64}-1$$ asset nth units."}]},{"type":"element","tag":"h3","props":{"id":"lock-period"},"children":[{"type":"text","value":"Lock period"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Lock period is a timeframe when several asset operations are restricted for safety reasons. This ensures that asset is not changed during rollback and/or by the asset owner and that receiver of the asset would receive exactly the expected asset."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Asset becomes locked every time when its total emission reaches 0 or leaves 0. Currently lock period duration is set to "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"1440"}]},{"type":"text","value":" blocks (24 hours roughly)."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Restricted operations are the following:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Asset unreg"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Asset send/receive"}]}]},{"type":"element","tag":"h3","props":{"id":"restore"},"children":[{"type":"text","value":"Restore"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"General rules apply to the restore process. You can restore your UTXOs but not transactions. To restore shielded UTXOs node used for the restore process should be running with your owner key. Asset info is not restored automatically. You would need to execute the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_info"}]},{"type":"text","value":" command for each restored asset manually after the restore process is completed."}]},{"type":"element","tag":"h2","props":{"id":"working-with-assets"},"children":[{"type":"text","value":"Working with assets"}]},{"type":"element","tag":"h3","props":{"id":"asset-registration"},"children":[{"type":"text","value":"Asset registration"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Before asset can be used it should be registered on chain using the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_reg"}]},{"type":"text","value":" command:"}]},{"type":"element","tag":"pre","props":{"code":"./beam-wallet asset_reg --pass 1 -n 127.0.0.1:10000 --asset_meta \"STD:SCH_VER=1;N=Beam Coin;SN=BEAM;UN=Beam;NTHUN=Groth;CUSTOM1=VAL1;CUSTOM2=VAL2\" --fee 100000 --enable_assets\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"./beam-wallet asset_reg --pass 1 -n 127.0.0.1:10000 --asset_meta \"STD:SCH_VER=1;N=Beam Coin;SN=BEAM;UN=Beam;NTHUN=Groth;CUSTOM1=VAL1;CUSTOM2=VAL2\" --fee 100000 --enable_assets\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"You must specify your wallet password, node address, asset meta, optional transaction fee and add "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--enable_assets"}]},{"type":"text","value":" flag."}]},{"type":"element","tag":"h3","props":{"id":"fees-1"},"children":[{"type":"text","value":"Fees"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"There is a fixed fee for asset registration of 3000 BEAM. This fee is mandatory, cannot be changed and deduced from your wallet automatically. Registration fee ensures that the network would not be spammed with dummy assets. Registration fee is returned to the owner of the asset as soon as the asset is unregistered. So basically 3000 BEAM are locked for the asset lifetime. You must also pay regular transactions fees. The "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--fee"}]},{"type":"text","value":" param applies only to the transaction fee, not the registration fee."}]},{"type":"element","tag":"h3","props":{"id":"asset-meta"},"children":[{"type":"text","value":"Asset meta"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Asset meta is a byte buffer associated with the asset and stored on chain. It is provided on asset registration and cannot be changed afterwards. Currently CLI expects UTF8 string with several mandatory "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Key=Value"}]},{"type":"text","value":" pairs. It is not possible to register an asset without meta. Please consult the "},{"type":"element","tag":"a","props":{"href":"asset-metadata-descriptor"},"children":[{"type":"text","value":"Asset Descriptor"}]},{"type":"text","value":" document for more details."}]},{"type":"element","tag":"h3","props":{"id":"asset-id-1"},"children":[{"type":"text","value":"Asset ID"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"After successful asset registration it is associated with the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Asset ID"}]},{"type":"text","value":" issued by the node. Asset becomes known to the world by its ID. Asset id is used in any asset operations performed by any person. Asset owner can perform asset operations using as asset id or asset meta. Consult the "},{"type":"element","tag":"a","props":{"href":"./#asset-id"},"children":[{"type":"text","value":"Asset ID"}]},{"type":"text","value":" section for more details."}]},{"type":"element","tag":"h3","props":{"id":"lock-period-1"},"children":[{"type":"text","value":"Lock Period"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Immediately after the asset registration it becomes locked for 24h hours. Consult the "},{"type":"element","tag":"a","props":{"href":"./#lock-period"},"children":[{"type":"text","value":"Lock period"}]},{"type":"text","value":" section for more details."}]},{"type":"element","tag":"h3","props":{"id":"privacy"},"children":[{"type":"text","value":"Privacy"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Transaction kernel including all the asset meta becomes visible to the world. Node would know that you/your IP is the owner of the asset."}]},{"type":"element","tag":"h3","props":{"id":"api-restriction"},"children":[{"type":"text","value":"API Restriction"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Asset registration can be performed only via CLI. There is no API call for asset registration for safety reasons."}]},{"type":"element","tag":"h2","props":{"id":"asset-issue"},"children":[{"type":"text","value":"Asset issue"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"After asset registration its total emission is set to 0. Before performing any asset transactions the owner must mint (issue) asset coins using the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"issue"}]},{"type":"text","value":" command. Only asset owner can mint asset coins."}]},{"type":"element","tag":"pre","props":{"code":"./beam-wallet issue --pass 1 --asset_id 1 -n 127.0.0.1:10000 --amount 10 --fee 100000 --enable_assets\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"./beam-wallet issue --pass 1 --asset_id 1 -n 127.0.0.1:10000 --amount 10 --fee 100000 --enable_assets\n"}]}]},{"type":"element","tag":"pre","props":{"code":"./beam-wallet issue --pass 1 --asset_meta \"STD:SCH_VER=1;N=Beam Coin;SN=BEAM;UN=Beam;NTHUN=Groth;CUSTOM1=VAL1;CUSTOM2=VAL2\" -n 127.0.0.1:10000 --amount 10 --fee 100000 --enable_assets\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"./beam-wallet issue --pass 1 --asset_meta \"STD:SCH_VER=1;N=Beam Coin;SN=BEAM;UN=Beam;NTHUN=Groth;CUSTOM1=VAL1;CUSTOM2=VAL2\" -n 127.0.0.1:10000 --amount 10 --fee 100000 --enable_assets\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"You must specify your wallet password, node address, asset id or asset meta, issue amount, optional transaction fee and add "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--enable_assets"}]},{"type":"text","value":" flag."}]},{"type":"element","tag":"h4","props":{"id":"coins-availability"},"children":[{"type":"text","value":"Coins availability"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"New Asset coins cannot be used until the issue transaction is completed. Please ensure that the minting process is completed and new coins are present in your wallet and marked as available before sending them."}]},{"type":"element","tag":"h4","props":{"id":"fees-2"},"children":[{"type":"text","value":"Fees"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Asset emission is absolutely free. You can mint as many coins as you want. You pay only regular transaction fee."}]},{"type":"element","tag":"h4","props":{"id":"limits-1"},"children":[{"type":"text","value":"Limits"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Maximum Asset emission is $$2^{128}-1$$ asset nth units. Maximum amount for a single issue transaction is $$2^{64}-1$$ asset nth units."}]},{"type":"element","tag":"h4","props":{"id":"lock-period-2"},"children":[{"type":"text","value":"Lock Period"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"If after the issue operation total asset emission leaves 0 asset becomes locked. Consult the "},{"type":"element","tag":"a","props":{"href":"./#lock-period"},"children":[{"type":"text","value":"Lock period"}]},{"type":"text","value":" section for more details. Asset issue can be performed even if asset is locked. Subsequent asset issue operations do not extend the lock period."}]},{"type":"element","tag":"h4","props":{"id":"privacy-1"},"children":[{"type":"text","value":"Privacy"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Asset information is forcibly refreshed (received from node) during this operation. Operation fails if node doesn't confirm the asset. Transaction kernel including the issued asset amount and asset id becomes visible to the world. Node would know that you/your IP is the owner of the asset."}]},{"type":"element","tag":"h2","props":{"id":"asset-consume"},"children":[{"type":"text","value":"Asset consume"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Owner of the asset can consume (burn) asset coins. To burn the asset you must both be the owner of the asset and the owner of the particular coin/utxo. Asset can be consumed using the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"consume"}]},{"type":"text","value":" command."}]},{"type":"element","tag":"pre","props":{"code":"./beam-wallet consume --pass 1 --asset_id 1 -n 127.0.0.1:10000 --amount 10 --fee 100000 --enable_assets\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"./beam-wallet consume --pass 1 --asset_id 1 -n 127.0.0.1:10000 --amount 10 --fee 100000 --enable_assets\n"}]}]},{"type":"element","tag":"pre","props":{"code":"./beam-wallet consume --pass 1 --asset_meta \"STD:SCH_VER=1;N=Beam Coin;SN=BEAM;UN=Beam;NTHUN=Groth;CUSTOM1=VAL1;CUSTOM2=VAL2\" -n 127.0.0.1:10000 --amount 10  --fee 100000 --enable_assets\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"./beam-wallet consume --pass 1 --asset_meta \"STD:SCH_VER=1;N=Beam Coin;SN=BEAM;UN=Beam;NTHUN=Groth;CUSTOM1=VAL1;CUSTOM2=VAL2\" -n 127.0.0.1:10000 --amount 10  --fee 100000 --enable_assets\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"You must specify your wallet password, node address, asset id or asset meta, consume amount, optional transaction fee and add "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--enable_assets"}]},{"type":"text","value":" flag."}]},{"type":"element","tag":"h4","props":{"id":"fees-3"},"children":[{"type":"text","value":"Fees"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Asset consumption is free, requiring only regular transaction fees."}]},{"type":"element","tag":"h4","props":{"id":"limits-2"},"children":[{"type":"text","value":"Limits"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Maximum amount for a single consume transaction is $$2^{64}-1$$ asset nth units."}]},{"type":"element","tag":"h4","props":{"id":"lock-period-3"},"children":[{"type":"text","value":"Lock Period"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"If after the consume operation total asset emission reaches 0 asset becomes locked. Consult the "},{"type":"element","tag":"a","props":{"href":"./#lock-period"},"children":[{"type":"text","value":"Lock period"}]},{"type":"text","value":" section for more details."}]},{"type":"element","tag":"h4","props":{"id":"privacy-2"},"children":[{"type":"text","value":"Privacy"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Asset information is forcibly refreshed (received from node) during this operation. Operation fails if node doesn't confirm the asset. Transaction kernel, including the consumed asset amount and asset id becomes visible to the world. Node would know that you/your IP is the owner of the asset."}]},{"type":"element","tag":"h2","props":{"id":"asset-unreg"},"children":[{"type":"text","value":"Asset unreg"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Asset can be unregistered from chain by the owner. To unregister the asset its emission should be 0 and it should be not locked. Asset is unregistered using the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_unreg"}]},{"type":"text","value":"command."}]},{"type":"element","tag":"pre","props":{"code":"./beam-wallet asset_unreg --pass 1 -n 127.0.0.1:10000 --asset_meta \"STD:SCH_VER=1;N=Beam Coin;SN=BEAM;UN=Beam;NTHUN=Groth;CUSTOM1=VAL1;CUSTOM2=VAL2\" --fee 100000  --enable_assets\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"./beam-wallet asset_unreg --pass 1 -n 127.0.0.1:10000 --asset_meta \"STD:SCH_VER=1;N=Beam Coin;SN=BEAM;UN=Beam;NTHUN=Groth;CUSTOM1=VAL1;CUSTOM2=VAL2\" --fee 100000  --enable_assets\n"}]}]},{"type":"element","tag":"pre","props":{"code":"./beam-wallet asset_unreg --pass 1 -n 127.0.0.1:10000 --asset_id 1 --fee 100000 --enable_assets\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"./beam-wallet asset_unreg --pass 1 -n 127.0.0.1:10000 --asset_id 1 --fee 100000 --enable_assets\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"You must specify your wallet password, node address, asset meta or asset id, optional transaction fee and add "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--enable_assets"}]},{"type":"text","value":" flag."}]},{"type":"element","tag":"h4","props":{"id":"fees-4"},"children":[{"type":"text","value":"Fees"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Asset unregistration is free. You pay only regular transaction fee. This operation also returns 3000 BEAM locked during the asset registration."}]},{"type":"element","tag":"h4","props":{"id":"asset-id-2"},"children":[{"type":"text","value":"Asset ID"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Asset ID becomes free after this operation and can be reused by another asset."}]},{"type":"element","tag":"h4","props":{"id":"limits-3"},"children":[{"type":"text","value":"Limits"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Maximum amount for a single consume transaction is $$2^{64}-1$$ asset nth units."}]},{"type":"element","tag":"h4","props":{"id":"privacy-3"},"children":[{"type":"text","value":"Privacy"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Asset information is forcibly refreshed (received from node) during this operation. Operation fails if node doesn't confirm the asset. Transaction kernel which includes asset id becomes visible to the world. Node would know that you/your IP is the owner of the asset."}]},{"type":"element","tag":"h4","props":{"id":"api-restriction-1"},"children":[{"type":"text","value":"API Restriction"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Asset unregistration can be performed only via CLI. There is no API call for asset unregistration for safety reasons."}]},{"type":"element","tag":"h2","props":{"id":"getting-asset-info"},"children":[{"type":"text","value":"Getting Asset Info"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Asset info can be received from node using "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_info"}]},{"type":"text","value":" command for any asset registered on chain. "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_info"}]},{"type":"text","value":" command stores the received info in a local database for future usage."}]},{"type":"element","tag":"pre","props":{"code":"./beam-wallet asset_info --pass 1 -n 127.0.0.1:10000 --asset_id 1 --enable_assets\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"./beam-wallet asset_info --pass 1 -n 127.0.0.1:10000 --asset_id 1 --enable_assets\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_info"}]},{"type":"text","value":" command always receives the latest information from node. To view locally stored information regular info command should be used with "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--assets"}]},{"type":"text","value":" or "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--asset_id"}]},{"type":"text","value":" ID parameters."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Asset owner can query asset info using asset meta ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--asset_meta \"STD:....\""}]},{"type":"text","value":") as well. Non-owners can use only asset id."}]},{"type":"element","tag":"h4","props":{"id":"fees-5"},"children":[{"type":"text","value":"Fees"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_info"}]},{"type":"text","value":" operation is free. You do not pay any fees."}]},{"type":"element","tag":"h4","props":{"id":"privacy-4"},"children":[{"type":"text","value":"Privacy"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_info"}]},{"type":"text","value":" operation only communicates with the node and doesn't leave any traces in the blockchain. Node would know that particular IP has been interested in given asset."}]},{"type":"element","tag":"h2","props":{"id":"sending-assets"},"children":[{"type":"text","value":"Sending assets"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Asset can be sent using regular "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"send"}]},{"type":"text","value":" command. The only difference from regular BEAM transaction is the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--asset_id"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--enable_assets"}]},{"type":"text","value":" parameters."}]},{"type":"element","tag":"pre","props":{"code":"./beam-wallet send -n 127.0.0.1:10000 --pass 1 -r 1ec08b72ea25cd471ec37f9088a1ae0dcb8f4526eff3b8ab38f8e23901e2adf48a2 --amount 5 --asset_id 1 --enable_assets\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"./beam-wallet send -n 127.0.0.1:10000 --pass 1 -r 1ec08b72ea25cd471ec37f9088a1ae0dcb8f4526eff3b8ab38f8e23901e2adf48a2 --amount 5 --asset_id 1 --enable_assets\n"}]}]},{"type":"element","tag":"h4","props":{"id":"limits-4"},"children":[{"type":"text","value":"Limits"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Maximum amount for a single send transaction is $$2^{64}-1$$ asset nth units."}]},{"type":"element","tag":"h4","props":{"id":"enable-flag"},"children":[{"type":"text","value":"Enable flag"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Both sender and receiver should specify "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--enable_assets"}]},{"type":"text","value":" flag in command line otherwise transaction would fail with the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"AssetsDisabled (43)"}]},{"type":"text","value":" error code."}]},{"type":"element","tag":"h4","props":{"id":"lock-period-4"},"children":[{"type":"text","value":"Lock period"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Asset cannot be sent to non-owner during the lock period. Transaction would be rejected by the receiving party with the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"AssetLocked (34)"}]},{"type":"text","value":" error code."}]},{"type":"element","tag":"h4","props":{"id":"privacy-5"},"children":[{"type":"text","value":"Privacy"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Send transaction doesn't refresh asset info. Asset ID is hidden during the send transaction though it is visible that the transaction is performed on some asset. General Mimblewimble rules apply to the transaction. Amount, sender and receiver are not disclosed."}]},{"type":"element","tag":"h2","props":{"id":"receiving-assets"},"children":[{"type":"text","value":"Receiving assets"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Process of receiving assets is mostly identical to the receiving of regular BEAM."}]},{"type":"element","tag":"h4","props":{"id":"enable-flag-1"},"children":[{"type":"text","value":"Enable flag"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"CLI/API receives assets automatically if it is running (listens) with the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--assets_enable"}]},{"type":"text","value":" option. If assets are not enabled all incoming asset transaction would be rejected with the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"AssetsDisabled (43)"}]},{"type":"text","value":" error code."}]},{"type":"element","tag":"h4","props":{"id":"lock-period-5"},"children":[{"type":"text","value":"Lock period"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Asset cannot be received by non-owner during the lock period. Transaction would be rejected by the receiving party with the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"AssetLocked (34)"}]},{"type":"text","value":" error code."}]},{"type":"element","tag":"h4","props":{"id":"privacy-6"},"children":[{"type":"text","value":"Privacy"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Receive operation does not refresh asset info if there are any unspent UTXOs of the asset being received in the wallet. If there are no unspent UTXOs asset info might be refreshed if wallet doesn't have info about the asset (first receive) or info is older than the lock period duration."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Asset ID is hidden during the receive transaction though it is visible that the transaction is performed on some asset. General Mimblewimble rules apply to the transaction. Amount, sender and receiver are not disclosed."}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"overview","depth":2,"text":"Overview","children":[{"id":"assets-support","depth":3,"text":"Assets Support"},{"id":"fees","depth":3,"text":"Fees"},{"id":"asset-owner","depth":3,"text":"Asset Owner"},{"id":"asset-id","depth":3,"text":"Asset ID"},{"id":"asset-info","depth":3,"text":"Asset Info"},{"id":"limits","depth":3,"text":"Limits"},{"id":"lock-period","depth":3,"text":"Lock period"},{"id":"restore","depth":3,"text":"Restore"}]},{"id":"working-with-assets","depth":2,"text":"Working with assets","children":[{"id":"asset-registration","depth":3,"text":"Asset registration"},{"id":"fees-1","depth":3,"text":"Fees"},{"id":"asset-meta","depth":3,"text":"Asset meta"},{"id":"asset-id-1","depth":3,"text":"Asset ID"},{"id":"lock-period-1","depth":3,"text":"Lock Period"},{"id":"privacy","depth":3,"text":"Privacy"},{"id":"api-restriction","depth":3,"text":"API Restriction"}]},{"id":"asset-issue","depth":2,"text":"Asset issue"},{"id":"asset-consume","depth":2,"text":"Asset consume"},{"id":"asset-unreg","depth":2,"text":"Asset unreg"},{"id":"getting-asset-info","depth":2,"text":"Getting Asset Info"},{"id":"sending-assets","depth":2,"text":"Sending assets"},{"id":"receiving-assets","depth":2,"text":"Receiving assets"}]}},"_type":"markdown","_id":"content:docs:dev:confidential-assets:using-confidential-assets:README.md","_source":"content","_file":"docs/dev/confidential-assets/using-confidential-assets/README.md","_extension":"md"},{"_path":"/docs/dev/developing-beam-dapp-ui","_dir":"dev","_draft":false,"_partial":false,"_locale":"","title":"Developing Beam DApp UI","description":"Most of Beam Decentralized Applications include a front end component which can run within the Beam Wallet or as a standalone website that connects to Beam Web Wallet.","body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"developing-beam-dapp-ui"},"children":[{"type":"text","value":"Developing Beam DApp UI"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Most of Beam Decentralized Applications include a front end component which can run within the Beam Wallet or as a standalone website that connects to Beam Web Wallet."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"These front end components are usually implemented using standard Web Frameworks such as React or Vue (or any other). The communication with the smart contract that is deployed on chain is handled through the Application Shader, which is provided as a Web Assembly component embedded within the web application."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In this tutorial we will review how to set up the development environment for building Beam DApps using the Desktop Wallet"}]},{"type":"element","tag":"h3","props":{"id":"configure-the-testapp-in-the-wallet"},"children":[{"type":"text","value":"Configure the 'testapp' in the wallet"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Download and install "},{"type":"element","tag":"a","props":{"href":"https://beam.mw/downloads/dappnet","rel":["nofollow"]},"children":[{"type":"text","value":"Beam Desktop wallet"}]},{"type":"element","tag":"br","props":{},"children":[]},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"\nWe recommend using DAPPNET (the testing network created especially for testing dapps), as it is the most convenient for this purpose. You will also need to get some DAPPNET Beam to pay transaction fees, which can be done using the Faucet application you can find in the built in DApp Store.\\"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Find the location of your Beam Wallet data folder"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"\nIn the settings screen of the wallet, open the 'Troubleshooting' section. It will show you the location of your wallet folder on your platform"}]}]},{"type":"element","tag":"figure","props":{},"children":[{"type":"element","tag":"img","props":{"src":".gitbook/assets/image (14).png","alt":""},"children":[]},{"type":"element","tag":"figcaption","props":{},"children":[]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"3. Open the folder and locate the settings.ini file"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Edit the file and add the following section:"}]},{"type":"element","tag":"pre","props":{"code":"[devapp]\nname=testapp\nurl=http://127.0.0.1:13666/index.html\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"[devapp]\nname=testapp\nurl=http://127.0.0.1:13666/index.html\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Restart the Desktop Wallet. Now in the DApp Store screen you will see the placeholder for the test app."}]},{"type":"element","tag":"figure","props":{},"children":[{"type":"element","tag":"img","props":{"src":".gitbook/assets/image (12).png","alt":""},"children":[]},{"type":"element","tag":"figcaption","props":{},"children":[]}]},{"type":"element","tag":"h3","props":{"id":"running-the-application"},"children":[{"type":"text","value":"Running the application"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"For this section we assume that contract is already deployed on the blockchain and that application shader assembly is present. As an example we will use the BANS application that can be seen here: "},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/bans","rel":["nofollow"]},"children":[{"type":"text","value":"https://github.com/BeamMW/bans"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In order to run this application you will need the following pre-requisutes:"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://nodejs.org/en/","rel":["nofollow"]},"children":[{"type":"text","value":"nodejs "}]},{"type":"text","value":"for your platform"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"yarn (can be installed with 'npm install --global yarn', once you install nodejs)"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Now change directory to where you have cloned the BANS repository and run:"}]},{"type":"element","tag":"pre","props":{"code":"yarn install\nyarn start\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"yarn install\nyarn start\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"If any questions are asked during installation just chose default answers this should work."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Once the local development server is running, you can launch the 'testapp' in the wallet. This will show you the BANS screen"}]},{"type":"element","tag":"figure","props":{},"children":[{"type":"element","tag":"img","props":{"src":".gitbook/assets/image (20).png","alt":""},"children":[]},{"type":"element","tag":"figcaption","props":{},"children":[]}]},{"type":"element","tag":"h3","props":{"id":"using-the-developer-console"},"children":[{"type":"text","value":"Using the Developer Console"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"During application development, it is useful to be able to see the developer console, as you would in a regular browser. Beam Desktop Wallet provides this option when launched with a flag:"}]},{"type":"element","tag":"pre","props":{"code":"--remote-debugging-port=20000\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"--remote-debugging-port=20000\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"After you relaunch the wallet with this flag, you can open a regular web browser and navigate to: "},{"type":"element","tag":"a","props":{"href":"http://localhost:20000/","rel":["nofollow"]},"children":[{"type":"text","value":"http://localhost:20000/"}]}]},{"type":"element","tag":"h3","props":{"id":"packaging-into-dapp-file"},"children":[{"type":"text","value":"Packaging into .dapp file"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In order to distribute the application as a stand alone archive in should be packaged into a .dapp file"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This can be done following the steps below:"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Create the following folder structure"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Create an empty folder, use your dapp name for simplicity"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Inside this folder create another empty folder called 'app'"}]}]},{"type":"element","tag":"ol","props":{"start":2},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Build your application"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Run "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"yarn build"}]},{"type":"text","value":"\nThis will create an "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"html"}]},{"type":"text","value":" folder (if you are using the React template as provided by beam here ("},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam-dapp-react","rel":["nofollow"]},"children":[{"type":"text","value":"https://github.com/BeamMW/beam-dapp-react"}]},{"type":"text","value":")\nCopy the contents of the build folder (in our case 'html') into the app folder created in step 1."}]},{"type":"element","tag":"ol","props":{"start":3},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Create manifest file"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The manifest file contains the required metadata for your application that will be parsed and presented by the Beam Wallet during dApp installation."}]},{"type":"element","tag":"pre","props":{"code":"{\n   \"name\":  \"\",   //required, max length 30 characters\n   \"description\":  \"\", //required, max length 1024 characters\n   \"url\":  \"localapp/app/index.html\", //required\n   \"version\":  \"1.1.17\", //required\n   \"api_version\":  \"7.0\", //required, max length 10 characters \n   \"min_api_version\":  \"7.0\", //required, max length 10 characters\n   \"icon\":  \"localapp/app/logo.svg\", //required, max size 10240 byte. SVG files only\n   \"guid\":  \"d353352eb6a94618ac0a8ec7b29ca7bb\" //required\n}\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n   \"name\":  \"\",   //required, max length 30 characters\n   \"description\":  \"\", //required, max length 1024 characters\n   \"url\":  \"localapp/app/index.html\", //required\n   \"version\":  \"1.1.17\", //required\n   \"api_version\":  \"7.0\", //required, max length 10 characters \n   \"min_api_version\":  \"7.0\", //required, max length 10 characters\n   \"icon\":  \"localapp/app/logo.svg\", //required, max size 10240 byte. SVG files only\n   \"guid\":  \"d353352eb6a94618ac0a8ec7b29ca7bb\" //required\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This file should be called "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"manifest.json"}]},{"type":"text","value":" and copied into the same folder as the 'app' folder created above"}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"TIP: To generate the guid you can use online GUID generators like: "},{"type":"element","tag":"a","props":{"href":"https://www.guidgenerator.com/online-guid-generator.aspx","rel":["nofollow"]},"children":[{"type":"text","value":"https://www.guidgenerator.com/online-guid-generator.aspx"}]},{"type":"text","value":"\nJust remember to remove the checkbox from the 'hiphens' option"}]}]},{"type":"element","tag":"ol","props":{"start":4},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Zip the top application folder (the one that has the manifest and the 'app' folder inside of it into a .zip archive"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Rename the .zip file to .dapp"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"You can now test the local installation by using the 'Install DApp from file' option in the Desktop Wallet DApp Store"}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"configure-the-testapp-in-the-wallet","depth":3,"text":"Configure the 'testapp' in the wallet"},{"id":"running-the-application","depth":3,"text":"Running the application"},{"id":"using-the-developer-console","depth":3,"text":"Using the Developer Console"},{"id":"packaging-into-dapp-file","depth":3,"text":"Packaging into .dapp file"}]}},"_type":"markdown","_id":"content:docs:dev:developing-beam-dapp-ui.md","_source":"content","_file":"docs/dev/developing-beam-dapp-ui.md","_extension":"md"},{"_path":"/docs/dev/guidelines/coding-guidelines","_dir":"guidelines","_draft":false,"_partial":false,"_locale":"","title":"Coding guidelines","description":"Read in Beam wiki contributor guidelines about upcoming coding guidelines for C++, Angular/JS. This would be a good section to have them in.","body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"coding-guidelines"},"children":[{"type":"text","value":"Coding guidelines"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Read in Beam wiki contributor guidelines about upcoming coding guidelines for C++, Angular/JS. This would be a good section to have them in."}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[]}},"_type":"markdown","_id":"content:docs:dev:guidelines:coding-guidelines.md","_source":"content","_file":"docs/dev/guidelines/coding-guidelines.md","_extension":"md"},{"_path":"/docs/dev/guidelines/untitled","_dir":"guidelines","_draft":false,"_partial":false,"_locale":"","title":"Contributor guidelines","description":"Information on how ","body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"contributor-guidelines"},"children":[{"type":"text","value":"Contributor guidelines"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Information on how "}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[]}},"_type":"markdown","_id":"content:docs:dev:guidelines:untitled.md","_source":"content","_file":"docs/dev/guidelines/untitled.md","_extension":"md"},{"_path":"/docs/dev/guides/building-beam","_dir":"guides","_draft":false,"_partial":false,"_locale":"","title":"Building Beam","description":"This document will serve as a guide for building Beam and BeamUI projects. Users have the option to download the binaries directly from GitHub, however, for this walkthrough, users must have some technical knowledge, including basic knowledge of the Command-Line.","body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"building-beam"},"children":[{"type":"text","value":"Building Beam"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This document will serve as a guide for building Beam and BeamUI projects. Users have the option to download the binaries directly from "},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam","rel":["nofollow"]},"children":[{"type":"text","value":"GitHub"}]},{"type":"text","value":", however, for this walkthrough, users must have "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"some"}]},{"type":"text","value":" technical knowledge, including basic knowledge of the Command-Line."}]},{"type":"element","tag":"h2","props":{"id":"things-youll-need"},"children":[{"type":"text","value":"Things you'll need"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"To avoid any issues, have the following installed on your machine before starting your build:"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The latest version of "},{"type":"element","tag":"a","props":{"href":"https://git-scm.com/book/en/v2/Getting-Started-Installing-Git","rel":["nofollow"]},"children":[{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Git"}]}]},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"."}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://cmake.org/download/","rel":["nofollow"]},"children":[{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"CMake"}]}]},{"type":"text","value":" (version 3.13 and newer to generate the build environment)."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://www.boost.org/users/history/version_1_66_0.html","rel":["nofollow"]},"children":[{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Boost library"}]}]},{"type":"text","value":" (version 1.66 and newer_)._"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://www.openssl.org/source/","rel":["nofollow"]},"children":[{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"OpenSSL"}]},{"type":"text","value":" "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Library"}]}]},{"type":"text","value":"."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://visualstudio.microsoft.com/vs/older-downloads/","rel":["nofollow"]},"children":[{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Microsoft Visual Studio"}]}]},{"type":"text","value":" (2017 and newer; Windows users only)."}]}]},{"type":"element","tag":"h2","props":{"id":"first-steps"},"children":[{"type":"text","value":"First steps"}]},{"type":"element","tag":"h3","props":{"id":"downloading-the-binaries"},"children":[{"type":"text","value":"Downloading the binaries"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Launch a terminal window and enter the following command:"}]},{"type":"element","tag":"pre","props":{"code":"git clone https://github.com/BeamMW/beam.git\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"git clone https://github.com/BeamMW/beam.git\n"}]}]},{"type":"element","tag":"h3","props":{"id":"creating-submodules"},"children":[{"type":"text","value":"Creating submodules"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"As a prerequisite, Beam requires the creation of submodules before starting the build. To create submodules, launch your terminal window and enter the following commands: "}]},{"type":"element","tag":"pre","props":{"code":"cd beam\ngit submodule update --init --recursive\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"cd beam\ngit submodule update --init --recursive\n"}]}]},{"type":"element","tag":"h3","props":{"id":"branch-convention"},"children":[{"type":"text","value":"Branch Convention"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Beam is entirely open-source, and we encourage users interested in contributing or testing our tech to follow the Branch convention below to avoid any issues."}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Master"}]},{"type":"text","value":" branch is for development."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Testnet"}]},{"type":"text","value":" branch is a sandbox for users interested in testing Beam."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Mainnet"}]},{"type":"text","value":" branch is the most recent version of each Beam project. "}]}]},{"type":"element","tag":"h3","props":{"id":"cmake-options"},"children":[{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"CMake"}]},{"type":"text","value":" Options"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Beam uses "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"CMake"}]},{"type":"text","value":" to generate the build environment with several options for building the project. Refer to "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"CMakeLists.txt"}]},{"type":"text","value":" file for more details."}]},{"type":"element","tag":"h2","props":{"id":"windows"},"children":[{"type":"text","value":"Windows"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"{% hint style=\"info\" %}\nThis guide assumes you have the latest version "},{"type":"element","tag":"a","props":{"href":"https://git-scm.com/book/en/v2/Getting-Started-Installing-Git","rel":["nofollow"]},"children":[{"type":"text","value":"Git"}]},{"type":"text","value":" installed on your machine.\n{% endhint %}"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Install "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Microsoft Visual Studio"}]},{"type":"text","value":" with "},{"type":"element","tag":"a","props":{"href":"https://docs.microsoft.com/en-us/cpp/build/cmake-projects-in-visual-studio?view=msvc-160#building-cmake-projects","rel":["nofollow"]},"children":[{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"CMake"}]},{"type":"text","value":" support"}]},{"type":"text","value":"."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Download and install the Boost "},{"type":"element","tag":"a","props":{"href":"https://sourceforge.net/projects/boost/files/boost-binaries/1.68.0/boost_1_68_0-msvc-14.1-64.exe","rel":["nofollow"]},"children":[{"type":"text","value":"prebuilt"}]},{"type":"text","value":" binaries, adding "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"BOOST_ROOT"}]},{"type":"text","value":" to the "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Environment Variables"}]},{"type":"text","value":"."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Download and install the "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"OpenSSL"}]},{"type":"text","value":" "},{"type":"element","tag":"a","props":{"href":"https://slproweb.com/products/Win32OpenSSL.html","rel":["nofollow"]},"children":[{"type":"text","value":"prebuilt"}]},{"type":"text","value":" binaries ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Win64 OpenSSL v1.1.0h"}]},{"type":"text","value":" for example). Add "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"OPENSSL_ROOT_DIR"}]},{"type":"text","value":" to the "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Environment Variables"}]},{"type":"text","value":"."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Add "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":".../boost_1_68_0/lib64-msvc-14.1"}]},{"type":"text","value":" to the "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"System Path"}]},{"type":"text","value":"."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Open project folder in "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Visual Studio"}]},{"type":"text","value":", select your target ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Release-x64"}]},{"type":"text","value":" for example, if you downloaded 64bit Boost and "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"OpenSSL"}]},{"type":"text","value":") and select "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"CMake -> Build All"}]},{"type":"text","value":"."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Open cache folder:"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"element","tag":"img","props":{"alt":"","src":"../.gitbook/assets/Screen%20Shot%202021-11-28%20at%203.27.04%20PM.png"},"children":[]},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"{% hint style=\"info\" %}\nFor "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Visual Studio 2017"}]},{"type":"text","value":" users, go to "},{"type":"element","tag":"em","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"CMake"}]}]},{"type":"text","value":"** > Cache > Open Cache Folder > "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Beam"}]},{"type":"text","value":"**"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"For "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Visual Studio 2019"}]},{"type":"text","value":" users**, Project > "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"_"}]},{"type":"text","value":"CMake"},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"_"}]},{"type":"text","value":" cache > Open in explorer** (the binaries can be found in "},{"type":"element","tag":"strong","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"beam/..., wallet/cli/..., explorer/... subfolders"}]}]},{"type":"text","value":").\n{% endhint %}"}]}]},{"type":"element","tag":"h2","props":{"id":"linux"},"children":[{"type":"text","value":"Linux"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"{% hint style=\"danger\" %}\nLocate the downloaded Beam node and Command Line (CLI) wallet in the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"beam/wallet/cli"}]},{"type":"text","value":" folder.\n{% endhint %}"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Clone the Beam binaries from "},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW","rel":["nofollow"]},"children":[{"type":"text","value":"Github"}]},{"type":"text","value":" by entering the following command:"},{"type":"element","tag":"pre","props":{"code":"git clone https://github.com/BeamMW/beam.git\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"git clone https://github.com/BeamMW/beam.git\n"}]}]},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"{% hint style=\"info\" %}\n"},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Please note"}]},{"type":"text","value":": The above command will clone the latest master branch. The master branch is where the Beam team develops upcoming versions of Beam. Users should select the appropriate "},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/branches","rel":["nofollow"]},"children":[{"type":"text","value":"branch"}]},{"type":"text","value":" then "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"git checkout"}]},{"type":"text","value":" after cloning the main Beam repository.\n{% endhint %}"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"To clone the "},{"type":"element","tag":"strong","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Double Doppler 4.0"}]}]},{"type":"text","value":" release branch, enter the following:"},{"type":"element","tag":"pre","props":{"code":"cd beam\ngit checkout double_doppler_4.0RC\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"cd beam\ngit checkout double_doppler_4.0RC\n"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The standard tutorials for Building beam will create the latest Beam Masternet build (development version, development blockchain). Build the Testnet for testing and development or build the Mainnet for real-world blockchain utilization by editing the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"beam/CMakeLists.txt"}]},{"type":"text","value":" file lines 151-157. Uncomment (remove the '#' sign) respective definitions for the version Beam you wish to build."},{"type":"element","tag":"pre","props":{"code":"# uncomment next line for testnet\n#set(BEAM_TESTNET TRUE)\n# uncomment next line for mainnet\n#set(BEAM_MAINNET TRUE)\n\n# uncomment next line for swap mainnet\n#set(SWAP_MAINNET TRUE)\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"# uncomment next line for testnet\n#set(BEAM_TESTNET TRUE)\n# uncomment next line for mainnet\n#set(BEAM_MAINNET TRUE)\n\n# uncomment next line for swap mainnet\n#set(SWAP_MAINNET TRUE)\n"}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"ubuntu-and-desktop-server"},"children":[{"type":"text","value":"Ubuntu and desktop server"}]},{"type":"element","tag":"h3","props":{"id":"ubuntu-1804"},"children":[{"type":"text","value":"Ubuntu  18.04 "}]},{"type":"element","tag":"h4","props":{"id":"desktop"},"children":[{"type":"text","value":"Desktop"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"{% hint style=\"info\" %}\nThe instructions below are valid for a default "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Ubuntu 18.04.03 Desktop LTS install"}]},{"type":"text","value":". For older systems, verify that steps 1, 2 & 4 do not overwrite or conflict with more recent versions of "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"CMake"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"boost"}]},{"type":"text","value":" previously installed on your machine.\n{% endhint %}"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Install dependencies:"},{"type":"element","tag":"pre","props":{"code":"sudo add-apt-repository ppa:mhier/libboost-latest\nsudo apt-get update && sudo apt-get upgrade\nsudo apt-get install g++-8 libssl-dev curl wget git make \nsudo apt-get install libgl1-mesa-dev zlib1g-dev libboost1.67-dev\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"sudo add-apt-repository ppa:mhier/libboost-latest\nsudo apt-get update && sudo apt-get upgrade\nsudo apt-get install g++-8 libssl-dev curl wget git make \nsudo apt-get install libgl1-mesa-dev zlib1g-dev libboost1.67-dev\n"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Install "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"CMake"}]},{"type":"text","value":":"},{"type":"element","tag":"pre","props":{"code":"wget https://cmake.org/files/v3.13/cmake-3.13.0-Linux-x86_64.sh\nsudo sh ./cmake-3.13.0-Linux-x86_64.sh --skip-license --prefix=/usr\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"wget https://cmake.org/files/v3.13/cmake-3.13.0-Linux-x86_64.sh\nsudo sh ./cmake-3.13.0-Linux-x86_64.sh --skip-license --prefix=/usr\n"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Find your Beam project folder, start the release build:"},{"type":"element","tag":"pre","props":{"code":"export CC=gcc-8 && export CXX=g++-8\ncmake -DCMAKE_BUILD_TYPE=Release && make -j4\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"export CC=gcc-8 && export CXX=g++-8\ncmake -DCMAKE_BUILD_TYPE=Release && make -j4\n"}]}]}]}]},{"type":"element","tag":"h4","props":{"id":"server"},"children":[{"type":"text","value":"Server"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Install dependencies:"},{"type":"element","tag":"pre","props":{"code":"sudo add-apt-repository ppa:mhier/libboost-latest\nsudo apt-get update && sudo apt-get upgrade\nsudo apt-get install g++-8 libssl-dev curl wget git make \nsudo apt-get install libgl1-mesa-dev zlib1g-dev libboost1.67-dev\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"sudo add-apt-repository ppa:mhier/libboost-latest\nsudo apt-get update && sudo apt-get upgrade\nsudo apt-get install g++-8 libssl-dev curl wget git make \nsudo apt-get install libgl1-mesa-dev zlib1g-dev libboost1.67-dev\n"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Install "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"CMake"}]},{"type":"text","value":":"},{"type":"element","tag":"pre","props":{"code":"wget https://cmake.org/files/v3.13/cmake-3.13.0-Linux-x86_64.sh\nsudo sh ./cmake-3.13.0-Linux-x86_64.sh --skip-license --prefix=/usr\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"wget https://cmake.org/files/v3.13/cmake-3.13.0-Linux-x86_64.sh\nsudo sh ./cmake-3.13.0-Linux-x86_64.sh --skip-license --prefix=/usr\n"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Find your Beam project folder, start the release build:"},{"type":"element","tag":"pre","props":{"code":"export CC=gcc-8 && export CXX=g++-8\ncmake -DCMAKE_BUILD_TYPE=Release && make -j4\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"export CC=gcc-8 && export CXX=g++-8\ncmake -DCMAKE_BUILD_TYPE=Release && make -j4\n"}]}]}]}]},{"type":"element","tag":"h3","props":{"id":"ubuntu-1910"},"children":[{"type":"text","value":"Ubuntu 19.10"}]},{"type":"element","tag":"h4","props":{"id":"desktop-1"},"children":[{"type":"text","value":"Desktop"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"{% hint style=\"info\" %}\nInstructions below are valid for a minimal "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Ubuntu 19.10 Desktop install"}]},{"type":"text","value":" (\"update during install\" option enabled).\n{% endhint %}"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Install dependencies:"},{"type":"element","tag":"pre","props":{"code":"sudo apt-get install g++ git make cmake libboost-all-dev zlib1g-dev\nsudo apt-get install libssl-dev \n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"sudo apt-get install g++ git make cmake libboost-all-dev zlib1g-dev\nsudo apt-get install libssl-dev \n"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Find your Beam project folder, start the release build:"},{"type":"element","tag":"pre","props":{"code":"cmake -DCMAKE_BUILD_TYPE=Release . && make -j4\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"cmake -DCMAKE_BUILD_TYPE=Release . && make -j4\n"}]}]}]}]},{"type":"element","tag":"h4","props":{"id":"server-1"},"children":[{"type":"text","value":"Server"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Install dependencies"},{"type":"element","tag":"pre","props":{"code":"sudo apt-get update && sudo apt-get upgrade\nsudo apt-get install g++ git make cmake libboost-all-dev zlib1g-dev\nsudo apt-get install libssl-dev\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"sudo apt-get update && sudo apt-get upgrade\nsudo apt-get install g++ git make cmake libboost-all-dev zlib1g-dev\nsudo apt-get install libssl-dev\n"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Find your Beam project folder, start the release build:"},{"type":"element","tag":"pre","props":{"code":"cmake -DCMAKE_BUILD_TYPE=Release . && make -j4\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"cmake -DCMAKE_BUILD_TYPE=Release . && make -j4\n"}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"centos"},"children":[{"type":"text","value":"CentOS"}]},{"type":"element","tag":"h3","props":{"id":"centos-70"},"children":[{"type":"text","value":"CentOS 7.0"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"{% hint style=\"info\" %}\nThe instructions below are valid for a default "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"CentOS 7.0-1908 minimal install"}]},{"type":"text","value":". For older systems, verify that steps two and three do not overwrite or conflict with more recent versions of "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"CMake"}]},{"type":"text","value":"and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"boost"}]},{"type":"text","value":" previously installed on your machine.\n{% endhint %}"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Install dependencies:"},{"type":"element","tag":"pre","props":{"code":"sudo yum update && shutdown -r now\nsudo yum install centos-release-scl yum-utils\nsudo yum-config-manager --enable rhel-server-rhscl-8-rpms\nsudo yum install devtoolset-8-gcc* \nscl enable devtoolset-8 bash\nsudo yum install git make wget openssl-devel\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"sudo yum update && shutdown -r now\nsudo yum install centos-release-scl yum-utils\nsudo yum-config-manager --enable rhel-server-rhscl-8-rpms\nsudo yum install devtoolset-8-gcc* \nscl enable devtoolset-8 bash\nsudo yum install git make wget openssl-devel\n"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Build & install boost. This step could take considerable amount of time"},{"type":"element","tag":"pre","props":{"code":"wget https://dl.bintray.com/boostorg/release/1.66.0/source/boost_1_66_0.tar.gz\ntar xzvf boost_1_66_0.tar.gz\ncd boost_1_66_0 && ./bootstrap.sh && sudo ./b2 install && cd ~\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"wget https://dl.bintray.com/boostorg/release/1.66.0/source/boost_1_66_0.tar.gz\ntar xzvf boost_1_66_0.tar.gz\ncd boost_1_66_0 && ./bootstrap.sh && sudo ./b2 install && cd ~\n"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Install "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"CMake"}]},{"type":"text","value":":"},{"type":"element","tag":"pre","props":{"code":"wget https://cmake.org/files/v3.13/cmake-3.13.0-Linux-x86_64.sh\nsudo sh ./cmake-3.13.0-Linux-x86_64.sh --skip-license --prefix=/usr\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"wget https://cmake.org/files/v3.13/cmake-3.13.0-Linux-x86_64.sh\nsudo sh ./cmake-3.13.0-Linux-x86_64.sh --skip-license --prefix=/usr\n"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Find your Beam project folder, start the release build:"},{"type":"element","tag":"pre","props":{"code":"cmake -DCMAKE_BUILD_TYPE=Release . && make -j4\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"cmake -DCMAKE_BUILD_TYPE=Release . && make -j4\n"}]}]}]}]},{"type":"element","tag":"h3","props":{"id":"centos-80"},"children":[{"type":"text","value":"CentOS 8.0"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"{% hint style=\"info\" %}\nThe instructions below are valid for a default "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"CentOS 8.0-1905 minimal install"}]},{"type":"text","value":". For older systems, verify that step two does not overwrite or conflict with more recent versions of "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"CMake"}]},{"type":"text","value":"and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"boost"}]},{"type":"text","value":" previously installed on your machine.\n{% endhint %}"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Install dependencies:"},{"type":"element","tag":"pre","props":{"code":"sudo dnf update\nsudo dnf config-manager --set-enabled PowerTools\nsudo dnf install git make cmake gcc-c++ libstdc++-static boost-devel \nsudo dnf install openssl-devel tar wget \n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"sudo dnf update\nsudo dnf config-manager --set-enabled PowerTools\nsudo dnf install git make cmake gcc-c++ libstdc++-static boost-devel \nsudo dnf install openssl-devel tar wget \n"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Install "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"CMake"}]},{"type":"text","value":":"},{"type":"element","tag":"pre","props":{"code":"wget https://cmake.org/files/v3.13/cmake-3.13.0-Linux-x86_64.sh\nsudo sh ./cmake-3.13.0-Linux-x86_64.sh --skip-license --prefix=/usr\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"wget https://cmake.org/files/v3.13/cmake-3.13.0-Linux-x86_64.sh\nsudo sh ./cmake-3.13.0-Linux-x86_64.sh --skip-license --prefix=/usr\n"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Find your Beam project folder, start the release build:"},{"type":"element","tag":"pre","props":{"code":"cmake -DCMAKE_BUILD_TYPE=Release . && make -j4\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"cmake -DCMAKE_BUILD_TYPE=Release . && make -j4\n"}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"fedora"},"children":[{"type":"text","value":"Fedora"}]},{"type":"element","tag":"h4","props":{"id":"desktop-2"},"children":[{"type":"text","value":"Desktop"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"{% hint style=\"info\" %}\nThe instructions below are valid for a default "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Fedora 31-1.9 Workstation install"}]},{"type":"text","value":".\n{% endhint %}"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Install dependencies:"},{"type":"element","tag":"pre","props":{"code":"sudo dnf update && shutdown -r now\nsudo dnf install git make cmake gcc-c++ libstdc++-static boost-devel \nsudo dnf install zlib-devel openssl-devel tar \n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"sudo dnf update && shutdown -r now\nsudo dnf install git make cmake gcc-c++ libstdc++-static boost-devel \nsudo dnf install zlib-devel openssl-devel tar \n"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Find your Beam project folder, start the release build:"},{"type":"element","tag":"pre","props":{"code":"cmake -DCMAKE_BUILD_TYPE=Release . && make -j4\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"cmake -DCMAKE_BUILD_TYPE=Release . && make -j4\n"}]}]}]}]},{"type":"element","tag":"h4","props":{"id":"server-2"},"children":[{"type":"text","value":"Server"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"{% hint style=\"info\" %}\nThe instructions below are valid for a default "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Fedora 31-1.9 Headless Server install"}]},{"type":"text","value":".\n{% endhint %}"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Install dependencies:"},{"type":"element","tag":"pre","props":{"code":"sudo dnf update && shutdown -r now\nsudo dnf install git make cmake gcc-c++ libstdc++-static boost-devel \nsudo dnf install zlib-devel openssl-devel tar\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"sudo dnf update && shutdown -r now\nsudo dnf install git make cmake gcc-c++ libstdc++-static boost-devel \nsudo dnf install zlib-devel openssl-devel tar\n"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Find your Beam project folder, start the release build:"},{"type":"element","tag":"pre","props":{"code":"cmake -DCMAKE_BUILD_TYPE=Release . && make -j4\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"cmake -DCMAKE_BUILD_TYPE=Release . && make -j4\n"}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"macos"},"children":[{"type":"text","value":"MacOS"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Clone the Beam binaries from "},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW","rel":["nofollow"]},"children":[{"type":"text","value":"Github"}]},{"type":"text","value":":"},{"type":"element","tag":"pre","props":{"code":"git clone https://github.com/BeamMW/beam.git\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"git clone https://github.com/BeamMW/beam.git\n"}]}]},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"{% hint style=\"info\" %}\n"},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Please note:"}]},{"type":"text","value":" The Git command above will clone the latest master branch. The master branch is where the Beam team develops upcoming versions of the Beam.\n{% endhint %}"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"To clone the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"mainnet"}]},{"type":"text","value":", enter the following command:"},{"type":"element","tag":"pre","props":{"code":"git clone --branch mainnet https://github.com/BeamMW/beam.git\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"git clone --branch mainnet https://github.com/BeamMW/beam.git\n"}]}]},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"To clone the Beam "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"testnet"}]},{"type":"text","value":", use:"},{"type":"element","tag":"pre","props":{"code":"git clone --branch testnet https://github.com/BeamMW/beam.git\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"git clone --branch testnet https://github.com/BeamMW/beam.git\n"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://docs.brew.sh/Installation","rel":["nofollow"]},"children":[{"type":"text","value":"Install"}]},{"type":"text","value":" "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Brew"}]},{"type":"text","value":" Package Manager."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"To install all necessary packages, enter:"},{"type":"element","tag":"pre","props":{"code":"brew install openssl cmake\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"brew install openssl cmake\n"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Remove any existing "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Brew"}]},{"type":"text","value":" installations of "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"boost"}]},{"type":"text","value":":"},{"type":"element","tag":"pre","props":{"code":"brew uninstall --ignore-dependencies boost\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"brew uninstall --ignore-dependencies boost\n"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://docs.brew.sh/Installation","rel":["nofollow"]},"children":[{"type":"text","value":"Download"}]},{"type":"text","value":" and install a compatible version of "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"boost"}]},{"type":"text","value":":"},{"type":"element","tag":"pre","props":{"code":"curl -O https://raw.githubusercontent.com/Homebrew/homebrew-core/5da5895add2f6b9320d654dd844d4827f6876c8b/Formula/boost.rb\nbrew install ./boost.rb\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"curl -O https://raw.githubusercontent.com/Homebrew/homebrew-core/5da5895add2f6b9320d654dd844d4827f6876c8b/Formula/boost.rb\nbrew install ./boost.rb\n"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"To set your Environment Variables, enter:"},{"type":"element","tag":"pre","props":{"code":"- export OPENSSL_ROOT_DIR=\"/usr/local/opt/openssl@1.1\"\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"- export OPENSSL_ROOT_DIR=\"/usr/local/opt/openssl@1.1\"\n"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Find your Beam project folder, then enter:"},{"type":"element","tag":"pre","props":{"code":"cmake -DCMAKE_BUILD_TYPE=Release . && make -j4\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"cmake -DCMAKE_BUILD_TYPE=Release . && make -j4\n"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Use "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"cpack"}]},{"type":"text","value":" to get "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":".dmg file."}]},{"type":"text","value":" Find Beam project folder and then enter:"},{"type":"element","tag":"pre","props":{"code":"cpack\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"cpack\n"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Locate the completed Beam node in the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"beam/wallet/cli"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"beam/explorer"}]},{"type":"text","value":" subfolders"}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"things-youll-need","depth":2,"text":"Things you'll need"},{"id":"first-steps","depth":2,"text":"First steps","children":[{"id":"downloading-the-binaries","depth":3,"text":"Downloading the binaries"},{"id":"creating-submodules","depth":3,"text":"Creating submodules"},{"id":"branch-convention","depth":3,"text":"Branch Convention"},{"id":"cmake-options","depth":3,"text":"CMake Options"}]},{"id":"windows","depth":2,"text":"Windows"},{"id":"linux","depth":2,"text":"Linux"},{"id":"ubuntu-and-desktop-server","depth":2,"text":"Ubuntu and desktop server","children":[{"id":"ubuntu-1804","depth":3,"text":"Ubuntu  18.04 "},{"id":"ubuntu-1910","depth":3,"text":"Ubuntu 19.10"}]},{"id":"centos","depth":2,"text":"CentOS","children":[{"id":"centos-70","depth":3,"text":"CentOS 7.0"},{"id":"centos-80","depth":3,"text":"CentOS 8.0"}]},{"id":"fedora","depth":2,"text":"Fedora"},{"id":"macos","depth":2,"text":"MacOS"}]}},"_type":"markdown","_id":"content:docs:dev:guides:building-beam.md","_source":"content","_file":"docs/dev/guides/building-beam.md","_extension":"md"},{"_path":"/docs/dev/guides/consensus-rules","_dir":"guides","_draft":false,"_partial":false,"_locale":"","title":"Beam Consensus Rules","description":"{% hint style=\"danger\" %}\nWARNING: Used for development and testing only!\n{% endhint %}","body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"beam-consensus-rules"},"children":[{"type":"text","value":"Beam Consensus Rules"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"{% hint style=\"danger\" %}\n"},{"type":"element","tag":"em","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"WARNING:"}]},{"type":"text","value":" Used for development and testing only!"}]},{"type":"text","value":"\n{% endhint %}"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The following parameters allow to configuration of Consensus Rules in the Beam node and wallet."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Consensus Rules are for testing and development purposes only. Changing the consensus parameters changes the Rule Signature and breaks the node and wallet compatibility with the running Mainnet or Testnet servers."}]},{"type":"element","tag":"h3","props":{"id":"rules"},"children":[{"type":"text","value":"Rules"}]},{"type":"element","tag":"table","props":{},"children":[{"type":"element","tag":"thead","props":{},"children":[{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"th","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Parameter"}]}]},{"type":"element","tag":"th","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Description & Example"}]}]}]}]},{"type":"element","tag":"tbody","props":{},"children":[{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"EmissionValue0"}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"Initial coinbase emission in a single block (in Groth, 10^-8 of Beam)"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"EmissionDrop0"}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"Height of the last block that still has the initial emission. Emission drops by half in the next block. Default equals one year (assuming one block per minute)."}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"EmissionDrop1"}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"Number of blocks in halving cycle (defaults to four years, assuming one block per minute)."}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"MaturityCoinbase"}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"Number of blocks that should be mined (verified) before coinbase UTXO can be spent."}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"MaturityStd"}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"Number of blocks that should be mined (verified) before normal (non-coinbase) UTXO can be spent."}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"MaxBodySize"}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"Block body size (in bytes)."}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"DesiredRate_s"}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"Target block rate (in seconds)."}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"DifficultyReviewWindow"}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"Number of blocks in the window for the mining difficulty adjustment."}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"TimestampAheadThreshold_s"}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"Block timestamp tolerance (in seconds)."}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"WindowForMedian"}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"Number of blocks considered in calculating the timestamp median."}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"AllowPublicUtxos"}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"Flag allowing regular (non-coinbase) UTXO to have non-confidential signature."}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"FakePoW"}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"Flag to disable verification of PoW. Mining is simulated by timer."}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The sample below displays the corresponding "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":".cfg"}]},{"type":"text","value":" fie section:"}]},{"type":"element","tag":"pre","props":{"code":"################################################################################\n# Rules configuration:\n################################################################################\n\n# initial coinbase emission in a single block\n# EmissionValue0=800000000\n\n# height of the last block that still has the initial emission, the drop is starting from the next block\n# EmissionDrop0=525600\n\n# Each such a cycle there's a new drop\n# EmissionDrop1=2102400\n\n# num of blocks before coinbase UTXO can be spent\n# MaturityCoinbase=240\n\n# num of blocks before non-coinbase UTXO can be spent\n# MaturityStd=0\n\n# Max block body size [bytes]\n# MaxBodySize=0x100000\n\n# Desired rate of generated blocks [seconds]\n# DesiredRate_s=60\n\n# num of blocks in the window for the mining difficulty adjustment\n# DifficultyReviewWindow=1440\n\n# Block timestamp tolerance [seconds]\n# TimestampAheadThreshold_s=7200\n\n# How many blocks are considered in calculating the timestamp median\n# WindowForMedian=25\n\n# set to allow regular (non-coinbase) UTXO to have non-confidential signature\n# AllowPublicUtxos=0\n\n# Don't verify PoW. Mining is simulated by the timer\n# FakePoW=0\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"################################################################################\n# Rules configuration:\n################################################################################\n\n# initial coinbase emission in a single block\n# EmissionValue0=800000000\n\n# height of the last block that still has the initial emission, the drop is starting from the next block\n# EmissionDrop0=525600\n\n# Each such a cycle there's a new drop\n# EmissionDrop1=2102400\n\n# num of blocks before coinbase UTXO can be spent\n# MaturityCoinbase=240\n\n# num of blocks before non-coinbase UTXO can be spent\n# MaturityStd=0\n\n# Max block body size [bytes]\n# MaxBodySize=0x100000\n\n# Desired rate of generated blocks [seconds]\n# DesiredRate_s=60\n\n# num of blocks in the window for the mining difficulty adjustment\n# DifficultyReviewWindow=1440\n\n# Block timestamp tolerance [seconds]\n# TimestampAheadThreshold_s=7200\n\n# How many blocks are considered in calculating the timestamp median\n# WindowForMedian=25\n\n# set to allow regular (non-coinbase) UTXO to have non-confidential signature\n# AllowPublicUtxos=0\n\n# Don't verify PoW. Mining is simulated by the timer\n# FakePoW=0\n"}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"rules","depth":3,"text":"Rules"}]}},"_type":"markdown","_id":"content:docs:dev:guides:consensus-rules.md","_source":"content","_file":"docs/dev/guides/consensus-rules.md","_extension":"md"},{"_path":"/docs/dev/guides/understanding-beam-logs","_dir":"guides","_draft":false,"_partial":false,"_locale":"","title":"Understanding Beam Logs","description":"","body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"understanding-beam-logs"},"children":[{"type":"text","value":"Understanding Beam Logs"}]},{"type":"element","tag":"h2","props":{"id":"understanding-beam-logs-1"},"children":[{"type":"text","value":"Understanding Beam logs"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Beam logs are files that record the events that occur within the Beam software and the Beam network. These files contain vital information that is very helpful to Beam support if you encounter any technical difficulties."}]},{"type":"element","tag":"h3","props":{"id":"beam-log-locations"},"children":[{"type":"text","value":"Beam Log Locations"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"{% hint style=\"info\" %}\n"},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Find CLI wallet and Node logs in the same folder as the binaries."}]},{"type":"text","value":"\n{% endhint %}"}]},{"type":"element","tag":"table","props":{},"children":[{"type":"element","tag":"thead","props":{},"children":[{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"th","props":{},"children":[{"type":"text","value":"Operating System"}]},{"type":"element","tag":"th","props":{},"children":[{"type":"text","value":"Desktop Wallet Log Location"}]}]}]},{"type":"element","tag":"tbody","props":{},"children":[{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"Mac"}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"/Users/{your_user_name}/Library/Application Support/Beam Wallet/"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"Windows"}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"\\Users\\{your_user_name}\\AppData\\Local\\Beam Wallet"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"Linux"}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"/home/{your_user_name}/.local/share/Beam Wallet"}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"For a complete list of file locations see "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":":ref: Files and Locations"}]}]},{"type":"element","tag":"h3","props":{"id":"node-logs"},"children":[{"type":"text","value":"Node Logs"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Each log starts with the Rules Signature. Rules Signature is the hash of the Consensus Rules and must be compatible to connect with your desired network. Consensus Rules for Testnet and Mainnet logs are different. View the relevant Rules Signature for each network here "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":":ref: rules_signature"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Beam logs have a simple structure. The first field is the severity level, followed by a timestamp and log message:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Log Severity +——————–+—————–+ | I | Info | +——————–+—————–+ | W | Warning | +——————–+—————–+ | E | Error | +——————–+—————–+ | D | Debug | +——————–+—————–+"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The sample below shows the start of a new node:"}]},{"type":"element","tag":"pre","props":{"code":"I 2018-12-31.16:48:58.838 Rules signature: 7e16d65b64ef2fbb\nI 2018-12-31.16:48:58.986 starting a node on 10000 port...\nI 2018-12-31.16:48:58.996 Node ID=5c8f92a1cfaee337\nI 2018-12-31.16:48:58.996 Initial Tip: 0-0000000000000000\nI 2018-12-31.16:48:58.996 Requesting block 0-0000000000000000\nI 2018-12-31.16:48:58.997 PI 0000000000000000--0.0.0.0 New\nI 2018-12-31.16:48:58.997 PI 0000000000000000--0.0.0.0 Address changed to 23.239.24.209:8201\nI 2018-12-31.16:48:58.999 stratum server listens to 0.0.0.0:10002\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"I 2018-12-31.16:48:58.838 Rules signature: 7e16d65b64ef2fbb\nI 2018-12-31.16:48:58.986 starting a node on 10000 port...\nI 2018-12-31.16:48:58.996 Node ID=5c8f92a1cfaee337\nI 2018-12-31.16:48:58.996 Initial Tip: 0-0000000000000000\nI 2018-12-31.16:48:58.996 Requesting block 0-0000000000000000\nI 2018-12-31.16:48:58.997 PI 0000000000000000--0.0.0.0 New\nI 2018-12-31.16:48:58.997 PI 0000000000000000--0.0.0.0 Address changed to 23.239.24.209:8201\nI 2018-12-31.16:48:58.999 stratum server listens to 0.0.0.0:10002\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In this case, the node connects to the first peer, "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"23.239.24.209:8201"}]},{"type":"text","value":", and downloads the initial Tip at "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"height 0"}]},{"type":"text","value":". It then requests the matching block. In this specific example, the node also starts the Stratum server."}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"understanding-beam-logs-1","depth":2,"text":"Understanding Beam logs","children":[{"id":"beam-log-locations","depth":3,"text":"Beam Log Locations"},{"id":"node-logs","depth":3,"text":"Node Logs"}]}]}},"_type":"markdown","_id":"content:docs:dev:guides:understanding-beam-logs.md","_source":"content","_file":"docs/dev/guides/understanding-beam-logs.md","_extension":"md"},{"_path":"/docs/dev/readme","_dir":"dev","_draft":false,"_partial":false,"_locale":"","title":"Getting started","description":"","body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"getting-started"},"children":[{"type":"text","value":"Getting started"}]},{"type":"element","tag":"h2","props":{"id":"welcome-to-beam-developer-portal"},"children":[{"type":"text","value":"Welcome to Beam Developer Portal"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"mark","props":{"style":"color:red;"},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"NOTE: Beam Developer Portal is currently under construction and is subject to changes"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Beam is a confidential, scalable cryptocurrency and DeFi platform designed entirely in C++. Since its inception in 2018, Beam has undergone significant development and growth, becoming a large and intricate project."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This developer portal will provide comprehensive information about the development of both Beam and Smart Contracts (also known as Shaders) on the Beam blockchain but also includes tutorials to assist developers in creating these features."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Below are some key resources that you may find essential in your journey:"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW","rel":["nofollow"]},"children":[{"type":"text","value":"Beam Source Code"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://t.me/beamdevsupport","rel":["nofollow"]},"children":[{"type":"text","value":"Developer Support Channel on Telegram"}]},{"type":"text","value":": for any questions you might have along the way."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"guides/building-beam"},"children":[{"type":"text","value":"Building Beam"}]},{"type":"text","value":": covers the process of building all Beam components from the source files."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Topics covered will include:"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"./#core-technology-overview"},"children":[{"type":"text","value":"Core Technology Overview"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"./#confidential-assets"},"children":[{"type":"text","value":"Confidential Assets"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"./#smart-contracts"},"children":[{"type":"text","value":"Smart Contracts (aka Shaders)"}]},{"type":"text","value":" "}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"./#wallet-api"},"children":[{"type":"text","value":"Wallet API (and integration guides)"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"./#web-wallet"},"children":[{"type":"text","value":"Web Wallet "}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"./#desktop-wallet"},"children":[{"type":"text","value":"Desktop Wallet"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"./#node"},"children":[{"type":"text","value":"Node"}]}]}]},{"type":"element","tag":"h3","props":{"id":"core-technology-overview"},"children":[{"type":"text","value":"Core Technology Overview"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In the beginning, Beam was originally designed as an implementation of the "},{"type":"element","tag":"a","props":{"href":"beam-technology/mimblewimble"},"children":[{"type":"text","value":"Mimblewimble "}]},{"type":"text","value":"("},{"type":"element","tag":"a","props":{"href":"https://docs.beam.mw/Mimblewimble.pdf","rel":["nofollow"]},"children":[{"type":"text","value":"original whitepaper"}]},{"type":"text","value":") protocol. Since then, Beam version 5.0 included support for a "},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/wiki/Lelantus-MW","rel":["nofollow"]},"children":[{"type":"text","value":"Lelantus"}]},{"type":"text","value":" shielded pool which became the "},{"type":"element","tag":"a","props":{"href":"beam-technology/lelantusmw"},"children":[{"type":"text","value":"LelantusMW"}]},{"type":"text","value":" protocol that is the core of Beam's Privacy Layer one."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The Beam network uses the "},{"type":"element","tag":"a","props":{"href":"https://blockonomi.com/dandelion-protocol/","rel":["nofollow"]},"children":[{"type":"text","value":"Dandelion protocol"}]},{"type":"text","value":", merging non-interactive transactions along the stem phase. Additional technical information regarding this implementation can be found "},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/wiki/Transaction-graph-obfuscation","rel":["nofollow"]},"children":[{"type":"text","value":"here"}]},{"type":"text","value":". "}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Beam also features:"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"beam-technology/atomic-swaps"},"children":[{"type":"text","value":"Atomic Swaps"}]},{"type":"text","value":": Allows the exchange of Beam for Bitcoin, Ethereum, and several other currencies without needing a trusted third party."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Laser Beam: A direct payment channel implementation similar to those used in the "},{"type":"element","tag":"a","props":{"href":"https://lightning.network/","rel":["nofollow"]},"children":[{"type":"text","value":"Lightning Network"}]},{"type":"text","value":". "}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Secure Bulletin Board System ("},{"type":"element","tag":"a","props":{"href":"beam-technology/sbbs"},"children":[{"type":"text","value":"SBBS"}]},{"type":"text","value":"): An encrypted, decentralized messaging system that broadcasts information and creates transactions between Beam wallets. "}]}]},{"type":"element","tag":"h3","props":{"id":"confidential-assets"},"children":[{"type":"text","value":"Confidential Assets"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Beam offers the creation of new asset types on the blockchain called Confidential Assets (CA). Each new CA is designated as a first-class citizen in Beam nodes due to the Layer 1 implementation and does not require using Smart Contracts like Ethereum ERC-20 tokens. "}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"This results in Beam tokens offering the same privacy and security as Beam coins"}]},{"type":"text","value":" while seamlessly integrating with Beam Wallets and dApps. Confidential Assets can be emitted manually or deployed via Smart Contracts within Beam Virtual Machine."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"For more information, refer to this guide's dedicated "},{"type":"element","tag":"a","props":{"href":"confidential-assets/"},"children":[{"type":"text","value":"Confidential Assets"}]},{"type":"text","value":" section."}]},{"type":"element","tag":"h3","props":{"id":"beam-shaders"},"children":[{"type":"text","value":"Beam Shaders"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Beam version 6.0 included a tweaked BVM to offer Smart Contract support, aka Beam Shaders. Beam Shaders offers a flexible Smart Contract development due to the BVM’s native operating of WebAssembly compatible langues, i.e., C++, Rust, Go, etc."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Beam Shaders, BVM, and all related tools are the pillars of "},{"type":"element","tag":"a","props":{"href":"using-beam-shaders"},"children":[{"type":"text","value":"Beam’s Confidential DeFi Platform"}]},{"type":"text","value":"."}]},{"type":"element","tag":"h3","props":{"id":"wallet-api"},"children":[{"type":"text","value":"Wallet API"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Beam’s robust Wallet API facilitates integration with exchanges, payment services, and third-party applications. While other networks offer APIs directly from the node, Beam API is coded directly into the Beam wallet. Using a wallet and secret keys ensures sensitive information remains secure without compromising integration with the Beam network."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"For more information regarding Wallet API, refer to this "},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/wiki/Beam-wallet-protocol-API","rel":["nofollow"]},"children":[{"type":"text","value":"Beam wiki"}]},{"type":"text","value":"."}]},{"type":"element","tag":"h3","props":{"id":"web-wallet"},"children":[{"type":"text","value":"Web Wallet"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Beam offers a simplified version of the Beam Desktop Wallet in a web wallet metamask that runs in the background of "},{"type":"element","tag":"a","props":{"href":"https://chrome.google.com/webstore/search/beam","rel":["nofollow"]},"children":[{"type":"text","value":"Google Chrome"}]},{"type":"text","value":". The Beam Web Wallet allows users to store, send and receive Beam coins but does not currently offer Atomic Swaps or dApp support. "}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"All wallet balances will be reflected accurately across all devices connected with your seed phrase (Desktop wallet, Mobile wallet, Web Wallet, etc.). However, web wallet metadata is not available for export. "}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Refer to this "},{"type":"element","tag":"a","props":{"href":"http://localhost:5000/o/-M_G-3uaAbZMXViHLVZl/s/PPXXGuwTXZfforCZnW03/","rel":["nofollow"]},"children":[{"type":"text","value":"web wallet guide"}]},{"type":"text","value":" for more information on getting started."}]},{"type":"element","tag":"h3","props":{"id":"desktop-wallet"},"children":[{"type":"text","value":"Desktop Wallet"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The Beam Desktop Wallet offers advanced privacy and security features in a user-friendly interface that allows users to hold, send or receive Beam, BeamX coins, and other confidential assets. The desktop wallet ("},{"type":"element","tag":"a","props":{"href":"https://beam.mw/downloads/mainnet-mac","rel":["nofollow"]},"children":[{"type":"text","value":"currently version 7.3"}]},{"type":"text","value":") is available on Mac, Windows, and Linux platforms and provides access to Beam’s advanced features like dApps, and Atomic swaps."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Refer to our "},{"type":"element","tag":"a","props":{"href":"http://localhost:5000/o/-M_G-3uaAbZMXViHLVZl/s/-MaSm2QyXLRMULOUF0cE/","rel":["nofollow"]},"children":[{"type":"text","value":"desktop wallet guide"}]},{"type":"text","value":" for more information!"}]},{"type":"element","tag":"h3","props":{"id":"node"},"children":[{"type":"text","value":"Node"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Beam Node is an essential component of the Beam blockchain. Each individual node creates a peer-to-peer network that validates transactions and blocks on the blockchain. Whether mining or validating nodes, each serves a crucial role in maintaining the integrity of the Beam Network."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Refer to "},{"type":"element","tag":"a","props":{"href":"http://localhost:5000/o/-M_G-3uaAbZMXViHLVZl/s/-MahNa0IaGxTr8GkB5rz/","rel":["nofollow"]},"children":[{"type":"text","value":"this guide"}]},{"type":"text","value":" for more information on creating your own node within the Beam network."}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"welcome-to-beam-developer-portal","depth":2,"text":"Welcome to Beam Developer Portal","children":[{"id":"core-technology-overview","depth":3,"text":"Core Technology Overview"},{"id":"confidential-assets","depth":3,"text":"Confidential Assets"},{"id":"beam-shaders","depth":3,"text":"Beam Shaders"},{"id":"wallet-api","depth":3,"text":"Wallet API"},{"id":"web-wallet","depth":3,"text":"Web Wallet"},{"id":"desktop-wallet","depth":3,"text":"Desktop Wallet"},{"id":"node","depth":3,"text":"Node"}]}]}},"_type":"markdown","_id":"content:docs:dev:README.md","_source":"content","_file":"docs/dev/README.md","_extension":"md"},{"_path":"/docs/dev/running-local-blockchain","_dir":"dev","_draft":false,"_partial":false,"_locale":"","title":"Running local blockchain","description":"In this tutorial we will explain how to run local blockchain. It will be extremely useful for testing your dapps locally, before deplying them to public networks","body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"running-local-blockchain"},"children":[{"type":"text","value":"Running local blockchain"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In this tutorial we will explain how to run local blockchain. It will be extremely useful for testing your dapps locally, before deplying them to public networks"}]},{"type":"element","tag":"h3","props":{"id":"download-node-and-wallet"},"children":[{"type":"text","value":"Download node and wallet "}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Create an empty folder (called dappnet in our examples) and download the binaries for the node and CLI wallet from "},{"type":"element","tag":"a","props":{"href":"https://beam.mw/downloads/dappnet","rel":["nofollow"]},"children":[{"type":"text","value":"beam website"}]}]},{"type":"element","tag":"h3","props":{"id":"initialize-wallet"},"children":[{"type":"text","value":"Initialize wallet "}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"First, let's change the wallet configuration file to make everything easy and seamless when we run it later. Edit the beam-wallet.cfg file and set the following flags:"}]},{"type":"element","tag":"pre","props":{"code":"\n# General options:\n################################################################################\n\n# log level [info|debug|verbose]\nlog_level=debug\n\n# file log level [info|debug|verbose]\n# file_log_level=debug\n\n# old logs cleanup period (days)\n# log_cleanup_days=5\n\n################################################################################\n# Wallet options:\n################################################################################\n\n# password for the wallet\npass=123\n\n# phrase to generate secret key according to BIP-39.\n# seed_phrase=\n\n# address of node\nnode_addr=127.0.0.1:8100\n\n# path to wallet file\nwallet_path=wallet.db\n\nMaturity.Coinbase=0\n\n# command to execute [new_addr|send|receive|listen|init|info|export_miner_key|export_owner_key|generate_phrase]\n# command=listen\n\n\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"\n# General options:\n################################################################################\n\n# log level [info|debug|verbose]\nlog_level=debug\n\n# file log level [info|debug|verbose]\n# file_log_level=debug\n\n# old logs cleanup period (days)\n# log_cleanup_days=5\n\n################################################################################\n# Wallet options:\n################################################################################\n\n# password for the wallet\npass=123\n\n# phrase to generate secret key according to BIP-39.\n# seed_phrase=\n\n# address of node\nnode_addr=127.0.0.1:8100\n\n# path to wallet file\nwallet_path=wallet.db\n\nMaturity.Coinbase=0\n\n# command to execute [new_addr|send|receive|listen|init|info|export_miner_key|export_owner_key|generate_phrase]\n# command=listen\n\n\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"{% hint style=\"info\" %}\nNote the Maturity.Coinbase=0 flag. It means that you can spend coinbase rewards immediately (unlike the 60 block lockup in mainnet) It is useful for testing in a local environment, since you do not have to wait for your mined rewards to before available\n{% endhint %}"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Now let's move on to wallet initialization. Run"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"beam-wallet-dappnet.exe init"}]},{"type":"text","value":"  (or ./beam-wallet-dappnet on Mac)"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Save the generated seed phase somewhere in a text file ( we might need it later)"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Now print the owner key by running:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"beam-wallet-dappnet.exe export_owner_key"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"And last generate the mining key by running"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"beam-wallet-dappnet.exe export_miner_key --subkey=1"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Save both keys in the same file as the seed phrase"}]},{"type":"element","tag":"h3","props":{"id":"initializing-the-node"},"children":[{"type":"text","value":"Initializing the Node"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Before we start configuring the node, download sample Beam treasury file "},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/blob/master/treasury.bin","rel":["nofollow"]},"children":[{"type":"text","value":"treasury.bin"}]},{"type":"text","value":", and copy it to the same folder as the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"beam-node"}]},{"type":"text","value":" binary."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Now, open beam-node.cfg file in a text editor and set the following flags:"}]},{"type":"element","tag":"pre","props":{"code":"################################################################################\n# General options:\n################################################################################\n\n# port to start server on\nport=8100\n\n# log level [info|debug|verbose]\nlog_level=debug\n\n# file log level [info|debug|verbose]\nfile_log_level=debug\n\n# old logs cleanup period (days)\n# log_cleanup_days=5\n\n################################################################################\n# Node options:\n################################################################################\n\n# node storage path\n# storage=node.db\n\n# nodes to connect to !!! MUST BE EMPTY !!!\n# peer=\n\n# port to start stratum server on\n# stratum_port=0\n\n# path to stratum server api keys file, and tls certificate and private key\n# stratum_secrets_path=.\n\n# Enforce re-synchronization (soft reset)\n# resync=0\n\n# Owner viewer key\nowner_key=<your owner key>\n\n# Standalone miner key\nminer_key=<your miner key>\n\n# password for keys\npass=123\n\n# Fork1 height\n# Fork1=\n\n# Path to treasury for testing\ntreasury_path=treasury.bin\n\n# Enables the node to produce blocks\nmining_threads=1\n\nMaturity.Coinbase=0\n\n\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"################################################################################\n# General options:\n################################################################################\n\n# port to start server on\nport=8100\n\n# log level [info|debug|verbose]\nlog_level=debug\n\n# file log level [info|debug|verbose]\nfile_log_level=debug\n\n# old logs cleanup period (days)\n# log_cleanup_days=5\n\n################################################################################\n# Node options:\n################################################################################\n\n# node storage path\n# storage=node.db\n\n# nodes to connect to !!! MUST BE EMPTY !!!\n# peer=\n\n# port to start stratum server on\n# stratum_port=0\n\n# path to stratum server api keys file, and tls certificate and private key\n# stratum_secrets_path=.\n\n# Enforce re-synchronization (soft reset)\n# resync=0\n\n# Owner viewer key\nowner_key=<your owner key>\n\n# Standalone miner key\nminer_key=<your miner key>\n\n# password for keys\npass=123\n\n# Fork1 height\n# Fork1=\n\n# Path to treasury for testing\ntreasury_path=treasury.bin\n\n# Enables the node to produce blocks\nmining_threads=1\n\nMaturity.Coinbase=0\n\n\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"{% hint style=\"warning\" %}"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Make sure to set miner and owner keys to those generated by your wallet"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Make sure peer list is empty (to avoid accidental connections to other nodes)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Check that mining_threads flag is set to 1\n{% endhint %}"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"We are now ready to run the node using the command:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"beam-node-dappnet.exe"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Sample output should look something like this"}]},{"type":"element","tag":"figure","props":{},"children":[{"type":"element","tag":"img","props":{"src":".gitbook/assets/image.png","alt":""},"children":[]},{"type":"element","tag":"figcaption","props":{},"children":[]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Wait for about 30 seconds to make sure new blocks are produced. A new block shoud appear every 15 seconds or so"}]},{"type":"element","tag":"figure","props":{},"children":[{"type":"element","tag":"img","props":{"src":".gitbook/assets/image (3).png","alt":""},"children":[]},{"type":"element","tag":"figcaption","props":{},"children":[]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Synchronizing the wallet"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In another command line (or Terminal) window, run the CLI wallet with the following command:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"beam-wallet-dappnet.exe listen"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This will synchronize the wallet state with the blockchain. Your output should read something like:"}]},{"type":"element","tag":"figure","props":{},"children":[{"type":"element","tag":"img","props":{"src":".gitbook/assets/image (24).png","alt":""},"children":[]},{"type":"element","tag":"figcaption","props":{},"children":[]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Stop the wallet (by clicking Ctrl + C) and check your current balance by running:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"beam-wallet-dappnet.exe info"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"You should see the mined BEAM coins in your wallet "}]},{"type":"element","tag":"figure","props":{},"children":[{"type":"element","tag":"img","props":{"src":".gitbook/assets/image (26).png","alt":""},"children":[]},{"type":"element","tag":"figcaption","props":{},"children":[]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"You now have a local network!"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"{% hint style=\"info\" %}\nFor a full reference on Beam CLI wallet see the "},{"type":"element","tag":"a","props":{"href":"https://beamx.gitbook.io/cli-guide/","rel":["nofollow"]},"children":[{"type":"text","value":"CLI Wallet Guide"}]},{"type":"text","value":"\n{% endhint %}"}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"download-node-and-wallet","depth":3,"text":"Download node and wallet "},{"id":"initialize-wallet","depth":3,"text":"Initialize wallet "},{"id":"initializing-the-node","depth":3,"text":"Initializing the Node"}]}},"_type":"markdown","_id":"content:docs:dev:running-local-blockchain.md","_source":"content","_file":"docs/dev/running-local-blockchain.md","_extension":"md"},{"_path":"/docs/dev/shader-sdk-mac","_dir":"dev","_draft":false,"_partial":false,"_locale":"","title":"Shader SDK (MAC)","description":"In this tutorial we will show how to setup Beam Shader SDK on Mac OS","body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"shader-sdk-mac"},"children":[{"type":"text","value":"Shader SDK (MAC)"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In this tutorial we will show how to setup Beam Shader SDK on Mac OS"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"{% hint style=\"warning\" %}\nThe Shader SDK's current version can be characterized as an "},{"type":"element","tag":"em","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"early developer preview"}]}]},{"type":"text","value":", with a high possibility of encountering unusual issues and bugs.\n{% endhint %}"}]},{"type":"element","tag":"h3","props":{"id":"prerequisites"},"children":[{"type":"text","value":"Prerequisites"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"You will  need a Python 3.x installed and available in the path (check by typing 'python' in the command line)"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In addition, you will need XCode Command line tools. The command to install those is:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"xcode-select --install"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"But please consult with official documentation for more details."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"You will also need the following packages (I used brew to install those):"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"brew install openssl cmake ninja"}]},{"type":"text","value":"\\"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Also, set the OPENSSL_ROOT_DIR environment variable as follows:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"export OPENSSL_ROOT_DIR=\"/usr/local/opt/openssl@1.1\""}]}]},{"type":"element","tag":"h3","props":{"id":"building-shader-sdk"},"children":[{"type":"text","value":"Building Shader SDK"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Clone Shader SDK repository from here: "},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/shader-sdk","rel":["nofollow"]},"children":[{"type":"text","value":"https://github.com/BeamMW/shader-sdk"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Open the Terminal application"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Change directory to the location of the shader-sdk and run: "}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"./shade init"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This will operation will install and build all the necessary components."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"{% hint style=\"warning\" %}\nHere comes a small song and dance part that has to do with the fact that shader-sdk is still very raw"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Inside the shader-sdk folder create a 'bin' folder"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Copy shader-sdk/build/host/beam/bvm/sid_generator/generate-sid to the newly created bin folder\n{% endhint %}"}]}]},{"type":"element","tag":"h3","props":{"id":"creating-a-new-shader-project"},"children":[{"type":"text","value":"Creating a new Shader Project"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Open a Terminal and create a new folder for your Shader project. We will use 'vault' in our example"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"2. Set the following environment variables to point to the location of you shader-sdk and wasi-sdk:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"export BEAM_SHADER_SDK=~/Code/shader-sdk"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"export WASI_SDK_PREFIX=~/Code/shader-sdk/wasi-sdk-14.0"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"3. Run the following command: "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"shade create_project <project name>"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In our case:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"~/Code/shader-sdk/shade create_project vault"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"{% hint style=\"warning\" %}\n"},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Here comes another issue. Your Mac is very likely to warn you about the fact that generate-sid application was not created by a certified developer"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"","src":".gitbook/assets/Screen%20Shot%202022-11-19%20at%2014.27.00%20(1).png"},"children":[]},{"type":"text","value":"\n{% endhint %}"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"{% hint style=\"warning\" %}\n"},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"To avoid this you will need to allow running this script anyway from the Settings -> Security & Privacy dialogue and then rerunning the command"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"","src":".gitbook/assets/Screen%20Shot%202022-11-19%20at%2014.27.55.png"},"children":[]},{"type":"text","value":"\n{% endhint %}"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This will initialize the structure of the Shader project"}]},{"type":"element","tag":"h3","props":{"id":"building-the-shader-project"},"children":[{"type":"text","value":"Building the Shader Project"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Inside the project folder run the following command:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"cmake -G \"Ninja\" -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE=$WASI_SDK_PREFIX/share/cmake/wasi-sdk.cmake -DCMAKE_SYSROOT=$WASI_SDK_PREFIX/share/wasi-sysroot -DWASI_SDK_PREFIX=$WASI_SDK_PREFIX -DCMAKE_CXX_COMPILER_FORCED=True -DCMAKE_C_COMPILER_FORCED=True -DCMAKE_SYSTEM_NAME=\"WASI\""}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Then run:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"ninja"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"And the .wasm files with compiled contracts will be generated in the /shaders folder"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Now you are ready to start coding your Shader!"}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"prerequisites","depth":3,"text":"Prerequisites"},{"id":"building-shader-sdk","depth":3,"text":"Building Shader SDK"},{"id":"creating-a-new-shader-project","depth":3,"text":"Creating a new Shader Project"},{"id":"building-the-shader-project","depth":3,"text":"Building the Shader Project"}]}},"_type":"markdown","_id":"content:docs:dev:shader-sdk-mac.md","_source":"content","_file":"docs/dev/shader-sdk-mac.md","_extension":"md"},{"_path":"/docs/dev/shader-sdk-win","_dir":"dev","_draft":false,"_partial":false,"_locale":"","title":"Shader SDK (WIN)","description":"This tutorial demonstrates How-to set up Beam Shader SDK on the Windows operating system.","body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"shader-sdk-win"},"children":[{"type":"text","value":"Shader SDK (WIN)"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This tutorial demonstrates How-to set up Beam Shader SDK on the Windows operating system."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"{% hint style=\"warning\" %}\nThe Shader SDK's current version can be characterized as an "},{"type":"element","tag":"em","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"early developer preview"}]}]},{"type":"text","value":", with a high possibility of encountering unusual issues and bugs.\n{% endhint %}"}]},{"type":"element","tag":"h3","props":{"id":"prerequisites"},"children":[{"type":"text","value":"Prerequisites"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"To follow along, make sure you have "},{"type":"element","tag":"a","props":{"href":"https://visualstudio.microsoft.com/","rel":["nofollow"]},"children":[{"type":"text","value":"Microsoft Visual Studio"}]},{"type":"text","value":" installed. For this tutorial, I am using 2022 edition, but the community edition will work."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Additionally, "},{"type":"element","tag":"a","props":{"href":"https://www.python.org/downloads/","rel":["nofollow"]},"children":[{"type":"text","value":"Python 3.x"}]},{"type":"text","value":" must be installed and available in the systems path. Verify Python is installed by entering  "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"python"}]},{"type":"text","value":" in the command line."}]},{"type":"element","tag":"h3","props":{"id":"building-shader-sdk"},"children":[{"type":"text","value":"Building Shader SDK"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/shader-sdk","rel":["nofollow"]},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Clone Shader SDK repository"}]}]},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"."}]},{"type":"text","value":"  "}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Open Developer Command Prompt for VS. This can be done from either Tools Menu within the VS IDE or by finding an entry in the Start menu items"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Change directory to the location of the shader-sdk and run: "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"shade init"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This will operation will install and build all the necessary components."}]},{"type":"element","tag":"figure","props":{},"children":[{"type":"element","tag":"img","props":{"src":".gitbook/assets/image (8).png","alt":""},"children":[]},{"type":"element","tag":"figcaption","props":{},"children":[]}]},{"type":"element","tag":"h3","props":{"id":"creating-a-new-shader-project"},"children":[{"type":"text","value":"Creating a new Shader Project"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Launch the Command Prompt, creating a new folder for your Shader project. We will use the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"vault"}]},{"type":"text","value":" folder for this tutorial:"}]}]},{"type":"element","tag":"figure","props":{},"children":[{"type":"element","tag":"img","props":{"src":".gitbook/assets/image (19).png","alt":""},"children":[]},{"type":"element","tag":"figcaption","props":{},"children":[]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"2. Locate "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"shader-sdk"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"wasi-sdk"}]},{"type":"text","value":"folders, and enter the following:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"set BEAM_SHADER_SDK=c:\\Code\\shader-sdk"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"set WASI_SDK_PREFIX=C:\\Code\\shader-sdk\\wasi-sdk-14.0"}]}]},{"type":"element","tag":"ol","props":{"start":3},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"To initialize the structure of your Shader, enter  "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"shade create_project <project name>"}]},{"type":"text","value":":"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"For our "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<project name>"}]},{"type":"text","value":", use "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"vault"}]},{"type":"text","value":", i.e.,:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"c:\\Code\\shader-sdk\\shade create_project vault"}]}]},{"type":"element","tag":"figure","props":{},"children":[{"type":"element","tag":"img","props":{"src":".gitbook/assets/image (4).png","alt":""},"children":[]},{"type":"element","tag":"figcaption","props":{},"children":[]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"If initialized correctly, your Shader project structure should resemble the following:"}]},{"type":"element","tag":"figure","props":{},"children":[{"type":"element","tag":"img","props":{"src":".gitbook/assets/image (1).png","alt":""},"children":[]},{"type":"element","tag":"figcaption","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Vault project structure"}]}]}]},{"type":"element","tag":"h3","props":{"id":"building-the-shader-project"},"children":[{"type":"text","value":"Building the Shader Project"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In Visual Studio, locate "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Open A Local Folder"}]},{"type":"text","value":" from the "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Start"}]},{"type":"text","value":" menu:"}]},{"type":"element","tag":"figure","props":{},"children":[{"type":"element","tag":"img","props":{"src":".gitbook/assets/image (23).png","alt":""},"children":[]},{"type":"element","tag":"figcaption","props":{},"children":[]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Navigate to your Shader project folder, click "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Select Folder"}]},{"type":"text","value":" to initialize a "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"CMake project"}]},{"type":"text","value":", creating "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"CMakeLists.txt"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"CMakeLists.json"}]},{"type":"text","value":" files will be seen in the "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Solution Explorer"}]},{"type":"text","value":" for your Shader project:"}]},{"type":"element","tag":"figure","props":{},"children":[{"type":"element","tag":"img","props":{"src":".gitbook/assets/image (10).png","alt":""},"children":[]},{"type":"element","tag":"figcaption","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Vault Solution Explorer"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Select "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"wasm32-Release"}]},{"type":"text","value":" build configuration:"}]},{"type":"element","tag":"figure","props":{},"children":[{"type":"element","tag":"img","props":{"src":".gitbook/assets/image (13).png","alt":""},"children":[]},{"type":"element","tag":"figcaption","props":{},"children":[]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This will build "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":".wasm"}]},{"type":"text","value":" files following this folder structure:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"C:\\Code\\vault\\build\\wasi\\shaders"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"{% hint style=\"warning\" %}\nIf you are encountering errors, try the following before reaching out to support:"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Open Windows Explorer and delete the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"out"}]},{"type":"text","value":" folder."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"In the  "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Project"}]},{"type":"text","value":" menu, select "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Delete Cache and Reconfigure."}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Rebuild "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"wasm32-Release"}]},{"type":"text","value":" project.\n{% endhint %}"}]}]},{"type":"element","tag":"figure","props":{},"children":[{"type":"element","tag":"img","props":{"src":".gitbook/assets/image (25).png","alt":""},"children":[]},{"type":"element","tag":"figcaption","props":{},"children":[]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"You can begin coding your Shader project!"}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"prerequisites","depth":3,"text":"Prerequisites"},{"id":"building-shader-sdk","depth":3,"text":"Building Shader SDK"},{"id":"creating-a-new-shader-project","depth":3,"text":"Creating a new Shader Project"},{"id":"building-the-shader-project","depth":3,"text":"Building the Shader Project"}]}},"_type":"markdown","_id":"content:docs:dev:shader-sdk-win.md","_source":"content","_file":"docs/dev/shader-sdk-win.md","_extension":"md"},{"_path":"/docs/dev/summary","_dir":"dev","_draft":false,"_partial":false,"_locale":"","title":"Table of contents","description":"","body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"table-of-contents"},"children":[{"type":"text","value":"Table of contents"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"readme"},"children":[{"type":"text","value":"Getting started"}]}]}]},{"type":"element","tag":"h2","props":{"id":"beam-technology"},"children":[{"type":"text","value":"Beam Technology"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"beam-technology/mimblewimble"},"children":[{"type":"text","value":"Mimblewimble"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"beam-technology/lelantusmw"},"children":[{"type":"text","value":"LelantusMW"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"beam-technology/atomic-swaps"},"children":[{"type":"text","value":"Atomic Swaps"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"beam-technology/laser-beam"},"children":[{"type":"text","value":"Laser Beam"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"beam-technology/sbbs"},"children":[{"type":"text","value":"SBBS"}]}]}]},{"type":"element","tag":"h2","props":{"id":"beam-platform"},"children":[{"type":"text","value":"Beam Platform "},{"type":"element","tag":"a","props":{"href":"#beam-defi","id":"beam-defi"},"children":[]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"beam-platform-architecture"},"children":[{"type":"text","value":"Beam Platform Architecture"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"confidential-assets/readme"},"children":[{"type":"text","value":"Confidential Assets"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"confidential-assets/implementation-of-confidential-assets"},"children":[{"type":"text","value":"Implementing Confidential Assets"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"confidential-assets/using-confidential-assets/readme"},"children":[{"type":"text","value":"Using Confidential Assets"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"confidential-assets/using-confidential-assets/asset-metadata-descriptor"},"children":[{"type":"text","value":"Asset Metadata Descriptor"}]}]}]}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"beam-virtual-machine"},"children":[{"type":"text","value":"Beam Virtual Machine"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"beam-shaders/readme"},"children":[{"type":"text","value":"Beam Shaders"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"beam-shaders/using-beam-shaders-with-cli-wallet-masternet"},"children":[{"type":"text","value":"Using Beam Shaders with CLI Wallet (masternet)"}]}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"using-beam-shaders-with-cli-wallet"},"children":[{"type":"text","value":"Using Beam Shaders with CLI wallet"}]}]}]},{"type":"element","tag":"h2","props":{"id":"tutorials"},"children":[{"type":"text","value":"tutorials"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"using-beam-shaders"},"children":[{"type":"text","value":"Using Beam Shaders"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"shader-sdk-win"},"children":[{"type":"text","value":"Shader SDK (WIN)"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"shader-sdk-mac"},"children":[{"type":"text","value":"Shader SDK (MAC)"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"running-local-blockchain"},"children":[{"type":"text","value":"Running local blockchain"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"developing-beam-dapp-ui"},"children":[{"type":"text","value":"Developing Beam DApp UI"}]}]}]},{"type":"element","tag":"h2","props":{"id":"beam-dapps"},"children":[{"type":"text","value":"Beam DAPPs "},{"type":"element","tag":"a","props":{"href":"#beam-defi","id":"beam-defi"},"children":[]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"beam-dex"},"children":[{"type":"text","value":"Beam DEX"}]}]}]},{"type":"element","tag":"h2","props":{"id":"beam-wallets"},"children":[{"type":"text","value":"Beam Wallets"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"beam-wallets/desktop-wallet"},"children":[{"type":"text","value":"Desktop Wallet"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"beam-wallets/mobile-wallet"},"children":[{"type":"text","value":"Mobile Wallet"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"beam-wallets/web-wallet"},"children":[{"type":"text","value":"Web Wallet"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"beam-wallets/command-line-wallet"},"children":[{"type":"text","value":"Command Line Wallet"}]}]}]},{"type":"element","tag":"h2","props":{"id":"guides"},"children":[{"type":"text","value":"Guides"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"guides/building-beam"},"children":[{"type":"text","value":"Building Beam"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"guides/understanding-beam-logs"},"children":[{"type":"text","value":"Understanding Beam Logs"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"guides/consensus-rules"},"children":[{"type":"text","value":"Beam Consensus Rules"}]}]}]},{"type":"element","tag":"h2","props":{"id":"guidelines"},"children":[{"type":"text","value":"Guidelines"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"guidelines/untitled"},"children":[{"type":"text","value":"Contributor guidelines"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"guidelines/coding-guidelines"},"children":[{"type":"text","value":"Coding guidelines"}]}]}]},{"type":"element","tag":"h2","props":{"id":"beam-api"},"children":[{"type":"text","value":"Beam API"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/wiki/Beam-wallet-protocol-API","rel":["nofollow"]},"children":[{"type":"text","value":"Beam Wallet API"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/wiki/Beam-mining-protocol-API-(Stratum)","rel":["nofollow"]},"children":[{"type":"text","value":"Beam Mining API (Stratum)"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/wiki/Beam-Node-Explorer-API","rel":["nofollow"]},"children":[{"type":"text","value":"Beam Blockchain Explorer API"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/wiki/Exchange-Pool-integration-guide","rel":["nofollow"]},"children":[{"type":"text","value":"Beam Integration Guide"}]}]}]},{"type":"element","tag":"h2","props":{"id":"additonal-documentation"},"children":[{"type":"text","value":"Additonal Documentation"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://beamx.gitbook.io/faq/","rel":["nofollow"]},"children":[{"type":"text","value":"FAQ"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://beamx.gitbook.io/glossary/","rel":["nofollow"]},"children":[{"type":"text","value":"Glossary"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://beamx.gitbook.io/web-wallet-masternet/","rel":["nofollow"]},"children":[{"type":"text","value":"Web Wallet (Masternet)"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://beamx.gitbook.io/atomic-swaps-desktop-guide/-Ma18rFhhJ0iJaAAv2-M/","rel":["nofollow"]},"children":[{"type":"text","value":"Atomic Swaps Desktop Guide"}]}]}]},{"type":"element","tag":"hr","props":{},"children":[]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://documentation.beam.mw/","rel":["nofollow"]},"children":[{"type":"text","value":"Beam Documentation"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW","rel":["nofollow"]},"children":[{"type":"text","value":"Beam Github"}]}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"beam-technology","depth":2,"text":"Beam Technology"},{"id":"beam-platform","depth":2,"text":"Beam Platform "},{"id":"tutorials","depth":2,"text":"tutorials"},{"id":"beam-dapps","depth":2,"text":"Beam DAPPs "},{"id":"beam-wallets","depth":2,"text":"Beam Wallets"},{"id":"guides","depth":2,"text":"Guides"},{"id":"guidelines","depth":2,"text":"Guidelines"},{"id":"beam-api","depth":2,"text":"Beam API"},{"id":"additonal-documentation","depth":2,"text":"Additonal Documentation"}]}},"_type":"markdown","_id":"content:docs:dev:SUMMARY.md","_source":"content","_file":"docs/dev/SUMMARY.md","_extension":"md"},{"_path":"/docs/dev/using-beam-shaders-with-cli-wallet","_dir":"dev","_draft":false,"_partial":false,"_locale":"","title":"Using Beam Shaders with CLI wallet","description":"This document describes how to use Beam Shaders with CLI wallet running on a local network","body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"using-beam-shaders-with-cli-wallet"},"children":[{"type":"text","value":"Using Beam Shaders with CLI wallet"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"{% hint style=\"danger\" %}\nThis page is somewhat obsolete, and is replaced with "},{"type":"element","tag":"a","props":{"href":"using-beam-shaders"},"children":[{"type":"text","value":"Using Beam Shaders"}]},{"type":"text","value":" tutorial\n{% endhint %}"}]},{"type":"element","tag":"h3","props":{"id":"prerequisites"},"children":[{"type":"text","value":"Prerequisites"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Make sure you have "},{"type":"element","tag":"a","props":{"href":"broken-reference"},"children":[{"type":"text","value":"node running"}]},{"type":"text","value":" and connected to local network."},{"type":"element","tag":"br","props":{},"children":[]},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Notice:"}]},{"type":"text","value":" Shaders are applied after the third fork with height 1500. Therefore, for faster testing, we recommend to define lower heights using the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--Fork1"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--Fork2"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--Fork3"}]},{"type":"text","value":" attributes."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Create at least one Beam node[link] with "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--peer=<ip:port of the first node>"}]},{"type":"text","value":" for the transaction replication."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Make sure you have Beam "},{"type":"element","tag":"a","props":{"href":"beam-wallets/command-line-wallet"},"children":[{"type":"text","value":"CLI wallet connected to your Beam node"}]},{"type":"text","value":" or to one of the Beam bootstrap nodes."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"You must have funds in your wallet to pay the fee."}]}]},{"type":"element","tag":"h3","props":{"id":"shaders"},"children":[{"type":"text","value":"Shaders"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"There are two types of Shaders in Beam:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Contract Shader"}]},{"type":"text","value":" - implements Smart Contract functionality, is stored on the blockchain and are running on Beam nodes."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"App Shaders"}]},{"type":"text","value":" - implements Smart Contract API and is running in Beam wallet."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"All examples refer to a sample application 'mydapp' which has two"}]},{"type":"text","value":" "},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/tree/master/bvm/Shaders/vault","rel":["nofollow"]},"children":[{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Vault"}]}]},{"type":"text","value":" "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Shaders: App Shader(app.wasm) and Contract Shader(contract.wasm)."}]}]},{"type":"element","tag":"h3","props":{"id":"shader-api"},"children":[{"type":"text","value":"Shader API"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"First of all, you need to know the available actions of a contract. To see all commands supported by the App Shader enter the following command:"}]},{"type":"element","tag":"pre","props":{"code":"./beam-wallet-masternet shader --shader_app_file=mydapp/app.wasm -n <node>\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"./beam-wallet-masternet shader --shader_app_file=mydapp/app.wasm -n <node>\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"\nThe output is a json format line:"}]},{"type":"element","tag":"pre","props":{"code":"Shader output: {\"roles\": {\"manager\": {\"create\": {},\"destroy\": {\"cid\": \"ContractID\"},\"view\": {},\"view_logs\": {\"cid\": \"ContractID\"},\"view_accounts\": {\"cid\": \"ContractID\"},\"view_account\": {\"cid\": \"ContractID\",\"pubKey\": \"PubKey\"}},\"my_account\": {\"view\": {\"cid\": \"ContractID\"},\"get_key\": {\"cid\": \"ContractID\"},\"get_proof\": {\"cid\": \"ContractID\",\"aid\": \"AssetID\"},\"deposit\": {\"cid\": \"ContractID\",\"pkForeign\": \"PubKey\",\"bCoSigner\": \"uint32_t\",\"amount\": \"Amount\",\"aid\": \"AssetID\"},\"withdraw\": {\"cid\": \"ContractID\",\"pkForeign\": \"PubKey\",\"bCoSigner\": \"uint32_t\",\"amount\": \"Amount\",\"aid\": \"AssetID\"}}}}\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"Shader output: {\"roles\": {\"manager\": {\"create\": {},\"destroy\": {\"cid\": \"ContractID\"},\"view\": {},\"view_logs\": {\"cid\": \"ContractID\"},\"view_accounts\": {\"cid\": \"ContractID\"},\"view_account\": {\"cid\": \"ContractID\",\"pubKey\": \"PubKey\"}},\"my_account\": {\"view\": {\"cid\": \"ContractID\"},\"get_key\": {\"cid\": \"ContractID\"},\"get_proof\": {\"cid\": \"ContractID\",\"aid\": \"AssetID\"},\"deposit\": {\"cid\": \"ContractID\",\"pkForeign\": \"PubKey\",\"bCoSigner\": \"uint32_t\",\"amount\": \"Amount\",\"aid\": \"AssetID\"},\"withdraw\": {\"cid\": \"ContractID\",\"pkForeign\": \"PubKey\",\"bCoSigner\": \"uint32_t\",\"amount\": \"Amount\",\"aid\": \"AssetID\"}}}}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"\nFor convenience, let's put it this way:"}]},{"type":"element","tag":"pre","props":{"code":"{\n  \"roles\": {\n    \"manager\": {\n      \"create\": {},\n      \"destroy\": { \"cid\": \"ContractID\" },\n      \"view\": {},\n      \"view_logs\": { \"cid\": \"ContractID\" },\n      \"view_accounts\": { \"cid\": \"ContractID\" },\n      \"view_account\": { \"cid\": \"ContractID\", \"pubKey\": \"PubKey\" }\n    },\n    \"my_account\": {\n      \"view\": { \"cid\": \"ContractID\" },\n      \"get_key\": { \"cid\": \"ContractID\" },\n      \"get_proof\": { \"cid\": \"ContractID\", \"aid\": \"AssetID\" },\n      \"deposit\": {\n        \"cid\": \"ContractID\",\n        \"pkForeign\": \"PubKey\",\n        \"bCoSigner\": \"uint32_t\",\n        \"amount\": \"Amount\",\n        \"aid\": \"AssetID\"\n      },\n      \"withdraw\": {\n        \"cid\": \"ContractID\",\n        \"pkForeign\": \"PubKey\",\n        \"bCoSigner\": \"uint32_t\",\n        \"amount\": \"Amount\",\n        \"aid\": \"AssetID\"\n      }\n    }\n  }\n}\n","language":"json","meta":"","className":["language-json"]},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n  \"roles\": {\n    \"manager\": {\n      \"create\": {},\n      \"destroy\": { \"cid\": \"ContractID\" },\n      \"view\": {},\n      \"view_logs\": { \"cid\": \"ContractID\" },\n      \"view_accounts\": { \"cid\": \"ContractID\" },\n      \"view_account\": { \"cid\": \"ContractID\", \"pubKey\": \"PubKey\" }\n    },\n    \"my_account\": {\n      \"view\": { \"cid\": \"ContractID\" },\n      \"get_key\": { \"cid\": \"ContractID\" },\n      \"get_proof\": { \"cid\": \"ContractID\", \"aid\": \"AssetID\" },\n      \"deposit\": {\n        \"cid\": \"ContractID\",\n        \"pkForeign\": \"PubKey\",\n        \"bCoSigner\": \"uint32_t\",\n        \"amount\": \"Amount\",\n        \"aid\": \"AssetID\"\n      },\n      \"withdraw\": {\n        \"cid\": \"ContractID\",\n        \"pkForeign\": \"PubKey\",\n        \"bCoSigner\": \"uint32_t\",\n        \"amount\": \"Amount\",\n        \"aid\": \"AssetID\"\n      }\n    }\n  }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"As you can see above, there are two roles in this example: "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"manager"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"my_account"}]},{"type":"text","value":". Each role has its own actions with or without required attributes. In this example, role "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"manager"}]},{"type":"text","value":" has the following actions:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"create"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"destroy"}]},{"type":"text","value":", requires the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"cid"}]},{"type":"text","value":" attribute"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"view"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"view_logs"}]},{"type":"text","value":", requires the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"cid"}]},{"type":"text","value":" attribute"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"view_accounts"}]},{"type":"text","value":", requires the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"cid"}]},{"type":"text","value":" attribute"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"view_account"}]},{"type":"text","value":", requires "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"cid"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"pubKey"}]},{"type":"text","value":" attributes"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"em","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"cid"}]},{"type":"text","value":"(i.e. "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"contract id"}]},{"type":"text","value":"), is the frequently required attribute. We get it after our contract has been deployed. The same contract which has been deployed with different attributes, will have different values."}]}]},{"type":"element","tag":"h3","props":{"id":"commands"},"children":[{"type":"text","value":"Commands"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"All command start with "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"./beam-wallet-masternet shader"}]},{"type":"text","value":"."},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"\nThere are required flags that need to be passed to work with the contract:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--shader_app_file=<app.wasm>"}]},{"type":"text","value":" - for application shader"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--shader_contract_file=<contract.wasm>"}]},{"type":"text","value":" - for contract shader"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--shader_args=\"role=<role>,action=<action>\""}]},{"type":"text","value":" - shader arguments"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-n <node>"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Notice:"}]},{"type":"text","value":" "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"All arguments are passed separated by commas. For example:"}]}]},{"type":"element","tag":"pre","props":{"code":"--shader_args=\"role=manager,action=view\"\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"--shader_args=\"role=manager,action=view\"\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"If the action has additional attributes, they also are separated by commas:"}]}]},{"type":"element","tag":"pre","props":{"code":"--shader_args=\"role=manager,action=view_logs,cid=d9c5d1782b2d2b6f733486be480bb0d8bcf34d5fdc63bbac996ed76af541cc14\"\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"--shader_args=\"role=manager,action=view_logs,cid=d9c5d1782b2d2b6f733486be480bb0d8bcf34d5fdc63bbac996ed76af541cc14\"\n"}]}]},{"type":"element","tag":"h3","props":{"id":"deploy-contract"},"children":[{"type":"text","value":"Deploy contract"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"To work with the contract, it needs to be deployed. In our Vault example contract, the deployment corresponds to the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"manager"}]},{"type":"text","value":" role and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"create"}]},{"type":"text","value":" action. Based on our knowledge, we got the following command to "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"deploy contract"}]},{"type":"text","value":":"}]},{"type":"element","tag":"pre","props":{"code":"./beam-wallet-masternet shader --shader_app_file=mydapp/app.wasm --shader_args=\"role=manager,action=create\" --shader_contract_file=mydapp/contract.wasm -n <node>\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"./beam-wallet-masternet shader --shader_app_file=mydapp/app.wasm --shader_args=\"role=manager,action=create\" --shader_contract_file=mydapp/contract.wasm -n <node>\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Output example:"}]},{"type":"element","tag":"pre","props":{"code":"Creating new contract invocation tx on behalf of the shader\nContract ID: d9c5d1782b2d2b6f733486be480bb0d8bcf34d5fdc63bbac996ed76af541cc14\n        Comment: create Vault contract  Total fee: 1100000 GROTH\nI 2022-06-06.11:43:08.288 [ac09d5dc897647bf876b7d17d8219a77][1] Get proof for kernel: 6625e9f7756a98eb\nI 2022-06-06.11:43:08.289 Synchronizing with node: 100% (1/1)\nI 2022-06-06.11:43:08.289 Current state is 8-65a2ecdf447ad942\nI 2022-06-06.11:43:18.354 Sync up to 9-7d15da24d2717100\nI 2022-06-06.11:43:18.354 Synchronizing with node: 0% (0/2)\nI 2022-06-06.11:43:18.355 CoinID: Key=mine-1:1:1, Value=8000000000 Maturity=6 Spent, Height=9\nI 2022-06-06.11:43:18.356 CoinID: Key=chng-1:0:3958598515398969808, Value=7998900000 Maturity=9 Confirmed, Height=9\nI 2022-06-06.11:43:18.356 Synchronizing with node: 50% (1/2)\nI 2022-06-06.11:43:18.356 Synchronizing with node: 100% (2/2)\nI 2022-06-06.11:43:18.356 Current state is 9-7d15da24d2717100\nI 2022-06-06.11:43:18.356 [ac09d5dc897647bf876b7d17d8219a77][1] Get proof for kernel: 6625e9f7756a98eb\nI 2022-06-06.11:43:18.357 [ac09d5dc897647bf876b7d17d8219a77] Transaction completed\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"Creating new contract invocation tx on behalf of the shader\nContract ID: d9c5d1782b2d2b6f733486be480bb0d8bcf34d5fdc63bbac996ed76af541cc14\n        Comment: create Vault contract  Total fee: 1100000 GROTH\nI 2022-06-06.11:43:08.288 [ac09d5dc897647bf876b7d17d8219a77][1] Get proof for kernel: 6625e9f7756a98eb\nI 2022-06-06.11:43:08.289 Synchronizing with node: 100% (1/1)\nI 2022-06-06.11:43:08.289 Current state is 8-65a2ecdf447ad942\nI 2022-06-06.11:43:18.354 Sync up to 9-7d15da24d2717100\nI 2022-06-06.11:43:18.354 Synchronizing with node: 0% (0/2)\nI 2022-06-06.11:43:18.355 CoinID: Key=mine-1:1:1, Value=8000000000 Maturity=6 Spent, Height=9\nI 2022-06-06.11:43:18.356 CoinID: Key=chng-1:0:3958598515398969808, Value=7998900000 Maturity=9 Confirmed, Height=9\nI 2022-06-06.11:43:18.356 Synchronizing with node: 50% (1/2)\nI 2022-06-06.11:43:18.356 Synchronizing with node: 100% (2/2)\nI 2022-06-06.11:43:18.356 Current state is 9-7d15da24d2717100\nI 2022-06-06.11:43:18.356 [ac09d5dc897647bf876b7d17d8219a77][1] Get proof for kernel: 6625e9f7756a98eb\nI 2022-06-06.11:43:18.357 [ac09d5dc897647bf876b7d17d8219a77] Transaction completed\n"}]}]},{"type":"element","tag":"h3","props":{"id":"command-examples"},"children":[{"type":"text","value":"Command examples"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"View deployed contracts:"},{"type":"element","tag":"pre","props":{"code":"./beam-wallet-masternet shader --shader_app_file=mydapp/app.wasm --shader_args=\"role=manager,action=view\" --shader_contract_file=mydapp/contract.wasm -n <node>\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"./beam-wallet-masternet shader --shader_app_file=mydapp/app.wasm --shader_args=\"role=manager,action=view\" --shader_contract_file=mydapp/contract.wasm -n <node>\n"}]}]},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"The output could be like this:"},{"type":"element","tag":"pre","props":{"code":"Shader output: {\"contracts\": [{\"cid\": \"d9c5d1782b2d2b6f733486be480bb0d8bcf34d5fdc63bbac996ed76af541cc14\",\"Height\": 9}]}\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"Shader output: {\"contracts\": [{\"cid\": \"d9c5d1782b2d2b6f733486be480bb0d8bcf34d5fdc63bbac996ed76af541cc14\",\"Height\": 9}]}\n"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Destroy contract (with "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"cid"}]},{"type":"text","value":" from the example above)"},{"type":"element","tag":"pre","props":{"code":"./beam-wallet-masternet shader --shader_app_file=mydapp/app.wasm --shader_contract_file=mydapp/contract.wasm --shader_args=\"role=manager,action=destroy,cid=d9c5d1782b2d2b6f733486be480bb0d8bcf34d5fdc63bbac996ed76af541cc14\" -n localhost:10000\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"./beam-wallet-masternet shader --shader_app_file=mydapp/app.wasm --shader_contract_file=mydapp/contract.wasm --shader_args=\"role=manager,action=destroy,cid=d9c5d1782b2d2b6f733486be480bb0d8bcf34d5fdc63bbac996ed76af541cc14\" -n localhost:10000\n"}]}]},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"Output example:"},{"type":"element","tag":"pre","props":{"code":"Creating new contract invocation tx on behalf of the shader\nContract ID: d9c5d1782b2d2b6f733486be480bb0d8bcf34d5fdc63bbac996ed76af541cc14\n      Comment: destroy Vault contract   Total fee: 1100000 GROTH\nI 2022-06-06.12:34:15.962 Sync up to 311-788f821396683a25\nI 2022-06-06.12:34:15.962 Synchronizing with node: 0% (0/2)\nI 2022-06-06.12:34:15.967 Synchronizing with node: 0% (0/2)\nI 2022-06-06.12:34:15.967 CoinID: Key=mine-1:1:307, Value=8000000000 Maturity=312 Confirmed, Height=307\nI 2022-06-06.12:34:15.968 CoinID: Key=mine-1:1:308, Value=8000000000 Maturity=313 Confirmed, Height=308\nI 2022-06-06.12:34:15.968 CoinID: Key=mine-1:1:309, Value=8000000000 Maturity=314 Confirmed, Height=309\nI 2022-06-06.12:34:15.968 CoinID: Key=mine-1:1:310, Value=8000000000 Maturity=315 Confirmed, Height=310\nI 2022-06-06.12:34:15.969 CoinID: Key=mine-1:1:311, Value=8000000000 Maturity=316 Confirmed, Height=311\nI 2022-06-06.12:34:15.969 Synchronizing with node: 50% (1/2)\nI 2022-06-06.12:34:15.969 Synchronizing with node: 100% (2/2)\nI 2022-06-06.12:34:15.969 Current state is 311-788f821396683a25\nI 2022-06-06.12:34:15.969 [7b8eb0b0bd2340529996c7598d3ebaff][1] Get proof for kernel: eb45c335bca2e17c\nI 2022-06-06.12:34:15.970 Synchronizing with node: 100% (1/1)\nI 2022-06-06.12:34:15.970 Current state is 311-788f821396683a25\nI 2022-06-06.12:34:26.111 Rolled back to 306-910bc6ca48d05757\nI 2022-06-06.12:34:26.112 Sync up to 312-d156e1bf16939393\nI 2022-06-06.12:34:26.113 Synchronizing with node: 0% (0/2)\nI 2022-06-06.12:34:26.113 CoinID: Key=mine-1:1:307, Value=8000000000 Maturity=312 Confirmed, Height=307\nI 2022-06-06.12:34:26.113 CoinID: Key=mine-1:1:308, Value=8000000000 Maturity=313 Confirmed, Height=308\nI 2022-06-06.12:34:26.114 CoinID: Key=chng-1:0:3958598515398969808, Value=7998900000 Maturity=9 Spent, Height=312\nI 2022-06-06.12:34:26.114 CoinID: Key=chng-1:0:12345322638362229725, Value=7997800000 Maturity=312 Confirmed, Height=312\nI 2022-06-06.12:34:26.115 Synchronizing with node: 50% (1/2)\nI 2022-06-06.12:34:26.115 Synchronizing with node: 100% (2/2)\nI 2022-06-06.12:34:26.115 Current state is 312-d156e1bf16939393\nI 2022-06-06.12:34:26.115 [7b8eb0b0bd2340529996c7598d3ebaff][1] Get proof for kernel: eb45c335bca2e17c\nI 2022-06-06.12:34:26.116 [7b8eb0b0bd2340529996c7598d3ebaff] Transaction completed\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"Creating new contract invocation tx on behalf of the shader\nContract ID: d9c5d1782b2d2b6f733486be480bb0d8bcf34d5fdc63bbac996ed76af541cc14\n      Comment: destroy Vault contract   Total fee: 1100000 GROTH\nI 2022-06-06.12:34:15.962 Sync up to 311-788f821396683a25\nI 2022-06-06.12:34:15.962 Synchronizing with node: 0% (0/2)\nI 2022-06-06.12:34:15.967 Synchronizing with node: 0% (0/2)\nI 2022-06-06.12:34:15.967 CoinID: Key=mine-1:1:307, Value=8000000000 Maturity=312 Confirmed, Height=307\nI 2022-06-06.12:34:15.968 CoinID: Key=mine-1:1:308, Value=8000000000 Maturity=313 Confirmed, Height=308\nI 2022-06-06.12:34:15.968 CoinID: Key=mine-1:1:309, Value=8000000000 Maturity=314 Confirmed, Height=309\nI 2022-06-06.12:34:15.968 CoinID: Key=mine-1:1:310, Value=8000000000 Maturity=315 Confirmed, Height=310\nI 2022-06-06.12:34:15.969 CoinID: Key=mine-1:1:311, Value=8000000000 Maturity=316 Confirmed, Height=311\nI 2022-06-06.12:34:15.969 Synchronizing with node: 50% (1/2)\nI 2022-06-06.12:34:15.969 Synchronizing with node: 100% (2/2)\nI 2022-06-06.12:34:15.969 Current state is 311-788f821396683a25\nI 2022-06-06.12:34:15.969 [7b8eb0b0bd2340529996c7598d3ebaff][1] Get proof for kernel: eb45c335bca2e17c\nI 2022-06-06.12:34:15.970 Synchronizing with node: 100% (1/1)\nI 2022-06-06.12:34:15.970 Current state is 311-788f821396683a25\nI 2022-06-06.12:34:26.111 Rolled back to 306-910bc6ca48d05757\nI 2022-06-06.12:34:26.112 Sync up to 312-d156e1bf16939393\nI 2022-06-06.12:34:26.113 Synchronizing with node: 0% (0/2)\nI 2022-06-06.12:34:26.113 CoinID: Key=mine-1:1:307, Value=8000000000 Maturity=312 Confirmed, Height=307\nI 2022-06-06.12:34:26.113 CoinID: Key=mine-1:1:308, Value=8000000000 Maturity=313 Confirmed, Height=308\nI 2022-06-06.12:34:26.114 CoinID: Key=chng-1:0:3958598515398969808, Value=7998900000 Maturity=9 Spent, Height=312\nI 2022-06-06.12:34:26.114 CoinID: Key=chng-1:0:12345322638362229725, Value=7997800000 Maturity=312 Confirmed, Height=312\nI 2022-06-06.12:34:26.115 Synchronizing with node: 50% (1/2)\nI 2022-06-06.12:34:26.115 Synchronizing with node: 100% (2/2)\nI 2022-06-06.12:34:26.115 Current state is 312-d156e1bf16939393\nI 2022-06-06.12:34:26.115 [7b8eb0b0bd2340529996c7598d3ebaff][1] Get proof for kernel: eb45c335bca2e17c\nI 2022-06-06.12:34:26.116 [7b8eb0b0bd2340529996c7598d3ebaff] Transaction completed\n"}]}]}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"prerequisites","depth":3,"text":"Prerequisites"},{"id":"shaders","depth":3,"text":"Shaders"},{"id":"shader-api","depth":3,"text":"Shader API"},{"id":"commands","depth":3,"text":"Commands"},{"id":"deploy-contract","depth":3,"text":"Deploy contract"},{"id":"command-examples","depth":3,"text":"Command examples"}]}},"_type":"markdown","_id":"content:docs:dev:using-beam-shaders-with-cli-wallet.md","_source":"content","_file":"docs/dev/using-beam-shaders-with-cli-wallet.md","_extension":"md"},{"_path":"/docs/dev/using-beam-shaders","_dir":"dev","_draft":false,"_partial":false,"_locale":"","title":"Using Beam Shaders","description":"This tutorial describes using Beam Shaders on DAppnet","body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"using-beam-shaders"},"children":[{"type":"text","value":"Using Beam Shaders"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"{% hint style=\"success\" %}\n"},{"type":"element","tag":"a","props":{"href":"https://dappnet.beam.mw/downloads/","rel":["nofollow"]},"children":[{"type":"text","value":"Why DAppnet"}]},{"type":"text","value":"? "}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Beam consists of three public networks: "}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"DAppnet:"}]},{"type":"text","value":" a testing sandbox that produces a pseudo-mining block every 15 seconds. "}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Testnet:"}]},{"type":"text","value":" produces genuine mining blocks but is mostly a testing site before Mainnet deployment."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Mainnet:"}]},{"type":"text","value":" the living Beam network with real assets.\n{% endhint %}"}]}]},{"type":"element","tag":"h3","props":{"id":"install-dappnet-wallet"},"children":[{"type":"text","value":"Install DAppnet wallet"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The latest version of the Beam DAppnet Wallet is on our "},{"type":"element","tag":"a","props":{"href":"https://dappnet.beam.mw/downloads/","rel":["nofollow"]},"children":[{"type":"text","value":"website"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"When "},{"type":"element","tag":"a","props":{"href":"https://beamx.gitbook.io/dappnet-user-guide/settings","rel":["nofollow"]},"children":[{"type":"text","value":"installing DAppnet"}]},{"type":"text","value":", choose the default settings to operate the local node (required) to run Beam Shader contracts.  Create a new wallet (save the seed phrase). "}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"{% hint style=\"info\" %}\nBeam Shaders require the use of the integrated node found in the DAppnet Wallet and must remain open for this tutorial.\n{% endhint %}"}]},{"type":"element","tag":"h3","props":{"id":"withdraw-from-the-faucet"},"children":[{"type":"text","value":"Withdraw from the Faucet"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"All DAppnet transactions (including Beam Shader deployment) contain transaction fees that are paid in Beam coins, and require a positive wallet balance."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Launch "},{"type":"element","tag":"a","props":{"href":"https://beamx.gitbook.io/dappnet-user-guide/my-dapp-store","rel":["nofollow"]},"children":[{"type":"text","value":"My DApp Store"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"src":".gitbook/assets/Screen Shot 2023-05-10 at 10.27.02 PM.png","alt":"","dataSize":"line"},"children":[]},{"type":"text","value":" and find the "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Faucet Application"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"src":".gitbook/assets/Screen Shot 2023-05-11 at 5.38.24 PM.png","alt":"","dataSize":"line"},"children":[]},{"type":"text","value":". "}]},{"type":"element","tag":"figure","props":{},"children":[{"type":"element","tag":"img","props":{"src":".gitbook/assets/image (2).png","alt":""},"children":[]},{"type":"element","tag":"figcaption","props":{},"children":[]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Launch "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Faucet >>> Get your first Beam >>> Confirm,"}]},{"type":"text","value":"  and Beam coins will deposit into your wallet after the next mining block."}]},{"type":"element","tag":"figure","props":{},"children":[{"type":"element","tag":"img","props":{"src":".gitbook/assets/image (16).png","alt":""},"children":[]},{"type":"element","tag":"figcaption","props":{},"children":[]}]},{"type":"element","tag":"h3","props":{"id":"configuring-your-cli-wallet"},"children":[{"type":"text","value":"Configuring your CLI wallet"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Beam shaders are deployed via CLI wallet which can be found on our "},{"type":"element","tag":"a","props":{"href":"https://dappnet.beam.mw/downloads/","rel":["nofollow"]},"children":[{"type":"text","value":"website"}]},{"type":"text","value":". This tutorial uses Windows Command Prompt, but users can substitute "},{"type":"element","tag":"a","props":{"href":"shader-sdk-mac"},"children":[{"type":"text","value":"Mac"}]},{"type":"text","value":" and Linux commands if desired."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Create a "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"shader"}]},{"type":"text","value":" folder in your hard drive, and transfer CLI wallet archive. The "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"shader"}]},{"type":"text","value":" folder should contain two files: two files: the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"CLI wallet archive"}]},{"type":"text","value":" and wallet "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"config"}]},{"type":"text","value":" file. "}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"{% hint style=\"danger\" %}\nFor this tutorial, we will use our DAppnet's "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"wallet.db"}]},{"type":"text","value":"(for testing purposes only. This practice is not recommended with wallets containing real assets).\n{% endhint %}"}]},{"type":"element","tag":"h3","props":{"id":"copy-walletdb-from-dappnet-wallet"},"children":[{"type":"text","value":"Copy "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"wallet.db"}]},{"type":"text","value":" from DAppnet Wallet"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Beam wallets store wallet metadata (transaction history, balance, etc) locally on your hard drive in the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"wallet.db"}]},{"type":"text","value":" file. "}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Locate your DAppnet "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"wallet.db"}]},{"type":"text","value":" in the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"%LOCALAPPDATA%\\Beam Wallet folder"}]},{"type":"text","value":". Transfer the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"wallet.db"}]},{"type":"text","value":" in the same "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"shader"}]},{"type":"text","value":" folder."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"{% hint style=\"info\" %}\nRefer to our "},{"type":"element","tag":"a","props":{"href":"beam-wallets/desktop-wallet"},"children":[{"type":"text","value":"Desktop Wallet guide"}]},{"type":"text","value":" for "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"wallet.db"}]},{"type":"text","value":" file location for macOS and Linux operating systems.\n{% endhint %}"}]},{"type":"element","tag":"figure","props":{},"children":[{"type":"element","tag":"img","props":{"src":".gitbook/assets/image (11).png","alt":""},"children":[]},{"type":"element","tag":"figcaption","props":{},"children":[]}]},{"type":"element","tag":"h3","props":{"id":"configure-cli-wallet-settings"},"children":[{"type":"text","value":"Configure CLI wallet settings"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"One more crucial step before running Shader contracts involves configuring the CLI wallet settings to simplify and shorten commands. "}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"To connect CLI wallet's to the built-in node, first edit the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"config"}]},{"type":"text","value":" file using text editor (such as "},{"type":"element","tag":"a","props":{"href":"https://code.visualstudio.com/","rel":["nofollow"]},"children":[{"type":"text","value":"Visual Studio Code"}]},{"type":"text","value":") and enter the following:"}]},{"type":"element","tag":"pre","props":{"code":"log_level=debug\npass=<your wallet password>\nnode_addr=127.0.0.1:10005\nwallet_path=wallet.db\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"log_level=debug\npass=<your wallet password>\nnode_addr=127.0.0.1:10005\nwallet_path=wallet.db\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"config"}]},{"type":"text","value":" file should resemble the following:"}]},{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"################################################################################\n"}]},{"type":"text","value":"# General options:\n################################################################################\n\n# log level [info|debug|verbose]\nlog_level=debug\n\n# file log level [info|debug|verbose]\n# file_log_level=debug\n\n# old logs cleanup period (days)\n# log_cleanup_days=5\n\n################################################################################\n# Wallet options:\n################################################################################\n\n# password for the wallet\npass=123\n\n# phrase to generate secret key according to BIP-39.\n# seed_phrase=\n\n# address of node\nnode_addr=127.0.0.1:10005\n\n# path to wallet file\nwallet_path=wallet.db\n\n# command to execute [new_addr|send|receive|listen|init|info|export_miner_key|export_owner_key|generate_phrase]\n# command=listen\n\n\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The testing environment is ready to deploy Shaders, all that remains is selecting the Shader contract."}]},{"type":"element","tag":"h3","props":{"id":"choosing-a-shader-application"},"children":[{"type":"text","value":"Choosing a  Shader application "}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The "},{"type":"element","tag":"a","props":{"href":"https://dappnet.explorer.beam.mw/","rel":["nofollow"]},"children":[{"type":"text","value":"Dappnet Blockchain Explorer"}]},{"type":"text","value":" (see "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Contracts"}]},{"type":"text","value":" tab) contains a list of Shader contract applications ready for testing. "}]},{"type":"element","tag":"figure","props":{},"children":[{"type":"element","tag":"img","props":{"src":".gitbook/assets/image (6).png","alt":""},"children":[]},{"type":"element","tag":"figcaption","props":{},"children":[]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"For the purposes of this tutorial, we will select the "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Vault"}]},{"type":"text","value":" Shader application (copy the Vault Contract ID -- we will use this later)."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"{% hint style=\"info\" %}\nAt thid time, the list of available contracts is DAppnet. The majority of deployed contracts don't contain a contract description. These features will be adjusted with future iterations of DAppnet.\n{% endhint %}"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Please download the Vault application Shader from our"}]},{"type":"text","value":" "},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/tree/master/bvm/Shaders/vault","rel":["nofollow"]},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Beam repository."}]},{"type":"text","value":" "}]},{"type":"text","value":"The Shader contract will not respond to CLI commands without the precompiled source code."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Download "},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/blob/master/bvm/Shaders/vault/app.wasm","rel":["nofollow"]},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"app.wasm"}]}]},{"type":"text","value":" and copy it to your "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"shader"}]},{"type":"text","value":" folder. "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Note"}]},{"type":"text","value":": if you are testing several applications, create a folder for each Shader application so each application contains a separate "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"app.wasm"}]},{"type":"text","value":" file."}]},{"type":"element","tag":"h3","props":{"id":"running-shader-commands"},"children":[{"type":"text","value":"Running Shader commands"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Open as command line interface and change directory to the location of the CLI wallet executable. "}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"First, print the contract API with the following command:"}]},{"type":"element","tag":"pre","props":{"code":"beam-wallet-dappnet.exe shader --shader_app_file vault\\app.wasm\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"beam-wallet-dappnet.exe shader --shader_app_file vault\\app.wasm\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Note, we have provided only a single parameter ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--shader_app_file"}]},{"type":"text","value":") since it's assume all other parameters are set in the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"config"}]},{"type":"text","value":" file and a separate path to the application Shader is found in the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"shader"}]},{"type":"text","value":"  folder (with the Vault contract)."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The output should resemble the following (debug logs are found in this example):"}]},{"type":"element","tag":"figure","props":{},"children":[{"type":"element","tag":"img","props":{"src":".gitbook/assets/image (21).png","alt":""},"children":[]},{"type":"element","tag":"figcaption","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"--shader_app_file method"}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Copy the Shader output (see below) into your text editor, (following JSON format)."}]},{"type":"element","tag":"pre","props":{"code":" {\n     \"roles\":\n     {\n         \"manager\":\n         {\n             \"create\":\n             {},\n             \"destroy\":\n             {\n                 \"cid\": \"ContractID\"\n             },\n             \"view\":\n             {},\n             \"view_logs\":\n             {\n                 \"cid\": \"ContractID\"\n             },\n             \"view_accounts\":\n             {\n                 \"cid\": \"ContractID\"\n             },\n             \"view_account\":\n             {\n                 \"cid\": \"ContractID\",\n                 \"pubKey\": \"PubKey\"\n             }\n         },\n         \"my_account\":\n         {\n             \"view\":\n             {\n                 \"cid\": \"ContractID\"\n             },\n             \"get_key\":\n             {\n                 \"cid\": \"ContractID\"\n             },\n             \"get_proof\":\n             {\n                 \"cid\": \"ContractID\",\n                 \"aid\": \"AssetID\"\n             },\n             \"deposit\":\n             {\n                 \"cid\": \"ContractID\",\n                 \"pkForeign\": \"PubKey\",\n                 \"bCoSigner\": \"uint32_t\",\n                 \"amount\": \"Amount\",\n                 \"aid\": \"AssetID\"\n             },\n             \"withdraw\":\n             {\n                 \"cid\": \"ContractID\",\n                 \"pkForeign\": \"PubKey\",\n                 \"bCoSigner\": \"uint32_t\",\n                 \"amount\": \"Amount\",\n                 \"aid\": \"AssetID\",\n                 \"amountCoSigner\": \"Amount\"\n             }\n         }\n     }\n }\n","language":"json","meta":"","className":["language-json"]},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":" {\n     \"roles\":\n     {\n         \"manager\":\n         {\n             \"create\":\n             {},\n             \"destroy\":\n             {\n                 \"cid\": \"ContractID\"\n             },\n             \"view\":\n             {},\n             \"view_logs\":\n             {\n                 \"cid\": \"ContractID\"\n             },\n             \"view_accounts\":\n             {\n                 \"cid\": \"ContractID\"\n             },\n             \"view_account\":\n             {\n                 \"cid\": \"ContractID\",\n                 \"pubKey\": \"PubKey\"\n             }\n         },\n         \"my_account\":\n         {\n             \"view\":\n             {\n                 \"cid\": \"ContractID\"\n             },\n             \"get_key\":\n             {\n                 \"cid\": \"ContractID\"\n             },\n             \"get_proof\":\n             {\n                 \"cid\": \"ContractID\",\n                 \"aid\": \"AssetID\"\n             },\n             \"deposit\":\n             {\n                 \"cid\": \"ContractID\",\n                 \"pkForeign\": \"PubKey\",\n                 \"bCoSigner\": \"uint32_t\",\n                 \"amount\": \"Amount\",\n                 \"aid\": \"AssetID\"\n             },\n             \"withdraw\":\n             {\n                 \"cid\": \"ContractID\",\n                 \"pkForeign\": \"PubKey\",\n                 \"bCoSigner\": \"uint32_t\",\n                 \"amount\": \"Amount\",\n                 \"aid\": \"AssetID\",\n                 \"amountCoSigner\": \"Amount\"\n             }\n         }\n     }\n }\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The Vault contract API (as retrieved from the Vault Shader contract) separates the API actions into roles, ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"manager"}]},{"type":"text","value":" , "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"my_account"}]},{"type":"text","value":") following semantic structure."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"view_accounts"}]},{"type":"text","value":" method will list all Vault accounts present and were we can can plug the Valut Shader (found in the "},{"type":"element","tag":"a","props":{"href":"https://dappnet.explorer.beam.mw/","rel":["nofollow"]},"children":[{"type":"text","value":"DAppnet explorer"}]},{"type":"text","value":") contract ID into the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"view_accounts"}]},{"type":"text","value":" parameter."}]},{"type":"element","tag":"pre","props":{"code":"d9c5d1782b2d2b6f733486be480bb0d8bcf34d5fdc63bbac996ed76af541cc14\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"d9c5d1782b2d2b6f733486be480bb0d8bcf34d5fdc63bbac996ed76af541cc14\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Enter the following command:"}]},{"type":"element","tag":"pre","props":{"code":"beam-wallet-dappnet.exe shader --shader_app_file vault\\app.wasm --shader_args=cid=d9c5d1782b2d2b6f733486be480bb0d8bcf34d5fdc63bbac996ed76af541cc14,role=manager,action=view_accounts\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"beam-wallet-dappnet.exe shader --shader_app_file vault\\app.wasm --shader_args=cid=d9c5d1782b2d2b6f733486be480bb0d8bcf34d5fdc63bbac996ed76af541cc14,role=manager,action=view_accounts\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The output should resemble the following:"}]},{"type":"element","tag":"figure","props":{},"children":[{"type":"element","tag":"img","props":{"src":".gitbook/assets/image (17).png","alt":""},"children":[]},{"type":"element","tag":"figcaption","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"View_accounts method"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In the above example, there are currently no accounts within the contract. To create an account, utilize "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"deposit"}]},{"type":"text","value":" method and deposit one Beam coin with the following command:"}]},{"type":"element","tag":"pre","props":{"code":"beam-wallet-dappnet.exe shader --shader_app_file vault\\app.wasm --shader_args=\"cid=d9c5d1782b2d2b6f733486be480bb0d8bcf34d5fdc63bbac996ed76af541cc14,role=my_account,action=deposit,amount=100000000\"\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"beam-wallet-dappnet.exe shader --shader_app_file vault\\app.wasm --shader_args=\"cid=d9c5d1782b2d2b6f733486be480bb0d8bcf34d5fdc63bbac996ed76af541cc14,role=my_account,action=deposit,amount=100000000\"\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Note:"}]},{"type":"text","value":" "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"amount"}]},{"type":"text","value":" is set in Groth, which is $$1^10-8$$  of Beam. "}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The above action creates and sends the transaction to the network (so it will take a moment). When completed, the output should resemble the following:"}]},{"type":"element","tag":"figure","props":{},"children":[{"type":"element","tag":"img","props":{"src":".gitbook/assets/image (5).png","alt":""},"children":[]},{"type":"element","tag":"figcaption","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"Deposit"}]},{"type":"text","value":" Method"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The response generated (see below) clarfies the API response:"}]},{"type":"element","tag":"figure","props":{},"children":[{"type":"element","tag":"img","props":{"src":".gitbook/assets/image (18).png","alt":""},"children":[]},{"type":"element","tag":"figcaption","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Deposit successful"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"To confirm the transaction was successful, re-enter the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"accounts"}]},{"type":"text","value":" command:"}]},{"type":"element","tag":"figure","props":{},"children":[{"type":"element","tag":"img","props":{"src":".gitbook/assets/image (7).png","alt":""},"children":[]},{"type":"element","tag":"figcaption","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"New account creation"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The response generated confirms a new account is identified by your wallet public key and has a balance of one Beams. To get aquainted with the API function, try depositing and withdrawing Beam's into your account. Users can also attempt to retrieve Beam's from a seperate account ("},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"spoiler: it won't work"}]},{"type":"text","value":")."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"To learn how to code your own Shader application contract and deploy it chain, please refer to our "},{"type":"element","tag":"a","props":{"href":"shader-sdk-win"},"children":[{"type":"text","value":"Shader SDK tutorial"}]},{"type":"text","value":"."}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"install-dappnet-wallet","depth":3,"text":"Install DAppnet wallet"},{"id":"withdraw-from-the-faucet","depth":3,"text":"Withdraw from the Faucet"},{"id":"configuring-your-cli-wallet","depth":3,"text":"Configuring your CLI wallet"},{"id":"copy-walletdb-from-dappnet-wallet","depth":3,"text":"Copy wallet.db from DAppnet Wallet"},{"id":"configure-cli-wallet-settings","depth":3,"text":"Configure CLI wallet settings"},{"id":"choosing-a-shader-application","depth":3,"text":"Choosing a  Shader application "},{"id":"running-shader-commands","depth":3,"text":"Running Shader commands"}]}},"_type":"markdown","_id":"content:docs:dev:using-beam-shaders.md","_source":"content","_file":"docs/dev/using-beam-shaders.md","_extension":"md"}]