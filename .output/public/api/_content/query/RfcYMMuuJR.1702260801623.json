{"_path":"/docs/core-tech/beam-web-wallet-starter-kit","_dir":"core-tech","_draft":false,"_partial":false,"_locale":"","title":"Beam Web Wallet Starter Kit working draft","description":"Web wallet starter allows you easily integrate Beam with your service, create a bunch of wallets and manage them... (TODO)","body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"beam-web-wallet-starter-kit-working-draft"},"children":[{"type":"text","value":"Beam Web Wallet Starter Kit "},{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"working draft"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Web wallet starter allows you easily integrate Beam with your service, create a bunch of wallets and manage them... (TODO)"}]},{"type":"element","tag":"h2","props":{"id":"web-wallet-scheme"},"children":[{"type":"text","value":"Web wallet scheme"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Browser + Key Keeper <==> Web Service\n(TODO: here will be detailed scheme)."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Let's do a simple integration step by step with the examples."}]},{"type":"element","tag":"h2","props":{"id":"obtain-binaries"},"children":[{"type":"text","value":"Obtain binaries"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"You can download prebuild binaries from our server with nightly builds "},{"type":"element","tag":"a","props":{"href":"https://builds.beam-mw.com/master/","rel":["nofollow"]},"children":[{"type":"text","value":"https://builds.beam-mw.com/master/"}]},{"type":"text","value":" or you can build all the parts yourself, here are build instructions (TODO)"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"At the end, you need "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"wallet-service-masternet"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"wasm-key-keeper.js"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"wasm-key-keeper.wasm"}]}]},{"type":"element","tag":"h2","props":{"id":"load-key-keeper-to-the-client"},"children":[{"type":"text","value":"Load Key Keeper to the client"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Put the code near "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"wasm-key-keeper.js"}]},{"type":"text","value":" and start any static server."}]},{"type":"element","tag":"pre","props":{"className":["language-html"],"code":"<!DOCTYPE html>\n<html>\n<script src='wasm-key-keeper.js'></script>\n<script type=\"text/javascript\">\n    Module().then(() => console.log(`Key Keeper module successfully loaded.`))\n</script>\n</html>\n","language":"html","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"<!DOCTYPE html>\n<html>\n<script src='wasm-key-keeper.js'></script>\n<script type=\"text/javascript\">\n    Module().then(() => console.log(`Key Keeper module successfully loaded.`))\n</script>\n</html>\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"If all is OK you will see "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Key Keeper module successfully loaded."}]},{"type":"text","value":" message in the browser console."}]},{"type":"element","tag":"h2","props":{"id":"connect-to-the-wallet-service"},"children":[{"type":"text","value":"Connect to the Wallet Service"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Run the service with the following parameters "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"wallet-service-masternet -n eu-node04.masternet.beam.mw:8100 --port 8080"}]},{"type":"text","value":"."}]},{"type":"element","tag":"pre","props":{"className":["language-html"],"code":"<!DOCTYPE html>\n<html>\n<script src='wasm-key-keeper.js'></script>\n<script type=\"text/javascript\">\n    Module().then(() => \n    {\n        console.log(`Key Keeper module successfully loaded.`)\n        \n        let connection = new WebSocket('ws://127.0.0.1:8080')\n        connection.onopen = () => console.log(`Connected to the Wallet Servce.`)\n    })\n</script>\n</html>\n","language":"html","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"<!DOCTYPE html>\n<html>\n<script src='wasm-key-keeper.js'></script>\n<script type=\"text/javascript\">\n    Module().then(() => \n    {\n        console.log(`Key Keeper module successfully loaded.`)\n        \n        let connection = new WebSocket('ws://127.0.0.1:8080')\n        connection.onopen = () => console.log(`Connected to the Wallet Servce.`)\n    })\n</script>\n</html>\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"We are using WebSockets here, because we need two-way communication with the service and service can request any keykeeper method, to sign transaction for example."}]},{"type":"element","tag":"h2","props":{"id":"init-key-keeper-with-a-seed-phase"},"children":[{"type":"text","value":"Init Key Keeper with a seed phase"}]},{"type":"element","tag":"pre","props":{"className":["language-html"],"code":"<!DOCTYPE html>\n<html>\n<script src='wasm-key-keeper.js'></script>\n<script type=\"text/javascript\">\n    Module().then(Module => \n    {\n        console.log(`Key Keeper module successfully loaded.`)\n        \n        let connection = new WebSocket('ws://127.0.0.1:8080')\n        connection.onopen = () => \n        {\n            console.log(`Connected to the Wallet Service.`)\n\n            // generate seed phrase\n            let seed = Module.KeyKeeper.GeneratePhrase()\n            console.log(`New Seed: ${seed}`)\n\n            // init Key Keeper with the seed phrase\n            let keykeeper = new Module.KeyKeeper(seed)\n        }\n    })\n</script>\n</html>\n","language":"html","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"<!DOCTYPE html>\n<html>\n<script src='wasm-key-keeper.js'></script>\n<script type=\"text/javascript\">\n    Module().then(Module => \n    {\n        console.log(`Key Keeper module successfully loaded.`)\n        \n        let connection = new WebSocket('ws://127.0.0.1:8080')\n        connection.onopen = () => \n        {\n            console.log(`Connected to the Wallet Service.`)\n\n            // generate seed phrase\n            let seed = Module.KeyKeeper.GeneratePhrase()\n            console.log(`New Seed: ${seed}`)\n\n            // init Key Keeper with the seed phrase\n            let keykeeper = new Module.KeyKeeper(seed)\n        }\n    })\n</script>\n</html>\n"}]}]},{"type":"element","tag":"h2","props":{"id":"create-wallet"},"children":[{"type":"text","value":"Create wallet"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"To create wallet you have to call "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"create_wallet"}]},{"type":"text","value":" jsonrpc api method with "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"pass"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"ownerkey"}]},{"type":"text","value":" parameters."}]},{"type":"element","tag":"pre","props":{"className":["language-js"],"code":"{\n    jsonrpc:'2.0',\n    id:'<request ID>',\n    method:'create_wallet',\n    params:\n    {\n        pass:'<wallet password>'\n        ownerkey:'<owner key>',\n    }\n}\n","language":"js","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    jsonrpc:'2.0',\n    id:'<request ID>',\n    method:'create_wallet',\n    params:\n    {\n        pass:'<wallet password>'\n        ownerkey:'<owner key>',\n    }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Here is an example:"}]},{"type":"element","tag":"pre","props":{"className":["language-html"],"code":"<!DOCTYPE html>\n<html>\n<script src='wasm-key-keeper.js'></script>\n<script type=\"text/javascript\">\n    Module().then(Module => \n    {\n        console.log(`Key Keeper module successfully loaded.`)\n        \n        let connection = new WebSocket('ws://127.0.0.1:8080')\n        connection.onopen = () => \n        {\n            console.log(`Connected to the Wallet Service.`)\n\n            // generate seed phrase\n            let seed = Module.KeyKeeper.GeneratePhrase()\n            console.log(`New Seed: ${seed}`)\n\n            // init Key Keeper with the seed phrase\n            let keykeeper = new Module.KeyKeeper(seed)\n\n            connection.onmessage = e => \n            {\n\n                let data = JSON.parse(e.data)\n\n                if(data.result)     console.log(`Wallet is successfully created, your ID: ${data.result}`)\n                else if(data.error) console.log(`error occured, code:${data.error.code} text:${data.error.data}`)\n                else if(data.method) connection.send(keykeeper.invokeServiceMethod(e.data))\n            }\n\n            let walletPassword = '12345678'\n            let ownerKey = keykeeper.getOwnerKey(walletPassword)\n            console.log(`Owner Key: ${ownerKey}`)\n\n            // create a wallet request\n            connection.send(JSON.stringify({\n                jsonrpc: '2.0',\n                id: 0,\n                method: 'create_wallet',\n                params:\n                {\n                    pass: walletPassword,\n                    ownerkey: ownerKey\n                }\n            }))\n        }\n    })\n</script>\n</html>\n","language":"html","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"<!DOCTYPE html>\n<html>\n<script src='wasm-key-keeper.js'></script>\n<script type=\"text/javascript\">\n    Module().then(Module => \n    {\n        console.log(`Key Keeper module successfully loaded.`)\n        \n        let connection = new WebSocket('ws://127.0.0.1:8080')\n        connection.onopen = () => \n        {\n            console.log(`Connected to the Wallet Service.`)\n\n            // generate seed phrase\n            let seed = Module.KeyKeeper.GeneratePhrase()\n            console.log(`New Seed: ${seed}`)\n\n            // init Key Keeper with the seed phrase\n            let keykeeper = new Module.KeyKeeper(seed)\n\n            connection.onmessage = e => \n            {\n\n                let data = JSON.parse(e.data)\n\n                if(data.result)     console.log(`Wallet is successfully created, your ID: ${data.result}`)\n                else if(data.error) console.log(`error occured, code:${data.error.code} text:${data.error.data}`)\n                else if(data.method) connection.send(keykeeper.invokeServiceMethod(e.data))\n            }\n\n            let walletPassword = '12345678'\n            let ownerKey = keykeeper.getOwnerKey(walletPassword)\n            console.log(`Owner Key: ${ownerKey}`)\n\n            // create a wallet request\n            connection.send(JSON.stringify({\n                jsonrpc: '2.0',\n                id: 0,\n                method: 'create_wallet',\n                params:\n                {\n                    pass: walletPassword,\n                    ownerkey: ownerKey\n                }\n            }))\n        }\n    })\n</script>\n</html>\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Now, when you got your wallet ID, you can call any "},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/wiki/Beam-wallet-protocol-API#api","rel":["nofollow"]},"children":[{"type":"text","value":"Wallet API"}]},{"type":"text","value":" method, like check status, create an address or do a transaction."}]},{"type":"element","tag":"h2","props":{"id":"open-wallet"},"children":[{"type":"text","value":"Open wallet"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Open wallet with given ID and password."}]},{"type":"element","tag":"pre","props":{"className":["language-js"],"code":"{\n    jsonrpc:'2.0',\n    id:'<request ID>',\n    method:'open_wallet',\n    params:\n    {\n        id:'<wallet ID>',\n        pass:'<wallet password>'\n    }\n}\n","language":"js","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    jsonrpc:'2.0',\n    id:'<request ID>',\n    method:'open_wallet',\n    params:\n    {\n        id:'<wallet ID>',\n        pass:'<wallet password>'\n    }\n}\n"}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"web-wallet-scheme","depth":2,"text":"Web wallet scheme"},{"id":"obtain-binaries","depth":2,"text":"Obtain binaries"},{"id":"load-key-keeper-to-the-client","depth":2,"text":"Load Key Keeper to the client"},{"id":"connect-to-the-wallet-service","depth":2,"text":"Connect to the Wallet Service"},{"id":"init-key-keeper-with-a-seed-phase","depth":2,"text":"Init Key Keeper with a seed phase"},{"id":"create-wallet","depth":2,"text":"Create wallet"},{"id":"open-wallet","depth":2,"text":"Open wallet"}]}},"_type":"markdown","_id":"content:docs:core-tech:Beam-Web-Wallet-Starter-Kit.md","_source":"content","_file":"docs/core-tech/Beam-Web-Wallet-Starter-Kit.md","_extension":"md"}