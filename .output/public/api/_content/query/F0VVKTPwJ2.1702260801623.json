[{"_path":"/docs/core-tech/adding-support-for-beam-confidential-asset","_dir":"core-tech","_draft":false,"_partial":false,"_locale":"","title":"Adding support for Beam Confidential Asset","description":"","body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"adding-support-for-beam-confidential-asset"},"children":[{"type":"text","value":"Adding support for Beam Confidential Asset"}]},{"type":"element","tag":"h2","props":{"id":"tldr"},"children":[{"type":"text","value":"TLDR;"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"In version 6.0 Beam supports Confidential Assets"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Each asset has an "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_id"}]},{"type":"text","value":", 0 is for Beam and 1,2,3... for new Assets."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"A complete list of existing assets is "},{"type":"element","tag":"a","props":{"href":"https://explorer.beam.mw/assets","rel":["nofollow"]},"children":[{"type":"text","value":"here"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"To enable assets add the following line to the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"wallet-api"}]},{"type":"text","value":" config file"},{"type":"element","tag":"pre","props":{"code":"enable_assets=true\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"enable_assets=true\n"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The following API calls have been updated to support assets:"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"wallet_status"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"tx_send"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"tx_split"}]}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"New API methods have been added"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"tx_asset_issue"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"tx_asset_consume"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"tx_asset_info"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"get_asset_info"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"calc_change"}]}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"confidential-assets"},"children":[{"type":"text","value":"Confidential Assets"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Confidential Assets (CA) are tokens mint on the Beam blockchain. Beam supports Confidential Assets since hard fork 2, but this feature had limited ability to be used in real life applications. Starting from the version 6.0 Beam Wallet adds ability to create smart contracts which make CA more usable and very important feature in Beam infrastructure. We already have "},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/wiki/Beam-wallet-protocol-API#assets-support","rel":["nofollow"]},"children":[{"type":"text","value":"API"}]},{"type":"text","value":" to work with CA, but it was disabled by default. If you wish to accept and create transactions with CA you should enable this feature in the wallet API and update your codebase to handle CA correctly."}]},{"type":"element","tag":"h3","props":{"id":"enable-ca-support"},"children":[{"type":"text","value":"Enable CA support"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"run new binary with "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--enable_assets"}]},{"type":"text","value":". With this flag your wallet starts to accept transactions with Confidential Assets"},{"type":"element","tag":"pre","props":{"code":"./wallet-api --enable_assets -n <node address>\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"./wallet-api --enable_assets -n <node address>\n"}]}]},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"or specify it in config file"},{"type":"element","tag":"pre","props":{"code":"enable_assets=true\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"enable_assets=true\n"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"to retrieve info about assets use "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"wallet_status"}]},{"type":"text","value":" method, it will return an array of the info about assets in the wallet, including BEAM"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]},{"type":"element","tag":"pre","props":{"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 6,\n    \"method\":\"wallet_status\"\n}\n","language":"json","meta":"","className":["language-json"]},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 6,\n    \"method\":\"wallet_status\"\n}\n"}]}]},{"type":"element","tag":"br","props":{},"children":[]},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]},{"type":"element","tag":"pre","props":{"code":"{\n  \"id\": 1236,\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"current_height\": 112,\n    \"current_state_hash\": \"b9e8b868de60f28e553a1499a569f481991e4cff9fe2191d09d71a03c7708296\",\n    \"difficulty\": 378.36236572265625,\n    \"prev_state_hash\": \"3f84da0b0390deaca908603b6061867def987575a1af9311248ffb01503a0f02\",\n    \"available\": 303000000000,\n    \"receiving\": 123,\n    \"sending\": 0,\n    \"maturing\": 8000000000,\n    \"locked\": 30,\n    \"totals\": [\n      {\n        \"asset_id\": 0,\n        \"available\": 303000000000,\n        \"available_str\": \"303000000000\",\n        \"maturing\": 8000000000,\n        \"maturing_str\": \"8000000000\",\n        \"receiving\": 123,\n        \"receiving_str\": \"123\",\n        \"sending\": 0,\n        \"sending_str\": \"0\"\n      },\n      {\n        \"asset_id\": 1,                    // <--------------- this could be used to send/split CA or to retrieve extended info\n        \"available\": 2000000000,\n        \"available_str\": \"2000000000\",\n        \"maturing\": 0,\n        \"maturing_str\": \"0\",\n        \"receiving\": 0,\n        \"receiving_str\": \"0\",\n        \"sending\": 0,\n        \"sending_str\": \"0\"\n      }\n    ]\n  }\n}\n","language":"json","meta":"","className":["language-json"]},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n  \"id\": 1236,\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"current_height\": 112,\n    \"current_state_hash\": \"b9e8b868de60f28e553a1499a569f481991e4cff9fe2191d09d71a03c7708296\",\n    \"difficulty\": 378.36236572265625,\n    \"prev_state_hash\": \"3f84da0b0390deaca908603b6061867def987575a1af9311248ffb01503a0f02\",\n    \"available\": 303000000000,\n    \"receiving\": 123,\n    \"sending\": 0,\n    \"maturing\": 8000000000,\n    \"locked\": 30,\n    \"totals\": [\n      {\n        \"asset_id\": 0,\n        \"available\": 303000000000,\n        \"available_str\": \"303000000000\",\n        \"maturing\": 8000000000,\n        \"maturing_str\": \"8000000000\",\n        \"receiving\": 123,\n        \"receiving_str\": \"123\",\n        \"sending\": 0,\n        \"sending_str\": \"0\"\n      },\n      {\n        \"asset_id\": 1,                    // <--------------- this could be used to send/split CA or to retrieve extended info\n        \"available\": 2000000000,\n        \"available_str\": \"2000000000\",\n        \"maturing\": 0,\n        \"maturing_str\": \"0\",\n        \"receiving\": 0,\n        \"receiving_str\": \"0\",\n        \"sending\": 0,\n        \"sending_str\": \"0\"\n      }\n    ]\n  }\n}\n"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"if you want to send or split CA you should specify "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"\"asset_id\""}]},{"type":"text","value":" in parameters"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]},{"type":"element","tag":"pre","props":{"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 2,\n    \"method\":\"tx_send\", \n    \"params\":\n    {\n        \"value\": 12342342,\n        \"fee\": 2,\n        \"from\": \"472e17b0419055ffee3b3813b98ae671579b0ac0dcd6f1a23b11a75ab148cc67\",\n        \"address\": \"472e17b0419055ffee3b3813b98ae671579b0ac0dcd6f1a23b11a75ab148cc67\",\n        \"comment\": \"thank you!\",\n        \"asset_id\": 1                   <------------------ NEW\n    }\n}\n","language":"json","meta":"","className":["language-json"]},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 2,\n    \"method\":\"tx_send\", \n    \"params\":\n    {\n        \"value\": 12342342,\n        \"fee\": 2,\n        \"from\": \"472e17b0419055ffee3b3813b98ae671579b0ac0dcd6f1a23b11a75ab148cc67\",\n        \"address\": \"472e17b0419055ffee3b3813b98ae671579b0ac0dcd6f1a23b11a75ab148cc67\",\n        \"comment\": \"thank you!\",\n        \"asset_id\": 1                   <------------------ NEW\n    }\n}\n"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"if you want to get info about CA use"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]},{"type":"element","tag":"pre","props":{"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 2,\n    \"method\": \"tx_asset_info\",\n    \"params\": \n    {\n        \"asset_id\": 1\n    }\n}\n","language":"json","meta":"","className":["language-json"]},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 2,\n    \"method\": \"tx_asset_info\",\n    \"params\": \n    {\n        \"asset_id\": 1\n    }\n}\n"}]}]},{"type":"element","tag":"br","props":{},"children":[]},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]},{"type":"element","tag":"pre","props":{"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 2,\n    \"result\":\n    {\n        \"txId\" : \"10c4b760c842433cb58339a0fafef3db\"\n    }\n}\n","language":"json","meta":"","className":["language-json"]},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 2,\n    \"result\":\n    {\n        \"txId\" : \"10c4b760c842433cb58339a0fafef3db\"\n    }\n}\n"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"after this transaction become completed, you can read CA info from the local database"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]},{"type":"element","tag":"pre","props":{"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 6,\n    \"method\": \"get_asset_info\",\n    \"params\" :\n    {\n        \"asset_id\": 1\n    }\n}\n","language":"json","meta":"","className":["language-json"]},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 6,\n    \"method\": \"get_asset_info\",\n    \"params\" :\n    {\n        \"asset_id\": 1\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_id"}]},{"type":"text","value":" asset id to retrieve info about. Can be used for any asset even if you don't own it."}]}]},{"type":"element","tag":"br","props":{},"children":[]},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]},{"type":"element","tag":"pre","props":{"code":"{\n    \"id\": 1236,\n    \"jsonrpc\": \"2.0\",\n    \"result\": \n    {\n        \"asset_id\": 1,\n        \"emission\": 2000000000,\n        \"emission_str\": \"2000000000\",\n        \"isOwned\": 1,\n        \"lockHeight\": 39,\n        \"metadata\": \"STD:N=NAME;SN=SNM;UN=UNIT;NTHUN=NTHUNIT\",\n        \"ownerId\": \"0ae08a49e018e98177774294107dc033790b87538e54a20e99c6b98f1dbd39ce\",\n        \"refreshHeight\": 927\n    }\n}\n","language":"json","meta":"","className":["language-json"]},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"id\": 1236,\n    \"jsonrpc\": \"2.0\",\n    \"result\": \n    {\n        \"asset_id\": 1,\n        \"emission\": 2000000000,\n        \"emission_str\": \"2000000000\",\n        \"isOwned\": 1,\n        \"lockHeight\": 39,\n        \"metadata\": \"STD:N=NAME;SN=SNM;UN=UNIT;NTHUN=NTHUNIT\",\n        \"ownerId\": \"0ae08a49e018e98177774294107dc033790b87538e54a20e99c6b98f1dbd39ce\",\n        \"refreshHeight\": 927\n    }\n}\n"}]}]},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"Returns full asset info or "},{"type":"element","tag":"a","props":{"href":"#Errors"},"children":[{"type":"text","value":"error code"}]},{"type":"text","value":"."},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_id"}]},{"type":"text","value":" asset id"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"metadata"}]},{"type":"text","value":" asset metadata"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"emission"}]},{"type":"text","value":" & "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"emission_str"}]},{"type":"text","value":" total asset emission. Maximum asset emission is 2"},{"type":"element","tag":"sup","props":{},"children":[{"type":"text","value":"128"}]},{"type":"text","value":"-1. To ensure compatibility with JavaScript raw number returned only if it is less than or equal to "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Number.MAX_SAFE_INTEGER"}]},{"type":"text","value":" (2"},{"type":"element","tag":"sup","props":{},"children":[{"type":"text","value":"53"}]},{"type":"text","value":"-1). If asset emission is greater than "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Number.MAX_SAFE_INTEGER"}]},{"type":"text","value":" only corresponding string representation is returned."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"isOwned"}]},{"type":"text","value":" is 1 if you own this asset"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"lockHeight"}]},{"type":"text","value":" last block when asset emission turned to/from 0."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"refreshHeight"}]},{"type":"text","value":" block at which asset information has been received. Please note, that all returned fields are valid only for this and previous blocks. In next blocks emission might change, asset become unregistered &c. Use "},{"type":"element","tag":"a","props":{"href":"#tx_asset_info"},"children":[{"type":"text","value":"tx_asset_info"}]},{"type":"text","value":" to retrieve the most recent info."}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"For minting new asset coins use "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"tx_asset_issue"}]},{"type":"text","value":". You must own the asset and info about the asset should be in a local database. "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"tx_asset_info"}]},{"type":"text","value":" to retrieve the latest asset info if necessary. Asset minting is free. You need to pay only regular transaction fee."},{"type":"element","tag":"br","props":{},"children":[]},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]},{"type":"element","tag":"pre","props":{"code":"{\n    \"jsonrpc\": \"2.0\", \n    \"id\": 2,\n    \"method\": \"tx_asset_issue\", \n    \"params\":\n    {\n        \"value\": 6,\n        \"asset_id\": 1\n    }\n}\n","language":"json","meta":"","className":["language-json"]},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\": \"2.0\", \n    \"id\": 2,\n    \"method\": \"tx_asset_issue\", \n    \"params\":\n    {\n        \"value\": 6,\n        \"asset_id\": 1\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"value"}]},{"type":"text","value":" how much asset to mint, in asset groth."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"fee"}]},{"type":"text","value":" transaction fee in BEAM groth. Omit to use default fee."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_id"}]},{"type":"text","value":" asset id of the asset to mint."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"txId"}]},{"type":"text","value":" optional,  provide your own transaction ID."}]}]},{"type":"element","tag":"br","props":{},"children":[]},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]},{"type":"element","tag":"pre","props":{"code":"{\n    \"jsonrpc\": \"2.0\", \n    \"id\": 2,\n    \"result\":\n    {\n        \"txId\" : \"10c4b760c842433cb58339a0fafef3db\"\n    }\n}\n","language":"json","meta":"","className":["language-json"]},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\": \"2.0\", \n    \"id\": 2,\n    \"result\":\n    {\n        \"txId\" : \"10c4b760c842433cb58339a0fafef3db\"\n    }\n}\n"}]}]},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"Returns transaction id or "},{"type":"element","tag":"a","props":{"href":"#Errors"},"children":[{"type":"text","value":"error code"}]},{"type":"text","value":"."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"to burn existing asset coins use "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"tx_asset_consume"}]},{"type":"text","value":". You must own the asset itself as well as asset coins to burn them. You cannot burn asset coins that belong to another wallet. Info about the asset should be in a local database."},{"type":"element","tag":"br","props":{},"children":[]},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]},{"type":"element","tag":"pre","props":{"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 2,\n    \"method\":\"tx_asset_consume\", \n    \"params\":\n    {\n        \"value\": 6,\n        \"asset_id\": 1\n    }\n}\n","language":"json","meta":"","className":["language-json"]},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 2,\n    \"method\":\"tx_asset_consume\", \n    \"params\":\n    {\n        \"value\": 6,\n        \"asset_id\": 1\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"value"}]},{"type":"text","value":" how much asset to burn, in asset groth."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"fee"}]},{"type":"text","value":" transaction fee in BEAM groth, omit for a default fee."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_id"}]},{"type":"text","value":" id of the asset to consume."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"txId"}]},{"type":"text","value":" optional, provide your own transaction ID"}]}]},{"type":"element","tag":"br","props":{},"children":[]},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]},{"type":"element","tag":"pre","props":{"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 2,\n    \"result\":\n    {\n        \"txId\" : \"10c4b760c842433cb58339a0fafef3db\"\n    }\n}\n","language":"json","meta":"","className":["language-json"]},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 2,\n    \"result\":\n    {\n        \"txId\" : \"10c4b760c842433cb58339a0fafef3db\"\n    }\n}\n"}]}]},{"type":"element","tag":"pre","props":{"code":"  Returns transaction id or [error code](#Errors). \n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"  Returns transaction id or [error code](#Errors). \n"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"if yoiu want to calculate the change amount for transaction use "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"calc_change"}]},{"type":"text","value":", it calculates the change value for given "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"amount"}]},{"type":"text","value":" in for given "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_id"}]},{"type":"element","tag":"br","props":{},"children":[]},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]},{"type":"element","tag":"pre","props":{"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"method\":\"calc_change\", \n    \"params\":\n    {\n        \"amount\" : 1234,\n        \"asset_id\": 2,\n        \"fee\": 10000,\n        \"is_push_transaction\": true\n    }\n}\n","language":"json","meta":"","className":["language-json"]},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"method\":\"calc_change\", \n    \"params\":\n    {\n        \"amount\" : 1234,\n        \"asset_id\": 2,\n        \"fee\": 10000,\n        \"is_push_transaction\": true\n    }\n}\n"}]}]},{"type":"element","tag":"br","props":{},"children":[]},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]},{"type":"element","tag":"pre","props":{"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"result\":\n    {\n        \"asset_change\": 12,\n        \"asset_change_str\": \"12\",\n        \"change\": 12,\n        \"change_str\": \"12\",\n        \"explicit_fee\": 1100000,\n        \"explicit_fee_str\": \"1100000\"\n    }\n}\n","language":"json","meta":"","className":["language-json"]},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"result\":\n    {\n        \"asset_change\": 12,\n        \"asset_change_str\": \"12\",\n        \"change\": 12,\n        \"change_str\": \"12\",\n        \"explicit_fee\": 1100000,\n        \"explicit_fee_str\": \"1100000\"\n    }\n}\n"}]}]},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"where"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"amount"}]},{"type":"text","value":" is a requested amount we are going to send"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_id"}]},{"type":"text","value":" asset id of the requested amount"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"fee"}]},{"type":"text","value":" explicit fee in GROTHs chosen by the user"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_change"}]},{"type":"text","value":" change amount for requested "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_id"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"change"}]},{"type":"text","value":" change in for BEAM. "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_change"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"change"}]},{"type":"text","value":" are equal if "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_id == 0"}]},{"type":"text","value":", i.e. BEAM"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"explicit_fee"}]},{"type":"text","value":" the fee which should be used"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"is_push_transaction"}]},{"type":"text","value":" "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"true"}]},{"type":"text","value":" if we are going to push transaction output into the shielded pool."}]}]}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"tldr","depth":2,"text":"TLDR;"},{"id":"confidential-assets","depth":2,"text":"Confidential Assets","children":[{"id":"enable-ca-support","depth":3,"text":"Enable CA support"}]}]}},"_type":"markdown","_id":"content:docs:core-tech:Adding-support-for-Beam-Confidential-Asset.md","_source":"content","_file":"docs/core-tech/Adding-support-for-Beam-Confidential-Asset.md","_extension":"md"},{"_path":"/docs/core-tech/asset-descriptor-v1.0","_dir":"core-tech","_draft":false,"_partial":false,"_locale":"","title":"Abstract","description":"The assets are described here","body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"abstract"},"children":[{"type":"text","value":"Abstract"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The assets are described "},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/wiki/Confidential-assets","rel":["nofollow"]},"children":[{"type":"text","value":"here"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This document's purpose is to specify the asset metadata, to enable 3rd party tools to consume and display the subset of asset-related information in a simple and well-standardized manner."}]},{"type":"element","tag":"h2","props":{"id":"general-notes"},"children":[{"type":"text","value":"General notes"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Asset meta is a byte buffer associated with the asset and stored on chain."}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Asset metadata should be an UTF-8 string"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Asset metadata should be serialized as a simple name=value set of pairs, delimited with "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":";"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"keyN=valueN;"}]},{"type":"text","value":" sequence must be preceded with "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"STD:"}]},{"type":"text","value":" prefix, there is no need for "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":";"}]},{"type":"text","value":" at the sequence end"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The total size of the metadata cannot exceed 16 Kbytes (16,384 bytes)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Every description should be in English"}]}]},{"type":"element","tag":"h2","props":{"id":"asset-metadata-has-2-groups-of-properties"},"children":[{"type":"text","value":"Asset metadata has 2 groups of properties:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Standard properties"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Optional properties"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"WARNING:"}]},{"type":"text","value":" Both types of properties are immutable and can't be changed after the asset is created. Therefore it is strongly recommended to double-check the values before starting the asset registration."}]},{"type":"element","tag":"h1","props":{"id":"standard-properties-mandatory"},"children":[{"type":"text","value":"Standard properties, mandatory"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"SCH_VER="}]},{"type":"text","value":" metadata schema version, currently must be "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"1"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"N="}]},{"type":"text","value":" human-readable asset name, for example Beam Coin"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"SN="}]},{"type":"text","value":" human-readable short name/asset code, for example BEAM. Length should not exceed 6 characters."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"UN="}]},{"type":"text","value":" human-readable asset unit name, for example Beam"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"NTHUN="}]},{"type":"text","value":" human-readable smallest asset unit name (nth-unit name), for example Groth"}]}]},{"type":"element","tag":"h1","props":{"id":"standard-properties-non-mandatory"},"children":[{"type":"text","value":"Standard properties, non-mandatory"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"NTH_RATIO="}]},{"type":"text","value":" integer that represents the ratio of the smallest asset unit to regular unit. If omitted default value of "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"100000000"}]},{"type":"text","value":" is used"}]}]},{"type":"element","tag":"h1","props":{"id":"optional-properties"},"children":[{"type":"text","value":"Optional properties"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"OPT_SHORT_DESC="}]},{"type":"text","value":" an one-liner, should not exceed 128 characters"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"OPT_LONG_DESC="}]},{"type":"text","value":" a paragraph, should not exceed 1024 characters"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"OPT_SITE_URL="}]},{"type":"text","value":" URL of the asset website"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"OPT_PDF_URL="}]},{"type":"text","value":" URL for the description paper"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"OPT_FAVICON_URL="}]},{"type":"text","value":" URL of the favicon"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"OPT_LOGO_URL="}]},{"type":"text","value":" URL of the logo in SVG vector format"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"OPT_COLOR="}]},{"type":"text","value":" color in the hex format (#FF00FF for example) to be used by the UI to display this asset. If not specified default color would be generated. Currently default colors are based on the asset id"}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"general-notes","depth":2,"text":"General notes"},{"id":"asset-metadata-has-2-groups-of-properties","depth":2,"text":"Asset metadata has 2 groups of properties:"}]}},"_type":"markdown","_id":"content:docs:core-tech:Asset-Descriptor-v1.0.md","_source":"content","_file":"docs/core-tech/Asset-Descriptor-v1.0.md","_extension":"md"},{"_path":"/docs/core-tech/atomic-swap-token","_dir":"core-tech","_draft":false,"_partial":false,"_locale":"","title":"Atomic swap token","description":"","body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"atomic-swap-token"},"children":[{"type":"text","value":"Atomic swap token"}]},{"type":"element","tag":"h2","props":{"id":"overview"},"children":[{"type":"text","value":"Overview"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Swap token is intended to allow users to exchange info about transactions(swap) via any side channels.\nIn general, token is serialized list of transaction parameters, presented as a base58 encoded byte buffer."}]},{"type":"element","tag":"h2","props":{"id":"description"},"children":[{"type":"text","value":"Description"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Token has the following fields:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"- flags              // 1 byte"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"- optional TxID      // 1 or 17 bytes"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"- list of parameters // not less than 34 byte since transaction should have at least one address parameter"}]}]},{"type":"element","tag":"h3","props":{"id":"flags"},"children":[{"type":"text","value":"flags"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Flags is a 1-byte field where only the highest bit is defined the others are reserved.\n0x80 means that this is a token."}]},{"type":"element","tag":"h3","props":{"id":"tx-id"},"children":[{"type":"text","value":"tx ID"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This is an optional transaction ID. All swap transaction should have this value. It is optional for the cases if we will use the token structure for other types of transaction.\nThere are two possible values:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"|0x01| 16 byte UUID|"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"or"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"|0x00| "}]}]},{"type":"element","tag":"h3","props":{"id":"transaction-parameters"},"children":[{"type":"text","value":"Transaction parameters"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Transaction parameter is a pair of the parameter key and value.\nThe key is 1 byte value and its meaning is defined by "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"TxParameterID "}]},{"type":"text","value":"enum from "},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/blob/master/wallet/common.h","rel":["nofollow"]},"children":[{"type":"text","value":"wallet/common.h"}]},{"type":"text","value":"\nThe values are arrays of bytes and contain serialized values.\nThe value type and size is defined by the key meaning. All integer types are big-endian."}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"overview","depth":2,"text":"Overview"},{"id":"description","depth":2,"text":"Description","children":[{"id":"flags","depth":3,"text":"flags"},{"id":"tx-id","depth":3,"text":"tx ID"},{"id":"transaction-parameters","depth":3,"text":"Transaction parameters"}]}]}},"_type":"markdown","_id":"content:docs:core-tech:Atomic-swap-token.md","_source":"content","_file":"docs/core-tech/Atomic-swap-token.md","_extension":"md"},{"_path":"/docs/core-tech/atomic-swap","_dir":"core-tech","_draft":false,"_partial":false,"_locale":"","title":"Atomic Swap","description":"Atomic swap is performed between Beam and other cryptocurrency. Denote it BTC, but actually it can denote other network that supports the needed functionality.","body":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Atomic swap is performed between Beam and other cryptocurrency. Denote it BTC, but actually it can denote other network that supports the needed functionality."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The swap is performed in a single transaction, which effectively transfers the ownership of the Beam UTXO in exchange for some secret, which is needed to claim the being-exchanged coin on the BTC network."}]},{"type":"element","tag":"h1","props":{"id":"high-level-design"},"children":[{"type":"text","value":"High-level design"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"There are two parties:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"A"}]},{"type":"text","value":"lice. Owns the Beam, interested to trade it for the BTC"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"B"}]},{"type":"text","value":"ob. Owns the BTC, interested to trade it for the Beam."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"There are 3 major phases of the atomic swap"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Prerequesites\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The being-exchanged UTXOs are locked on both networks for a specific time period (in terms of blocks)."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Parties monitor both networks to ensure the source UTXOs are indeed locked."}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Exchange\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Parties collaborate to create a transaction that transfers the locked Beam to "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"B"}]},{"type":"text","value":" in exchange for the secret."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"B"}]},{"type":"text","value":" substitutes the secret to the transaction and finally broadcasts it to the network."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Once transaction is visible - "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"A"}]},{"type":"text","value":" learns the secret."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"A"}]},{"type":"text","value":" creates a BTC transaction to claim the BTC UTXO, and broadcasts it to the BTC network."}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Rollback. In case the swap didn't take place (for whatever reason)\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Locked UTXOs on both network should remain intact until their lock timeout expires."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"After the timeout expiration parties broadcast transactions that transfers the locked UTXOs back to them."}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Note that "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"A"}]},{"type":"text","value":" actually claims the BTC UTXO "},{"type":"element","tag":"u","props":{},"children":[{"type":"text","value":"after"}]},{"type":"text","value":" sending the Beam UTXO. This means that the lock timeout of the BTC UTXO must be significantly bigger than that of the Beam UTXO, because "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"B"}]},{"type":"text","value":" may broadcast the Beam transaction just before the timeout expires, the "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"A"}]},{"type":"text","value":" should still have enough time to build and broadcast the BTC transaction."}]},{"type":"element","tag":"h1","props":{"id":"technical-design"},"children":[{"type":"text","value":"Technical design"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"unlock secret"}]},{"type":"text","value":" is the SHA-256 hash preimage (i.e. a 256-bit value which, after hashing, should be equal to a known 256-bit value). Supported on Beam, BTC, and, probably, many other networks."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Note"}]},{"type":"text","value":": The drawback of this scheme is a considerable privacy compromise. As we'll see, it's possible for the attacker to detect such an atomic swap, by looking for the matching hash preimages in both networks."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"There is a better option, where the "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"unlock secret"}]},{"type":"text","value":" is an EC scalar, i.e. private key. It's based on the so-called aggregate signatures. It's less generic, since it assumes both networks use the same EC equation and the Generator."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"So we'll review the scheme with the Hash-lock, but keep in mind that it can easily be modified to the one with the aggregate signature, and the rest of the argument, and the general flow are exactly the same."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"There are no scripts in Beam blockchain. However the following is supported in the transaction kernel:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Timelock - minimum blockchain height for the kernel to be valid"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"HashPreimage"}]}]},{"type":"element","tag":"h2","props":{"id":"utxo-lock-on-btc-network"},"children":[{"type":"text","value":"UTXO lock on BTC network"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"B"}]},{"type":"text","value":" broadcasts a BTC transaction, which creates an UTXO which can be spent under the following conditions:"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Timeout + secret key chosen by "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"B"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Hash preimage chosen by "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"B"}]},{"type":"text","value":" + secret key chosen by "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"A"}]}]}]},{"type":"element","tag":"h2","props":{"id":"utxo-lock-on-beam-network"},"children":[{"type":"text","value":"UTXO lock on Beam network"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This part is somewhat more complex, since there are no scripts in Beam. "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"A"}]},{"type":"text","value":" and "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"B"}]},{"type":"text","value":" collaborate to create a "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"shared"}]},{"type":"text","value":" UTXO, whose blinding factor is shared between them."}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"A"}]},{"type":"text","value":" and "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"B"}]},{"type":"text","value":" randomly choose their parts of the blinding factor for the shared UTXO"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"A"}]},{"type":"text","value":" and "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"B"}]},{"type":"text","value":" first create the \"rollback\" transaction, which would transfer the shared UTXO back to "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"A"}]},{"type":"text","value":" if the exchange didn't take place.\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"This transaction kernel is Time-locked, i.e. transaction can only be broadcasted starting from specific blockchain height."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"A"}]},{"type":"text","value":" saves this transaction, but doesn't broadcast yet."}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"A"}]},{"type":"text","value":" and "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"B"}]},{"type":"text","value":" create the transaction that spends "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"A"}]},{"type":"text","value":"'s UTXO and creates the shared one.\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The tricky part is creating the Bulletproof for the shared UTXO. Takes 3 iterations."}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"They broadcast this transaction to the Beam network, to create the shared UTXO."}]}]},{"type":"element","tag":"h2","props":{"id":"exchange-transaction"},"children":[{"type":"text","value":"Exchange transaction"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"At this point both Beam and BTC UTXOs are locked, both parties get confirmations for this. In addition "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"A"}]},{"type":"text","value":" knows the "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Image"}]},{"type":"text","value":" of the locked BTC UTXO. Now they collaborate to build a Beam transaction that transfers the shared (locked) Beam UTXO to "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"B"}]},{"type":"text","value":" in exchange for revealing the "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Hash Preimage"}]},{"type":"text","value":", which, after hashing, equals to the known "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Image"}]},{"type":"text","value":"."}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"B"}]},{"type":"text","value":" randomly chooses the blinding factor for the new UTXO"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"A"}]},{"type":"text","value":" creates the Transaction Kernel, which is supposed to contain the "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Hash Preimage"}]},{"type":"text","value":" (but doesn't contain yet), which corresponds to the knwo "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Image"}]},{"type":"text","value":"."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"A"}]},{"type":"text","value":" puts her part of the kernel multisig, which assumes the correct "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Image"}]},{"type":"text","value":"."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Incomplete transaction is passed to "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"B"}]},{"type":"text","value":"."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"B"}]},{"type":"text","value":" puts his part of the kernel multisig, which assumes the correct "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Image"}]},{"type":"text","value":" (same as Alice)."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"u","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"B"}]},{"type":"text","value":" substitutes the correct "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Hash Preimage"}]},{"type":"text","value":" to make the transaction kernel valid."}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"This is where the atomic swap actually occurs!"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"B"}]},{"type":"text","value":" broadcasts the transaction to the Beam network."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"A"}]},{"type":"text","value":" monitors the Beam network. Once the exchange transaction kernel is visible:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"A"}]},{"type":"text","value":" realized that the exchange occurred."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"A"}]},{"type":"text","value":" learns the "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Hash Preimage"}]},{"type":"text","value":"."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"A"}]},{"type":"text","value":" creates and broadcasts the BTC transaction to claim her BTC UTXO."}]}]},{"type":"element","tag":"h1","props":{"id":"in-depth-flow-diagram"},"children":[{"type":"text","value":"In-depth flow diagram"}]},{"type":"element","tag":"h2","props":{"id":"bob"},"children":[{"type":"text","value":"Bob"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Collaborate to lock the BTC UTXO\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Get "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Pka"}]},{"type":"text","value":" from "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"A"}]},{"type":"text","value":" - her generated pubkey for some secret key "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"ska"}]},{"type":"text","value":"."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Generate the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"hpi"}]},{"type":"text","value":" - the "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Hash Preimage"}]},{"type":"text","value":"."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"hi = Hash(hpi)"}]},{"type":"text","value":" - the "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Hash Image"}]},{"type":"text","value":"."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Generate and broadcast the transaction that creates a locked BTC UTXO.\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The created UTXO can be spent iff both "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"hpi"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"ska"}]},{"type":"text","value":" are known."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"hi"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Pka"}]},{"type":"text","value":" are revealed."}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Send "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"A"}]},{"type":"text","value":" this transaction (so she'll be able to identify it in the BTC network)."}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Collaborate to lock the Beam UTXO\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Generate "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"sfb"}]},{"type":"text","value":" - the part of the blinding factor of the shared UTXO."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Get "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Pfa"}]},{"type":"text","value":" - "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"A"}]},{"type":"text","value":"'s part of the public blinding factor (of the shared UTXO)."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Collaborate to sign the kernel for the transaction that transfers the shared (non-existing yet) UTXO back to "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"A"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"u","props":{},"children":[{"type":"text","value":"The kernel must be time-locked"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"B"}]},{"type":"text","value":"'s part of the signature accounts for the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"sfb"}]},{"type":"text","value":"."}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Collaborate to create the Bulletproof of the shared UTXO.\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"requires 3 iteration cycles with "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"A"}]}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Collaborate to sign the kernel for the transaction that creates the shared UTXO\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"B"}]},{"type":"text","value":"'s part of the signature accounts for the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"sfb"}]},{"type":"text","value":"."}]}]}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"u","props":{},"children":[{"type":"text","value":"Wait until the mutual UTXO becomes visible"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Collaborate to build the exchange transaction\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Transaction kernel is supposed to (but doesn't yet) contain the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"hpi"}]},{"type":"text","value":".\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Means - its signature signs the kernel contents, including "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Hash(hpi) == hi"}]},{"type":"text","value":", whereas "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"hi"}]},{"type":"text","value":" is known to both parties."}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Generate the new UTXO"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Pass it to "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"A"}]},{"type":"text","value":" so that she creates such a kernel, and substitutes her part of the signature."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Get the half-signed kernel from "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"A"}]},{"type":"text","value":", and verify it."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"u","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Important:"}]},{"type":"text","value":" Ensure there is enough time left until the timelock of the shared UTXO expires!"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Finish the kernel signature.\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Substitute the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"hpi"}]},{"type":"text","value":" as the "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Hash Preimage"}]},{"type":"text","value":"."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Complete the signature."}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Broadcast the transaction to the Beam network."}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"u","props":{},"children":[{"type":"text","value":"Wait until the exchange transaction becomes visible, or until the BTC UTXO timelock expires."}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"If the transaction is visible (and enough new blocks are generated above) - Congratulations! It's done."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"If the BTC UTXO timelock expired and it's still unspent - take it back (create and broadcast another BTC transaction)."}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"alice"},"children":[{"type":"text","value":"Alice"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Collaborate to lock the BTC UTXO\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Generate "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"ska"}]},{"type":"text","value":" - private key on the BTC network."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Send "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Pka = G * ska"}]},{"type":"text","value":" to "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"B"}]},{"type":"text","value":"."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Receive the BTC transaction details from "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"B"}]},{"type":"text","value":", and verify it\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Correct amount is locked."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Can be spent using "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"ska"}]},{"type":"text","value":", and a "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Preimage"}]},{"type":"text","value":" of "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"hi"}]},{"type":"text","value":" (the preimage is not known yet)."}]}]}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Collaborate to lock the Beam UTXO\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Select input(s) to build the transaction that creates the shared UTXO"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Generate "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"sfa"}]},{"type":"text","value":" - the part of the blinding factor of the shared UTXO."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Get "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Pfb"}]},{"type":"text","value":" - "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"B"}]},{"type":"text","value":"'s part of the public blinding factor (of the shared UTXO)."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Collaborate with "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"B"}]},{"type":"text","value":" to build:\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"A time-locked rollback transaction that transfers the shared (non-existing yet) UTXO back to "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"A"}]},{"type":"text","value":".\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"u","props":{},"children":[{"type":"text","value":"It must be created before the shared UTXO is actually created."}]}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Bulletproof for the shared UTXO"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Transaction that spends the selected inputs and creates the shared UTXO"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Send the transaction to create the shared UTXO to the network"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"u","props":{},"children":[{"type":"text","value":"Wait until the locked BTC UTXO becomes visible in the BTC network"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"u","props":{},"children":[{"type":"text","value":"Ensure the BTC timelock is significantly bigger than the Beam timelock"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Collaborate to build the exchange transaction\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Transaction kernel is supposed to (but doesn't yet) contain the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"hpi"}]},{"type":"text","value":"."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"A"}]},{"type":"text","value":" creates such a kernel, puts her part of the signature, which\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Corresponds to her part of the shared UTXO (compensates for "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"ska"}]},{"type":"text","value":")."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Would become valid only when the correct "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Hash Preimage"}]},{"type":"text","value":" ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"hpi"}]},{"type":"text","value":") will be substituted."}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Half-signed transaction is passed to "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"B"}]}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"u","props":{},"children":[{"type":"text","value":"Wait until the exchange transaction becomes visible, or until the Beam UTXO timelock expires."}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Once the transaction is visible:\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"A"}]},{"type":"text","value":" learns the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"hpi"}]},{"type":"text","value":" from the visible transaction kernel"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"A"}]},{"type":"text","value":" Creates and broadcasts the BTC transaction to claim the BTC UTXO"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"If the Beam UTXO timelock expired and it's still unspent\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Broadcast the rollback transaction to the network"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Wait until the transaction (either post-exchange or the rollback) becomes visible."}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"swap-diagram"},"children":[{"type":"text","value":"Swap diagram"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"Atomic Swap Diagram","src":"https://user-images.githubusercontent.com/2501619/60335463-abf39900-99a6-11e9-83ae-9494ea9e3577.png"},"children":[]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"utxo-lock-on-btc-network","depth":2,"text":"UTXO lock on BTC network"},{"id":"utxo-lock-on-beam-network","depth":2,"text":"UTXO lock on Beam network"},{"id":"exchange-transaction","depth":2,"text":"Exchange transaction"},{"id":"bob","depth":2,"text":"Bob"},{"id":"alice","depth":2,"text":"Alice"},{"id":"swap-diagram","depth":2,"text":"Swap diagram"}]}},"_type":"markdown","_id":"content:docs:core-tech:Atomic-swap.md","_source":"content","_file":"docs/core-tech/Atomic-swap.md","_extension":"md"},{"_path":"/docs/core-tech/authorization-control-and-signatures-in-contracts","_dir":"core-tech","_draft":false,"_partial":false,"_locale":"","title":"Authorization Control And Signatures In Contracts","description":"In the most common cases the contract method calls Env::AddSig() for each needed public key, and the app shader includes the key material for each key within the SigRequest structure, when it calls Env::GenerateKernel().","body":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In the most common cases the contract method calls "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Env::AddSig()"}]},{"type":"text","value":" for each needed public key, and the app shader includes the key material for each key within the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"SigRequest"}]},{"type":"text","value":" structure, when it calls "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Env::GenerateKernel()"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This is a preferred method to design a contract and its application, as it has the following advantages:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Performance: native signature is both compact and fast."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Security: apps have no access to secret keys, they can only derive public keys."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Simplicity."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"However there are more complex situations, where either several users are required to authorize a method call, or a custom signature scheme is required (such as m-out-of-n signature)."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Those may include:"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Explicit multisignatures. Several keys are verified (mutliple calls to "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Env::AddSig()"}]},{"type":"text","value":"), belonging to different users."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Seemless multisignatures. There is a single key, but it is a sum (or any linear combination) of several keys, belonging to different users."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Non-standard signature is needed (ring signatures and etc.)."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Any combination of the above"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"On the contract side those are supported. In addition to "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Env::AddSig()"}]},{"type":"text","value":" (which can be invoked arbitrary number of times) the contract has access to "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Secp"}]},{"type":"text","value":" primitives, using which it can implement custom cryptographic scheme verification."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"For apps, however, the default functionality is not enough. Creating a multisigned transaction that is supposed to invoke such a contract assumes that different wallets should cooperate and communicate on behalf of the apps."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"So we extended the BVM functionality to support all the variety of possible signature schemes. Though apps still don't get direct access to secret keys with the added functions, the risk is somewhat greater (more about this later), hence to use those extra functions the app needs an "},{"type":"element","tag":"u","props":{},"children":[{"type":"text","value":"elevated privilege level"}]},{"type":"text","value":" (OFF by default)."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Technically those functions are:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Nonce Slots management functions"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"getting an image of a key or a slot, with either standard ("},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"G"}]},{"type":"text","value":") or any custom generator"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"getting a blinded key"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Communication support (via SBBS system)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Env::GenerateKernelAdvanced()"}]},{"type":"text","value":" - with more specific signature control"}]}]},{"type":"element","tag":"h2","props":{"id":"nonce-slots-and-blinded-keys"},"children":[{"type":"text","value":"Nonce slots and blinded keys"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"(the idea of nonce slots is the same as in our HW wallet design)"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Generally our supported signatures follow this ritual: first a unique nonce is generated and its image is exposed (in some manner). Then, during the signing, a pseudo-random challenge is derived, and the prover should reveal a linear combination of the secret key and the nonce, a.k.a. blinded key."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This scheme is applicable to Schnorr's signature, Ring signature, Groth's 1-out-of-many, and probably many others.\nIt's "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"critically"}]},{"type":"text","value":" important to make sure the nonce is unique, i.e. not reused for the same secret key in different signatures."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"So we decided to add appropriate support functions for the apps: generate unique nonces, get their images, and get blinded keys:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Generate unique nonce.\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"BVM generates a nonce using system random and state mutation."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"optionally app can specify extra seed data to strengthen the nonce (i.e. less dependency on system random)."}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Get nonce image (arbitrary number of times, with arbitrary generators)."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Get blinded key.\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The app supplies the needed key material (a.k.a. "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"KeyID"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"SigRequest"}]},{"type":"text","value":"), arbitrary challenge (scalar) and the nonce slot number."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Once the nonce is used - it's immediately wiped."}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"By such apps are given opportunity to build complex signature schemes, without either direct access to the secret keys, or the feasible opportunity to extract them."}]},{"type":"element","tag":"h1","props":{"id":"building-a-custom-signature-scheme"},"children":[{"type":"text","value":"Building a custom signature scheme"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"As we mentioned, an app can create a custom signature (such as Ring signature), include it in the contract method invocation arguments, then the contract shader may verify it by implementing the needed verification scheme (in terms of "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Secp"}]},{"type":"text","value":" primitives)."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Apps can generate such signatures by the provided functionality: obtaining nonce images, and getting blinded keys for the needed challenges."}]},{"type":"element","tag":"h3","props":{"id":"risk-of-signature-hijacking"},"children":[{"type":"text","value":"Risk of signature "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"hijacking"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"When using native signature ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"SigRequest"}]},{"type":"text","value":"/"},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"AddSig()"}]},{"type":"text","value":"), it's included in the kernel multi-signature, which also includes its blinding factor. Other users can't take it as-is and use in their transactions (it's not feasible to build a transaction with unknown blinding factor)."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In contrast, the custom signature is not automatically bound to the kernel blinding factor. Hence any other user that monitors transactions can build its own transaction that invokes the same method with exactly the same arguments."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"To mitigate this threat we recommend the following scheme:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Normally challenges for signatures are derived using "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Random Oracle Model"}]},{"type":"text","value":", which is initialized with the message being-signed, this binds the signature for this specific message."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"So we recommend deriving an arbitrary ephemeral (unique) key. Its image (pubKey) should be included in the method arguments, and initialize the "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Oracle"}]},{"type":"text","value":" (challenges derivation), "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"AND"}]},{"type":"text","value":" it also should be included in the "},{"type":"element","tag":"u","props":{},"children":[{"type":"text","value":"native"}]},{"type":"text","value":" kernel signature (i.e. "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Env::AddSig()"}]},{"type":"text","value":")."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"So we recommend using a hybrid of a custom and native signatures. Instead of binding the signature to a message, we recommend binding it to an ephemeral key, whose signature in turn is bound to the kernel blidning factor. By such it's no more feasible to hijack the signature."}]},{"type":"element","tag":"h1","props":{"id":"building-a-mutli-signed-transaction-using-native-signature"},"children":[{"type":"text","value":"Building a mutli-signed transaction using native signature"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In simple scenario the app calls "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Env::GenerateKernel()"}]},{"type":"text","value":", and supplies the info about how it should be signed (gives array of "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"SigRequest"}]},{"type":"text","value":"), the signing itself is deferred until a later stage. Hence some kernel parameters may still vary: min/max height, fee."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"For multi-signed transactions this is different. All the kernel parameters must be decided in advance, so that all the challenges can be derived.\nThose include:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Standard parameters: "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"contractID"}]},{"type":"text","value":", method number, args"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"min/max heights"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"kernel fee"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Funds balance"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Kernel blinding factor image\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"together with Funds balance is used to derive kernel "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Commitment"}]}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Total nonce image, which includes\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"internal BVM nonce for the kernel blinding factor"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"all the nonces the app uses for the keys used in the signature"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"all the nonces the apps running in different wallets use for their keys"}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"From all this the challenges are derived."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Then it's the apps's task to calculate the signature: the sum of all the needed blinded keys (its own, as well as of other users)."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Technically the flow goes like this:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Decide auxiliary kernel parameters (heights, fee)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"get nonce images"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"get the image of additional nonce, which would be used by the BVM to blind the kernel blinding factor"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"for all the co-signers:\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"co-signers send their (cumulative) nonces for their keys"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"sum all the nonces"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Call Env::GenerateKernelAdvanced() for the 1st time to derive the challenges"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Extract the blinded keys, using the appropriate nonces and derived challenges"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"for all the co-signers:\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Signer sends them the total nonce and the kernel blidning factor, so that they cal also derive the challenges"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"co-Signers reply with the sum of their blinded keys"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"sum those blinded keys to get a multi-signature"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Invoke Env::GenerateKernelAdvanced() for the 2nd time, to finally build the transaction."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Some examples of this flow:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"vault"}]},{"type":"text","value":" app: example of a seamless multisignature, where a vault "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"PubKey"}]},{"type":"text","value":" is actually a sum of the keys of 2 users. The contract code is unmodified (i.e. doesn't care if this is a multi-owned account)."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"upgradable2"}]},{"type":"text","value":" contract and app: example of an explicit multisignature, where the contract demands authorization by multiple keys."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"more examples to come, to demonstrate custom signature schemes"}]}]},{"type":"element","tag":"h1","props":{"id":"security-considerations"},"children":[{"type":"text","value":"Security considerations"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"When app is invoked in the wallet, it's possible to define its "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"privilege level"}]},{"type":"text","value":", which may restrict its access to potentially dangerous functionality."}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Level 0: apps have no access to any user-specific info, and no permission to create transactions. They can only interpret and display the blockchain status information. This is considered safe (though of course the info that app displays may be misleading)."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Level 1 (default): Apps have an access to user's public keys (only those related to contracts), and can ask to create transactions. For the transactions the user sees the resulting balance (funds in/out), and they need user approval. There are 2 risks to consider:"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"There is no reliable way to know it the funds are spent as supposed. A malicious app can steal those funds by sending them such that they won't be accessible by the user in the future."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"App may try to deanonymize the user. It may derive multiple public keys, which are normally intended for different contracts, and expose them in some transaction in a seamless way (a disguised parameter to some contract, recognized by the attacker)."}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Level 2: Apps have access to blinded keys."},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"A malicious app can sign "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"arbitrary"}]},{"type":"text","value":" transaction to steal the user funds."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Although such a risk already exists at privilege level 1, here it's somewhat greater, because the leaked signature may be used later, not necessarily during the app invocation."}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Level 3: Apps have access to inter-wallet communication."},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"This somewhat increases the risk of disguised signature leakage: Rather than hiding the leaked signature for the attacker on-chain in the explicit tx, a malicious app can now communicate it directly to the attacker."}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"conclusion"},"children":[{"type":"text","value":"Conclusion"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"At any privilege level above 0 there is a risk of deanonymization and funds theft. So we strongly suggest using only trusted apps: either reviewed and built by the user, or signed by trusted 3rd-party developers."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Anyway the deanonymization and theft risks are bounded by the contracts. Apps have no access to other wallet keys (UTXOs, shielded outputs, onwer key, and etc."}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"nonce-slots-and-blinded-keys","depth":2,"text":"Nonce slots and blinded keys","children":[{"id":"risk-of-signature-hijacking","depth":3,"text":"Risk of signature hijacking"}]},{"id":"conclusion","depth":2,"text":"Conclusion"}]}},"_type":"markdown","_id":"content:docs:core-tech:Authorization-control-and-signatures-in-contracts.md","_source":"content","_file":"docs/core-tech/Authorization-control-and-signatures-in-contracts.md","_extension":"md"},{"_path":"/docs/core-tech/avx","_dir":"core-tech","_draft":false,"_partial":false,"_locale":"","title":"AVX","description":"Advanced Vector Extensions (AVX, also known as Sandy Bridge New Extensions) are extensions to the x86 instruction set architecture for microprocessors from Intel and AMD proposed by Intel in March 2008 and first supported by Intel with the Sandy Bridge processor shipping in Q1 2011 and later on by AMD with the Bulldozer processor shipping in Q3 2011. AVX provides new features, new instructions and a new coding scheme.","body":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Advanced Vector Extensions (AVX, also known as Sandy Bridge New Extensions) are extensions to the x86 instruction set architecture for microprocessors from Intel and AMD proposed by Intel in March 2008 and first supported by Intel with the Sandy Bridge processor shipping in Q1 2011 and later on by AMD with the Bulldozer processor shipping in Q3 2011. AVX provides new features, new instructions and a new coding scheme."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"For now we separate our builds in two categories:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"with AVX instructions set"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"without AVX instructions set"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"If you are not sure is the AVX support at your PC please check description of your processor.\n"},{"type":"element","tag":"a","props":{"href":"https://prntscr.com/llj7mj","rel":["nofollow"]},"children":[{"type":"text","value":"Example"}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[]}},"_type":"markdown","_id":"content:docs:core-tech:AVX.md","_source":"content","_file":"docs/core-tech/AVX.md","_extension":"md"},{"_path":"/docs/core-tech/beam-eager-electron-5.0-upgrade-guide-for-pools-and-exchanges","_dir":"core-tech","_draft":false,"_partial":false,"_locale":"","title":"Beam Eager Electron 5.0 Upgrade Guide for pools and exchanges","description":"Beam Eager Electron 5.0 includes breaking Hard Fork that will be activated on height 777,777 (around 28th of June 2020). It is important to complete all upgrade before that date.","body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"beam-eager-electron-50-upgrade-guide-for-pools-and-exchanges"},"children":[{"type":"text","value":"Beam Eager Electron 5.0 Upgrade Guide for pools and exchanges"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Beam Eager Electron 5.0 includes breaking Hard Fork that will be activated on height 777,777 (around 28th of June 2020). It is important to complete all upgrade before that date."}]},{"type":"element","tag":"h2","props":{"id":"mining-algorithm-update"},"children":[{"type":"text","value":"Mining algorithm update"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Eager Electron 5.0 includes change in the mining algorithm. Please make sure your miners are updated to support Beam Hash III algorithm and auto switch at the hard fork block height."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"IMPORTANT"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Before starting the upgrade procedure it is highly recommended to stop the wallets and back up the wallet.db files."}]},{"type":"element","tag":"h2","props":{"id":"upgrading-the-node-and-the-wallet"},"children":[{"type":"text","value":"Upgrading the node and the wallet"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Download the new binaries from "},{"type":"element","tag":"a","props":{"href":"https://beam.mw/downloads","rel":["nofollow"]},"children":[{"type":"text","value":"Beam Website"}]},{"type":"text","value":" or build from "},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/tree/mainnet","rel":["nofollow"]},"children":[{"type":"text","value":"source"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"When you first run the new wallet and node binaries on the old databases, the database structure will be upgraded to a new version. This can take a lot of time and it is normal."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"In order to guarantee network connectivity, we recommend to use the following parameters in your node configuration:"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"peers_persistent=1"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"peer=ap-nodes.mainnet.beam.mw:8100, eu-nodes.mainnet.beam.mw:8100, us-nodes.mainnet.beam.mw:8100, ap-hk-nodes.mainnet.beam.mw:8100"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Eager Electron 5.0 introduces support for Confidential Assets. This means that there could be additional coins and tokens traded on the Beam network. By default the wallet support for these assets is "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"DISABLED"}]},{"type":"text","value":". The pools should keep this option disabled. If you are an exchange and wish to enable support for Confidential Assets in the 5.0 please contact Beam Team directly for guidance."}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"mining-algorithm-update","depth":2,"text":"Mining algorithm update"},{"id":"upgrading-the-node-and-the-wallet","depth":2,"text":"Upgrading the node and the wallet"}]}},"_type":"markdown","_id":"content:docs:core-tech:Beam-Eager-Electron-5.0-Upgrade-Guide-for-pools-and-exchanges.md","_source":"content","_file":"docs/core-tech/Beam-Eager-Electron-5.0-Upgrade-Guide-for-pools-and-exchanges.md","_extension":"md"},{"_path":"/docs/core-tech/beam-equihash-specification","_dir":"core-tech","_draft":false,"_partial":false,"_locale":"","title":"Beam Equihash specification","description":"","body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"beam-equihash-specification"},"children":[{"type":"text","value":"Beam Equihash specification"}]},{"type":"element","tag":"h2","props":{"id":"chosen-parameters"},"children":[{"type":"text","value":"Chosen parameters"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"N = 150"}]},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"K = 5"}]}]},{"type":"element","tag":"h2","props":{"id":"hash-generation-convention"},"children":[{"type":"text","value":"Hash generation convention"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Since 150 in not a multiple of 8 we pick 19 full bytes and clear lower 2 bits of 18th byte.\nWe can get only 3 hashes from 512-bit "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"blake2"}]},{"type":"text","value":" output.\nExpected blake2 hash output size is "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"3 * 19 = 57"}]},{"type":"text","value":" bytes"}]},{"type":"element","tag":"h2","props":{"id":"implementation-for-cpu"},"children":[{"type":"text","value":"Implementation for CPU"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Beam’s Equihash implementation for CPU is based on zcash’s version.\n"},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/blob/master/3rdparty/crypto/equihash_impl.cpp","rel":["nofollow"]},"children":[{"type":"text","value":"https://github.com/BeamMW/beam/blob/master/3rdparty/crypto/equihash_impl.cpp"}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"chosen-parameters","depth":2,"text":"Chosen parameters"},{"id":"hash-generation-convention","depth":2,"text":"Hash generation convention"},{"id":"implementation-for-cpu","depth":2,"text":"Implementation for CPU"}]}},"_type":"markdown","_id":"content:docs:core-tech:Beam-Equihash-specification.md","_source":"content","_file":"docs/core-tech/Beam-Equihash-specification.md","_extension":"md"},{"_path":"/docs/core-tech/beam-fierce-fermion-6.0-upgrade-guide-for-pools-and-exchanges","_dir":"core-tech","_draft":false,"_partial":false,"_locale":"","title":"Beam Fierce Fermion 6.0 Upgrade Guide for pools and exchanges","description":"Beam Fierce Fermion 6.0 includes breaking Hard Fork that will be activated on height 1,280,000 (around 15:30 UTC, 13th of June 2021). It is important to complete all upgrade before that date.","body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"beam-fierce-fermion-60-upgrade-guide-for-pools-and-exchanges"},"children":[{"type":"text","value":"Beam Fierce Fermion 6.0 Upgrade Guide for pools and exchanges"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Beam Fierce Fermion 6.0 includes breaking Hard Fork that will be activated on height 1,280,000 (around 15:30 UTC, 13th of June 2021). It is important to complete all upgrade before that date."}]},{"type":"element","tag":"h2","props":{"id":"what-new-in-version-60"},"children":[{"type":"text","value":"What new in version 6.0"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Smart contracts."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Confidential Assets support in wallet API. Read more "},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/wiki/Adding-support-for-Beam-Confidential-Asset","rel":["nofollow"]},"children":[{"type":"text","value":"here"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"New types of transaction are available in the wallet API:"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Maximum privacy transaction"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Offline transaction"}]}]},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"In order to receive these transactions, there are no need to make any changes in code, but your wallet should be connected to the node with "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"owner_key"}]},{"type":"text","value":". If you want to send them you have to explicitly enable them in the wallet, and distinguish new address types."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"New address types in wallet API. We highly recommend to use these new addresses, this should bring better user experience both for sending and receiving. For backward compatibility, we preserved old address type.\nThe difference between new addresses and old are the following"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"new addresses are "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"base58"}]},{"type":"text","value":" encoded and have relatively long, old addresses are "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"hex"}]},{"type":"text","value":" encoded and have length 64-67 characters"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"new addresses can hold additional data for transaction, this allows us to make new type of transactions mentioned before and add more when it will be needed"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Starting from 6.0 Beam address should be validated using the following regular expression:"},{"type":"element","tag":"pre","props":{"code":"/[0-9a-zA-Z]{64,500}/\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"/[0-9a-zA-Z]{64,500}/\n"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Minimal fee has changed"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"For the "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"regular"}]},{"type":"text","value":" transaction has been increased up to 100,000 Groth"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"For "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"offline"}]},{"type":"text","value":" and "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"max privacy"}]},{"type":"text","value":" transaction it became 1,100,000 Groth (+1,000,000 Groth for each shielded output)"}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"upgrading-the-node-and-the-wallet"},"children":[{"type":"text","value":"Upgrading the node and the wallet"}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"IMPORTANT"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Before starting the upgrade procedure it is highly recommended to stop the wallets and back up the "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"wallet.db"}]},{"type":"text","value":" and "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"node.db"}]},{"type":"text","value":" files."}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Download the new binaries from "},{"type":"element","tag":"a","props":{"href":"https://beam.mw/downloads","rel":["nofollow"]},"children":[{"type":"text","value":"Beam Website"}]},{"type":"text","value":" or build from "},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/tree/mainnet","rel":["nofollow"]},"children":[{"type":"text","value":"source"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/wiki/Adding-support-for-Beam-Confidential-Asset","rel":["nofollow"]},"children":[{"type":"text","value":"Enable"}]},{"type":"text","value":" CA support if needed"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Update address verification. Now, "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"validate_address"}]},{"type":"text","value":" method returns additional info about address:"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]},{"type":"element","tag":"pre","props":{"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"result\" : \n    {\n        \"is_valid\" : true,\n        \"is_mine\" : false,\n        \"type\": \"offline\",  // <---------- NEW\n        \"payments\": 3       // <---------- NEW\n    }\n}\n","language":"json","meta":"","className":["language-json"]},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"result\" : \n    {\n        \"is_valid\" : true,\n        \"is_mine\" : false,\n        \"type\": \"offline\",  // <---------- NEW\n        \"payments\": 3       // <---------- NEW\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"type"}]},{"type":"text","value":" the type of address, possible values are"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"regular"}]},{"type":"text","value":" - regular old-style "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"hex"}]},{"type":"text","value":" encoded address, default"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"offline"}]},{"type":"text","value":" - new-style "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"base58"}]},{"type":"text","value":" encoded address for "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"offline"}]},{"type":"text","value":" transaction, could be used several times, it has no strong guaranties for privacy"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"max_privacy"}]},{"type":"text","value":" - new-style "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"base58"}]},{"type":"text","value":" encoded address for "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"maximum privacy"}]},{"type":"text","value":" transaction, could be used once"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"public_offline"}]},{"type":"text","value":" - new-style "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"base58"}]},{"type":"text","value":" encoded address for "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"offline"}]},{"type":"text","value":" transaction, it's constant, it provided less privacy, you could publish it, designed for donations"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"regular_new"}]},{"type":"text","value":" - new-style "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"base58"}]},{"type":"text","value":" encoded address for regular mimblewimble transaction"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"payments"}]},{"type":"text","value":" - the number of payments left in case of "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"offline"}]},{"type":"text","value":" address"}]}]},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"If you don't want to support newer type of transactions you could simply allow "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"regular"}]},{"type":"text","value":" addresses."},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"NOTE: "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"offline"}]},{"type":"text","value":" address has all the data to make "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"regular"}]},{"type":"text","value":" online transaction using MimbleWimble protocol. You can make both type of transaction using this type of address. If you want to send regular online transaction you should pass "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"offline: false"}]},{"type":"element","tag":"pre","props":{"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 2,\n    \"method\":\"tx_send\", \n    \"params\":\n    {\n        \"value\": 12342342,\n        \"fee\": 2,\n        \"from\": \"472e17b0419055ffee3b3813b98ae671579b0ac0dcd6f1a23b11a75ab148cc67\",\n        \"address\": \"2DWjfstQoaLMYYgvc4NBTTGqRdyM3nvWxP9bDHN....\",  // <-- offline address \n        \"comment\": \"thank you!\",\n        \"asset_id\": 1,\n        \"offline\": false   // <-- make regular online payment\n    }\n}\n\n","language":"json","meta":"","className":["language-json"]},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 2,\n    \"method\":\"tx_send\", \n    \"params\":\n    {\n        \"value\": 12342342,\n        \"fee\": 2,\n        \"from\": \"472e17b0419055ffee3b3813b98ae671579b0ac0dcd6f1a23b11a75ab148cc67\",\n        \"address\": \"2DWjfstQoaLMYYgvc4NBTTGqRdyM3nvWxP9bDHN....\",  // <-- offline address \n        \"comment\": \"thank you!\",\n        \"asset_id\": 1,\n        \"offline\": false   // <-- make regular online payment\n    }\n}\n\n"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"regex for the newer address is:"},{"type":"element","tag":"pre","props":{"code":"/[0-9a-zA-Z]{64,500}/\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"/[0-9a-zA-Z]{64,500}/\n"}]}]},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"it allows both old-style and new-style addresses."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"in order to generate new-style address pass "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"\"type\""}]},{"type":"text","value":" parameter to "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"create_address"}]},{"type":"text","value":" method"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]},{"type":"element","tag":"pre","props":{"code":"{\n    \"jsonrpc\" : \"2.0\", \n    \"id\" : 1,\n    \"method\" : \"create_address\", \n    \"params\" :\n    {\n        \"type\": \"max_privacy\",  // <----- NEW\n        \"expiration\" : \"auto\",\n        \"comment\" : \"John Smith\"\n    }\n}\n","language":"json","meta":"","className":["language-json"]},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\" : \"2.0\", \n    \"id\" : 1,\n    \"method\" : \"create_address\", \n    \"params\" :\n    {\n        \"type\": \"max_privacy\",  // <----- NEW\n        \"expiration\" : \"auto\",\n        \"comment\" : \"John Smith\"\n    }\n}\n"}]}]},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"The values for "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"\"type\""}]},{"type":"text","value":" parameter are the same as described earlier. If you don't specify "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"\"type\""}]},{"type":"text","value":" "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"\"regular\""}]},{"type":"text","value":" is used by default to keep backward compatibility."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"If you want to send to "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"offline"}]},{"type":"text","value":" and "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"max privacy"}]},{"type":"text","value":" addresses run API with "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--enable_lelantus"}]},{"type":"text","value":"."},{"type":"element","tag":"pre","props":{"code":"./wallet-api --enable_lelantus -n <node address>\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"./wallet-api --enable_lelantus -n <node address>\n"}]}]},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"or specify it in config file"},{"type":"element","tag":"pre","props":{"code":"enable_lelantus=true\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"enable_lelantus=true\n"}]}]}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"what-new-in-version-60","depth":2,"text":"What new in version 6.0"},{"id":"upgrading-the-node-and-the-wallet","depth":2,"text":"Upgrading the node and the wallet"}]}},"_type":"markdown","_id":"content:docs:core-tech:Beam-Fierce-Fermion-6.0-Upgrade-Guide-for-pools-and-exchanges.md","_source":"content","_file":"docs/core-tech/Beam-Fierce-Fermion-6.0-Upgrade-Guide-for-pools-and-exchanges.md","_extension":"md"},{"_path":"/docs/core-tech/beam-ipfs-support","_dir":"core-tech","_draft":false,"_partial":false,"_locale":"","title":"BEAM IPFS Support","description":"THIS DOCUMENT DESCRIBES UPCOMING AND NOT YET RELEASED v6.3 IPFS SUPPORT. Subject to change without prior notice.","body":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"THIS DOCUMENT DESCRIBES UPCOMING AND NOT YET RELEASED v6.3 IPFS SUPPORT. Subject to change without prior notice."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"As of v6.3 BEAM adds IPFS support and IPFS can be accessed via API. Refer "},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/wiki/Beam-wallet-protocol-API-v6.3","rel":["nofollow"]},"children":[{"type":"text","value":"version 6.3 API"}]},{"type":"text","value":" docs for details on supported IPFS calls."}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"in Desktop UI client IPFS is enabled by default. IPFS node is started when user launches any DApp granting full IPFS support to DApps. After IPFS node is started it continues to run until desktop client is closed."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"in wallet-api IPFS support is disabled by default, "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--enable_ipfs=true"}]},{"type":"text","value":" option should be specified to start IPFS node granting full IPFS support"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"in Mobile clients & WASM client limited IPFS support is enabled. No local IPFS node is started, write-only methods like ipfs_add/ipfs_pin would fail. Read-only methods like ipfs_get are enabled via HTTP calls to BEAM managed IPFS nodes."}]}]},{"type":"element","tag":"h2","props":{"id":"beam-ipfs-config"},"children":[{"type":"text","value":"BEAM IPFS Config"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"BEAM IPFS repository is located in the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"[wallet data folder]/ipfs-repo"}]},{"type":"text","value":" until "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--ipfs_repo=[path]"}]},{"type":"text","value":" option is specified for API CLI or "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"[ipfsnode] ipfs_repo=[path]"}]},{"type":"text","value":" in Desktop "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"settings.ini"}]},{"type":"text","value":" file. When there is no initialized IPFS repository in the given path it would be automatically initialized with the default 'server' IPFS profile for API CLI and with the default (client) profile for Desktop Client except the following custom BEAM settings:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Swarm.ConnMgr.LowWater"}]},{"type":"text","value":" - is set to "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"100"}]},{"type":"text","value":". Can be changed using "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--ipfs_low_water"}]},{"type":"text","value":" option in API CLI and using "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"[ipfsnode] ipfs_low_water="}]},{"type":"text","value":" in Desktop client 'settings.ini' file."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Swarm.ConnMgr.HighWater"}]},{"type":"text","value":" - "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"200"}]},{"type":"text","value":" / "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--ipfs_high_water"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"settings.ini -> [ipfsnode] ipfs_high_water="}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Swarm.ConnMgr.GracePeriod - "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"20s"}]},{"type":"text","value":" / "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--ipfs_grace_period"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"settings.ini -> [ipfsnode] ipfs_grace_period="}]},{"type":"text","value":" as uint32 seconds"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Bootstrap - default BEAM bootstrap node(s) / "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--ipfs_bootstrap"}]},{"type":"text","value":" (space separated "},{"type":"element","tag":"a","props":{"href":"https://github.com/multiformats/multiaddr","rel":["nofollow"]},"children":[{"type":"text","value":"multiaddr"}]},{"type":"text","value":" list), "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"settings.ini -> [ipfsnode] ipfs_bootstrap="}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Addresses.Swarm - custom "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"10100"}]},{"type":"text","value":" listening port / "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--ipfs_swarm_port"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"settings.ini -> [ipfsnode] ipfs_swarm_port="}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Addresses.API - custom "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"/ip4/127.0.0.1/tcp/6100"}]},{"type":"text","value":" listening address for API / empty (API disabled) on Desktop / "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--ipfs_api_addr"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"settings.ini -> [ipfsnode] ipfs_api_addr="}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Addresses.Gateway - custom "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"/ip4/127.0.0.1/tcp/6200"}]},{"type":"text","value":" listening address in API / empty (Gateway disabled) on Desktop / "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--ipfs_gateway_addr"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"settings.ini -> [ipfsnode] ipfs_gateway_addr="}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Swarm.EnableAutoRelay - false in API / "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"true"}]},{"type":"text","value":" on Desktop / "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--ipfs_auto_relay"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"settings.ini -> [ipfsnode] ipfs_auto_relay="}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Swarm.EnableRelayHop - "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"false"}]},{"type":"text","value":" / "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--ipfs_relay_hop"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"settings.ini -> [ipfsnode] ipfs_relay_hop="}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Swarm.Transports.Network.Relay - forced to "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"true"}]},{"type":"text","value":" everywhere. Not adjustable at the moment."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"AutoNAT.ServiceMode - "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"enabled"}]},{"type":"text","value":" / "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--ipfs_autonat"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"settings.ini -> [ipfsnode] ipfs_autonat="}]},{"type":"text","value":" as bool"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"AutoNAT.Throttle.GlobalLimit - "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"30"}]},{"type":"text","value":" / "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--ipfs_autonat_limit"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"settings.ini -> [ipfsnode] ipfs_autonat_limit="}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"AutoNAT.Throttle.PeerLimit - "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"3"}]},{"type":"text","value":" / "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--ipfs_autonat_peer_limit"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"settings.ini -> [ipfsnode] ipfs_autonat_peer_limit="}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Datastore.StorageMax - "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"20GB"}]},{"type":"text","value":" in API CLI / "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"2GB"}]},{"type":"text","value":" in Desktop client / "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--ipfs_storage_max"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"settings.ini -> [ipfsnode] ipfs_storage_max="}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Routing.Type - "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"dhtserver"}]},{"type":"text","value":" in API CLI / "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"dht"}]},{"type":"text","value":" in Desktop client / "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--ipfs_routing_type"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"settings.ini -> [ipfsnode] ipfs_routing_type="}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"swarm.key file is created to ensure connection to the BEAM private IPFS network / "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--ipfs_swarm_key"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"settings.ini -> [ipfsnode] ipfs_swarm_key="}]},{"type":"text","value":" as string"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"IPFS periodic GC is disabled in API CLI / launched in Desktop Client / "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--ipfs_run_gc"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"settings.ini -> [ipfsnode] ipfs_run_gc="}]},{"type":"text","value":" as bool"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"sockets-based activation for \"io.ipfs.api\" and \"io.ipfs.gateway\" is disabled at the moment and is not planned in the future. Contact us if you need this feature."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"WebUI is not supported and disabled, will be supported in the future"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"fuse mounts for \"/ipfs\" and \"/ipfs\" are not supported and disabled, will be supported in the future"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"remote pinning for MFS roots is not supported and disabled, will be supported in the future"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"There are no changes in default IPFS repo layout, all default config and data files are and you are able to manage the IPFS repo via default IPFS cli tool paired with the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"IPFS_PATH"}]},{"type":"text","value":" environment variable. Ensure that BEAM client that uses the repo is not launched when accessing it using IPFS cli. In case of Desktop client's IPFS repo "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"ipfs_node_api_port"}]},{"type":"text","value":"/"},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Addresses.API"}]},{"type":"text","value":" setting should be specified  before running daemon or it would crash. go-ipfs is unable to launch without API support."}]},{"type":"element","tag":"h3","props":{"id":"ipfs-repoconfiglock-file"},"children":[{"type":"text","value":"ipfs-repo/config.lock file"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This section describes BEAM extension to IPFS repo & config handling."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"On every start BEAM would force and overwrite the aforementioned BEAM custom settings in the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"ipfs-repo/config"}]},{"type":"text","value":" file. If you want to cancel this behavior, edit the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"ipfs-repo/config"}]},{"type":"text","value":" file manually or via cli and preserve your custom changes "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"ipfs-repo/config.lock"}]},{"type":"text","value":" file should be created."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"If "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"ipfs-repo/config.lock"}]},{"type":"text","value":" is present BEAM would not make any changes to the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"ipfs-repo/config"}]},{"type":"text","value":" file. All BEAM ways to change IPFS settings are immediately blocked and ignored including "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--ipfs-xxx"}]},{"type":"text","value":" CLI options, any IPFS options set in "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"wallet_api.cfg"}]},{"type":"text","value":" file, any IPFS options set via desktop UI and any IPFS options set in desktop UI "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"settings.ini"}]},{"type":"text","value":" file."}]},{"type":"element","tag":"h2","props":{"id":"useful-stuff"},"children":[{"type":"text","value":"Useful stuff"}]},{"type":"element","tag":"h3","props":{"id":"access-beam-ipfs-node-using-standard-ipfs-cli-tool"},"children":[{"type":"text","value":"Access BEAM IPFS node using standard IPFS cli tool"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Start wallet api"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Install go-ipfs"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Create beam-ipfs bash script (do not forget to change your paths)"}]}]},{"type":"element","tag":"pre","props":{"code":"#/bin/bash\nexport IPFS_PATH=/home/ubuntu/beam-api/ipfs-repo/\n# uncomment the following line if you're using private IPFS network\n# export LIBP2P_FORCE_PNET=1\n/home/ubuntu/go-ipfs-node/ipfs \"$@\"\n","language":"bash","meta":"","className":["language-bash"]},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"#/bin/bash\nexport IPFS_PATH=/home/ubuntu/beam-api/ipfs-repo/\n# uncomment the following line if you're using private IPFS network\n# export LIBP2P_FORCE_PNET=1\n/home/ubuntu/go-ipfs-node/ipfs \"$@\"\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In desktop client IPFS node API is disabled by default. "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"ipfs_node_api_port"}]},{"type":"text","value":" should be set in "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"settings.ini"}]},{"type":"text","value":" or "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Addresses.API"}]},{"type":"text","value":" in "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"ipfs-repo/config"}]},{"type":"text","value":" to access IPFS node API."}]},{"type":"element","tag":"ol","props":{"start":4},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Make it executable"}]}]},{"type":"element","tag":"pre","props":{"code":"chmod  +x ./beam_ipfs\n","language":"bash","meta":"","className":["language-bash"]},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"chmod  +x ./beam_ipfs\n"}]}]},{"type":"element","tag":"ol","props":{"start":5},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Execute usual ipfs commands via the script"}]}]},{"type":"element","tag":"pre","props":{"code":"./beam-ipfs swarm peers\n","language":"bash","meta":"","className":["language-bash"]},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"./beam-ipfs swarm peers\n"}]}]},{"type":"element","tag":"h3","props":{"id":"systemd-ipfs-unit-file"},"children":[{"type":"text","value":"SystemD IPFS unit file"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Example below if given for a standard go-ipfs binary. You can also use the same settings for running wallet API"}]},{"type":"element","tag":"pre","props":{"code":"/etc/systemd/system/ipfs.service\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"/etc/systemd/system/ipfs.service\n"}]}]},{"type":"element","tag":"pre","props":{"code":"[Unit]\nDescription=GO IPFS Node\nAfter=network.target\n\n[Service]\nType=exec\nRestart=on-failure\nEnvironment=\"IPFS_PATH=/home/ubuntu/go-ipfs-node/repo\"\n# uncomment if private IPFS network\n# Environment=\"LIBP2P_FORCE_PNET=1\"\nWorkingDirectory=/home/ubuntu/go-ipfs-node\nExecStart=/home/ubuntu/go-ipfs-node/ipfs daemon\n\n[Install]\nWantedBy=multi-user.target\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"[Unit]\nDescription=GO IPFS Node\nAfter=network.target\n\n[Service]\nType=exec\nRestart=on-failure\nEnvironment=\"IPFS_PATH=/home/ubuntu/go-ipfs-node/repo\"\n# uncomment if private IPFS network\n# Environment=\"LIBP2P_FORCE_PNET=1\"\nWorkingDirectory=/home/ubuntu/go-ipfs-node\nExecStart=/home/ubuntu/go-ipfs-node/ipfs daemon\n\n[Install]\nWantedBy=multi-user.target\n"}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"beam-ipfs-config","depth":2,"text":"BEAM IPFS Config","children":[{"id":"ipfs-repoconfiglock-file","depth":3,"text":"ipfs-repo/config.lock file"}]},{"id":"useful-stuff","depth":2,"text":"Useful stuff","children":[{"id":"access-beam-ipfs-node-using-standard-ipfs-cli-tool","depth":3,"text":"Access BEAM IPFS node using standard IPFS cli tool"},{"id":"systemd-ipfs-unit-file","depth":3,"text":"SystemD IPFS unit file"}]}]}},"_type":"markdown","_id":"content:docs:core-tech:BEAM-IPFS-Support.md","_source":"content","_file":"docs/core-tech/BEAM-IPFS-Support.md","_extension":"md"},{"_path":"/docs/core-tech/beam-mining-protocol-api-(stratum)","_dir":"core-tech","_draft":false,"_partial":false,"_locale":"","title":"Beam mining protocol API (draft)","description":"The protocol is based on JSON RPC and uses Long Polling to have a conversation between Miner and Node. It describes only mining behavior without payouts at the moment.","body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"beam-mining-protocol-api-draft"},"children":[{"type":"text","value":"Beam mining protocol API (draft)"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The protocol is based on JSON RPC and uses "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Long Polling"}]},{"type":"text","value":" to have a conversation between "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Miner"}]},{"type":"text","value":" and "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Node"}]},{"type":"text","value":". It describes only mining behavior without payouts at the moment."}]},{"type":"element","tag":"h1","props":{"id":"regulating-miner-jobs-generation"},"children":[{"type":"text","value":"Regulating miner jobs generation"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The Node would generate a new miner job when a block is received (i.e. blockchain state changes), and in addition each time a new transaction appears in the transaction pool (in fluff phase). Generating miner jobs too often has negative impact on the miner (mostly due to increased traffic). To mitigate this impact, we have the following Node configuration parameter:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"miner_job_latency"}]},{"type":"text","value":" - the minimum latency (in milliseconds) for miner job regeneration. Default is 1000 (1 second)."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This parameter regulates max frequency for miner job regeneration due to incoming transactions. The bigger the latency is - the less often would the Node generate miner jobs. It has no effect on a situation when a block is received, in this case the new job is created immediately."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In the past we observed a situation where mining pools diluted the miner jobs artificially, by just ignoring some of the jobs generated by the Node. It was probably done to save network traffic, considering the fees collected from the new transactions are negligible."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"We encourage miners to stop doing this. To regulate the miner jobs generation frequency it's better to use the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"miner_job_latency"}]},{"type":"text","value":" parameter. This way more packed blocks are mined, giving miners an edge in fees, and less confirmation time for the users.\nIn addition this is essential for the new High-Frequency transaction infrastructure, which gives significant fees for the miners, as well as ultimate user experience."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Note also that switching miner jobs often has no effect on hashpower (i.e. it's not wasted). The switch is performed when it has no cost on the mining.\nSo, the only reason to reduce the miner job frequency is the traffic consideration, and the best way to tune it is via "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"miner_job_latency"}]},{"type":"text","value":" parameter. Either way, the job generated by the Node should not be discarded."}]},{"type":"element","tag":"h2","props":{"id":"miner-to-node"},"children":[{"type":"text","value":"Miner to Node"}]},{"type":"element","tag":"h3","props":{"id":"login"},"children":[{"type":"text","value":"Login"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Miner subscribes to the node to receive jobs."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"api_key"}]},{"type":"text","value":" - miner registration key."}]},{"type":"element","tag":"pre","props":{"code":"{\n    \"method\" : \"login\", \n    \"api_key\": \"skjdb7343636gucgjdjgd\",\n    \"id\":\"login\",\n    \"jsonrpc\":\"2.0\" \n}\n","language":"json","meta":"","className":["language-json"]},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"method\" : \"login\", \n    \"api_key\": \"skjdb7343636gucgjdjgd\",\n    \"id\":\"login\",\n    \"jsonrpc\":\"2.0\" \n}\n"}]}]},{"type":"element","tag":"h3","props":{"id":"solution"},"children":[{"type":"text","value":"Solution"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Miner sends a solution to the node."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"nonce"}]},{"type":"text","value":" - matched nonce for given solution."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"output"}]},{"type":"text","value":" - "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Equhash"}]},{"type":"text","value":" solition for current difficulty."}]},{"type":"element","tag":"pre","props":{"code":"{\n\"id\":\"212\",\n\"jsonrpc\":\"2.0\",\n\"method\":\"solution\",\n\"nonce\":\"0bb11009afc29dbe\",\n\"output\":\"a32a1e04ca447f895cfdd8fd1f96fe2ebdd8cd8f77e9c3010ca7231d5da5d0b0cee7ee857981389070eec196bfb4bd15439ef27dd370c4c763bdbad66d066f7cb2f06318e1a0c68c9f5aa8fe8112c479d9a227759d0f864136f265e9ffd3b276b9ba2243\"\n}\n","language":"json","meta":"","className":["language-json"]},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n\"id\":\"212\",\n\"jsonrpc\":\"2.0\",\n\"method\":\"solution\",\n\"nonce\":\"0bb11009afc29dbe\",\n\"output\":\"a32a1e04ca447f895cfdd8fd1f96fe2ebdd8cd8f77e9c3010ca7231d5da5d0b0cee7ee857981389070eec196bfb4bd15439ef27dd370c4c763bdbad66d066f7cb2f06318e1a0c68c9f5aa8fe8112c479d9a227759d0f864136f265e9ffd3b276b9ba2243\"\n}\n"}]}]},{"type":"element","tag":"h2","props":{"id":"node-to-miner"},"children":[{"type":"text","value":"Node to Miner"}]},{"type":"element","tag":"h3","props":{"id":"job"},"children":[{"type":"text","value":"Job"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Miner will send new job automatically to connected miners."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"id"}]},{"type":"text","value":" - is a job index"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"input"}]},{"type":"text","value":" - block header data hash (with current "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"difficulty"}]},{"type":"text","value":") as an input parameter for "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Equihash"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"difficulty"}]},{"type":"text","value":" - current chain difficulty."}]},{"type":"element","tag":"pre","props":{"code":"{ \n\"difficulty\":3441671469,\n\"id\":\"212\",\n\"input\":\"636b90cc38bc7a347f074d9ca97c3a2158330f6844f8f52075a38a15ab483223\",\n\"jsonrpc\":\"2.0\",\n\"method\":\"job\"\n}\n","language":"json","meta":"","className":["language-json"]},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{ \n\"difficulty\":3441671469,\n\"id\":\"212\",\n\"input\":\"636b90cc38bc7a347f074d9ca97c3a2158330f6844f8f52075a38a15ab483223\",\n\"jsonrpc\":\"2.0\",\n\"method\":\"job\"\n}\n"}]}]},{"type":"element","tag":"h3","props":{"id":"cancel"},"children":[{"type":"text","value":"Cancel"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Miner will send a notification to cancel job with a given id"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"id"}]},{"type":"text","value":" - is a job index"}]},{"type":"element","tag":"pre","props":{"code":"{ \n\"id\":\"212\",\n\"jsonrpc\":\"2.0\",\n\"method\":\"cancel\"\n}\n","language":"json","meta":"","className":["language-json"]},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{ \n\"id\":\"212\",\n\"jsonrpc\":\"2.0\",\n\"method\":\"cancel\"\n}\n"}]}]},{"type":"element","tag":"h3","props":{"id":"result"},"children":[{"type":"text","value":"Result"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This is what server will return to "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"login"}]},{"type":"text","value":" or "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"solution"}]},{"type":"text","value":" requests, identified by id string of message has been sent from the miner to the node."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Example 1 (login failed):"}]},{"type":"element","tag":"pre","props":{"code":"{\n    \"code\":-32003,\n    \"description\":\"Login failed\",\n    \"id\":\"login\",\n    \"jsonrpc\":\"2.0\",\n    \"method\":\"result\"\n}\n","language":"json","meta":"","className":["language-json"]},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"code\":-32003,\n    \"description\":\"Login failed\",\n    \"id\":\"login\",\n    \"jsonrpc\":\"2.0\",\n    \"method\":\"result\"\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Example 2 (solution accepted):"}]},{"type":"element","tag":"pre","props":{"code":"{\n    \"code\":1,\n    \"description\":\"accepted\",\n    \"id\":\"212\",\n    \"jsonrpc\":\"2.0\",\n    \"method\":\"result\"\n}\n","language":"json","meta":"","className":["language-json"]},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"code\":1,\n    \"description\":\"accepted\",\n    \"id\":\"212\",\n    \"jsonrpc\":\"2.0\",\n    \"method\":\"result\"\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Example 3: (reply with nonce prefix)"}]},{"type":"element","tag":"pre","props":{"code":"{\n    \"code\":0,\n    \"description\":\"Login successful\",\n    \"id\":\"login\",\n    \"jsonrpc\":\"2.0\",\n    \"nonceprefix\":\"ab4e3a\",\n    \"method\":\"result\"\n}\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"code\":0,\n    \"description\":\"Login successful\",\n    \"id\":\"login\",\n    \"jsonrpc\":\"2.0\",\n    \"nonceprefix\":\"ab4e3a\",\n    \"method\":\"result\"\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Note: \"nonceprefix\" is an optional component.\nIf \"nonceprefix\" is given the first bytes of the used nonce must match the given pattern. Allowed is a prefix from 0 to 6 bytes. If \"nonceprefix\" is not given the miner may use the full nonce range."}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"miner-to-node","depth":2,"text":"Miner to Node","children":[{"id":"login","depth":3,"text":"Login"},{"id":"solution","depth":3,"text":"Solution"}]},{"id":"node-to-miner","depth":2,"text":"Node to Miner","children":[{"id":"job","depth":3,"text":"Job"},{"id":"cancel","depth":3,"text":"Cancel"},{"id":"result","depth":3,"text":"Result"}]}]}},"_type":"markdown","_id":"content:docs:core-tech:Beam-mining-protocol-API-(Stratum).md","_source":"content","_file":"docs/core-tech/Beam-mining-protocol-API-(Stratum).md","_extension":"md"},{"_path":"/docs/core-tech/beam-mining","_dir":"core-tech","_draft":false,"_partial":false,"_locale":"","title":"BEAM Mining","description":"This page contains general information. For Step By Step guides on how to start Mining Beam please refer to:","body":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This page contains general information. For Step By Step guides on how to start Mining Beam please refer to:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://beam-docs.readthedocs.io/en/latest/rtd_pages/user_mining_beam.html","rel":["nofollow"]},"children":[{"type":"text","value":"https://beam-docs.readthedocs.io/en/latest/rtd_pages/user_mining_beam.html"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Alike most cryptocurrencies, Beam relies on miners to add transactions to the blockchain. While all nodes in the Beam network confirm the validity of transactions, Beam counts on miners to take on the massive heavy lifting to guard the network."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Beam is a Mimblewimble implementation. We use classic Proof-of-Work (PoW) consensus."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"We welcome everyone to join our mining community to support the network and earn Beam coins."}]},{"type":"element","tag":"h1","props":{"id":"mining-algorithm"},"children":[{"type":"text","value":"Mining Algorithm"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"To secure the network, Beam uses the "},{"type":"element","tag":"a","props":{"href":"https://www.cryptolux.org/index.php/Equihash","rel":["nofollow"]},"children":[{"type":"text","value":"Equihash"}]},{"type":"text","value":" proof-of-work mining algorithm). Miners compete against each other using their computing power produce a new block on the chain. The first miner that gets to complete the precise computation for each block is granted with a network standard block reward and any fees for transactions added to that block."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"At Mainnet launch, we will use the following Equihash parameters: "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"n=150"}]},{"type":"text","value":", "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"k=5"}]},{"type":"text","value":". In addition, we will introduce a small change to the datapath to further reduce the chance of zero-day ASICs."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Note: in Testnet 3 we are still using "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"n=144"}]},{"type":"text","value":", "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"k=5"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The minimal memory requirement for the GPU will be 4 GB. The most up-to-date list of supported GPUs will be available "},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/wiki/Supported-GPU-cards-for-mining-(NVIDIA)","rel":["nofollow"]},"children":[{"type":"text","value":"here"}]},{"type":"text","value":"."}]},{"type":"element","tag":"h1","props":{"id":"block-size-and-time"},"children":[{"type":"text","value":"Block Size and Time"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"A Beam block will be generated approximately every minute and contain about 1000 transactions. Block size will be roughly 1MB."}]},{"type":"element","tag":"h1","props":{"id":"miner-rewards"},"children":[{"type":"text","value":"Miner Rewards"}]},{"type":"element","tag":"h2","props":{"id":"block-rewards"},"children":[{"type":"text","value":"Block Rewards"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"During the first year of Beam existence, miner reward will be 80 coins per block. In years 2-5 the reward will be 40 coins per block. In year 6 the reward will be to 25 coins, and then halving will occur every 4 years until year 129. After year 133, Beam emission will stop."}]},{"type":"element","tag":"h2","props":{"id":"treasury"},"children":[{"type":"text","value":"Treasury"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In the first five years of existence, additional coins will be issued to Beam Treasury with each newly mined Beam block."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In the first year, the Treasury will receive additional 20 Beams per  block, and in the years 2-5 the Treasury will receive 10 coins per block."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The Treasury will be used to repay Beam investors, Incentivize the Core Team and to support the Beam Foundation (largest single beneficiary of the Treasury)."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The distribution of the Treasury Coins is performed on a quarterly basis in the following proportion:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Investors: 35%"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Core Team and Advisors: 40%"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Beam Foundation: 20% (Biggest single beneficiary)"}]}]},{"type":"element","tag":"h2","props":{"id":"asic-resistance"},"children":[{"type":"text","value":"ASIC Resistance"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"To ensure better decentralization, Beam plans to stay ASIC resistance in the first 12-18 months. To achieve this, we plan to perform one or two hard forks – first after approximately 6 months of existence and another one after approximately 12 months. Each hard fork will change the mining algorithm. The exact modifications will be revealed several weeks before the actual hard fork."}]},{"type":"element","tag":"h2","props":{"id":"how-to-mine-beam"},"children":[{"type":"text","value":"How to Mine Beam"}]},{"type":"element","tag":"h3","props":{"id":"mining-with-standalone-node"},"children":[{"type":"text","value":"Mining with Standalone Node"}]},{"type":"element","tag":"h4","props":{"id":"using-external-miner"},"children":[{"type":"text","value":"Using External Miner"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"For more complex configurations, one or more external miners can be connected to a Beam Node instance.\nThe external miner software is available for download "},{"type":"element","tag":"a","props":{"href":"https://www.beam.mw/downloads","rel":["nofollow"]},"children":[{"type":"text","value":"here"}]},{"type":"text","value":", and the detailed instructions for running it are (here)"},{"type":"element","tag":"span","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://github.com/beam-mw/beam/wiki/Instructions-for-Command-Line-GPU-Miner","rel":["nofollow"]},"children":[{"type":"text","value":"https://github.com/beam-mw/beam/wiki/Instructions-for-Command-Line-GPU-Miner"}]}]},{"type":"text","value":"."}]},{"type":"element","tag":"h1","props":{"id":"how-can-you-help"},"children":[{"type":"text","value":"How can you help?"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Want to help developing Beam mining infrastructure? Have GPU development skills or experience with mining pools? Write to us at "},{"type":"element","tag":"a","props":{"href":"mailto:mining@beam.mw"},"children":[{"type":"text","value":"mining@beam.mw"}]},{"type":"text","value":". Fair compensation will be offered to qualified developers."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Own a mining farm and want to mine Beam at launch? Join Beam Mining community on Telegram or contact us at "},{"type":"element","tag":"a","props":{"href":"mailto:mining@beam.mw"},"children":[{"type":"text","value":"mining@beam.mw"}]},{"type":"text","value":"."}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"block-rewards","depth":2,"text":"Block Rewards"},{"id":"treasury","depth":2,"text":"Treasury"},{"id":"asic-resistance","depth":2,"text":"ASIC Resistance"},{"id":"how-to-mine-beam","depth":2,"text":"How to Mine Beam","children":[{"id":"mining-with-standalone-node","depth":3,"text":"Mining with Standalone Node"}]}]}},"_type":"markdown","_id":"content:docs:core-tech:BEAM-Mining.md","_source":"content","_file":"docs/core-tech/BEAM-Mining.md","_extension":"md"},{"_path":"/docs/core-tech/beam-news-channels","_dir":"core-tech","_draft":false,"_partial":false,"_locale":"","title":"Beam News Channels","description":"Beam able to provide actual news and exchange rates to wallet users.\nThis implemented using signed messages of different types transmitted over the Bulletin Board System (BBS).\nSuch messages make possible for instance to notify wallet user with popup on new wallet application version release.\nEach message is broadcasted over the network to wallet applications.\nBroadcasted messages has to be signed with apropriate key to verify publisher. Wallet applications have publisher key to check if messages are valid.","body":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Beam able to provide actual news and exchange rates to wallet users.\nThis implemented using signed messages of different types transmitted over the Bulletin Board System (BBS).\nSuch messages make possible for instance to notify wallet user with popup on new wallet application version release.\nEach message is broadcasted over the network to wallet applications.\nBroadcasted messages has to be signed with apropriate key to verify publisher. Wallet applications have publisher key to check if messages are valid."}]},{"type":"element","tag":"h2","props":{"id":"broadcaster-utility"},"children":[{"type":"text","value":"Broadcaster utility"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The utility is used for news message dispatching.\nAlso utility has ability to generate new random publisher key pair. Private key should be keept in secret and used to sign broadcasted messages. Public key has to be embedded to the wallet application and can be shared to anyone who want to listen broadcast messages."}]},{"type":"element","tag":"h2","props":{"id":"commands"},"children":[{"type":"text","value":"Commands"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--command"}]},{"type":"text","value":" - option used to specify command:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"generate_keys"}]},{"type":"text","value":" - used to generate new random publisher key pair"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"transmit"}]},{"type":"text","value":" - used to send broadcast message"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Option "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--command"}]},{"type":"text","value":" can be omitted. In such case "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"transmit"}]},{"type":"text","value":" is considered as default action."}]},{"type":"element","tag":"h2","props":{"id":"transmit-command"},"children":[{"type":"text","value":"Transmit command"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The utility needs the address of a node (to serve as an entry point for the message) and the publisher private key specified in hex-format (to sign the message) always to be specified."}]},{"type":"element","tag":"h3","props":{"id":"mandatory-options"},"children":[{"type":"text","value":"Mandatory options"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-n"}]},{"type":"text","value":" - address of node"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--key"}]},{"type":"text","value":" - 64 characters long private key in HEX format"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--msg_type"}]},{"type":"text","value":" - message type ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"'update'"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"'exchange'"}]},{"type":"text","value":")"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Example:"}]},{"type":"text","value":" "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-n \"eu-node02.masternet.beam.mw:8100\" --key \"f70c36f2d8342b66e3081ea4d87543566d6ad242c6e61dbf926d57ff42de0c59\" --msg_type 'exchange'"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Only messages signed with valid publisher keys are processed by wallet applications."}]},{"type":"element","tag":"h3","props":{"id":"options-for-specific-message-types"},"children":[{"type":"text","value":"Options for specific message types"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Specific options have to be passed for each message type."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"In case of the message notifying about new wallet application release:"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--msg_type 'update'"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--upd_ver"}]},{"type":"text","value":" - new application version in format "},{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"x.y.z"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--upd_type"}]},{"type":"text","value":" - released application type ('desktop', 'android' or 'ios')"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Example:"}]},{"type":"text","value":" "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--msg_type 'update' --upd_ver '1.8.9' --upd_type 'desktop'"}]},{"type":"text","value":" will say new desktop wallet release v1.8.9 is available"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"In case of message distributing some currency exchange rate:"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--msg_type 'exchange'"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--exch_curr"}]},{"type":"text","value":" - currency name ('beam', 'btc', 'ltc', 'qtum')"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--exch_rate"}]},{"type":"text","value":" - exchange rate value in fixed point format (100,000,000 = 1 unit)"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--exch_unit"}]},{"type":"text","value":" - second currency name which states unit of exchange rate value ('btc', 'usd' - default)"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Example 1:"}]},{"type":"text","value":" "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--msg_type 'exchange' --exch_curr 'beam' --exch_rate '789654123'"}]},{"type":"text","value":" will say 1 Beam = 7.89654123 USD"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Example 2:"}]},{"type":"text","value":" "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--msg_type 'exchange' --exch_curr 'beam' --exch_rate '123456789' --exch_unit 'btc'"}]},{"type":"text","value":" will say 1 Beam = 1.23456789 BTC"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Common example:"}]},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"./broadcaster.exe -n \"eu-node02.masternet.beam.mw:8100\" --key \"f70c36f2d8342b66e3081ea4d87543566d6ad242c6e61dbf926d57ff42de0c59\" --msg_type 'update' --upd_ver '1.8.9' --upd_type 'desktop'"}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"broadcaster-utility","depth":2,"text":"Broadcaster utility"},{"id":"commands","depth":2,"text":"Commands"},{"id":"transmit-command","depth":2,"text":"Transmit command","children":[{"id":"mandatory-options","depth":3,"text":"Mandatory options"},{"id":"options-for-specific-message-types","depth":3,"text":"Options for specific message types"}]}]}},"_type":"markdown","_id":"content:docs:core-tech:Beam-news-channels.md","_source":"content","_file":"docs/core-tech/Beam-news-channels.md","_extension":"md"},{"_path":"/docs/core-tech/beam-node-explorer-api","_dir":"core-tech","_draft":false,"_partial":false,"_locale":"","title":"Beam Node Explorer API","description":"The Node Explorer provides information about current chain state and blocks.","body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"beam-node-explorer-api"},"children":[{"type":"text","value":"Beam Node Explorer API"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The Node Explorer provides information about current chain state and blocks."}]},{"type":"element","tag":"h2","props":{"id":"how-to-use"},"children":[{"type":"text","value":"How to use"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Find "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"explorer-node"}]},{"type":"text","value":" binary in the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"explorer"}]},{"type":"text","value":" subdirectory and run with the following arguments:"}]},{"type":"element","tag":"pre","props":{"code":"Node explorer options:\n  -h [ --help ]                      list of all options\n  --peer arg (=172.104.249.212:8101) peer address\n  --port arg (=10000)                port to start the local node on\n  --api_port arg (=8888)             port to start the local api server on\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"Node explorer options:\n  -h [ --help ]                      list of all options\n  --peer arg (=172.104.249.212:8101) peer address\n  --port arg (=10000)                port to start the local node on\n  --api_port arg (=8888)             port to start the local api server on\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"./explorer-node.exe --peer eu-node01.mainnet.beam.mw:8100 --api_port=8080"}]},{"type":"text","value":" for example."},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"\nIt may take some time (a few hours) on the first start to load all the info from chain."}]},{"type":"element","tag":"h2","props":{"id":"api"},"children":[{"type":"text","value":"API"}]},{"type":"element","tag":"h3","props":{"id":"status"},"children":[{"type":"text","value":"status"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"GET http://x.x.x.x:port/status"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Description"}]},{"type":"text","value":": Gets current blockchain status."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Response"}]},{"type":"text","value":":"}]},{"type":"element","tag":"pre","props":{"code":"{\n  \"chainwork\": \"0x38594101d0a0\",\n  \"hash\": \"7353b5e4ad29a2ffa5f7952749d1eb04acedd82215b1f4f01d75107165f4622b\",\n  \"height\": 20531,\n  \"low_horizon\": 19090,\n  \"timestamp\": 1550158283,\n  \"shielded_outputs_per_24h\": 14,\n  \"shielded_outputs_total\": 16919,\n  \"shielded_possible_ready_in_hours\": 120\n}\n","language":"json","meta":"","className":["language-json"]},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n  \"chainwork\": \"0x38594101d0a0\",\n  \"hash\": \"7353b5e4ad29a2ffa5f7952749d1eb04acedd82215b1f4f01d75107165f4622b\",\n  \"height\": 20531,\n  \"low_horizon\": 19090,\n  \"timestamp\": 1550158283,\n  \"shielded_outputs_per_24h\": 14,\n  \"shielded_outputs_total\": 16919,\n  \"shielded_possible_ready_in_hours\": 120\n}\n"}]}]},{"type":"element","tag":"hr","props":{},"children":[]},{"type":"element","tag":"h3","props":{"id":"block"},"children":[{"type":"text","value":"block"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"GET http://x.x.x.x:port/block?height={height}"}]},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"\nor"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"GET http://x.x.x.x:port/block?hash={hash}"}]},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"\nor"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"GET http://x.x.x.x:port/block?kernel={kernel}"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Description"}]},{"type":"text","value":": Gets block info for specified "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"height"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"hash"}]},{"type":"text","value":" or "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"kernel"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Response"}]},{"type":"text","value":":"}]},{"type":"element","tag":"pre","props":{"code":"{\n  \"chainwork\": \"0x384fdc718a20\",\n  \"difficulty\": 157.9972152709961,\n  \"found\": true,\n  \"hash\": \"c2a7315b63b1de6106a185c1c79219001ef5e3a07c217db227b079bbb9dd9b64\",\n  \"height\": 20516,\n  \"inputs\": [],\n  \"kernels\": [\n    {\n      \"excess\": \"0x60413b5a09858312403190721938463ca22d7d87981a024873ddfa204a399eec\",\n      \"fee\": 0,\n      \"id\": \"d72684dba6255b2fe8631be9df764ee3c984cb0c9f386a8cf71f566acebd197d\",\n      \"maxHeight\": 18446744073709552000,\n      \"minHeight\": 20516\n    }\n  ],\n  \"outputs\": [\n    {\n      \"coinbase\": true,\n      \"commitment\": \"0x75329071d041e7828a57cbf2f63fb8db21543f35c1c2291d5c26c20d9b11465a\",\n      \"incubation\": 0,\n      \"maturity\": 20756\n    }\n  ],\n  \"prev\": \"4b9e35b467b416e0d307dd94bd2fdce6e720b6b3a029dca822ccab3ac57c6d22\",\n  \"subsidy\": 8000000000,\n  \"rate_btc\": \"0.00001551\",\n  \"rate_usd\": \"0.231282\",\n  \"timestamp\": 1550157362\n}\n","language":"json","meta":"","className":["language-json"]},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n  \"chainwork\": \"0x384fdc718a20\",\n  \"difficulty\": 157.9972152709961,\n  \"found\": true,\n  \"hash\": \"c2a7315b63b1de6106a185c1c79219001ef5e3a07c217db227b079bbb9dd9b64\",\n  \"height\": 20516,\n  \"inputs\": [],\n  \"kernels\": [\n    {\n      \"excess\": \"0x60413b5a09858312403190721938463ca22d7d87981a024873ddfa204a399eec\",\n      \"fee\": 0,\n      \"id\": \"d72684dba6255b2fe8631be9df764ee3c984cb0c9f386a8cf71f566acebd197d\",\n      \"maxHeight\": 18446744073709552000,\n      \"minHeight\": 20516\n    }\n  ],\n  \"outputs\": [\n    {\n      \"coinbase\": true,\n      \"commitment\": \"0x75329071d041e7828a57cbf2f63fb8db21543f35c1c2291d5c26c20d9b11465a\",\n      \"incubation\": 0,\n      \"maturity\": 20756\n    }\n  ],\n  \"prev\": \"4b9e35b467b416e0d307dd94bd2fdce6e720b6b3a029dca822ccab3ac57c6d22\",\n  \"subsidy\": 8000000000,\n  \"rate_btc\": \"0.00001551\",\n  \"rate_usd\": \"0.231282\",\n  \"timestamp\": 1550157362\n}\n"}]}]},{"type":"element","tag":"hr","props":{},"children":[]},{"type":"element","tag":"h3","props":{"id":"blocks"},"children":[{"type":"text","value":"blocks"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"GET http://x.x.x.x:port/blocks?height={start}&n={count}"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Description"}]},{"type":"text","value":": Gets blocks info for specified range, where "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"count"}]},{"type":"text","value":" should be <= 1500."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Response"}]},{"type":"text","value":":"}]},{"type":"element","tag":"pre","props":{"code":"[\n  {\n    \"chainwork\": \"0x380b69b2d420\",\n    \"difficulty\": 161.94402313232422,\n    \"found\": true,\n    \"hash\": \"2107b173f174972c8ec7543ab731bf1905d24d101f45b42d5f0cd64853e4c38e\",\n    \"height\": 20402,\n    \"inputs\": [],\n    \"kernels\": [\n      {\n        \"excess\": \"0x3829270cf74d473af83015501a83747b5b8c75c0d13303569a352bfe53b4ef4b\",\n        \"fee\": 0,\n        \"id\": \"3d0bed1e452c911f830351c671696f51e4a6a9086aeb7a059fc027a0db9c84a0\",\n        \"maxHeight\": 18446744073709552000,\n        \"minHeight\": 20402\n      }\n    ],\n    \"outputs\": [\n      {\n        \"coinbase\": true,\n        \"commitment\": \"0xb4261a4a7fabe181f6dd7e766410cf1aba8892fd2f41d3a7ff9378a4811521ff\",\n        \"incubation\": 0,\n        \"maturity\": 20642\n      }\n    ],\n    \"prev\": \"09cf95acda1e9c3e8b1a45873fd9ef1d744d6645d16bd6b8c5e9ae8dfe2d0b1a\",\n    \"subsidy\": 8000000000,\n    \"rate_btc\": \"0.00001551\",\n    \"rate_usd\": \"0.231282\",\n    \"timestamp\": 1550150788\n  },\n  {\n    \"chainwork\": \"0x380ac7c128a0\",\n    \"difficulty\": 162.0944366455078,\n    \"found\": true,\n    \"hash\": \"09cf95acda1e9c3e8b1a45873fd9ef1d744d6645d16bd6b8c5e9ae8dfe2d0b1a\",\n    \"height\": 20401,\n    \"inputs\": [],\n    \"kernels\": [\n      {\n        \"excess\": \"0x554a6ef457d33abddcb98169fcd7fe68a7aa94bc2145a40f39d07ace7b43c0de\",\n        \"fee\": 0,\n        \"id\": \"c68cddd64a07974a1d5ea73eb4333a9b732a5b9ac705546217fa66d2ba5e8dd8\",\n        \"maxHeight\": 18446744073709552000,\n        \"minHeight\": 20401\n      }\n    ],\n    \"outputs\": [\n      {\n        \"coinbase\": true,\n        \"commitment\": \"0x6fd9e1124f91a744c7043f2873716094e1a6cc3a8ae9ca5278a1a421a7622301\",\n        \"incubation\": 0,\n        \"maturity\": 20641\n      }\n    ],\n    \"prev\": \"9a8053f05ed7b6575770e002100025fa58452e307cf73d3594cbcd861fa5035a\",\n    \"subsidy\": 8000000000,\n    \"rate_btc\": \"0.00001551\",\n    \"rate_usd\": \"0.231282\",\n    \"timestamp\": 1550150719\n  },\n  {\n    \"chainwork\": \"0x380a25a8fba0\",\n    \"difficulty\": 161.4037857055664,\n    \"found\": true,\n    \"hash\": \"9a8053f05ed7b6575770e002100025fa58452e307cf73d3594cbcd861fa5035a\",\n    \"height\": 20400,\n    \"inputs\": [],\n    \"kernels\": [\n      {\n        \"excess\": \"0x7eef6fa3449e87dde801fec11cd6cec8b448a87f7bd1231cff668904ee6045d5\",\n        \"fee\": 0,\n        \"id\": \"bee59b34ea59a95e9fb415d34de3cc34416debcc1e14fd993f749b2aaee9b14d\",\n        \"maxHeight\": 18446744073709552000,\n        \"minHeight\": 20400\n      }\n    ],\n    \"outputs\": [\n      {\n        \"coinbase\": true,\n        \"commitment\": \"0x3b8a5d665b08119b8b8ee98c831089e0f7b3219ee92b3cf9d749777349ffd285\",\n        \"incubation\": 0,\n        \"maturity\": 20640\n      }\n    ],\n    \"prev\": \"34ce853ef5d9b6878bb694b5eec0620217d2b5f68f36cfdfc9c3bd4f1ae67107\",\n    \"subsidy\": 8000000000,\n    \"rate_btc\": \"0.00001551\",\n    \"rate_usd\": \"0.231282\",\n    \"timestamp\": 1550150667\n  }\n]\n","language":"json","meta":"","className":["language-json"]},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"[\n  {\n    \"chainwork\": \"0x380b69b2d420\",\n    \"difficulty\": 161.94402313232422,\n    \"found\": true,\n    \"hash\": \"2107b173f174972c8ec7543ab731bf1905d24d101f45b42d5f0cd64853e4c38e\",\n    \"height\": 20402,\n    \"inputs\": [],\n    \"kernels\": [\n      {\n        \"excess\": \"0x3829270cf74d473af83015501a83747b5b8c75c0d13303569a352bfe53b4ef4b\",\n        \"fee\": 0,\n        \"id\": \"3d0bed1e452c911f830351c671696f51e4a6a9086aeb7a059fc027a0db9c84a0\",\n        \"maxHeight\": 18446744073709552000,\n        \"minHeight\": 20402\n      }\n    ],\n    \"outputs\": [\n      {\n        \"coinbase\": true,\n        \"commitment\": \"0xb4261a4a7fabe181f6dd7e766410cf1aba8892fd2f41d3a7ff9378a4811521ff\",\n        \"incubation\": 0,\n        \"maturity\": 20642\n      }\n    ],\n    \"prev\": \"09cf95acda1e9c3e8b1a45873fd9ef1d744d6645d16bd6b8c5e9ae8dfe2d0b1a\",\n    \"subsidy\": 8000000000,\n    \"rate_btc\": \"0.00001551\",\n    \"rate_usd\": \"0.231282\",\n    \"timestamp\": 1550150788\n  },\n  {\n    \"chainwork\": \"0x380ac7c128a0\",\n    \"difficulty\": 162.0944366455078,\n    \"found\": true,\n    \"hash\": \"09cf95acda1e9c3e8b1a45873fd9ef1d744d6645d16bd6b8c5e9ae8dfe2d0b1a\",\n    \"height\": 20401,\n    \"inputs\": [],\n    \"kernels\": [\n      {\n        \"excess\": \"0x554a6ef457d33abddcb98169fcd7fe68a7aa94bc2145a40f39d07ace7b43c0de\",\n        \"fee\": 0,\n        \"id\": \"c68cddd64a07974a1d5ea73eb4333a9b732a5b9ac705546217fa66d2ba5e8dd8\",\n        \"maxHeight\": 18446744073709552000,\n        \"minHeight\": 20401\n      }\n    ],\n    \"outputs\": [\n      {\n        \"coinbase\": true,\n        \"commitment\": \"0x6fd9e1124f91a744c7043f2873716094e1a6cc3a8ae9ca5278a1a421a7622301\",\n        \"incubation\": 0,\n        \"maturity\": 20641\n      }\n    ],\n    \"prev\": \"9a8053f05ed7b6575770e002100025fa58452e307cf73d3594cbcd861fa5035a\",\n    \"subsidy\": 8000000000,\n    \"rate_btc\": \"0.00001551\",\n    \"rate_usd\": \"0.231282\",\n    \"timestamp\": 1550150719\n  },\n  {\n    \"chainwork\": \"0x380a25a8fba0\",\n    \"difficulty\": 161.4037857055664,\n    \"found\": true,\n    \"hash\": \"9a8053f05ed7b6575770e002100025fa58452e307cf73d3594cbcd861fa5035a\",\n    \"height\": 20400,\n    \"inputs\": [],\n    \"kernels\": [\n      {\n        \"excess\": \"0x7eef6fa3449e87dde801fec11cd6cec8b448a87f7bd1231cff668904ee6045d5\",\n        \"fee\": 0,\n        \"id\": \"bee59b34ea59a95e9fb415d34de3cc34416debcc1e14fd993f749b2aaee9b14d\",\n        \"maxHeight\": 18446744073709552000,\n        \"minHeight\": 20400\n      }\n    ],\n    \"outputs\": [\n      {\n        \"coinbase\": true,\n        \"commitment\": \"0x3b8a5d665b08119b8b8ee98c831089e0f7b3219ee92b3cf9d749777349ffd285\",\n        \"incubation\": 0,\n        \"maturity\": 20640\n      }\n    ],\n    \"prev\": \"34ce853ef5d9b6878bb694b5eec0620217d2b5f68f36cfdfc9c3bd4f1ae67107\",\n    \"subsidy\": 8000000000,\n    \"rate_btc\": \"0.00001551\",\n    \"rate_usd\": \"0.231282\",\n    \"timestamp\": 1550150667\n  }\n]\n"}]}]},{"type":"element","tag":"hr","props":{},"children":[]},{"type":"element","tag":"h3","props":{"id":"swap-totals"},"children":[{"type":"text","value":"swap totals"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"GET http://x.x.x.x:port/swap_totals"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Description"}]},{"type":"text","value":": Return total amounts for all swap offers."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Response"}]},{"type":"text","value":":"}]},{"type":"element","tag":"pre","props":{"code":"{\n  \"beams_offered\": \"15\",\n  \"bicoin_cash_offered\": \"3\",\n  \"bitcoin_offered\": \"0\",\n  \"dash_offered\": \"0\",\n  \"dogecoin_offered\": \"0\",\n  \"litecoin_offered\": \"10\",\n  \"qtum_offered\": \"0\",\n  \"total_swaps_count\": 2\n}\n","language":"json","meta":"","className":["language-json"]},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n  \"beams_offered\": \"15\",\n  \"bicoin_cash_offered\": \"3\",\n  \"bitcoin_offered\": \"0\",\n  \"dash_offered\": \"0\",\n  \"dogecoin_offered\": \"0\",\n  \"litecoin_offered\": \"10\",\n  \"qtum_offered\": \"0\",\n  \"total_swaps_count\": 2\n}\n"}]}]},{"type":"element","tag":"hr","props":{},"children":[]},{"type":"element","tag":"h3","props":{"id":"swap-offers"},"children":[{"type":"text","value":"swap offers"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"GET http://x.x.x.x:port/swap_offers"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Description"}]},{"type":"text","value":": Return swap offers from offer board."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Response"}]},{"type":"text","value":":"}]},{"type":"element","tag":"pre","props":{"code":"[\n  {\n    \"beam_amount\": \"3\",\n    \"height_expired\": 253126,\n    \"min_height\": 252406,\n    \"status\": 0,\n    \"status_string\": \"pending\",\n    \"swap_amount\": \"3\",\n    \"swap_currency\": \"BCH\",\n    \"time_created\": \"2020.11.06 18:31:54\",\n    \"txId\": \"1b726d0adffe45c993b801c8bb46184e\"\n  },\n  {\n    \"beam_amount\": \"12\",\n    \"height_expired\": 253126,\n    \"min_height\": 252406,\n    \"status\": 0,\n    \"status_string\": \"pending\",\n    \"swap_amount\": \"10\",\n    \"swap_currency\": \"LTC\",\n    \"time_created\": \"2020.11.06 18:31:39\",\n    \"txId\": \"1b837edae2904b658f95a7b5e84c7731\"\n  }\n]\n","language":"json","meta":"","className":["language-json"]},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"[\n  {\n    \"beam_amount\": \"3\",\n    \"height_expired\": 253126,\n    \"min_height\": 252406,\n    \"status\": 0,\n    \"status_string\": \"pending\",\n    \"swap_amount\": \"3\",\n    \"swap_currency\": \"BCH\",\n    \"time_created\": \"2020.11.06 18:31:54\",\n    \"txId\": \"1b726d0adffe45c993b801c8bb46184e\"\n  },\n  {\n    \"beam_amount\": \"12\",\n    \"height_expired\": 253126,\n    \"min_height\": 252406,\n    \"status\": 0,\n    \"status_string\": \"pending\",\n    \"swap_amount\": \"10\",\n    \"swap_currency\": \"LTC\",\n    \"time_created\": \"2020.11.06 18:31:39\",\n    \"txId\": \"1b837edae2904b658f95a7b5e84c7731\"\n  }\n]\n"}]}]},{"type":"element","tag":"hr","props":{},"children":[]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"how-to-use","depth":2,"text":"How to use"},{"id":"api","depth":2,"text":"API","children":[{"id":"status","depth":3,"text":"status"},{"id":"block","depth":3,"text":"block"},{"id":"blocks","depth":3,"text":"blocks"},{"id":"swap-totals","depth":3,"text":"swap totals"},{"id":"swap-offers","depth":3,"text":"swap offers"}]}]}},"_type":"markdown","_id":"content:docs:core-tech:Beam-Node-Explorer-API.md","_source":"content","_file":"docs/core-tech/Beam-Node-Explorer-API.md","_extension":"md"},{"_path":"/docs/core-tech/beam-position-paper","_dir":"core-tech","_draft":false,"_partial":false,"_locale":"","title":"Beam Position Paper","description":"June 16, 2018 ( rev 0.2)\nBEAM\nThe Scalable Confidential Cryptocurrency","body":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"June 16, 2018 ( rev 0.2)\nBEAM\nThe Scalable Confidential Cryptocurrency"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"What is BEAM?\nBEAM is a next generation confidential cryptocurrency based on an elegant and innovative Mimblewimble protocol.\nThings\nthat make BEAM special include:\n● Users have complete control over privacy - a user decides which information will be available and to which parties, having complete control over his personal data in accordance to his will and applicable laws.\n● Confidentiality without penalty - in BEAM confidential transactions do not cause bloating of the blockchain, avoiding excessive computational overhead or penalty on performance or scalability while completely concealing the transaction value.\n● No trusted setup required\n● Blocks are mined using Equihash Proof-of-Work algorithm\n● Limited emission using periodic halving with total amount of coins ~250 million1\n● No addresses are stored in the blockchain - no information whatsoever about either the\nsender or the receiver of a transaction is stored in the blockchain.\n● Superior scalability through compact blockchain size - using the “cut-through” feature of\nMimblewimble makes the BEAM blockchain orders of magnitude smaller than any other\nblockchain implementation.2\n● BEAM supports many transaction types such as escrow transactions, time locked\ntransactions, atomic swaps and more.\n● No premine. No ICO. Backed by a treasury, emitted from every block during the first five\nyears.\n● Implemented from scratch in C++ by a team of professional developers.\n1 Exact coin schedule is not finalized yet and will be published at a later date\n2 See more detailed explanation on Mimblewimble below to understand how this can be achieved without compromising blockchain security."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Introduction\nSince Bitcoin, which was the first implementation of the idea of a peer to peer electronic cash system proposed by Satoshi Nakamoto back in 2008 "},{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"1"}]},{"type":"text","value":", the field of crypto currencies and blockchain based systems has exploded producing thousands of different projects, technologies and research papers. Today one can find such projects ranging from distributed computing to Enterprise solutions and applied to all fields from medicine to automotive industries."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"However, the basic need for people to store their money and transact in a secure way without relying on a centralized authority is still the main use case and the most important, which is one of the reasons why Bitcoin is still the top cryptocurrency and is as influential today as it was almost ten years ago.\nIn Bitcoin, as in most crypto currencies since, your balance is represented by a series of transactions which can be traced back to the very beginning of a blockchain. In order to trust the system we need to make sure that each transaction in a chain is valid, and to do so without relying on a centralized entity, which is the main purpose of Bitcoin nodes and miners. All participants in the system must agree, or using more professional terms \"reach consensus\", on an official version of the transaction history and be able to do so without trusting each other or anyone else. The ability of the system to do so is the true strength of the Bitcoin idea."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Failure of Anonymity and The Need for Confidentiality\nInitially, transactions in the Bitcoin network were believed to be anonymous. By generating random private and public key pairs, and using the public part to form an address that could be used to receive and control transactions, many Bitcoin users assumed that nothing in that process could link to their real identity.\nThey turned out to be wrong. Using blockchain analysis, research has shown that there are always data leaks "},{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"2"}]},{"type":"text","value":". These can come from exchanges, merchants, OTC deals or even by collecting and clustering the blockchain data. It is then possible to deanonymize users, and since all data, including transaction amounts, is open and permanently stored in a public ledger, once users identity is known all their transactions past and future as well as their balance, become directly linked to them as a person.\nThis situation is far from ideal. Both individuals and organizations would prefer that their transactions and balance remain confidential and could only be seen only by parties specifically authorized by them to do so. This would require limiting the visibility of transaction details, including transferred amounts and identities of the participants and keeping as little information as possible about the transactions in the public record to prevent future analysis and a potential disclosure."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Introducing Mimblewimble\nIn August 2016 a new protocol was published by an anonymous author, suggesting an elegant approach to the topic of efficient confidential blockchain. It is called Mimblewimble3, a reference to a spell from Harry Potter books, and it builds upon two concepts originally proposed by Greg Maxwell, namely Confidential Transactions "},{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"3"}]},{"type":"text","value":" and Transaction Cut - Through "},{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"4"}]},{"type":"text","value":". The following is a high level explanation of the key principles of Mimblewimble. For more detailed explanation please read the original whitepaper "},{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"5"}]},{"type":"text","value":".\nConfidential transactions are implemented by using cryptographic commitment scheme which has two basic properties: hiding and binding. It is similar to giving someone a closed safe box with some message inside that only you know the combination for. When the time comes you can reveal the key and the person can make sure that your commitment is valid (binding) while he can not know what is was before the key is received (hiding)\nMimblewimble utilizes a well known commitment scheme called Pedersen Commitment that achieves this using Elliptic Curve Cryptography and is of the form\nC=r"},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"G+v"}]},{"type":"text","value":"H\nWhere ​r​ is a blinding factor, a secret key hiding the real value ​v a​ nd G and H are generator point on a specific elliptic curve.\n3 Read full whitepaper here: "},{"type":"element","tag":"a","props":{"href":"https://download.wpsoftware.net/bitcoin/wizardry/mimblewimble.txt","rel":["nofollow"]},"children":[{"type":"text","value":"https://download.wpsoftware.net/bitcoin/wizardry/mimblewimble.txt"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Each input and output of a transaction is thus a linear combination of two factors: an actual value of the transaction and a blinding factor. In order to transfer ownership of a UTXO (Unspent Transaction Output) a sender needs to reveal its value and blinding factor to the receiver, which in turn needs to create a new output commitment using a different blinding factor, known only to him. Due to the linearity property of Pedersen Commitments, if we have two identical transactions: from A to B, and then from B to C, we can cut through the intermediate transaction, resulting in a merged transaction from A to C, which is a valid transaction in the system.\nSince block is just a list of transactions, each with its list of inputs and outputs, a block can be seen as one large transaction as well, allowing us to “cut through” i.e merge all intermediate outputs both within a single block as well as across multiple blocks in the blockchain. Extending this approach to the entire chain, we get a system that only needs to store the current UTXO state, instead of entire transaction history. Validity of the history that brought us to this state can be confirmed by storing only the headers of the previous blocks which hold the proof of validity of previous states (using a structure called a Merkle tree) and Proof of Work that allows to reach consensus on which of the header chains should be considered the correct one (in case of blockchain branching).\nSince all that is needed to prove ownership of the UTXO is the value and the unique blinding factor, there is no need to store any addresses in the blockchain. After creating the transaction between two wallets, either online or using any other secure mechanism, only the commitment"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"is recorded in the blockchain. This means that no matter the resources of the attacker, no personal information can be extracted from the blockchain.\nIn addition to Inputs, Outputs, Proofs and fees, each Mimblewimble transaction includes, the transaction kernel, which in its most basic form contains the difference between blinding factors of sender and receiver. Each transaction should also contain a non interactive zero knowledge range proof to ensure that transaction value is positive without revealing the actual value. It is important since allowing the user to create transactions with negative value would result in ability to arbitrarily create new coins which should be prohibited by the system. For this purpose we use Bulletproofs "},{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"6"}]},{"type":"text","value":", a compact and highly computation efficient implementation of zero knowledge range proofs that are attached to every transaction and checked by the system during transaction validation."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Q&A:\nQuestion​: Why is BEAM using Equihash mining?\nAnswer​: Equihash PoW mining algorithm is well adopted by miners globally. Equihash is based on solving a Generalized Birthday Problem. It is IO bound, meaning that it requires quite a large amount of memory as opposed to Bitcoin's SHA256 that requires a lot of processing power. Equihash is built in a way that does not allow easy tradeoff between processing power and memory thus making it difficult to use with ASIC miners that existed at the time of its creation. Today there are dedicated ASIC miners that can mine Equihash ten times more efficiently than average CPU.\nQuestion​: How does compact blockchain work? Is data actually deleted from the blockchain? Answer​: No data is ever deleted from the blockchain, since a blockchain is append only by definition. What a compact blockchain means is that information needed to validate the entire blockchain is much smaller than the complete list of transactions. The user wallet, a new node connected to the system, or an existing one that does not want to store all the information can only download block headers and current state to verify the entire blockchain.\nQuestion​: What is the performance of BEAM in terms of number of transactions per second? Answer​: We do not have exact numbers yet. However it is safe to say that it will be slightly better than bitcoin and existing privacy coins. Having said that it is important to emphasize that the performance will not be high enough for BEAM to be used as “means of exchange”. Which is why we believe that BEAM will be primarily used as “store of value”. In the future it might be"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"possible to improve performance using second layer out of chain solutions such as Lightning network or Thunderella.\nQuestion​: Does BEAM have a UI Wallet?\nAnswer​: Yes, at launch BEAM will release a desktop wallet application for Mac, Windows and Linux.\nPlease submit additional questions to our Community group on Telegram: @BeamPrivacy | ​"},{"type":"element","tag":"a","props":{"href":"https://t.me/BeamPrivacy","rel":["nofollow"]},"children":[{"type":"text","value":"https://t.me/BeamPrivacy"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"References:\n"},{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"1"}]},{"type":"text","value":"​ ​"},{"type":"element","tag":"a","props":{"href":"https://bitcoin.org/bitcoin.pdf","rel":["nofollow"]},"children":[{"type":"text","value":"https://bitcoin.org/bitcoin.pdf"}]},{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"2"}]},{"type":"text","value":" ​"},{"type":"element","tag":"a","props":{"href":"https://arxiv.org/abs/1708.04748","rel":["nofollow"]},"children":[{"type":"text","value":"https://arxiv.org/abs/1708.04748"}]},{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"3"}]},{"type":"text","value":" ​"},{"type":"element","tag":"a","props":{"href":"https://people.xiph.org/~greg/confidential_values.txt","rel":["nofollow"]},"children":[{"type":"text","value":"https://people.xiph.org/~greg/confidential_values.txt"}]},{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"4"}]},{"type":"text","value":" ​"},{"type":"element","tag":"a","props":{"href":"https://bitcointalk.org/index.php?topic=281848.0","rel":["nofollow"]},"children":[{"type":"text","value":"https://bitcointalk.org/index.php?topic=281848.0"}]},{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"5"}]},{"type":"text","value":" ​"},{"type":"element","tag":"a","props":{"href":"https://download.wpsoftware.net/bitcoin/wizardry/mimblewimble.txt","rel":["nofollow"]},"children":[{"type":"text","value":"https://download.wpsoftware.net/bitcoin/wizardry/mimblewimble.txt"}]},{"type":"text","value":" "},{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"6"}]},{"type":"text","value":" ​"},{"type":"element","tag":"a","props":{"href":"https://eprint.iacr.org/2017/1066.pdf","rel":["nofollow"]},"children":[{"type":"text","value":"https://eprint.iacr.org/2017/1066.pdf"}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[]}},"_type":"markdown","_id":"content:docs:core-tech:Beam-Position-Paper.md","_source":"content","_file":"docs/core-tech/Beam-Position-Paper.md","_extension":"md"},{"_path":"/docs/core-tech/beam-signature-schemes","_dir":"core-tech","_draft":false,"_partial":false,"_locale":"","title":"Beam Signature Schemes","description":"","body":{"type":"root","children":[{"type":"element","tag":"h2","props":{"id":"oracles"},"children":[{"type":"text","value":"Oracles"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Oracles are objects used to generate challenges needed to construct/verify non-interactive proofs. They interpret exposed transcript data in a standard way, and produce the challenges in a deterministic way."}]},{"type":"element","tag":"pre","props":{"code":"oracle <-- exposed_data_1\noracle --> challenge_1\noracle --> challenge_2\noracle <-- exposed_data_2\noracle --> challenge_3\noracle --> challenge_4\n// ...\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"oracle <-- exposed_data_1\noracle --> challenge_1\noracle --> challenge_2\noracle <-- exposed_data_2\noracle --> challenge_3\noracle --> challenge_4\n// ...\n"}]}]},{"type":"element","tag":"h2","props":{"id":"schnorrs-signature"},"children":[{"type":"text","value":"Schnorr's signature"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"We use Schnorr's signatures throughout the code. We prefer the form "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"[N, k]"}]},{"type":"text","value":", whereas "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"N"}]},{"type":"text","value":" is the \"public nonce\", because it's batch-verifications compatible."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In addition to the standard Schnorr's signature we use the following variations:"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Signatures within a specific context (transcript). Instead of signing a specific message the signature operates on the given Oracle, which means it signs a specific transcript."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Generalized Schnorr's signatures, i.e. argument of knowledge of the commitment opening in terms of several generators."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Schnorr's multi-signatures. For a number of signatures in terms of the same set of generators we use a scheme of the form "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"[N, k1, k2, ..., kn]"}]},{"type":"text","value":". That is, only a single "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"N"}]},{"type":"text","value":". For the verification n challenges are derived. The soundness of such a signature can be shown by the same \"extractor\" technique used for standard Schnorr's signature for each secret key in reverse order."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Worth to note: we also use the (3) in the context of a more complex transcript, where a complex proof proves, among other things, knowledge of various secret keys (such as Lelantus spend proof)."}]},{"type":"element","tag":"h1","props":{"id":"biased-sigma-protocol"},"children":[{"type":"text","value":"Biased Sigma protocol."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"prove the knowledge of opening of 1-out-of-N, after a "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Bias"}]},{"type":"text","value":" is subtracted (methodically) from all the elements."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Inputs:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Bias (EC point)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Set of N elements (EC points)."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The proof is similar to the standard Sigma protocol, as described by Jens Groth. The differences are the following:"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"It operates on Oracle. Means - it's a part of a specific transcript, and it's not possible to separate it or tamper with it."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"For performance reasons the "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Bias"}]},{"type":"text","value":" is not technically subtracted from the set. Instead its cumulative coefficient (multiplier) is calculated, so that the "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Bias"}]},{"type":"text","value":" is added later to the equation."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Since because of (2) the set is not actually modified - the whole proof is very batch-friendly. So in a similar way the coefficients of the elements in the set are updated after each individual proof, but their multi-exponentiation is deferred."}]}]},{"type":"element","tag":"h3","props":{"id":"padding"},"children":[{"type":"text","value":"Padding"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"If there are not enough elements in the set we use zeroes (points at infinity). For original Sigma protocol that'd be insecure (opening of point at infinity is trivial), however for all our use-cases it's fine because of the Bias, since all our proofs are about validation\tof the Bias, showing that it's a legit commitment of G (blinding factor) and something else. Using the Bias that consists of blinding factor only makes no sense for the attacker."}]},{"type":"element","tag":"h2","props":{"id":"asset-proof"},"children":[{"type":"text","value":"Asset proof"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Proves that a given blinded generator H' satisfies H' = k•G + H"},{"type":"element","tag":"sub","props":{},"children":[{"type":"text","value":"i"}]},{"type":"text","value":", whereas H"},{"type":"element","tag":"sub","props":{},"children":[{"type":"text","value":"i"}]},{"type":"text","value":" is a legit generator defined as:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"i > 0: H"},{"type":"element","tag":"sub","props":{},"children":[{"type":"text","value":"i"}]},{"type":"text","value":" = CreateGenerator(\"B.Asset.Gen.V1 | i);"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"i = 0: H"},{"type":"element","tag":"sub","props":{},"children":[{"type":"text","value":"i"}]},{"type":"text","value":" = H (standard H-generator used for Beams)"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The proof is based on the biased Sigma proof described above. The prover chooses the window containing its generator by specifying the window first element. The window size is fixed in the consensus rules. Padding is not applicable, since H"},{"type":"element","tag":"sub","props":{},"children":[{"type":"text","value":"i"}]},{"type":"text","value":" is assumed to be infinite series."}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The Sigma protocol's proof is in terms of "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"G"}]},{"type":"text","value":"-generator only"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Bias := H'"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Witness data: "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"i"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"k"}]},{"type":"text","value":" (the blinding factor of the generator)"}]}]},{"type":"element","tag":"h3","props":{"id":"question"},"children":[{"type":"text","value":"Question"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"the H' currently is NOT exposed to the Oracle used in Biased Sigma protocol. Means - an attacker can theoretically craft a false Sigma proof, and then substitute an appropriate H' that would fit the needed equation and make the proof valid."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"However I can't see how the attacker can use such an H' generator. Since it comes-out as a random EC point, it has no direct relation to any other generator, and can't be used to conceal negative values, serial number or etc."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Should we expose H' to the oracle? Is it \"nice-to-have\", or essential?"}]},{"type":"element","tag":"h2","props":{"id":"lelantus-spend-proof"},"children":[{"type":"text","value":"Lelantus spend proof"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Proves that a legit element is withdrawn from the shielded pool."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Inputs:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"SpendPk"}]},{"type":"text","value":" - spend public key, from which the serial number "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"s"}]},{"type":"text","value":" is derived in a deterministic way."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Optional: blinded Asset generator "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"H'"}]},{"type":"text","value":" and "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Asset Proof"}]},{"type":"text","value":", which proves its validity."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Commitment"}]},{"type":"text","value":" - commitment to the element being-withdrawn."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Shielded pool window - the list of commitments (EC points)."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Proves the following:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The spend is signed by the secret key, the pre-image of "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"SpendPk"}]},{"type":"text","value":"."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Commitment"}]},{"type":"text","value":" is a commitment of the form k•G + H'•v. The validity of "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"v"}]},{"type":"text","value":" (i.e. rangeproof) is not necessary."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Serial number "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"s"}]},{"type":"text","value":" (derived from "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"SpendPk"}]},{"type":"text","value":") corresponds to an element in the specified window."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Commitment"}]},{"type":"text","value":" commits to the same value and asset type (H"},{"type":"element","tag":"sub","props":{},"children":[{"type":"text","value":"i"}]},{"type":"text","value":", v)."}]}]},{"type":"element","tag":"h3","props":{"id":"methodically"},"children":[{"type":"text","value":"Methodically"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Asset Proof"}]},{"type":"text","value":" is verified if specified. Otherwise the asset generator is assumed "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"H"}]},{"type":"text","value":" (used for Beams)."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Generalized Schnorr's signature proves "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Commitment"}]},{"type":"text","value":" is indeed of the form k•G + H'•v."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Serial number "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"s"}]},{"type":"text","value":" is derived from "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"SpendPk"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Biased Sigma protocol is used for the rest:\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The Bias is: "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Commitment + s•J"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The proof is in terms of "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"G"}]},{"type":"text","value":"-generator only."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Witness data is the blinding factor difference."}]}]}]}]},{"type":"element","tag":"h3","props":{"id":"technically"},"children":[{"type":"text","value":"Technically"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Technically there are 2 Schnorr's proofs here: validity of "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Commitment"}]},{"type":"text","value":", and knowledge of pre-image of "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"SpendPk"}]},{"type":"text","value":". They are compressed into a single generalized multi-signature, i.e. the prover knows the opening of both "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Commitment"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"SpendPk"}]},{"type":"text","value":" in terms of "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"G"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"H'"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"u","props":{},"children":[{"type":"text","value":"Note:"}]},{"type":"text","value":" Normally the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"SpendPk"}]},{"type":"text","value":" must be of the form k•G, and in our scheme we weaken this by allowing additional generator "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"H'"}]},{"type":"text","value":". But there seems to be no problem here if someone decides to used "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"SpendPk"}]},{"type":"text","value":" that contains also the asset generator used for this element."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In addition the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Commitment"}]},{"type":"text","value":" is used twice in the protocol: in the generalized Schnorr's signature, and as a part of the Bias for the Sigma protocol. So instead of using it twice we aggregate its coefficient, and is it once in the equation."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Finally the transcript is the following:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"oracle <-- Sigma parameters ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"n"}]},{"type":"text","value":","},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"M"}]},{"type":"text","value":")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"oracle <-- `Commitment'"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"oracle <-- `SpendPk'"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"oracle <-- `N' (public nonce of the Schnorr's multi-signature)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"oracle --> Challenge for "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Commitment"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"oracle --> Challenge for `SpendPk"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"<-- Schnorr's multi-signature: "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"kG"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"kH"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"oracle <-- Sigma protocol part 1 (A, B, C, D, G-vector)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"oracle --> Challenge for Sigma protocol"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"<-- Sigma protocol part 2 (a, c, r, f-vector)"}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"oracles","depth":2,"text":"Oracles"},{"id":"schnorrs-signature","depth":2,"text":"Schnorr's signature","children":[{"id":"padding","depth":3,"text":"Padding"}]},{"id":"asset-proof","depth":2,"text":"Asset proof","children":[{"id":"question","depth":3,"text":"Question"}]},{"id":"lelantus-spend-proof","depth":2,"text":"Lelantus spend proof","children":[{"id":"methodically","depth":3,"text":"Methodically"},{"id":"technically","depth":3,"text":"Technically"}]}]}},"_type":"markdown","_id":"content:docs:core-tech:Beam-signature-schemes.md","_source":"content","_file":"docs/core-tech/Beam-signature-schemes.md","_extension":"md"},{"_path":"/docs/core-tech/beam-technical-specifications","_dir":"core-tech","_draft":false,"_partial":false,"_locale":"","title":"Beam Technical Specifications","description":"BEAM implements the MW protocol (with some extensions), which is based on elliptic curve cryptography (ECC).","body":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"BEAM implements the MW protocol (with some extensions), which is based on elliptic curve cryptography (ECC)."}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://github.com/beam-mw/beam/wiki/Cryptographic-primitives","rel":["nofollow"]},"children":[{"type":"text","value":"Cryptographic primitives"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://github.com/beam-mw/beam/wiki/Merkle-trees","rel":["nofollow"]},"children":[{"type":"text","value":"Merkle trees"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://github.com/beam-mw/beam/wiki/DMMR-internal-layout","rel":["nofollow"]},"children":[{"type":"text","value":"DMMR layout"}]}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://github.com/beam-mw/beam/wiki/Core-transaction-elements","rel":["nofollow"]},"children":[{"type":"text","value":"Core transaction elements"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://github.com/beam-mw/beam/wiki/System-state,-header,-block","rel":["nofollow"]},"children":[{"type":"text","value":"Blocks, headers, System States: concept, relevant structures and values"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://github.com/beam-mw/beam/wiki/System-state-in-depth","rel":["nofollow"]},"children":[{"type":"text","value":"System State in-depth"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Node\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://github.com/beam-mw/beam/wiki/Node-initial-synchronization","rel":["nofollow"]},"children":[{"type":"text","value":"Initial synchronization"}]}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/wiki/Secure-bulletin-board-system-(SBBS)","rel":["nofollow"]},"children":[{"type":"text","value":"Secure bulletin board system (SBBS)"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/wiki/Beam-Equihash-specification","rel":["nofollow"]},"children":[{"type":"text","value":"Beam Equihash specification"}]}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[]}},"_type":"markdown","_id":"content:docs:core-tech:Beam-Technical-Specifications.md","_source":"content","_file":"docs/core-tech/Beam-Technical-Specifications.md","_extension":"md"},{"_path":"/docs/core-tech/beam-uri-scheme","_dir":"core-tech","_draft":false,"_partial":false,"_locale":"","title":"Beam URI scheme","description":"","body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"beam-uri-scheme"},"children":[{"type":"text","value":"Beam URI scheme"}]},{"type":"element","tag":"h2","props":{"id":"ebnf-syntax"},"children":[{"type":"text","value":"EBNF syntax"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":" beam_urn     = \"beam:\" hex_address [\"?\" params]"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"hex_address  = base16+"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"params       = param [\"&\" params]"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"param        = amount_param"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"amount_param = \"amount=\" digit+ [ \".\" digit* ]"}]}]},{"type":"element","tag":"h2","props":{"id":"simplified-syntax"},"children":[{"type":"text","value":"Simplified syntax"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"beam: <address> [?amount=<amount>]"}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"ebnf-syntax","depth":2,"text":"EBNF syntax"},{"id":"simplified-syntax","depth":2,"text":"Simplified syntax"}]}},"_type":"markdown","_id":"content:docs:core-tech:Beam-URI-scheme.md","_source":"content","_file":"docs/core-tech/Beam-URI-scheme.md","_extension":"md"},{"_path":"/docs/core-tech/beam-wallet-database","_dir":"core-tech","_draft":false,"_partial":false,"_locale":"","title":"Beam Wallet Database","description":"Since in Mimblewimble only UTXO related information is available on chain, most of the Wallet state should be maintained locally and store in the Wallet Database, which is described in this chapter.","body":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Since in Mimblewimble only UTXO related information is available on chain, most of the Wallet state should be maintained locally and store in the Wallet Database, which is described in this chapter."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Beam Wallet stores and tracks information about four key entities:"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Coins"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Addresses"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Transactions"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Blockchain State"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The interface for the database is specified in the "},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/blob/56e9cdd7be211649a576fa15d3f0a97922ae2acd/wallet/wallet_db.h#L164","rel":["nofollow"]},"children":[{"type":"text","value":"wallet_db.h"}]},{"type":"text","value":" file"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Beam currently uses sqlite relational database in the implementation"}]},{"type":"element","tag":"h1","props":{"id":"coins"},"children":[{"type":"text","value":"Coins"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"We will start with the "},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/blob/56e9cdd7be211649a576fa15d3f0a97922ae2acd/wallet/wallet_db.h#L41","rel":["nofollow"]},"children":[{"type":"text","value":"definition"}]},{"type":"text","value":" of a Coin structure, which represents a UTXO as it is seen by the wallet."}]},{"type":"element","tag":"pre","props":{"className":["language-c++"],"code":"\n    // Describes a UTXO in the context of the Wallet\n    struct Coin\n    {\n        // Status is not stored in the database but can be\n        // deduced from the current blockchain state\n        enum Status\n        {\n            Unavailable, // initial status of a new UTXO\n            Available,   // UTXO is currently present in the chain and can be spent\n            Maturing,    // UTXO is present in the chain has maturity higher than current height (i.e coinbase or treasury)\n            Outgoing,    // Available and participates in outgoing transaction\n            Incoming,    // Outputs of incoming transaction, currently unavailable\n            ChangeV0,    // deprecated.\n            Spent,       // UTXO that was spent. Stored in wallet database until reset or restore\n\n            count\n        };\n\n        Coin(Amount amount = 0, Key::Type keyType = Key::Type::Regular);\n        bool operator==(const Coin&) const;\n        bool operator!=(const Coin&) const;\n        bool isReward() const;\n        std::string toStringID() const;\n        Amount getAmount() const;\n\n        typedef Key::IDV ID; // unique identifier for the coin (including value), can be used to create blinding factor \n        ID m_ID;\n\n        Status m_status;        // current status of the coin\n        Height m_maturity;      // coin can be spent only when chain is >= this value. Valid for confirmed coins (Available, Outgoing, Incoming, Change, Spent, Maturing).\n\n                                // The following fields are used to derive the status of the transaction\n        Height m_confirmHeight; // height at which the coin was confirmed (appeared in the chain)\n        Height m_spentHeight;   // height at which the coin was spent\n\n        boost::optional<TxID> m_createTxId;  // id of the transaction which created the UTXO\n        boost::optional<TxID> m_spentTxId;   // id of the transaction which spernt the UTXO\n        \n        uint64_t m_sessionId;   // Used in the API to lock coins for specific session (see https://github.com/BeamMW/beam/wiki/Beam-wallet-protocol-API#tx_split)\n\n        bool IsMaturityValid() const; // is/was the UTXO confirmed?\n        Height get_Maturity() const; // would return MaxHeight unless the UTXO was confirmed\n        \n        std::string getStatusString() const;\n        static boost::optional<Coin::ID> FromString(const std::string& str);\n    };\n","language":"c++","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"\n    // Describes a UTXO in the context of the Wallet\n    struct Coin\n    {\n        // Status is not stored in the database but can be\n        // deduced from the current blockchain state\n        enum Status\n        {\n            Unavailable, // initial status of a new UTXO\n            Available,   // UTXO is currently present in the chain and can be spent\n            Maturing,    // UTXO is present in the chain has maturity higher than current height (i.e coinbase or treasury)\n            Outgoing,    // Available and participates in outgoing transaction\n            Incoming,    // Outputs of incoming transaction, currently unavailable\n            ChangeV0,    // deprecated.\n            Spent,       // UTXO that was spent. Stored in wallet database until reset or restore\n\n            count\n        };\n\n        Coin(Amount amount = 0, Key::Type keyType = Key::Type::Regular);\n        bool operator==(const Coin&) const;\n        bool operator!=(const Coin&) const;\n        bool isReward() const;\n        std::string toStringID() const;\n        Amount getAmount() const;\n\n        typedef Key::IDV ID; // unique identifier for the coin (including value), can be used to create blinding factor \n        ID m_ID;\n\n        Status m_status;        // current status of the coin\n        Height m_maturity;      // coin can be spent only when chain is >= this value. Valid for confirmed coins (Available, Outgoing, Incoming, Change, Spent, Maturing).\n\n                                // The following fields are used to derive the status of the transaction\n        Height m_confirmHeight; // height at which the coin was confirmed (appeared in the chain)\n        Height m_spentHeight;   // height at which the coin was spent\n\n        boost::optional<TxID> m_createTxId;  // id of the transaction which created the UTXO\n        boost::optional<TxID> m_spentTxId;   // id of the transaction which spernt the UTXO\n        \n        uint64_t m_sessionId;   // Used in the API to lock coins for specific session (see https://github.com/BeamMW/beam/wiki/Beam-wallet-protocol-API#tx_split)\n\n        bool IsMaturityValid() const; // is/was the UTXO confirmed?\n        Height get_Maturity() const; // would return MaxHeight unless the UTXO was confirmed\n        \n        std::string getStatusString() const;\n        static boost::optional<Coin::ID> FromString(const std::string& str);\n    };\n"}]}]},{"type":"element","tag":"h2","props":{"id":"deducing-coin-status"},"children":[{"type":"text","value":"Deducing Coin Status"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"By monitoring the state of the blockchain, the wallet can always deduce the current status of each coin by tracking the m_confirmHeight height and m_spentHeight. This is done in the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"void DeduceStatus(const IWalletDB&, Coin&, Height hTop);"}]},{"type":"text","value":" method which calls the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Coin::Status GetCoinStatus(const IWalletDB&, const Coin&, Height hTop);"}]},{"type":"text","value":" method that in turn returns the current status of the coin."}]},{"type":"element","tag":"pre","props":{"className":["language-c++"],"code":"\nCoin::Status GetCoinStatus(const IWalletDB& walletDB, const Coin& c, Height hTop)\n{\n    if (c.m_spentHeight != MaxHeight)\n        return Coin::Status::Spent;\n\n    if (c.m_confirmHeight != MaxHeight)\n    {\n        if (c.m_maturity > hTop)\n            return Coin::Status::Maturing;\n\n        if (IsOngoingTx(walletDB, c.m_spentTxId))\n            return Coin::Status::Outgoing;\n\n        return Coin::Status::Available;\n    }\n\n    if (IsOngoingTx(walletDB, c.m_createTxId))\n        return Coin::Status::Incoming;\n\n    return Coin::Status::Unavailable;\n}\n","language":"c++","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"\nCoin::Status GetCoinStatus(const IWalletDB& walletDB, const Coin& c, Height hTop)\n{\n    if (c.m_spentHeight != MaxHeight)\n        return Coin::Status::Spent;\n\n    if (c.m_confirmHeight != MaxHeight)\n    {\n        if (c.m_maturity > hTop)\n            return Coin::Status::Maturing;\n\n        if (IsOngoingTx(walletDB, c.m_spentTxId))\n            return Coin::Status::Outgoing;\n\n        return Coin::Status::Available;\n    }\n\n    if (IsOngoingTx(walletDB, c.m_createTxId))\n        return Coin::Status::Incoming;\n\n    return Coin::Status::Unavailable;\n}\n"}]}]},{"type":"element","tag":"h2","props":{"id":"selecting-coins-for-a-specified-amount"},"children":[{"type":"text","value":"Selecting coins for a specified amount"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Implemented in the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"std::vector<Coin> selectCoins(Amount amount) override;"}]},{"type":"text","value":" method. The purpose of the function is to select Coins matching a specific amount (for example in sending scenario). Selection method should minimize number of Coins and the change outputs and hence use greedy strategy with some additional heuristics. Specific strategies for coin selection are implemented in the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"struct CoinSelector3"}]},{"type":"text","value":" in honor of three attempts to write an effective selector for large amount of coins."}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"deducing-coin-status","depth":2,"text":"Deducing Coin Status"},{"id":"selecting-coins-for-a-specified-amount","depth":2,"text":"Selecting coins for a specified amount"}]}},"_type":"markdown","_id":"content:docs:core-tech:Beam-Wallet-Database.md","_source":"content","_file":"docs/core-tech/Beam-Wallet-Database.md","_extension":"md"},{"_path":"/docs/core-tech/beam-wallet-protocol-api-v6.0","_dir":"core-tech","_draft":false,"_partial":false,"_locale":"","title":"Beam Wallet Protocol API V60","description":"","body":{"type":"root","children":[{"type":"element","tag":"h2","props":{"id":"api-error-codes"},"children":[{"type":"text","value":"API Error codes"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"List of the possible error codes (with messages):"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32600 InvalidJsonRpc (\"Invalid JSON-RPC.\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32601 NotFoundJsonRpc (\"Procedure not found.\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32602 InvalidParamsJsonRpc (\"Invalid parameters.\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32603 InternalErrorJsonRpc (\"Internal JSON-RPC error.\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32001 InvalidTxStatus (\"Invalid TX status.\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32002 UnknownApiKey (\"Unknown API key.\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32003 InvalidAddress (\"Invalid address.\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32004 InvalidTxId (\"Invalid transaction ID.\")* "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"totals"}]},{"type":"text","value":" is an array of totals per asset. Assets that are included in this array by default:\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"BEAM (asset id 0)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"All assets which have UTXOs."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"All owned assets, even if there is no UTXOs for the given asset."}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Asset is included in the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"totals"}]},{"type":"text","value":" array even if all UTXOs are spent or if there are no UTXOs but asset is owned (issued by the wallet). In case when all the UTXOs are spent totals' fields except "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_id"}]},{"type":"text","value":" would be 0 (zero balance). To avoid getting assets with zero balance specify "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"\"params\": {\"nz_totals\": true}"}]},{"type":"text","value":". BEAM is always included, even if balance is 0 and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"nz_totals"}]},{"type":"text","value":" is true."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Maximum asset emission is 2"},{"type":"element","tag":"sup","props":{},"children":[{"type":"text","value":"128"}]},{"type":"text","value":"-1. To ensure compatibility with JavaScript raw number ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"available"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"maturing"}]},{"type":"text","value":" &c.) returned only if it is less than or equal to "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Number.MAX_SAFE_INTEGER"}]},{"type":"text","value":" (2"},{"type":"element","tag":"sup","props":{},"children":[{"type":"text","value":"53"}]},{"type":"text","value":"-1). If total's value is greater than "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Number.MAX_SAFE_INTEGER"}]},{"type":"text","value":" only corresponding string representation ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"xxxx_str"}]},{"type":"text","value":") is returned."}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32005 NotSupported (\"Feature is not supported\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32006 InvalidPaymentProof (\"Invalid payment proof provided\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32007 PaymentProofExportError (\"Cannot export payment proof\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32008 SwapFailToParseToken (\"Invalid swap token.\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32009 SwapFailToAcceptOwn (\"Can't accept own swap offer.\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32010 SwapNotEnoughtBeams (\"Not enought beams.\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32011 SwapFailToConnect (\"Doesn't have active connection.\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32012 DatabaseError (\"Database error\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32013 DatabaseNotFound (\"Database not found\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32014 ThrottleError (\"Requests limit exceeded\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32015 NotOpenedError (\"Wallet not opened\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32016 NoSwapsError (\"Swaps are not enabled\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32017 UnexpectedError (\"Unexpected call\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32018 ContractCompileError (\"Failed to compile contract\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32019 ContractError (\"Contract call failed\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32020 NotAllowedError (\"Call is not allowed\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32021 UserRejected (\"Call is rejected by user\")"}]}]},{"type":"element","tag":"h2","props":{"id":"api-methods"},"children":[{"type":"text","value":"API Methods"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"API has the following methods:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#create_address"},"children":[{"type":"text","value":"create_address"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#delete_address"},"children":[{"type":"text","value":"delete_address"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#edit_address"},"children":[{"type":"text","value":"edit_address"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#addr_list"},"children":[{"type":"text","value":"addr_list"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#validate_address"},"children":[{"type":"text","value":"validate_address"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#tx_send"},"children":[{"type":"text","value":"tx_send"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#tx_asset_issue"},"children":[{"type":"text","value":"tx_asset_issue"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#tx_asset_consume"},"children":[{"type":"text","value":"tx_asset_consume"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#tx_asset_info"},"children":[{"type":"text","value":"tx_asset_info"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#tx_status"},"children":[{"type":"text","value":"tx_status"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#tx_split"},"children":[{"type":"text","value":"tx_split"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#tx_cancel"},"children":[{"type":"text","value":"tx_cancel"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#tx_delete"},"children":[{"type":"text","value":"tx_delete"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#get_utxo"},"children":[{"type":"text","value":"get_utxo"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#tx_list"},"children":[{"type":"text","value":"tx_list"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#wallet_status"},"children":[{"type":"text","value":"wallet_status"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#generate_tx_id"},"children":[{"type":"text","value":"generate_tx_id"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#export_payment_proof"},"children":[{"type":"text","value":"export_payment_proof"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#verify_payment_proof"},"children":[{"type":"text","value":"verify_payment_proof"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#get_asset_info"},"children":[{"type":"text","value":"get_asset_info"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#set_confirmations_count"},"children":[{"type":"text","value":"set_confirmations_count"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#get_confirmations_count"},"children":[{"type":"text","value":"get_confirmations_count"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#invoke_contract"},"children":[{"type":"text","value":"invoke_contract"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-aysnc-orange"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#process_invoke_data"},"children":[{"type":"text","value":"process_invoke_data"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-aysnc-orange"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#block_details"},"children":[{"type":"text","value":"block_details"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-aysnc-orange"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#calc_change"},"children":[{"type":"text","value":"calc_change"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]}]},{"type":"element","tag":"h2","props":{"id":"swap-api-methods"},"children":[{"type":"text","value":"SWAP API Methods"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"If you build "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"wallet-api"}]},{"type":"text","value":" with "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"BEAM_ATOMIC_SWAP_SUPPORT"}]},{"type":"text","value":" then you can use additional "},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/wiki/Beam-wallet-protocol-SWAP-API-(BETA)","rel":["nofollow"]},"children":[{"type":"text","value":"SWAP API methods"}]},{"type":"text","value":"."}]},{"type":"element","tag":"h2","props":{"id":"create_address"},"children":[{"type":"text","value":"create_address"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Creates new receiver address."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\": \"2.0\", \n    \"id\": 1,\n    \"method\": \"create_address\", \n    \"params\":\n    {\n        \"type\": \"regular\",\n        \"expiration\": \"auto\",\n        \"comment\": \"John Smith\",\n        \"new_style_regular\" : true\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\": \"2.0\", \n    \"id\": 1,\n    \"method\": \"create_address\", \n    \"params\":\n    {\n        \"type\": \"regular\",\n        \"expiration\": \"auto\",\n        \"comment\": \"John Smith\",\n        \"new_style_regular\" : true\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"type"}]},{"type":"text","value":" the type of address, possible values are"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"regular"}]},{"type":"text","value":" - regular old-style address, default"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"offline"}]},{"type":"text","value":" - address offline transaction using Lelantus MW shielded pool, could be used more than once, there are no guaranties for extended privacy"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"max_privacy"}]},{"type":"text","value":" - address for guarantied maximum privacy transaction. Could be used only once."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"public_offline"}]},{"type":"text","value":" - address for donation, could be used as many times as you wish"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"regular_new"}]},{"type":"text","value":" - since v6.0, regular new-style address (base58), this address has SBBS internally"}]}]},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"Details of some address types are described "},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/wiki/Lelantus-CLI","rel":["nofollow"]},"children":[{"type":"text","value":"in this document"}]},{"type":"text","value":". Since v6.0, UI gives the sender an opportunity to choose between regular and offline send operation and the default address type provided via the \"receive\" UI dialog is an "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"offline"}]},{"type":"text","value":" address with "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"offline_payments=1"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"expiration"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"before v6.0 can be "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"expired/never/24h"}]},{"type":"text","value":"."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"since  v6.0 can be "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"expired/never/24h/auto"}]},{"type":"text","value":"."}]}]},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"Optional, by default address expires in 24 hours. "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"auto"}]},{"type":"text","value":" expiration means that address expires in 61 days (roughly 2 months). "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"auto"}]},{"type":"text","value":" addresses are renewed for another 2 months when any transaction is received with this address."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"comment"}]},{"type":"text","value":" - any string, optional."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"new_style_regular"}]},{"type":"text","value":" - if this flag is "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"true"}]},{"type":"text","value":" new style base58 address will be returned otherwise hexadecimal string will be returned, this option is ignored for the types different "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"regular"}]},{"type":"text","value":". "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"type=regular"}]},{"type":"text","value":" + "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"new_style_regular=true"}]},{"type":"text","value":" = "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"type=regular_new"}]},{"type":"text","value":"."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"offline_payments"}]},{"type":"text","value":" - number of offline payments embedded into an "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"offline"}]},{"type":"text","value":" address, default value is "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"1"}]},{"type":"text","value":". Valid only for the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"type=offline"}]},{"type":"text","value":"."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"All these address types could be passed as "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"address"}]},{"type":"text","value":" parameter of the "},{"type":"element","tag":"a","props":{"href":"#tx_send"},"children":[{"type":"text","value":"send"}]},{"type":"text","value":" method and/or used with the cli/UI. "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--enable_lelantus"}]},{"type":"text","value":" should be used in the command line of the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"wallet-api"}]},{"type":"text","value":" to enable sending/receiving using "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"offline"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"max_privacy"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"public_offline"}]},{"type":"text","value":" transactions. To generate "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"offline"}]},{"type":"text","value":"/"},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"max_privacy"}]},{"type":"text","value":"/"},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"public_offline"}]},{"type":"text","value":" addresses API must be connected to the own node (node with the wallet's viewer key)."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\" : \"2.0\", \n    \"id\" : 1,\n    \"result\" : \"472e17b0419055ffee3b3813b98ae671579b0ac0dcd6f1a23b11a75ab148cc67\"\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\" : \"2.0\", \n    \"id\" : 1,\n    \"result\" : \"472e17b0419055ffee3b3813b98ae671579b0ac0dcd6f1a23b11a75ab148cc67\"\n}\n"}]}]},{"type":"element","tag":"h2","props":{"id":"validate_address"},"children":[{"type":"text","value":"validate_address"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Just a simple validations, checks if the address isn't garbage and belongs to our elliptic curve. Also returns "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"is_mine == true"}]},{"type":"text","value":" if address is found in the local wallet DB."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"method\": \"validate_address\", \n    \"params\":\n    {\n        \"address\" : \"472e17b0419055ffee3b3813b98ae671579b0ac0dcd6f1a23b11a75ab148cc67\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"method\": \"validate_address\", \n    \"params\":\n    {\n        \"address\" : \"472e17b0419055ffee3b3813b98ae671579b0ac0dcd6f1a23b11a75ab148cc67\"\n    }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"result\" : \n    {\n        \"is_valid\" : true,\n        \"is_mine\" : false,\n        \"type\": \"offline\", \n        \"payments\": 3\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"result\" : \n    {\n        \"is_valid\" : true,\n        \"is_mine\" : false,\n        \"type\": \"offline\", \n        \"payments\": 3\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"type"}]},{"type":"text","value":" type of address. Check "},{"type":"element","tag":"a","props":{"href":"#create_address"},"children":[{"type":"text","value":"create_address"}]},{"type":"text","value":" for details"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"payments"}]},{"type":"text","value":" number of offline payments left for the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"offline"}]},{"type":"text","value":" address"}]}]},{"type":"element","tag":"h2","props":{"id":"addr_list"},"children":[{"type":"text","value":"addr_list"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Get addresses stored in the wallet database."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 8,\n    \"method\":\"addr_list\",\n    \"params\":\n    {\n        \"own\" : true\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 8,\n    \"method\":\"addr_list\",\n    \"params\":\n    {\n        \"own\" : true\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"own"}]},{"type":"text","value":", optional bool. If "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"true"}]},{"type":"text","value":" returns only own addresses, if "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"false"}]},{"type":"text","value":" returns only peer addresses. By default is false."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"id\": 8,\n    \"jsonrpc\": \"2.0\",\n    \"result\":\n    [{\n        \"address\": \"29510b33fac0cb20695fd3b836d835451e600c4224d8fb335dc1a68271deb9b6b5b\",\n        \"category\": \"\",\n        \"create_time\": 1553174321,\n        \"duration\": 1520,\n        \"expired\": true,\n        \"comment\": \"\",\n        \"own\": true,\n        \"own_id\": 16730903,\n        \"own_id_str\": \"16730903\",\n        \"identity\": \"2d8738b0424ad50631e902fab655e7e1795fbb8d92d47c4c8df7336870fcadf5\",\n        \"type\": \"regular\",\n        \"wallet_id\": \"29510b33fac0cb20695fd3b836d835451e600c4224d8fb335dc1a68271deb9b6b5b\"\n    }] \n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"id\": 8,\n    \"jsonrpc\": \"2.0\",\n    \"result\":\n    [{\n        \"address\": \"29510b33fac0cb20695fd3b836d835451e600c4224d8fb335dc1a68271deb9b6b5b\",\n        \"category\": \"\",\n        \"create_time\": 1553174321,\n        \"duration\": 1520,\n        \"expired\": true,\n        \"comment\": \"\",\n        \"own\": true,\n        \"own_id\": 16730903,\n        \"own_id_str\": \"16730903\",\n        \"identity\": \"2d8738b0424ad50631e902fab655e7e1795fbb8d92d47c4c8df7336870fcadf5\",\n        \"type\": \"regular\",\n        \"wallet_id\": \"29510b33fac0cb20695fd3b836d835451e600c4224d8fb335dc1a68271deb9b6b5b\"\n    }] \n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"address"}]},{"type":"text","value":" address that should be distributed among users and used to send funds to"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"own_id"}]},{"type":"text","value":" unsigned 64 bit index used to generate given address"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"own_id_str"}]},{"type":"text","value":" string representation of index used to generate given address (for JavaScript)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"identity"}]},{"type":"text","value":" identity linked to the given address."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"type"}]},{"type":"text","value":" address type. Consult "},{"type":"element","tag":"a","props":{"href":"#create_address"},"children":[{"type":"text","value":"create_address"}]},{"type":"text","value":" method for detailed description"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"wallet_id"}]},{"type":"text","value":" - Wallet ID (SBBS address) associated with the given address. This is the same as an SBBS address in CLI/UI. Note that not all address types have an associated SBBS address. For example non-own "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"max_privacy"}]},{"type":"text","value":" addresses do not have "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"wallet_id"}]},{"type":"text","value":". While own "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"max_privacy"}]},{"type":"text","value":" ones do it is recommended not to publish it. SBBS address can be safely published for "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"regular"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"regular_new"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"offline"}]},{"type":"text","value":" addresses."}]}]},{"type":"element","tag":"h3","props":{"id":"identity"},"children":[{"type":"text","value":"Identity"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Starting from version 4.2 we introduce an additional entity in order to make transfer more reliable. It is called "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"identity"}]},{"type":"text","value":". The main goal of "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"identity"}]},{"type":"text","value":" is to proof and ensure that transaction performs between claimed participants also it could be done using untrusted 3rd parties. The main scenario is "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"hardware wallet"}]},{"type":"text","value":" when host machine could be compromised, since it has ability to generate SBBS addresses, it can sign payment proof or accept transaction without need to ask hardware wallet about any secret, but if we give our identity to the other side (in addition to SBBS address), and this identity can be generated using hardware wallet only, then only hardware wallet can sign or approve transaction."}]},{"type":"element","tag":"h2","props":{"id":"delete_address"},"children":[{"type":"text","value":"delete_address"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Delete specific address from the wallet."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 8,\n    \"method\":\"delete_address\",\n    \"params\":\n    {\n        \"address\" : \"29510b33fac0cb20695fd3b836d835451e600c4224d8fb335dc1a68271deb9b6b5b\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 8,\n    \"method\":\"delete_address\",\n    \"params\":\n    {\n        \"address\" : \"29510b33fac0cb20695fd3b836d835451e600c4224d8fb335dc1a68271deb9b6b5b\"\n    }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"id\": 8,\n    \"jsonrpc\": \"2.0\",\n    \"result\": \"done\"\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"id\": 8,\n    \"jsonrpc\": \"2.0\",\n    \"result\": \"done\"\n}\n"}]}]},{"type":"element","tag":"h2","props":{"id":"edit_address"},"children":[{"type":"text","value":"edit_address"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Edit specific address. You can change the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"comment"}]},{"type":"text","value":" and/or "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"expiration"}]},{"type":"text","value":". Consult "},{"type":"element","tag":"a","props":{"href":"#create_address"},"children":[{"type":"text","value":"create_address"}]},{"type":"text","value":" for more details on acceptable values."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 8,\n    \"method\":\"edit_address\",\n    \"params\":\n    {\n        \"address\" : \"29510b33fac0cb20695fd3b836d835451e600c4224d8fb335dc1a68271deb9b6b5b\",\n        \"comment\" : \"John Smith\",\n        \"expiration\" : \"expired\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 8,\n    \"method\":\"edit_address\",\n    \"params\":\n    {\n        \"address\" : \"29510b33fac0cb20695fd3b836d835451e600c4224d8fb335dc1a68271deb9b6b5b\",\n        \"comment\" : \"John Smith\",\n        \"expiration\" : \"expired\"\n    }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"id\": 8,\n    \"jsonrpc\": \"2.0\",\n    \"result\": \"done\"\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"id\": 8,\n    \"jsonrpc\": \"2.0\",\n    \"result\": \"done\"\n}\n"}]}]},{"type":"element","tag":"h2","props":{"id":"tx_send"},"children":[{"type":"text","value":"tx_send"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Send BEAM or asset to a given address."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 2,\n    \"method\":\"tx_send\", \n    \"params\":\n    {\n        \"value\": 12342342,\n        \"fee\": 2,\n        \"from\": \"472e17b0419055ffee3b3813b98ae671579b0ac0dcd6f1a23b11a75ab148cc67\",\n        \"address\": \"472e17b0419055ffee3b3813b98ae671579b0ac0dcd6f1a23b11a75ab148cc67\",\n        \"comment\": \"thank you!\",\n        \"asset_id\": 1,\n        \"offline\": false\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 2,\n    \"method\":\"tx_send\", \n    \"params\":\n    {\n        \"value\": 12342342,\n        \"fee\": 2,\n        \"from\": \"472e17b0419055ffee3b3813b98ae671579b0ac0dcd6f1a23b11a75ab148cc67\",\n        \"address\": \"472e17b0419055ffee3b3813b98ae671579b0ac0dcd6f1a23b11a75ab148cc67\",\n        \"comment\": \"thank you!\",\n        \"asset_id\": 1,\n        \"offline\": false\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"value"}]},{"type":"text","value":" how much BEAM or asset to send in groth or asset groth."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"fee"}]},{"type":"text","value":" always in BEAM groth, optional. Omit for default fee."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"from"}]},{"type":"text","value":" own address, optional. If omitted new own address is generated and registered."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"address"}]},{"type":"text","value":" receiver's SBBS address or token. Token is an extension of SBBS address. It is a "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"base58"}]},{"type":"text","value":" encoded byte buffer which contains serialized parameters of a transaction. At least it contains SBBS "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"address"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"identity"}]},{"type":"text","value":"."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"comment"}]},{"type":"text","value":" transaction comment, optional."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"txId"}]},{"type":"text","value":" optional, you can provide your own transaction ID."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_id"}]},{"type":"text","value":" asset id to send, optional. Present starting from v5.0 and can be used only after Fork 2. Omit or set to 0 for BEAM transaction. If "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_id"}]},{"type":"text","value":" is non-zero assets must be enabled ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--enable_assets"}]},{"type":"text","value":") or method would fail."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"offline"}]},{"type":"text","value":" - since v6.0 offline addresses by default start the regular online transaction. Specify "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"\"offline\":true\""}]},{"type":"text","value":" to start an offline transaction. Applied only for "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"offline"}]},{"type":"text","value":" addresses and ignored for all other address types."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"You can preselect specific UTXOs for a transaction and fee via optional "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"coins"}]},{"type":"text","value":" array parameter like "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"\"coins\" : [\"00057e8eca5673476e6f726d000000000000015d3ef79800\", \"00057e8eca1233476e6f726d000000000000015d3ef79800\"]"}]},{"type":"text","value":". In case of asset transaction you can specify both asset coins (to send) and non-asset coins (to pay fee)."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 2,\n    \"result\":\n    {\n        \"txId\" : \"10c4b760c842433cb58339a0fafef3db\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 2,\n    \"result\":\n    {\n        \"txId\" : \"10c4b760c842433cb58339a0fafef3db\"\n    }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Returns transaction id or "},{"type":"element","tag":"a","props":{"href":"#api-error-codes"},"children":[{"type":"text","value":"error code"}]},{"type":"text","value":"."}]},{"type":"element","tag":"h2","props":{"id":"tx_split"},"children":[{"type":"text","value":"tx_split"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Creates a specific set of outputs with given values."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"NOTE: The "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"session"}]},{"type":"text","value":" parameter is not IMPLEMENTED and was removed!"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 5,\n    \"method\":\"tx_split\", \n    \"params\":\n    {\n        \"coins\" : [11, 12, 13, 50000000],\n        \"fee\" : 100,\n        \"asset_id\": 1\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 5,\n    \"method\":\"tx_split\", \n    \"params\":\n    {\n        \"coins\" : [11, 12, 13, 50000000],\n        \"fee\" : 100,\n        \"asset_id\": 1\n    }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 5,\n    \"result\":\n    {\n        \"txId\" : \"10c4b760c842433cb58339a0fafef3db\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 5,\n    \"result\":\n    {\n        \"txId\" : \"10c4b760c842433cb58339a0fafef3db\"\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"fee"}]},{"type":"text","value":" is always in BEAM groth. Omit for default fee."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"coins"}]},{"type":"text","value":" amounts of coins your want to have after split."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"txId"}]},{"type":"text","value":" optional, provide your own transaction ID."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_id"}]},{"type":"text","value":" asset id to split, optional. Omit or set to 0 to split BEAM coins. Present starting from v5.0 and can be used only after Fork 2. If "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_id"}]},{"type":"text","value":" is non-zero assets must be enabled ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--enable_assets"}]},{"type":"text","value":") or method would fail."}]}]},{"type":"element","tag":"h2","props":{"id":"tx_asset_issue"},"children":[{"type":"text","value":"tx_asset_issue"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Available from v5.0, can be used after Fork2. Assets must be enabled ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--enable_assets"}]},{"type":"text","value":") or method would fail."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Mints new asset coins. You must own the asset and info about the asset should be in a local database. Use "},{"type":"element","tag":"a","props":{"href":"#tx_asset_info"},"children":[{"type":"text","value":"tx_asset_info"}]},{"type":"text","value":" to retrieve the latest asset info if necessary. Asset minting is free. You need to pay only regular transaction fee."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\": \"2.0\", \n    \"id\": 2,\n    \"method\": \"tx_asset_issue\", \n    \"params\":\n    {\n        \"value\": 6,\n        \"asset_id\": 1\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\": \"2.0\", \n    \"id\": 2,\n    \"method\": \"tx_asset_issue\", \n    \"params\":\n    {\n        \"value\": 6,\n        \"asset_id\": 1\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"value"}]},{"type":"text","value":" how much asset to mint, in asset groth."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"fee"}]},{"type":"text","value":" transaction fee in BEAM groth. Omit to use default fee."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_id"}]},{"type":"text","value":" asset id of the asset to mint."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"txId"}]},{"type":"text","value":" optional,  provide your own transaction ID."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_meta"}]},{"type":"text","value":" obsolete and removed in v6.0."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"You can preselect specific BEAM UTXOs for a transaction fee by adding "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"coins"}]},{"type":"text","value":" array parameter, like "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"\"coins\" : [\"00057e8eca5673476e6f726d000000000000015d3ef79800\", \"00057e8eca1233476e6f726d000000000000015d3ef79800\"]"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\": \"2.0\", \n    \"id\": 2,\n    \"result\":\n    {\n        \"txId\" : \"10c4b760c842433cb58339a0fafef3db\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\": \"2.0\", \n    \"id\": 2,\n    \"result\":\n    {\n        \"txId\" : \"10c4b760c842433cb58339a0fafef3db\"\n    }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Returns transaction id or "},{"type":"element","tag":"a","props":{"href":"#api-error-codes"},"children":[{"type":"text","value":"error code"}]},{"type":"text","value":"."}]},{"type":"element","tag":"h2","props":{"id":"tx_asset_consume"},"children":[{"type":"text","value":"tx_asset_consume"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Available from v5.0, can be used after Fork2. Assets must be enabled ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--enable_assets"}]},{"type":"text","value":") or method would fail."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Burns existing asset coins. You must own the asset itself as well as asset coins to burn them. You cannot burn asset coins that belong to another wallet. Info about the asset should be in a local database. Use "},{"type":"element","tag":"a","props":{"href":"#tx_asset_info"},"children":[{"type":"text","value":"tx_asset_info"}]},{"type":"text","value":" to retrieve the latest asset info if necessary. Asset coins burning is absolutely free. You need to pay only regular transaction fee."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 2,\n    \"method\":\"tx_asset_consume\", \n    \"params\":\n    {\n        \"value\": 6,\n        \"asset_id\": 1\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 2,\n    \"method\":\"tx_asset_consume\", \n    \"params\":\n    {\n        \"value\": 6,\n        \"asset_id\": 1\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"value"}]},{"type":"text","value":" how much asset to burn, in asset groth."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"fee"}]},{"type":"text","value":" transaction fee in BEAM groth, omit for a default fee."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_id"}]},{"type":"text","value":" id of the asset to consume."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"txId"}]},{"type":"text","value":" optional, provide your own transaction ID"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_meta"}]},{"type":"text","value":" obsolete and removed since v6.0"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"You can preselect specific UTXOs to burn and to pay fee by adding "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"coins"}]},{"type":"text","value":" array parameter, like "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"\"coins\" : [\"00057e8eca5673476e6f726d000000000000015d3ef79800\", \"00057e8eca1233476e6f726d000000000000015d3ef79800\"]"}]},{"type":"text","value":". Both asset coins (to burn) and BEAM coins (to pay fee) can be in this array."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 2,\n    \"result\":\n    {\n        \"txId\" : \"10c4b760c842433cb58339a0fafef3db\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 2,\n    \"result\":\n    {\n        \"txId\" : \"10c4b760c842433cb58339a0fafef3db\"\n    }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Returns transaction id or "},{"type":"element","tag":"a","props":{"href":"#api-error-codes"},"children":[{"type":"text","value":"error code"}]},{"type":"text","value":"."}]},{"type":"element","tag":"h2","props":{"id":"tx_asset_info"},"children":[{"type":"text","value":"tx_asset_info"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Available from v5.0, can be used after Fork2. Assets must be enabled ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--enable_assets"}]},{"type":"text","value":") or method would fail."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Retrieve full info about any registered asset and save in a local database. If asset has been unregistered or has been never registered transaction would fail. After transaction is completed you can use "},{"type":"element","tag":"a","props":{"href":"#get_asset_info"},"children":[{"type":"text","value":"get_asset_info"}]},{"type":"text","value":" to read/get asset info from the local database."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 2,\n    \"method\": \"tx_asset_info\",\n    \"params\": \n    {\n        \"asset_id\": 1\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 2,\n    \"method\": \"tx_asset_info\",\n    \"params\": \n    {\n        \"asset_id\": 1\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_id"}]},{"type":"text","value":" asset id to retrieve info about. Can be used for any asset even if you don't own it."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"txId"}]},{"type":"text","value":" optional, provide your own transaction ID"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_meta"}]},{"type":"text","value":" obsolete and removed since v6.0"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Asset info transaction is free, i.e. doesn't incur any fees."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 2,\n    \"result\":\n    {\n        \"txId\" : \"10c4b760c842433cb58339a0fafef3db\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 2,\n    \"result\":\n    {\n        \"txId\" : \"10c4b760c842433cb58339a0fafef3db\"\n    }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Returns transaction id or "},{"type":"element","tag":"a","props":{"href":"#api-error-codes"},"children":[{"type":"text","value":"error code"}]},{"type":"text","value":"."}]},{"type":"element","tag":"h2","props":{"id":"tx_cancel"},"children":[{"type":"text","value":"tx_cancel"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Cancels running transaction"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"method\":\"tx_cancel\", \n    \"params\":\n    {\n        \"txId\" : \"a13525181c0d45b0a4c5c1a697c8a7b8\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"method\":\"tx_cancel\", \n    \"params\":\n    {\n        \"txId\" : \"a13525181c0d45b0a4c5c1a697c8a7b8\"\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"txId"}]},{"type":"text","value":" transaction id to cancel."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"result\": true\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"result\": true\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Returns "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"true"}]},{"type":"text","value":" if successfully canceled or "},{"type":"element","tag":"a","props":{"href":"#api-error-codes"},"children":[{"type":"text","value":"error code"}]},{"type":"text","value":" with the reason."}]},{"type":"element","tag":"h2","props":{"id":"tx_delete"},"children":[{"type":"text","value":"tx_delete"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Removes transaction from the local history. Cannot remove running transaction"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"method\":\"tx_delete\", \n    \"params\":\n    {\n        \"txId\" : \"a13525181c0d45b0a4c5c1a697c8a7b8\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"method\":\"tx_delete\", \n    \"params\":\n    {\n        \"txId\" : \"a13525181c0d45b0a4c5c1a697c8a7b8\"\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"txId"}]},{"type":"text","value":" transaction id to be deleted."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"result\": true\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"result\": true\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Returns "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"true"}]},{"type":"text","value":" if the transaction was successfully deleted or "},{"type":"element","tag":"a","props":{"href":"#api-error-codes"},"children":[{"type":"text","value":"error code"}]},{"type":"text","value":" with the reason."}]},{"type":"element","tag":"h2","props":{"id":"tx_status"},"children":[{"type":"text","value":"tx_status"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Get status & extended information about a single transaction by its transaction id. The example below is given for a simple transaction. Different transaction types have different status records. Consult "},{"type":"element","tag":"a","props":{"href":"#tx_list"},"children":[{"type":"text","value":"tx_list"}]},{"type":"text","value":" method description for details. This method can be called for previously started asset-involving transactions even if assets are not enabled in the current session."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"method\":\"tx_status\", \n    \"params\":\n    {\n        \"txId\" : \"10c4b760c842433cb58339a0fafef3db\" \n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"method\":\"tx_status\", \n    \"params\":\n    {\n        \"txId\" : \"10c4b760c842433cb58339a0fafef3db\" \n    }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"result\":\n    { \n        \"txId\" : \"10c4b760c842433cb58339a0fafef3db\",\n        \"asset_id\": 0,\n        \"comment\": \"\",\n        \"fee\": 100,\n        \"kernel\": \"0000000000000000000000000000000000000000000000000000000000000000\",\n        \"receiver\": \"472e17b0419055ffee3b3813b98ae671579b0ac0dcd6f1a23b11a75ab148cc67\",\n        \"sender\": \"f287176bdd517e9c277778e4c012bf6a3e687dd614fc552a1ed22a3fee7d94f2\",\n        \"status\": 4,\n        \"status_string\" : \"Failed\",\n        \"tx_type\": 0,\n        \"tx_type_string\": \"simple\",\n        \"failure_reason\" : \"No inputs\",\n        \"value\": 12342342,\n        \"create_time\" : 1551100217,\n        \"income\" : false,\n        \"sender_identity\": \"a0a1ebbfeed5c312b309e32715c159e6b4548a6c6c3af25d0dbc16f37a1e9dd6\",\n        \"receiver_identity\": \"2d8738b0424ad50631e902fab655e7e1795fbb8d92d47c4c8df7336870fcadf5\",\n        \"token\": \"44pE7ySjZYjbLqwnTJANvr4BudMk1RdvWvaZnBvoCTwFnigfaTSza75bvw7x2GCa377Z4CSRRYZon44Ss9G9joSicNRAgts4u3pL6yV6jDQ6gAVJD9Scyr\"\n    } \n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"result\":\n    { \n        \"txId\" : \"10c4b760c842433cb58339a0fafef3db\",\n        \"asset_id\": 0,\n        \"comment\": \"\",\n        \"fee\": 100,\n        \"kernel\": \"0000000000000000000000000000000000000000000000000000000000000000\",\n        \"receiver\": \"472e17b0419055ffee3b3813b98ae671579b0ac0dcd6f1a23b11a75ab148cc67\",\n        \"sender\": \"f287176bdd517e9c277778e4c012bf6a3e687dd614fc552a1ed22a3fee7d94f2\",\n        \"status\": 4,\n        \"status_string\" : \"Failed\",\n        \"tx_type\": 0,\n        \"tx_type_string\": \"simple\",\n        \"failure_reason\" : \"No inputs\",\n        \"value\": 12342342,\n        \"create_time\" : 1551100217,\n        \"income\" : false,\n        \"sender_identity\": \"a0a1ebbfeed5c312b309e32715c159e6b4548a6c6c3af25d0dbc16f37a1e9dd6\",\n        \"receiver_identity\": \"2d8738b0424ad50631e902fab655e7e1795fbb8d92d47c4c8df7336870fcadf5\",\n        \"token\": \"44pE7ySjZYjbLqwnTJANvr4BudMk1RdvWvaZnBvoCTwFnigfaTSza75bvw7x2GCa377Z4CSRRYZon44Ss9G9joSicNRAgts4u3pL6yV6jDQ6gAVJD9Scyr\"\n    } \n}\n"}]}]},{"type":"element","tag":"h2","props":{"id":"tx_list"},"children":[{"type":"text","value":"tx_list"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Get the transactions list."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 8,\n    \"method\":\"tx_list\",\n    \"params\":\n    {\n        \"filter\" : \n        {\n            \"status\":4,\n            \"height\":1055,\n        },\n        \"skip\" : 0,\n        \"count\" : 10\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 8,\n    \"method\":\"tx_list\",\n    \"params\":\n    {\n        \"filter\" : \n        {\n            \"status\":4,\n            \"height\":1055,\n        },\n        \"skip\" : 0,\n        \"count\" : 10\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"filter.status"}]},{"type":"text","value":" optional, filter transactions by status"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"filter.height"}]},{"type":"text","value":" optional, filter transactions by height. For simple, asset issue and asset consume transactions denotes height when the transaction was registered in the chain. For asset info transaction means height at which asset confirmation was received. Works only for transactions with status Completed(3)."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"count"}]},{"type":"text","value":" optional, number of transactions to get. By default, all transactions are returned."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"skip"}]},{"type":"text","value":" number of transactions to skip, 0 by default."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"If assets are not enabled, the method returns only BEAM transactions. To get asset transactions you should enable assets ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--enable_assets"}]},{"type":"text","value":")."}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"filter.asset_id"}]},{"type":"text","value":" return only asset transactions with given asset id. Present starting from v5.0. If assets are not enabled and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"filter.asset_id"}]},{"type":"text","value":" is non-zero nothing would be returned."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 8,\n    \"result\":\n    [{ \n        \"asset_id\": 0,\n        \"txId\" : \"10c4b760c842433cb58339a0fafef3db\",\n        \"comment\": \"\",\n        \"fee\": 0,\n        \"kernel\": \"0000000000000000000000000000000000000000000000000000000000000000\",\n        \"receiver\": \"472e17b0419055ffee3b3813b98ae671579b0ac0dcd6f1a23b11a75ab148cc67\",\n        \"sender\": \"f287176bdd517e9c277778e4c012bf6a3e687dd614fc552a1ed22a3fee7d94f2\",\n        \"status\": 4,\n        \"status_string\" : \"Failed\",\n        \"failure_reason\" : \"No inputs\",\n        \"value\": 12342342,\n        \"create_time\" : 1551100217,\n        \"income\" : false,\n        \"token\": \"44pE7ySjZYjbLqwnTJANvr4BudMk1RdvWvaZnBvoCTwFnigfaTSza75bvw7x2GCa377Z4CSRRYZon44Ss9G9joSicNRAgts4u3pL6yV6jDQ6gAVJD9Scyr\"\n    },\n    {\n      \"asset_id\": 1,\n      \"asset_meta\": \"STD:N=Coin;SN=CN;UN=Cgro;NTHUN=Cgroth\",\n      \"comment\": \"\",\n      \"confirmations\": 102,\n      \"create_time\": 1586995332,\n      \"fee\": 0,\n      \"height\": 1908,\n      \"income\": false,\n      \"receiver\": \"0\",\n      \"sender\": \"0\",\n      \"status\": 3,\n      \"status_string\": \"asset confirmed\",\n      \"txId\": \"d9f94306127a4ef894733f984b5512cf\",\n      \"tx_type\": 6,\n      \"tx_type_string\": \"asset info\",\n      \"value\": 0\n    },\n    {\n        \"asset_id\": 1,\n        \"asset_meta\": \"STD:N=Coin;SN=CN;UN=Cgro;NTHUN=Cgroth\",\n        \"comment\": \"\",\n        \"confirmations\": 1985,\n        \"height\": 25,\n        \"create_time\": 1586966478,\n        \"fee\": 100,\n        \"income\": false,\n        \"kernel\": \"1c9e4a9a61df1dda00db10ab4477f88355e13d4ed06c0db36c39b22a2a66f642\",\n        \"receiver\": \"0\",\n        \"sender\": \"0\",\n        \"status\": 3,\n        \"status_string\": \"asset issued\",\n        \"txId\": \"77008a76aa4b4da697587040b2d21f1e\",\n        \"tx_type\": 2,\n        \"tx_type_string\": \"asset issue\",\n        \"value\": 500000000\n    }]\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 8,\n    \"result\":\n    [{ \n        \"asset_id\": 0,\n        \"txId\" : \"10c4b760c842433cb58339a0fafef3db\",\n        \"comment\": \"\",\n        \"fee\": 0,\n        \"kernel\": \"0000000000000000000000000000000000000000000000000000000000000000\",\n        \"receiver\": \"472e17b0419055ffee3b3813b98ae671579b0ac0dcd6f1a23b11a75ab148cc67\",\n        \"sender\": \"f287176bdd517e9c277778e4c012bf6a3e687dd614fc552a1ed22a3fee7d94f2\",\n        \"status\": 4,\n        \"status_string\" : \"Failed\",\n        \"failure_reason\" : \"No inputs\",\n        \"value\": 12342342,\n        \"create_time\" : 1551100217,\n        \"income\" : false,\n        \"token\": \"44pE7ySjZYjbLqwnTJANvr4BudMk1RdvWvaZnBvoCTwFnigfaTSza75bvw7x2GCa377Z4CSRRYZon44Ss9G9joSicNRAgts4u3pL6yV6jDQ6gAVJD9Scyr\"\n    },\n    {\n      \"asset_id\": 1,\n      \"asset_meta\": \"STD:N=Coin;SN=CN;UN=Cgro;NTHUN=Cgroth\",\n      \"comment\": \"\",\n      \"confirmations\": 102,\n      \"create_time\": 1586995332,\n      \"fee\": 0,\n      \"height\": 1908,\n      \"income\": false,\n      \"receiver\": \"0\",\n      \"sender\": \"0\",\n      \"status\": 3,\n      \"status_string\": \"asset confirmed\",\n      \"txId\": \"d9f94306127a4ef894733f984b5512cf\",\n      \"tx_type\": 6,\n      \"tx_type_string\": \"asset info\",\n      \"value\": 0\n    },\n    {\n        \"asset_id\": 1,\n        \"asset_meta\": \"STD:N=Coin;SN=CN;UN=Cgro;NTHUN=Cgroth\",\n        \"comment\": \"\",\n        \"confirmations\": 1985,\n        \"height\": 25,\n        \"create_time\": 1586966478,\n        \"fee\": 100,\n        \"income\": false,\n        \"kernel\": \"1c9e4a9a61df1dda00db10ab4477f88355e13d4ed06c0db36c39b22a2a66f642\",\n        \"receiver\": \"0\",\n        \"sender\": \"0\",\n        \"status\": 3,\n        \"status_string\": \"asset issued\",\n        \"txId\": \"77008a76aa4b4da697587040b2d21f1e\",\n        \"tx_type\": 2,\n        \"tx_type_string\": \"asset issue\",\n        \"value\": 500000000\n    }]\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"token"}]},{"type":"text","value":" retuned only in case if the transaction was started with a token."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"height"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"confirmations"}]},{"type":"text","value":" will be absent if the transaction isn't in the chain for simple, asset issue & asset consume transactions, or if asset confirmation is not received for asset info transaction."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"confirmations"}]},{"type":"text","value":" the number of blocks which confirm the presence of the transaction."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"sender_identity"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"receiver_identity"}]},{"type":"text","value":" are present if both participants provided these."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"status_string"}]},{"type":"text","value":" is a string representation of "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"status"}]},{"type":"text","value":" parameter."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_meta"}]},{"type":"text","value":" is an asset metadata string. Present from v5.0."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"tx_type"}]},{"type":"text","value":" is present starting from v5.0."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"tx_type_string"}]},{"type":"text","value":" is a string representation of tx_type parameter. Present starting from v5.0."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_id"}]},{"type":"text","value":" is returned starting from v5.0. For BEAM transactions it is always 0, for transactions that involve assets (including send/receive) it is an asset id. Can be 0 for asset info transaction if the transaction was started with asset_meta and the asset has been not found."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_meta"}]},{"type":"text","value":" is an asset metadata string. Returned starting from v5.0. Always present for asset issue &  consume transactions. Can be empty for asset info transaction if it was started with asset_id and the asset has been not found."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"kernel"}]},{"type":"text","value":" is not returned for asset info transactions. These transactions do not have any kernel and only query node for information."}]}]},{"type":"element","tag":"h3","props":{"id":"important-the-recommended-number-of-confirmations-for-beam-transfers-is-80-blocks"},"children":[{"type":"text","value":"IMPORTANT: The recommended number of confirmations for Beam transfers is 80 blocks."}]},{"type":"element","tag":"h3","props":{"id":"tx-statuses"},"children":[{"type":"text","value":"TX statuses"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"pending (0)     - "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"pending"}]},{"type":"text","value":" initial state, the transaction is created, but not sent yet"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"in progress (1) - "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"self sending"}]},{"type":"text","value":"/"},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"waiting for sender"}]},{"type":"text","value":"/"},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"waiting for receiver"}]},{"type":"text","value":"/"},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"in progress"}]},{"type":"text","value":". For simple transactions indicates that the sender or receiver should come online to initiate the transaction. For asset issue/consume/info transactions indicates that transaction is being assembled. For asset info transaction means waiting for node response."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"canceled (2)    - "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"cancelled"}]},{"type":"text","value":" by sender or due to rollback"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"completed (3)   - transaction is "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"completed"}]},{"type":"text","value":"/"},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"received"}]},{"type":"text","value":"/"},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"sent"}]},{"type":"text","value":"/"},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset issued"}]},{"type":"text","value":"/"},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset consumed"}]},{"type":"text","value":"/"},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset confirmed"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"failed (4)      - "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"failed"}]},{"type":"text","value":" for some reason or "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"expired"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"registering (5) - "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"self sending"}]},{"type":"text","value":"/"},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"receiving"}]},{"type":"text","value":"/"},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"sending"}]},{"type":"text","value":"/"},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"in progress"}]},{"type":"text","value":" transaction is taken care by the blockchain, miners needs to PoW and to add it to a block, then block should be added to the blockchain."}]}]},{"type":"element","tag":"h3","props":{"id":"tx-types"},"children":[{"type":"text","value":"TX types"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"simple (0) - simple transaction, send/receive BEAM or asset"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"reserved (1) - currently not returned"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"asset issue (2) - issue new asset units"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"asset consume (3) - consume asset units"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"reserved (4) - currently not returned"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"reserved (5) - currently not returned"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"asset info (6) - asset info transaction, receive full asset information from blockchain"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"push transaction (7) - lelantus push transaction, is used for offline/max privacy payments"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"contract (12) - starting with v6.0, transaction created by contract request, or to fund or execute node-base contract invocation"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"N.B."}]},{"type":"text","value":" tx_list does not return swap, asset register & asset unregister transactions. Transactions are sorted by height in a descending order."}]},{"type":"element","tag":"h2","props":{"id":"wallet_status"},"children":[{"type":"text","value":"wallet_status"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Get current wallet status."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 6,\n    \"method\":\"wallet_status\"\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 6,\n    \"method\":\"wallet_status\"\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 6,\n    \"result\":\n    {\n        \"current_height\" : 1055,\n        \"current_state_hash\" : \"f287176bdd517e9c277778e4c012bf6a3e687dd614fc552a1ed22a3fee7d94f2\",\n        \"prev_state_hash\" : \"bd39333a66a8b7cb3804b5978d42312c841dbfa03a1c31fc2f0627eeed6e43f2\",\n        \"available\": 100500,\n        \"receiving\": 123,\n        \"sending\": 0,\n        \"maturing\": 50,\n        \"locked\": 30,\n        \"difficulty\": 2.93914,\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 6,\n    \"result\":\n    {\n        \"current_height\" : 1055,\n        \"current_state_hash\" : \"f287176bdd517e9c277778e4c012bf6a3e687dd614fc552a1ed22a3fee7d94f2\",\n        \"prev_state_hash\" : \"bd39333a66a8b7cb3804b5978d42312c841dbfa03a1c31fc2f0627eeed6e43f2\",\n        \"available\": 100500,\n        \"receiving\": 123,\n        \"sending\": 0,\n        \"maturing\": 50,\n        \"locked\": 30,\n        \"difficulty\": 2.93914,\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"available"}]},{"type":"text","value":" sum of available UTXOs you can spend"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"sending/receiving"}]},{"type":"text","value":" sum of UTXOs currently sending/receiving"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"maturing"}]},{"type":"text","value":" sum of UTXOs currently maturing"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"locked"}]},{"type":"text","value":" not used at the moment, ignore"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"difficulty"}]},{"type":"text","value":" the latest blockchain PoW difficulty"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Starting from v5.0 assets support has been added. This slightly changes API response: totals array is added which provides amounts for each assets including BEAM (asset id 0). To get the totals array assets should be enabled ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--enable_assets"}]},{"type":"text","value":")."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 6,\n    \"method\":\"wallet_status\"\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 6,\n    \"method\":\"wallet_status\"\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n  \"id\": 1236,\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"current_height\" : 1055,\n    \"current_state_hash\" : \"f287176bdd517e9c277778e4c012bf6a3e687dd614fc552a1ed22a3fee7d94f2\",\n    \"prev_state_hash\" : \"bd39333a66a8b7cb3804b5978d42312c841dbfa03a1c31fc2f0627eeed6e43f2\",\n    \"available\": 100500,\n    \"receiving\": 123,\n    \"sending\": 0,\n    \"maturing\": 50,\n    \"difficulty\": 2.93914,\n    \"totals\": [\n      {\n        \"asset_id\": 0,\n        \"available\": 100500,\n        \"available_str\": \"100500\",\n        \"maturing\": 50,\n        \"maturing_str\": \"50\",\n        \"receiving\": 123,\n        \"receiving_str\": \"123\",\n        \"sending\": 0,\n        \"sending_str\": \"0\"\n      },\n      {\n        \"asset_id\": 1,\n        \"available\": 2000000000,\n        \"available_str\": \"2000000000\",\n        \"maturing\": 0,\n        \"maturing_str\": \"0\",\n        \"receiving\": 0,\n        \"receiving_str\": \"0\",\n        \"sending\": 0,\n        \"sending_str\": \"0\"\n      }\n    ]\n  }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n  \"id\": 1236,\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"current_height\" : 1055,\n    \"current_state_hash\" : \"f287176bdd517e9c277778e4c012bf6a3e687dd614fc552a1ed22a3fee7d94f2\",\n    \"prev_state_hash\" : \"bd39333a66a8b7cb3804b5978d42312c841dbfa03a1c31fc2f0627eeed6e43f2\",\n    \"available\": 100500,\n    \"receiving\": 123,\n    \"sending\": 0,\n    \"maturing\": 50,\n    \"difficulty\": 2.93914,\n    \"totals\": [\n      {\n        \"asset_id\": 0,\n        \"available\": 100500,\n        \"available_str\": \"100500\",\n        \"maturing\": 50,\n        \"maturing_str\": \"50\",\n        \"receiving\": 123,\n        \"receiving_str\": \"123\",\n        \"sending\": 0,\n        \"sending_str\": \"0\"\n      },\n      {\n        \"asset_id\": 1,\n        \"available\": 2000000000,\n        \"available_str\": \"2000000000\",\n        \"maturing\": 0,\n        \"maturing_str\": \"0\",\n        \"receiving\": 0,\n        \"receiving_str\": \"0\",\n        \"sending\": 0,\n        \"sending_str\": \"0\"\n      }\n    ]\n  }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"totals"}]},{"type":"text","value":" is an array of totals per asset. Assets that are included in this array by default:\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"BEAM (asset id 0)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"All assets which have UTXOs."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"All owned assets, even if there is no UTXOs for the given asset."}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Asset is included in the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"totals"}]},{"type":"text","value":" array even if all UTXOs are spent or if there are no UTXOs but asset is owned (issued by the wallet). In case when all the UTXOs are spent totals' fields except "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_id"}]},{"type":"text","value":" would be 0 (zero balance)."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Maximum asset emission is 2"},{"type":"element","tag":"sup","props":{},"children":[{"type":"text","value":"128"}]},{"type":"text","value":"-1. To ensure compatibility with JavaScript raw number ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"available"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"maturing"}]},{"type":"text","value":" &c.) returned only if it is less than or equal to "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Number.MAX_SAFE_INTEGER"}]},{"type":"text","value":" (2"},{"type":"element","tag":"sup","props":{},"children":[{"type":"text","value":"53"}]},{"type":"text","value":"-1). If total's value is greater than "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Number.MAX_SAFE_INTEGER"}]},{"type":"text","value":" only corresponding string representation ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"xxxx_str"}]},{"type":"text","value":") is returned."}]},{"type":"element","tag":"h3","props":{"id":"wallet_status-dapps"},"children":[{"type":"text","value":"wallet_status & DApps"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"If method is called from DApp balances ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"totals"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"available"}]},{"type":"text","value":" &c) are not returned due to privacy reason. DApps are not allowed to get user's balances."}]},{"type":"element","tag":"h2","props":{"id":"get_utxo"},"children":[{"type":"text","value":"get_utxo"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Get list of all unlocked UTXOs."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 6,\n    \"method\":\"get_utxo\",\n    \"params\" :\n    {\n        \"count\": 10,\n        \"skip\": 0,\n        \"sort\": {\n            \"field\": \"amount\",\n            \"direction\": \"asc\"\n        }\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 6,\n    \"method\":\"get_utxo\",\n    \"params\" :\n    {\n        \"count\": 10,\n        \"skip\": 0,\n        \"sort\": {\n            \"field\": \"amount\",\n            \"direction\": \"asc\"\n        }\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"count"}]},{"type":"text","value":" number of UTXO to get, by default all the UTXOs are returned."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"skip"}]},{"type":"text","value":" number of UTXO to skip, default is "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"0"}]},{"type":"text","value":"."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"sort.field"}]},{"type":"text","value":" name of field to sort. Available values are \"id|asset_id|amount|type|maturity|createTxId|spentTxId|status|status_string\""}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"sort.direction"}]},{"type":"text","value":" sorting directions \"asc\" or \"desc\""}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\": \"2.0\", \n    \"id\": 6,\n    \"result\":\n    [{\n        \"id\": 123,\n        \"asset_id\": 0,\n        \"amount\": 12345,\n        \"maturity\": 60,\n        \"type\": \"mine\",\n        \"createTxId\": \"10c4b760c842433cb58339a0fafef3db\",\n        \"spentTxId\": \"\",\n        \"status\": 2,\n        \"status_string\": \"maturing\"\n    }]\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\": \"2.0\", \n    \"id\": 6,\n    \"result\":\n    [{\n        \"id\": 123,\n        \"asset_id\": 0,\n        \"amount\": 12345,\n        \"maturity\": 60,\n        \"type\": \"mine\",\n        \"createTxId\": \"10c4b760c842433cb58339a0fafef3db\",\n        \"spentTxId\": \"\",\n        \"status\": 2,\n        \"status_string\": \"maturing\"\n    }]\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_id"}]},{"type":"text","value":" asset id if coin belongs to an asset and 0 for BEAM coins. By default method returns only BEAM coins. To get asset coins assets should be enabled ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--enable_assets"}]},{"type":"text","value":")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"filter.asset_id"}]},{"type":"text","value":" return only asset coins with given asset id, 0 for BEAM coins. Present starting from v5.0. Assets should be enabled."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1236,\n    \"method\": \"get_utxo\",\n    \"params\": {\n        \"assets\": true,\n        \"filter\": {\n            \"asset_id\": 1\n        }\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1236,\n    \"method\": \"get_utxo\",\n    \"params\": {\n        \"assets\": true,\n        \"filter\": {\n            \"asset_id\": 1\n        }\n    }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n  \"id\": 1236,\n  \"jsonrpc\": \"2.0\",\n  \"result\": [\n    {\n      \"amount\": 500000000,\n      \"asset_id\": 1,\n      \"createTxId\": \"fd705ce6f8c345309c865dc93de9fec5\",\n      \"id\": \"0000000183ed2de4d94e6bd56e6f726d01000000000000001dcd6500\",\n      \"maturity\": 19,\n      \"spentTxId\": \"\",\n      \"status\": 1,\n      \"status_string\": \"available\",\n      \"type\": \"norm\"\n    }\n  ]\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n  \"id\": 1236,\n  \"jsonrpc\": \"2.0\",\n  \"result\": [\n    {\n      \"amount\": 500000000,\n      \"asset_id\": 1,\n      \"createTxId\": \"fd705ce6f8c345309c865dc93de9fec5\",\n      \"id\": \"0000000183ed2de4d94e6bd56e6f726d01000000000000001dcd6500\",\n      \"maturity\": 19,\n      \"spentTxId\": \"\",\n      \"status\": 1,\n      \"status_string\": \"available\",\n      \"type\": \"norm\"\n    }\n  ]\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"type"}]},{"type":"text","value":" can be "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"fees"}]},{"type":"text","value":" (comission), "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"mine"}]},{"type":"text","value":" (coinbase), "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"norm"}]},{"type":"text","value":" (usual coin, for example received via transaction), "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"chng"}]},{"type":"text","value":" (change), "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"shld"}]},{"type":"text","value":" (shielded)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"status"}]},{"type":"text","value":" can be "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"unavailable (0)"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"available (1)"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"maturing (2)"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"outgoing (3)"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"incoming (4)"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"spent (6)"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"consumed (7)"}]},{"type":"text","value":". "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"consumed"}]},{"type":"text","value":" status is returned only for asset coins starting from v5.0. It means that the coin has been burned (consumed)."}]}]},{"type":"element","tag":"h2","props":{"id":"get_asset_info"},"children":[{"type":"text","value":"get_asset_info"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Read asset info from local database. Asset info can be refreshed using "},{"type":"element","tag":"a","props":{"href":"#tx_asset_info"},"children":[{"type":"text","value":"tx_asset_info"}]},{"type":"text","value":". It is also automatically refreshed during asset transactions (but not always) to ensure that asset operations are safe. This method can be called even if assets are not enabled."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 6,\n    \"method\": \"get_asset_info\",\n    \"params\" :\n    {\n        \"asset_id\": 1\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 6,\n    \"method\": \"get_asset_info\",\n    \"params\" :\n    {\n        \"asset_id\": 1\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_id"}]},{"type":"text","value":" asset id to retrieve info about. Can be used for any asset even if you don't own it."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_meta"}]},{"type":"text","value":" obsolete and removed since v6.0"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"id\": 1236,\n    \"jsonrpc\": \"2.0\",\n    \"result\": \n    {\n        \"asset_id\": 1,\n        \"emission\": 2000000000,\n        \"emission_str\": \"2000000000\",\n        \"isOwned\": 1,\n        \"lockHeight\": 39,\n        \"metadata\": \"STD:N=NAME;SN=SNM;UN=UNIT;NTHUN=NTHUNIT\",\n        \"ownerId\": \"0ae08a49e018e98177774294107dc033790b87538e54a20e99c6b98f1dbd39ce\",\n        \"refreshHeight\": 927\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"id\": 1236,\n    \"jsonrpc\": \"2.0\",\n    \"result\": \n    {\n        \"asset_id\": 1,\n        \"emission\": 2000000000,\n        \"emission_str\": \"2000000000\",\n        \"isOwned\": 1,\n        \"lockHeight\": 39,\n        \"metadata\": \"STD:N=NAME;SN=SNM;UN=UNIT;NTHUN=NTHUNIT\",\n        \"ownerId\": \"0ae08a49e018e98177774294107dc033790b87538e54a20e99c6b98f1dbd39ce\",\n        \"refreshHeight\": 927\n    }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Returns full asset info or "},{"type":"element","tag":"a","props":{"href":"#api-error-codes"},"children":[{"type":"text","value":"error code"}]},{"type":"text","value":"."}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_id"}]},{"type":"text","value":" asset id"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"metadata"}]},{"type":"text","value":" asset metadata"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"emission"}]},{"type":"text","value":" & "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"emission_str"}]},{"type":"text","value":" total asset emission. Maximum asset emission is 2"},{"type":"element","tag":"sup","props":{},"children":[{"type":"text","value":"128"}]},{"type":"text","value":"-1. To ensure compatibility with JavaScript raw number returned only if it is less than or equal to "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Number.MAX_SAFE_INTEGER"}]},{"type":"text","value":" (2"},{"type":"element","tag":"sup","props":{},"children":[{"type":"text","value":"53"}]},{"type":"text","value":"-1). If asset emission is greater than "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Number.MAX_SAFE_INTEGER"}]},{"type":"text","value":" only corresponding string representation is returned."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"isOwned"}]},{"type":"text","value":" is 1 if you own this asset"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"lockHeight"}]},{"type":"text","value":" last block when asset emission turned to/from 0."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"refreshHeight"}]},{"type":"text","value":" block at which asset information has been received. Please note, that all returned fields are valid only for this and previous blocks. In next blocks emission might change, asset become unregistered &c. Use "},{"type":"element","tag":"a","props":{"href":"#tx_asset_info"},"children":[{"type":"text","value":"tx_asset_info"}]},{"type":"text","value":" to retrieve the most recent info."}]}]},{"type":"element","tag":"h2","props":{"id":"generate_tx_id"},"children":[{"type":"text","value":"generate_tx_id"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Generates ID for a transaction."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 2,\n    \"method\":\"generate_tx_id\"\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 2,\n    \"method\":\"generate_tx_id\"\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 2,\n    \"result\":\"10c4b760c842433cb58339a0fafef3db\"\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 2,\n    \"result\":\"10c4b760c842433cb58339a0fafef3db\"\n}\n"}]}]},{"type":"element","tag":"h2","props":{"id":"export_payment_proof"},"children":[{"type":"text","value":"export_payment_proof"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Exports payment proof for given "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"txId"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"method\": \"export_payment_proof\", \n    \"params\":\n    {\n        \"txId\" : \"a13525181c0d45b0a4c5c1a697c8a7b8\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"method\": \"export_payment_proof\", \n    \"params\":\n    {\n        \"txId\" : \"a13525181c0d45b0a4c5c1a697c8a7b8\"\n    }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"result\": \n    {\n        \"payment_proof\": \"8009f28991ef543253c8b6a2caf15cf99e23fb9c2b4ca30dc463c8ceb354d7979e80ef7d4255dd5e885200648abe5826d8e0ba0157d3e8cf9c42dcc8258b036986e50400371789ee82afc25ee29c9c57bcb1018b725a3a94c0ceb1fa7984ea13de4982553e0d78d925a362982182a971e654857b8e407e7ad2e9cb72b2b8228812f8ec50435351000c94e2c85996e9527d9b0c90a1843205a7ec8f99fa534083e5f1d055d9f53894\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"result\": \n    {\n        \"payment_proof\": \"8009f28991ef543253c8b6a2caf15cf99e23fb9c2b4ca30dc463c8ceb354d7979e80ef7d4255dd5e885200648abe5826d8e0ba0157d3e8cf9c42dcc8258b036986e50400371789ee82afc25ee29c9c57bcb1018b725a3a94c0ceb1fa7984ea13de4982553e0d78d925a362982182a971e654857b8e407e7ad2e9cb72b2b8228812f8ec50435351000c94e2c85996e9527d9b0c90a1843205a7ec8f99fa534083e5f1d055d9f53894\"\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"payment_proof"}]},{"type":"text","value":" is a hex-encoded byte buffer which contains information about sender, receiver, amount and kernel, signed with receiver's private key. This info could be unpacked and verified using "},{"type":"element","tag":"a","props":{"href":"#verify_payment_proof"},"children":[{"type":"text","value":"verify_payment_proof"}]},{"type":"text","value":" method by the third party. Receiver creates a payment proof in order give receiver an ability to proof that actual payment was made. Sender does not sign transaction if receiver does not provide him this evidence."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"N.B."}]},{"type":"text","value":" Payment proofs for asset transaction are supported starting from v5.0. These proofs cannot be verified by earlier clients/APIs versions. Regular BEAM payment proofs generated by the latest clients/APIs still would be accepted by earlier versions of clients/APIs."}]},{"type":"element","tag":"h2","props":{"id":"verify_payment_proof"},"children":[{"type":"text","value":"verify_payment_proof"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Verifies "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"payment_proof"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"method\":\"verify_payment_proof\", \n    \"params\":\n    {\n        \"payment_proof\" : \"8009f28991ef543253c8b6a2caf15cf99e23fb9c2b4ca30dc463c8ceb354d7979e80ef7d4255dd5e885200648abe5826d8e0ba0157d3e8cf9c42dcc8258b036986e50400371789ee82afc25ee29c9c57bcb1018b725a3a94c0ceb1fa7984ea13de4982553e0d78d925a362982182a971e654857b8e407e7ad2e9cb72b2b8228812f8ec50435351000c94e2c85996e9527d9b0c90a1843205a7ec8f99fa534083e5f1d055d9f53894\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"method\":\"verify_payment_proof\", \n    \"params\":\n    {\n        \"payment_proof\" : \"8009f28991ef543253c8b6a2caf15cf99e23fb9c2b4ca30dc463c8ceb354d7979e80ef7d4255dd5e885200648abe5826d8e0ba0157d3e8cf9c42dcc8258b036986e50400371789ee82afc25ee29c9c57bcb1018b725a3a94c0ceb1fa7984ea13de4982553e0d78d925a362982182a971e654857b8e407e7ad2e9cb72b2b8228812f8ec50435351000c94e2c85996e9527d9b0c90a1843205a7ec8f99fa534083e5f1d055d9f53894\"\n    }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"result\": \n    {\n        \"is_valid\": true,\n        \"asset_id\": 0,\n        \"sender\":   \"9f28991ef543253c8b6a2caf15cf99e23fb9c2b4ca30dc463c8ceb354d7979e\",\n        \"receiver\": \"ef7d4255dd5e885200648abe5826d8e0ba0157d3e8cf9c42dcc8258b036986e5\",\n        \"amount\":   2300000000,\n        \"kernel\":   \"ee82afc25ee29c9c57bcb1018b725a3a94c0ceb1fa7984ea13de4982553e0d78\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"result\": \n    {\n        \"is_valid\": true,\n        \"asset_id\": 0,\n        \"sender\":   \"9f28991ef543253c8b6a2caf15cf99e23fb9c2b4ca30dc463c8ceb354d7979e\",\n        \"receiver\": \"ef7d4255dd5e885200648abe5826d8e0ba0157d3e8cf9c42dcc8258b036986e5\",\n        \"amount\":   2300000000,\n        \"kernel\":   \"ee82afc25ee29c9c57bcb1018b725a3a94c0ceb1fa7984ea13de4982553e0d78\"\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"is_valid"}]},{"type":"text","value":" true if signature is valid,"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"sender"}]},{"type":"text","value":" sender's SBBS address"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"receiver"}]},{"type":"text","value":" is a receiver's SBBS address, is it is used to verify the signature"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"amount"}]},{"type":"text","value":" amount sent by the transaction in groth"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_id"}]},{"type":"text","value":" asset id of the transaction, 0 for BEAM. Returned starting from v5.0"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"kernel"}]},{"type":"text","value":" id of the kernel of this transaction"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"N.B."}]},{"type":"text","value":" v5.0+ APIs accept proofs generated by older versions."}]},{"type":"element","tag":"h2","props":{"id":"invoke_contract"},"children":[{"type":"text","value":"invoke_contract"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Available from v6.0, can be used after Fork3."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Invokes application shader. Only application/wallet side shaders are accepted. Use CLI to call a contract shader."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\": \"2.0\", \n    \"id\": 2,\n    \"method\": \"invoke_contract\", \n    \"params\":\n    {\n        \"contract\": [123, 123, 123],\n        \"args\": \"role=manager,action=view\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\": \"2.0\", \n    \"id\": 2,\n    \"method\": \"invoke_contract\", \n    \"params\":\n    {\n        \"contract\": [123, 123, 123],\n        \"args\": \"role=manager,action=view\"\n    }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"OR"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\": \"2.0\", \n    \"id\": 2,\n    \"method\": \"invoke_contract\", \n    \"params\":\n    {\n        \"contract_file\": \"....\",\n        \"args\": \"role=manager,action=view\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\": \"2.0\", \n    \"id\": 2,\n    \"method\": \"invoke_contract\", \n    \"params\":\n    {\n        \"contract_file\": \"....\",\n        \"args\": \"role=manager,action=view\"\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"contract"}]},{"type":"text","value":" contract code as raw bytes array, optional."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"contract_file"}]},{"type":"text","value":" file name to read contract code from, optional. Absolute or relative to the executable CWD."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"args"}]},{"type":"text","value":" contract arguments, optional. Depends on the called shader. Consult shader-specific docs for details."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"create_tx"}]},{"type":"text","value":" bool, pass "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"true"}]},{"type":"text","value":" create transaction automatically if contract wants it and return "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"txid"}]},{"type":"text","value":". Pass false to avoid transaction creation, get raw tx data that can be passed to "},{"type":"element","tag":"a","props":{"href":"#process_invoke_data"},"children":[{"type":"text","value":"process_invoke_data"}]},{"type":"text","value":" later. By default is "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"true"}]},{"type":"text","value":"."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"contract"}]},{"type":"text","value":" parameter always takes precedence over the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"contract_file"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n  \"id\": 1236,\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"output\": \"{\\\"contracts\\\": [{\\\"cid\\\": \\\"2b105519ee7e170d92abffbc1eb5426d4e20910af2f54bcee43eb84c74dcfa4b\\\",\\\"Height\\\": 27004},{\\\"cid\\\": \n               \\\"55df189ac5c1f9b982fa34fb8050f005c331203023816ddbb2d641a96a3fcb2a\\\",\\\"Height\\\": 27001},{\\\"cid\\\": \n               \\\"6add645863c29d9dc43ab9987af870cb91fd0dfb4e26ae09ca97ac8ff5372f6e\\\",\\\"Height\\\": 532}]}\"\n  }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n  \"id\": 1236,\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"output\": \"{\\\"contracts\\\": [{\\\"cid\\\": \\\"2b105519ee7e170d92abffbc1eb5426d4e20910af2f54bcee43eb84c74dcfa4b\\\",\\\"Height\\\": 27004},{\\\"cid\\\": \n               \\\"55df189ac5c1f9b982fa34fb8050f005c331203023816ddbb2d641a96a3fcb2a\\\",\\\"Height\\\": 27001},{\\\"cid\\\": \n               \\\"6add645863c29d9dc43ab9987af870cb91fd0dfb4e26ae09ca97ac8ff5372f6e\\\",\\\"Height\\\": 532}]}\"\n  }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"output"}]},{"type":"text","value":" contract output. Depends on the called shader. Can be empty"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"txid"}]},{"type":"text","value":" transaction created by contract (if any)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"raw_data"}]},{"type":"text","value":" raw data returned by the contract based on which transaction can be created using "},{"type":"element","tag":"a","props":{"href":"#process_invoke_data"},"children":[{"type":"text","value":"process_invoke_data"}]}]}]},{"type":"element","tag":"h3","props":{"id":"async-notice"},"children":[{"type":"text","value":"Async Notice"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"invoke_contract method is asynchronous in nature and can take up to several blocks to execute (depends on shader). Please setup your API connection correspondingly (keep alive HTTP or use socket)."}]},{"type":"element","tag":"h3","props":{"id":"shader-errors"},"children":[{"type":"text","value":"Shader Errors"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Please notice that API returns errors only if there is an API error (no shader code, parse error &c.). If there was an error inside the shader itself API call would be successful and shader output should be checked. For example:"}]},{"type":"element","tag":"h3","props":{"id":"code-caching"},"children":[{"type":"text","value":"Code caching"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"If there was an "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"invoke_contract"}]},{"type":"text","value":" call before "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"contract"}]},{"type":"text","value":"/"},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"contract_file"}]},{"type":"text","value":" params can be omitted. In this case contract code from previous call would be used. In case of wallet_api code caching works on per-connection level. In case of applications caching works on per-application level."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1236,\n    \"method\": \"invoke_contract\",\n    \"params\": {\n        \"contract_file\": \"./faucetManager.wasm\",\n        \"args\": \"role=manager\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1236,\n    \"method\": \"invoke_contract\",\n    \"params\": {\n        \"contract_file\": \"./faucetManager.wasm\",\n        \"args\": \"role=manager\"\n    }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n  \"id\": 1236,\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"output\": \"{\\\"error\\\": \\\"Action not specified\\\"}\"\n  }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n  \"id\": 1236,\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"output\": \"{\\\"error\\\": \\\"Action not specified\\\"}\"\n  }\n}\n"}]}]},{"type":"element","tag":"h2","props":{"id":"process_invoke_data"},"children":[{"type":"text","value":"process_invoke_data"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Creates transaction requested by a contract"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1236,\n    \"method\": \"process_invoke_data\",\n    \"params\": {\n        \"data\": [123, 123, 123]\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1236,\n    \"method\": \"process_invoke_data\",\n    \"params\": {\n        \"data\": [123, 123, 123]\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"data"}]},{"type":"text","value":" raw invoke data bytes array returned by "},{"type":"element","tag":"a","props":{"href":"#invoke_contract"},"children":[{"type":"text","value":"invoke_contract"}]},{"type":"text","value":", mandatory"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n  \"id\": 1236,\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"txid\": \"...\"\n  }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n  \"id\": 1236,\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"txid\": \"...\"\n  }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"txid"}]},{"type":"text","value":" contract transaction id created as a result of the call"}]}]},{"type":"element","tag":"h2","props":{"id":"calc_change"},"children":[{"type":"text","value":"calc_change"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Calculates change for given "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"amount"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"method\":\"calc_change\", \n    \"params\":\n    {\n        \"amount\" : 1234,\n        \"asset_id\": 2,\n        \"fee\": 10000,\n        \"is_push_transaction\": true\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"method\":\"calc_change\", \n    \"params\":\n    {\n        \"amount\" : 1234,\n        \"asset_id\": 2,\n        \"fee\": 10000,\n        \"is_push_transaction\": true\n    }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"result\":\n    {\n        \"asset_change\": 12,\n        \"asset_change_str\": \"12\",\n        \"change\": 12,\n        \"change_str\": \"12\",\n        \"explicit_fee\": 1100000,\n        \"explicit_fee_str\": \"1100000\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"result\":\n    {\n        \"asset_change\": 12,\n        \"asset_change_str\": \"12\",\n        \"change\": 12,\n        \"change_str\": \"12\",\n        \"explicit_fee\": 1100000,\n        \"explicit_fee_str\": \"1100000\"\n    }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"where"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"amount"}]},{"type":"text","value":" is a requested amount we are going to send"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_id"}]},{"type":"text","value":" optional asset id of the requested amount. Default is 0 (BEAM). This method can be used for non-BEAM coins even if assets are not enabled."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"fee"}]},{"type":"text","value":" explicit fee in GROTHs chosen by the user"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_change"}]},{"type":"text","value":" change amount for requested "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_id"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"change"}]},{"type":"text","value":" change in for BEAM. "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_change"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"change"}]},{"type":"text","value":" are equal if "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_id == 0"}]},{"type":"text","value":", i.e. BEAM"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"explicit_fee"}]},{"type":"text","value":" the fee which should be used"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"is_push_transaction"}]},{"type":"text","value":" "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"true"}]},{"type":"text","value":" if we are going to push transaction output into the shielded pool."}]}]},{"type":"element","tag":"h2","props":{"id":"block_details"},"children":[{"type":"text","value":"block_details"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Returns block header from blockchain"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\": \"2.0\", \n    \"id\": 2,\n    \"method\": \"block_details\", \n    \"params\":\n    {\n        \"height\": 200\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\": \"2.0\", \n    \"id\": 2,\n    \"method\": \"block_details\", \n    \"params\":\n    {\n        \"height\": 200\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"height"}]},{"type":"text","value":" height of block."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"result\":\n    {\n        \"block_hash\": \"7aec20e5b56706d57a4dca1df4a4d3104dbdbf8d6005499845558b7a32694d02\",\n        \"chainwork\": \"000000000000000000000000000000000000000000000000000000c503b09ac0\",\n        \"definition\": \"0d3f4e63743760c6397d76086e1cc0ebe749c121206c8150738dc84edcd30092\",\n        \"difficulty\": 118.4594497680664,\n        \"height\": 200,\n        \"kernels\": \"705cdfa154eec35e4b4b0e2163ff9c81f8f035641ee4b0b95c3f3c5b0f170ffe\",\n        \"packed_difficulty\": 114939514,\n        \"pow\": \"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004f04638c1f4cee1b7ad6d906\",\n        \"previous_block\": \"d195cc69fbd2b402cc33ecb303f5391f0010f34ee059f30b908ed10f0fe5a255\",\n        \"rules_hash\": \"340bbeabc390f481df1f84aedf0b679c1c7ed1f0e28d4340c9c49b4c41611f85\",\n        \"timestamp\": 1619598150\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"result\":\n    {\n        \"block_hash\": \"7aec20e5b56706d57a4dca1df4a4d3104dbdbf8d6005499845558b7a32694d02\",\n        \"chainwork\": \"000000000000000000000000000000000000000000000000000000c503b09ac0\",\n        \"definition\": \"0d3f4e63743760c6397d76086e1cc0ebe749c121206c8150738dc84edcd30092\",\n        \"difficulty\": 118.4594497680664,\n        \"height\": 200,\n        \"kernels\": \"705cdfa154eec35e4b4b0e2163ff9c81f8f035641ee4b0b95c3f3c5b0f170ffe\",\n        \"packed_difficulty\": 114939514,\n        \"pow\": \"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004f04638c1f4cee1b7ad6d906\",\n        \"previous_block\": \"d195cc69fbd2b402cc33ecb303f5391f0010f34ee059f30b908ed10f0fe5a255\",\n        \"rules_hash\": \"340bbeabc390f481df1f84aedf0b679c1c7ed1f0e28d4340c9c49b4c41611f85\",\n        \"timestamp\": 1619598150\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"block_hash"}]},{"type":"text","value":" is a block hash"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"chainwork"}]},{"type":"text","value":" is a chainwork"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"definition"}]},{"type":"text","value":" is a definition"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"difficulty"}]},{"type":"text","value":" is a difficulty"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"height"}]},{"type":"text","value":" is a block height"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"kernels"}]},{"type":"text","value":" is a kernels"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"packed_difficulty"}]},{"type":"text","value":" is a packed difficulty"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"pow"}]},{"type":"text","value":" is a pow"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"previous_block"}]},{"type":"text","value":" is hash of previous block"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"rules_hash"}]},{"type":"text","value":" is a rules hash"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"timestamp"}]},{"type":"text","value":" is a timestamp"}]}]},{"type":"element","tag":"h3","props":{"id":"async-notice-1"},"children":[{"type":"text","value":"Async Notice"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"block_details method is asynchronous in nature. Please setup your API connection correspondingly (keep alive HTTP or use socket)."}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"api-error-codes","depth":2,"text":"API Error codes"},{"id":"api-methods","depth":2,"text":"API Methods"},{"id":"swap-api-methods","depth":2,"text":"SWAP API Methods"},{"id":"create_address","depth":2,"text":"create_address"},{"id":"validate_address","depth":2,"text":"validate_address"},{"id":"addr_list","depth":2,"text":"addr_list","children":[{"id":"identity","depth":3,"text":"Identity"}]},{"id":"delete_address","depth":2,"text":"delete_address"},{"id":"edit_address","depth":2,"text":"edit_address"},{"id":"tx_send","depth":2,"text":"tx_send"},{"id":"tx_split","depth":2,"text":"tx_split"},{"id":"tx_asset_issue","depth":2,"text":"tx_asset_issue"},{"id":"tx_asset_consume","depth":2,"text":"tx_asset_consume"},{"id":"tx_asset_info","depth":2,"text":"tx_asset_info"},{"id":"tx_cancel","depth":2,"text":"tx_cancel"},{"id":"tx_delete","depth":2,"text":"tx_delete"},{"id":"tx_status","depth":2,"text":"tx_status"},{"id":"tx_list","depth":2,"text":"tx_list","children":[{"id":"important-the-recommended-number-of-confirmations-for-beam-transfers-is-80-blocks","depth":3,"text":"IMPORTANT: The recommended number of confirmations for Beam transfers is 80 blocks."},{"id":"tx-statuses","depth":3,"text":"TX statuses"},{"id":"tx-types","depth":3,"text":"TX types"}]},{"id":"wallet_status","depth":2,"text":"wallet_status","children":[{"id":"wallet_status-dapps","depth":3,"text":"wallet_status & DApps"}]},{"id":"get_utxo","depth":2,"text":"get_utxo"},{"id":"get_asset_info","depth":2,"text":"get_asset_info"},{"id":"generate_tx_id","depth":2,"text":"generate_tx_id"},{"id":"export_payment_proof","depth":2,"text":"export_payment_proof"},{"id":"verify_payment_proof","depth":2,"text":"verify_payment_proof"},{"id":"invoke_contract","depth":2,"text":"invoke_contract","children":[{"id":"async-notice","depth":3,"text":"Async Notice"},{"id":"shader-errors","depth":3,"text":"Shader Errors"},{"id":"code-caching","depth":3,"text":"Code caching"}]},{"id":"process_invoke_data","depth":2,"text":"process_invoke_data"},{"id":"calc_change","depth":2,"text":"calc_change"},{"id":"block_details","depth":2,"text":"block_details","children":[{"id":"async-notice-1","depth":3,"text":"Async Notice"}]}]}},"_type":"markdown","_id":"content:docs:core-tech:Beam-wallet-protocol-API-v6.0.md","_source":"content","_file":"docs/core-tech/Beam-wallet-protocol-API-v6.0.md","_extension":"md"},{"_path":"/docs/core-tech/beam-wallet-protocol-api-v6.1","_dir":"core-tech","_draft":false,"_partial":false,"_locale":"","title":"Beam Wallet Protocol API V61","description":"","body":{"type":"root","children":[{"type":"element","tag":"h2","props":{"id":"whats-new-in-v61"},"children":[{"type":"text","value":"What's new in v6.1"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Wallet is now able to send change events such as state changed, transaction changed &c."}]}]},{"type":"element","tag":"h3","props":{"id":"new-methods"},"children":[{"type":"text","value":"New methods"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#get_version"},"children":[{"type":"text","value":"get_version"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#ev_subunsub"},"children":[{"type":"text","value":"ev_subunsub"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]}]},{"type":"element","tag":"h3","props":{"id":"changed-methods"},"children":[{"type":"text","value":"Changed methods"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#wallet_status"},"children":[{"type":"text","value":"wallet_status"}]},{"type":"text","value":" added "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"nz_totals"}]},{"type":"text","value":" param, returns additional "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"is_in_sync"}]},{"type":"text","value":" & "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"current_state_timestamp"}]},{"type":"text","value":" fields. Method now is\nallowed to be called from apps but does not return balances"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#get_asset_info"},"children":[{"type":"text","value":"get_asset_info"}]},{"type":"text","value":" returns additional "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"metadata_kv"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"metadata_std_min"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"metadata_v50"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"metadata_v60"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"metadata_std"}]},{"type":"text","value":" & "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"metadata_pairs"}]},{"type":"text","value":" fields"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#invoke_contract"},"children":[{"type":"text","value":"invoke_contract"}]},{"type":"text","value":" priority queue of request added together with "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"priority"}]},{"type":"text","value":" & "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"unique"}]},{"type":"text","value":" parameters"}]}]},{"type":"element","tag":"h3","props":{"id":"new-events"},"children":[{"type":"text","value":"New events"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#ev_sync_progress"},"children":[{"type":"text","value":"ev_sync_progress"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#ev_system_state"},"children":[{"type":"text","value":"ev_system_state"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#ev_addrs_changed"},"children":[{"type":"text","value":"ev_addrs_changed"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#ev_assets_changed"},"children":[{"type":"text","value":"ev_assets_changed"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#ev_utxos_changed"},"children":[{"type":"text","value":"ev_utxos_changed"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#ev_txs_changed"},"children":[{"type":"text","value":"ev_txs_changed"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]}]},{"type":"element","tag":"h2","props":{"id":"api-error-codes"},"children":[{"type":"text","value":"API Error codes"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"List of the possible error codes (with messages):"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32600 InvalidJsonRpc (\"Invalid JSON-RPC.\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32601 NotFoundJsonRpc (\"Procedure not found.\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32602 InvalidParamsJsonRpc (\"Invalid parameters.\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32603 InternalErrorJsonRpc (\"Internal JSON-RPC error.\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32001 InvalidTxStatus (\"Invalid TX status.\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32002 UnknownApiKey (\"Unknown API key.\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32003 InvalidAddress (\"Invalid address.\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32004 InvalidTxId (\"Invalid transaction ID.\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32005 NotSupported (\"Feature is not supported\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32006 InvalidPaymentProof (\"Invalid payment proof provided\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32007 PaymentProofExportError (\"Cannot export payment proof\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32008 SwapFailToParseToken (\"Invalid swap token.\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32009 SwapFailToAcceptOwn (\"Can't accept own swap offer.\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32010 SwapNotEnoughtBeams (\"Not enought beams.\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32011 SwapFailToConnect (\"Doesn't have active connection.\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32012 DatabaseError (\"Database error\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32013 DatabaseNotFound (\"Database not found\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32014 ThrottleError (\"Requests limit exceeded\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32015 NotOpenedError (\"Wallet not opened\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32016 NoSwapsError (\"Swaps are not enabled\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32017 UnexpectedError (\"Unexpected call\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32018 ContractCompileError (\"Failed to compile contract\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32019 ContractError (\"Contract call failed\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32020 NotAllowedError (\"Call is not allowed\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32021 UserRejected (\"Call is rejected by user\")"}]}]},{"type":"element","tag":"h2","props":{"id":"api-methods"},"children":[{"type":"text","value":"API Methods"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"API has the following methods:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#create_address"},"children":[{"type":"text","value":"create_address"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#delete_address"},"children":[{"type":"text","value":"delete_address"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#edit_address"},"children":[{"type":"text","value":"edit_address"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#addr_list"},"children":[{"type":"text","value":"addr_list"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#validate_address"},"children":[{"type":"text","value":"validate_address"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#tx_send"},"children":[{"type":"text","value":"tx_send"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#tx_asset_issue"},"children":[{"type":"text","value":"tx_asset_issue"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#tx_asset_consume"},"children":[{"type":"text","value":"tx_asset_consume"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#tx_asset_info"},"children":[{"type":"text","value":"tx_asset_info"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#tx_status"},"children":[{"type":"text","value":"tx_status"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#tx_split"},"children":[{"type":"text","value":"tx_split"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#tx_cancel"},"children":[{"type":"text","value":"tx_cancel"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#tx_delete"},"children":[{"type":"text","value":"tx_delete"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#get_utxo"},"children":[{"type":"text","value":"get_utxo"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#tx_list"},"children":[{"type":"text","value":"tx_list"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#wallet_status"},"children":[{"type":"text","value":"wallet_status"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#generate_tx_id"},"children":[{"type":"text","value":"generate_tx_id"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#export_payment_proof"},"children":[{"type":"text","value":"export_payment_proof"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#verify_payment_proof"},"children":[{"type":"text","value":"verify_payment_proof"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#get_asset_info"},"children":[{"type":"text","value":"get_asset_info"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#set_confirmations_count"},"children":[{"type":"text","value":"set_confirmations_count"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#get_confirmations_count"},"children":[{"type":"text","value":"get_confirmations_count"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#invoke_contract"},"children":[{"type":"text","value":"invoke_contract"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-async-orange"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#process_invoke_data"},"children":[{"type":"text","value":"process_invoke_data"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-async-orange"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#block_details"},"children":[{"type":"text","value":"block_details"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-async-orange"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#calc_change"},"children":[{"type":"text","value":"calc_change"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#get_version"},"children":[{"type":"text","value":"get_version"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#ev_subunsub"},"children":[{"type":"text","value":"ev_subunsub"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]}]},{"type":"element","tag":"h2","props":{"id":"swap-api-methods"},"children":[{"type":"text","value":"SWAP API Methods"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"If you build "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"wallet-api"}]},{"type":"text","value":" with "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"BEAM_ATOMIC_SWAP_SUPPORT"}]},{"type":"text","value":" then you can use additional "},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/wiki/Beam-wallet-protocol-SWAP-API-(BETA)","rel":["nofollow"]},"children":[{"type":"text","value":"SWAP API methods"}]},{"type":"text","value":"."}]},{"type":"element","tag":"h2","props":{"id":"create_address"},"children":[{"type":"text","value":"create_address"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Creates new receiver address."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\": \"2.0\", \n    \"id\": 1,\n    \"method\": \"create_address\", \n    \"params\":\n    {\n        \"type\": \"regular\",\n        \"expiration\": \"auto\",\n        \"comment\": \"John Smith\",\n        \"new_style_regular\" : true\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\": \"2.0\", \n    \"id\": 1,\n    \"method\": \"create_address\", \n    \"params\":\n    {\n        \"type\": \"regular\",\n        \"expiration\": \"auto\",\n        \"comment\": \"John Smith\",\n        \"new_style_regular\" : true\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"type"}]},{"type":"text","value":" the type of address, possible values are"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"regular"}]},{"type":"text","value":" - regular old-style address, default"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"offline"}]},{"type":"text","value":" - address offline transaction using Lelantus MW shielded pool, could be used more than once, there are no guaranties for extended privacy"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"max_privacy"}]},{"type":"text","value":" - address for guarantied maximum privacy transaction. Could be used only once."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"public_offline"}]},{"type":"text","value":" - address for donation, could be used as many times as you wish"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"regular_new"}]},{"type":"text","value":" - since v6.0, regular new-style address (base58), this address has SBBS internally"}]}]},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"Details of some address types are described "},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/wiki/Lelantus-CLI","rel":["nofollow"]},"children":[{"type":"text","value":"in this document"}]},{"type":"text","value":". Since v6.0, UI gives the sender an opportunity to choose between regular and offline send operation and the default address type provided via the \"receive\" UI dialog is an "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"offline"}]},{"type":"text","value":" address with "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"offline_payments=1"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"expiration"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"before v6.0 can be "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"expired/never/24h"}]},{"type":"text","value":"."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"since  v6.0 can be "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"expired/never/24h/auto"}]},{"type":"text","value":"."}]}]},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"Optional, by default address expires in 24 hours. "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"auto"}]},{"type":"text","value":" expiration means that address expires in 61 days (roughly 2 months). "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"auto"}]},{"type":"text","value":" addresses are renewed for another 2 months when any transaction is received with this address."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"comment"}]},{"type":"text","value":" - any string, optional."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"new_style_regular"}]},{"type":"text","value":" - if this flag is "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"true"}]},{"type":"text","value":" new style base58 address will be returned otherwise hexadecimal string will be returned, this option is ignored for the types different "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"regular"}]},{"type":"text","value":". "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"type=regular"}]},{"type":"text","value":" + "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"new_style_regular=true"}]},{"type":"text","value":" = "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"type=regular_new"}]},{"type":"text","value":"."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"offline_payments"}]},{"type":"text","value":" - number of offline payments embedded into an "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"offline"}]},{"type":"text","value":" address, default value is "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"1"}]},{"type":"text","value":". Valid only for the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"type=offline"}]},{"type":"text","value":"."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"All these address types could be passed as "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"address"}]},{"type":"text","value":" parameter of the "},{"type":"element","tag":"a","props":{"href":"#tx_send"},"children":[{"type":"text","value":"send"}]},{"type":"text","value":" method and/or used with the cli/UI. "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--enable_lelantus"}]},{"type":"text","value":" should be used in the command line of the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"wallet-api"}]},{"type":"text","value":" to enable sending/receiving using "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"offline"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"max_privacy"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"public_offline"}]},{"type":"text","value":" transactions. To generate "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"offline"}]},{"type":"text","value":"/"},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"max_privacy"}]},{"type":"text","value":"/"},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"public_offline"}]},{"type":"text","value":" addresses API must be connected to the own node (node with the wallet's viewer key)."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\" : \"2.0\", \n    \"id\" : 1,\n    \"result\" : \"472e17b0419055ffee3b3813b98ae671579b0ac0dcd6f1a23b11a75ab148cc67\"\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\" : \"2.0\", \n    \"id\" : 1,\n    \"result\" : \"472e17b0419055ffee3b3813b98ae671579b0ac0dcd6f1a23b11a75ab148cc67\"\n}\n"}]}]},{"type":"element","tag":"h2","props":{"id":"validate_address"},"children":[{"type":"text","value":"validate_address"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Just a simple validations, checks if the address isn't garbage and belongs to our elliptic curve. Also returns "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"is_mine == true"}]},{"type":"text","value":" if address is found in the local wallet DB."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"method\": \"validate_address\", \n    \"params\":\n    {\n        \"address\" : \"472e17b0419055ffee3b3813b98ae671579b0ac0dcd6f1a23b11a75ab148cc67\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"method\": \"validate_address\", \n    \"params\":\n    {\n        \"address\" : \"472e17b0419055ffee3b3813b98ae671579b0ac0dcd6f1a23b11a75ab148cc67\"\n    }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"result\" : \n    {\n        \"is_valid\" : true,\n        \"is_mine\" : false,\n        \"type\": \"offline\", \n        \"payments\": 3\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"result\" : \n    {\n        \"is_valid\" : true,\n        \"is_mine\" : false,\n        \"type\": \"offline\", \n        \"payments\": 3\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"type"}]},{"type":"text","value":" type of address. Check "},{"type":"element","tag":"a","props":{"href":"#create_address"},"children":[{"type":"text","value":"create_address"}]},{"type":"text","value":" for details"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"payments"}]},{"type":"text","value":" number of offline payments left for the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"offline"}]},{"type":"text","value":" address"}]}]},{"type":"element","tag":"h2","props":{"id":"addr_list"},"children":[{"type":"text","value":"addr_list"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Get addresses stored in the wallet database."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 8,\n    \"method\":\"addr_list\",\n    \"params\":\n    {\n        \"own\" : true\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 8,\n    \"method\":\"addr_list\",\n    \"params\":\n    {\n        \"own\" : true\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"own"}]},{"type":"text","value":", optional bool. If "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"true"}]},{"type":"text","value":" returns only own addresses, if "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"false"}]},{"type":"text","value":" returns only peer addresses. By default is false."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"id\": 8,\n    \"jsonrpc\": \"2.0\",\n    \"result\":\n    [{\n        \"address\": \"29510b33fac0cb20695fd3b836d835451e600c4224d8fb335dc1a68271deb9b6b5b\",\n        \"category\": \"\",\n        \"create_time\": 1553174321,\n        \"duration\": 1520,\n        \"expired\": true,\n        \"comment\": \"\",\n        \"own\": true,\n        \"own_id\": 16730903,\n        \"own_id_str\": \"16730903\",\n        \"identity\": \"2d8738b0424ad50631e902fab655e7e1795fbb8d92d47c4c8df7336870fcadf5\",\n        \"type\": \"regular\",\n        \"wallet_id\": \"29510b33fac0cb20695fd3b836d835451e600c4224d8fb335dc1a68271deb9b6b5b\"\n    }] \n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"id\": 8,\n    \"jsonrpc\": \"2.0\",\n    \"result\":\n    [{\n        \"address\": \"29510b33fac0cb20695fd3b836d835451e600c4224d8fb335dc1a68271deb9b6b5b\",\n        \"category\": \"\",\n        \"create_time\": 1553174321,\n        \"duration\": 1520,\n        \"expired\": true,\n        \"comment\": \"\",\n        \"own\": true,\n        \"own_id\": 16730903,\n        \"own_id_str\": \"16730903\",\n        \"identity\": \"2d8738b0424ad50631e902fab655e7e1795fbb8d92d47c4c8df7336870fcadf5\",\n        \"type\": \"regular\",\n        \"wallet_id\": \"29510b33fac0cb20695fd3b836d835451e600c4224d8fb335dc1a68271deb9b6b5b\"\n    }] \n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"address"}]},{"type":"text","value":" address that should be distributed among users and used to send funds to"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"own_id"}]},{"type":"text","value":" unsigned 64 bit index used to generate given address"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"own_id_str"}]},{"type":"text","value":" string representation of index used to generate given address (for JavaScript)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"identity"}]},{"type":"text","value":" identity linked to the given address. In UI and CLI called as \"wallet's signature\"."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"type"}]},{"type":"text","value":" address type. Consult "},{"type":"element","tag":"a","props":{"href":"#create_address"},"children":[{"type":"text","value":"create_address"}]},{"type":"text","value":" method for detailed description"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"wallet_id"}]},{"type":"text","value":" - Wallet ID (SBBS address) associated with the given address. This is the same as an SBBS address in CLI/UI. Note that not all address types have an associated SBBS address. For example non-own "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"max_privacy"}]},{"type":"text","value":" addresses do not have "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"wallet_id"}]},{"type":"text","value":". While own "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"max_privacy"}]},{"type":"text","value":" ones do it is recommended not to publish it. SBBS address can be safely published for "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"regular"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"regular_new"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"offline"}]},{"type":"text","value":" addresses."}]}]},{"type":"element","tag":"h3","props":{"id":"identity"},"children":[{"type":"text","value":"Identity"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Starting from version 4.2 we introduce an additional entity in order to make transfer more reliable. It is called "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"identity"}]},{"type":"text","value":". From version 6.1 in UI and CLI it  called as \"wallet's signature\". The main goal of "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"identity"}]},{"type":"text","value":" is to proof and ensure that transaction performs between claimed participants also it could be done using untrusted 3rd parties. The main scenario is "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"hardware wallet"}]},{"type":"text","value":" when host machine could be compromised, since it has ability to generate SBBS addresses, it can sign payment proof or accept transaction without need to ask hardware wallet about any secret, but if we give our identity to the other side (in addition to SBBS address), and this identity can be generated using hardware wallet only, then only hardware wallet can sign or approve transaction."}]},{"type":"element","tag":"h2","props":{"id":"delete_address"},"children":[{"type":"text","value":"delete_address"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Delete specific address from the wallet."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 8,\n    \"method\":\"delete_address\",\n    \"params\":\n    {\n        \"address\" : \"29510b33fac0cb20695fd3b836d835451e600c4224d8fb335dc1a68271deb9b6b5b\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 8,\n    \"method\":\"delete_address\",\n    \"params\":\n    {\n        \"address\" : \"29510b33fac0cb20695fd3b836d835451e600c4224d8fb335dc1a68271deb9b6b5b\"\n    }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"id\": 8,\n    \"jsonrpc\": \"2.0\",\n    \"result\": \"done\"\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"id\": 8,\n    \"jsonrpc\": \"2.0\",\n    \"result\": \"done\"\n}\n"}]}]},{"type":"element","tag":"h2","props":{"id":"edit_address"},"children":[{"type":"text","value":"edit_address"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Edit specific address. You can change the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"comment"}]},{"type":"text","value":" and/or "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"expiration"}]},{"type":"text","value":". Consult "},{"type":"element","tag":"a","props":{"href":"#create_address"},"children":[{"type":"text","value":"create_address"}]},{"type":"text","value":" for more details on acceptable values."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 8,\n    \"method\":\"edit_address\",\n    \"params\":\n    {\n        \"address\" : \"29510b33fac0cb20695fd3b836d835451e600c4224d8fb335dc1a68271deb9b6b5b\",\n        \"comment\" : \"John Smith\",\n        \"expiration\" : \"expired\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 8,\n    \"method\":\"edit_address\",\n    \"params\":\n    {\n        \"address\" : \"29510b33fac0cb20695fd3b836d835451e600c4224d8fb335dc1a68271deb9b6b5b\",\n        \"comment\" : \"John Smith\",\n        \"expiration\" : \"expired\"\n    }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"id\": 8,\n    \"jsonrpc\": \"2.0\",\n    \"result\": \"done\"\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"id\": 8,\n    \"jsonrpc\": \"2.0\",\n    \"result\": \"done\"\n}\n"}]}]},{"type":"element","tag":"h2","props":{"id":"tx_send"},"children":[{"type":"text","value":"tx_send"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Send BEAM or asset to a given address."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 2,\n    \"method\":\"tx_send\", \n    \"params\":\n    {\n        \"value\": 12342342,\n        \"fee\": 2,\n        \"from\": \"472e17b0419055ffee3b3813b98ae671579b0ac0dcd6f1a23b11a75ab148cc67\",\n        \"address\": \"472e17b0419055ffee3b3813b98ae671579b0ac0dcd6f1a23b11a75ab148cc67\",\n        \"comment\": \"thank you!\",\n        \"asset_id\": 1,\n        \"offline\": false\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 2,\n    \"method\":\"tx_send\", \n    \"params\":\n    {\n        \"value\": 12342342,\n        \"fee\": 2,\n        \"from\": \"472e17b0419055ffee3b3813b98ae671579b0ac0dcd6f1a23b11a75ab148cc67\",\n        \"address\": \"472e17b0419055ffee3b3813b98ae671579b0ac0dcd6f1a23b11a75ab148cc67\",\n        \"comment\": \"thank you!\",\n        \"asset_id\": 1,\n        \"offline\": false\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"value"}]},{"type":"text","value":" how much BEAM or asset to send in groth or asset groth."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"fee"}]},{"type":"text","value":" always in BEAM groth, optional. Omit for default fee."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"from"}]},{"type":"text","value":" own address, optional. If omitted new own address is generated and registered."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"address"}]},{"type":"text","value":" receiver's SBBS address or token. Token is an extension of SBBS address. It is a "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"base58"}]},{"type":"text","value":" encoded byte buffer which contains serialized parameters of a transaction. At least it contains SBBS "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"address"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"identity"}]},{"type":"text","value":"."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"comment"}]},{"type":"text","value":" transaction comment, optional."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"txId"}]},{"type":"text","value":" optional, you can provide your own transaction ID."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_id"}]},{"type":"text","value":" asset id to send, optional. Present starting from v5.0 and can be used only after Fork 2. Omit or set to 0 for BEAM transaction. If "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_id"}]},{"type":"text","value":" is non-zero assets must be enabled ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--enable_assets"}]},{"type":"text","value":") or method would fail."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"offline"}]},{"type":"text","value":" - since v6.0 offline addresses by default start the regular online transaction. Specify "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"\"offline\":true\""}]},{"type":"text","value":" to start an offline transaction. Applied only for "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"offline"}]},{"type":"text","value":" addresses and ignored for all other address types."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"You can preselect specific UTXOs for a transaction and fee via optional "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"coins"}]},{"type":"text","value":" array parameter like "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"\"coins\" : [\"00057e8eca5673476e6f726d000000000000015d3ef79800\", \"00057e8eca1233476e6f726d000000000000015d3ef79800\"]"}]},{"type":"text","value":". In case of asset transaction you can specify both asset coins (to send) and non-asset coins (to pay fee)."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 2,\n    \"result\":\n    {\n        \"txId\" : \"10c4b760c842433cb58339a0fafef3db\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 2,\n    \"result\":\n    {\n        \"txId\" : \"10c4b760c842433cb58339a0fafef3db\"\n    }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Returns transaction id or "},{"type":"element","tag":"a","props":{"href":"#api-error-codes"},"children":[{"type":"text","value":"error code"}]},{"type":"text","value":"."}]},{"type":"element","tag":"h2","props":{"id":"tx_split"},"children":[{"type":"text","value":"tx_split"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Creates a specific set of outputs with given values."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"NOTE: The "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"session"}]},{"type":"text","value":" parameter is not IMPLEMENTED and was removed!"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 5,\n    \"method\":\"tx_split\", \n    \"params\":\n    {\n        \"coins\" : [11, 12, 13, 50000000],\n        \"fee\" : 100,\n        \"asset_id\": 1\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 5,\n    \"method\":\"tx_split\", \n    \"params\":\n    {\n        \"coins\" : [11, 12, 13, 50000000],\n        \"fee\" : 100,\n        \"asset_id\": 1\n    }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 5,\n    \"result\":\n    {\n        \"txId\" : \"10c4b760c842433cb58339a0fafef3db\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 5,\n    \"result\":\n    {\n        \"txId\" : \"10c4b760c842433cb58339a0fafef3db\"\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"fee"}]},{"type":"text","value":" is always in BEAM groth. Omit for default fee."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"coins"}]},{"type":"text","value":" amounts of coins your want to have after split."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"txId"}]},{"type":"text","value":" optional, provide your own transaction ID."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_id"}]},{"type":"text","value":" asset id to split, optional. Omit or set to 0 to split BEAM coins. Present starting from v5.0 and can be used only after Fork 2. If "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_id"}]},{"type":"text","value":" is non-zero assets must be enabled ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--enable_assets"}]},{"type":"text","value":") or method would fail."}]}]},{"type":"element","tag":"h2","props":{"id":"tx_asset_issue"},"children":[{"type":"text","value":"tx_asset_issue"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Available from v5.0, can be used after Fork2. Assets must be enabled ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--enable_assets"}]},{"type":"text","value":") or method would fail."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Mints new asset coins. You must own the asset and info about the asset should be in a local database. Use "},{"type":"element","tag":"a","props":{"href":"#tx_asset_info"},"children":[{"type":"text","value":"tx_asset_info"}]},{"type":"text","value":" to retrieve the latest asset info if necessary. Asset minting is free. You need to pay only regular transaction fee."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\": \"2.0\", \n    \"id\": 2,\n    \"method\": \"tx_asset_issue\", \n    \"params\":\n    {\n        \"value\": 6,\n        \"asset_id\": 1\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\": \"2.0\", \n    \"id\": 2,\n    \"method\": \"tx_asset_issue\", \n    \"params\":\n    {\n        \"value\": 6,\n        \"asset_id\": 1\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"value"}]},{"type":"text","value":" how much asset to mint, in asset groth."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"fee"}]},{"type":"text","value":" transaction fee in BEAM groth. Omit to use default fee."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_id"}]},{"type":"text","value":" asset id of the asset to mint."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"txId"}]},{"type":"text","value":" optional,  provide your own transaction ID."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_meta"}]},{"type":"text","value":" obsolete and removed in v6.0."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"You can preselect specific BEAM UTXOs for a transaction fee by adding "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"coins"}]},{"type":"text","value":" array parameter, like "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"\"coins\" : [\"00057e8eca5673476e6f726d000000000000015d3ef79800\", \"00057e8eca1233476e6f726d000000000000015d3ef79800\"]"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\": \"2.0\", \n    \"id\": 2,\n    \"result\":\n    {\n        \"txId\" : \"10c4b760c842433cb58339a0fafef3db\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\": \"2.0\", \n    \"id\": 2,\n    \"result\":\n    {\n        \"txId\" : \"10c4b760c842433cb58339a0fafef3db\"\n    }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Returns transaction id or "},{"type":"element","tag":"a","props":{"href":"#api-error-codes"},"children":[{"type":"text","value":"error code"}]},{"type":"text","value":"."}]},{"type":"element","tag":"h2","props":{"id":"tx_asset_consume"},"children":[{"type":"text","value":"tx_asset_consume"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Available from v5.0, can be used after Fork2. Assets must be enabled ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--enable_assets"}]},{"type":"text","value":") or method would fail."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Burns existing asset coins. You must own the asset itself as well as asset coins to burn them. You cannot burn asset coins that belong to another wallet. Info about the asset should be in a local database. Use "},{"type":"element","tag":"a","props":{"href":"#tx_asset_info"},"children":[{"type":"text","value":"tx_asset_info"}]},{"type":"text","value":" to retrieve the latest asset info if necessary. Asset coins burning is absolutely free. You need to pay only regular transaction fee."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 2,\n    \"method\":\"tx_asset_consume\", \n    \"params\":\n    {\n        \"value\": 6,\n        \"asset_id\": 1\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 2,\n    \"method\":\"tx_asset_consume\", \n    \"params\":\n    {\n        \"value\": 6,\n        \"asset_id\": 1\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"value"}]},{"type":"text","value":" how much asset to burn, in asset groth."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"fee"}]},{"type":"text","value":" transaction fee in BEAM groth, omit for a default fee."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_id"}]},{"type":"text","value":" id of the asset to consume."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"txId"}]},{"type":"text","value":" optional, provide your own transaction ID"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_meta"}]},{"type":"text","value":" obsolete and removed since v6.0"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"You can preselect specific UTXOs to burn and to pay fee by adding "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"coins"}]},{"type":"text","value":" array parameter, like "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"\"coins\" : [\"00057e8eca5673476e6f726d000000000000015d3ef79800\", \"00057e8eca1233476e6f726d000000000000015d3ef79800\"]"}]},{"type":"text","value":". Both asset coins (to burn) and BEAM coins (to pay fee) can be in this array."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 2,\n    \"result\":\n    {\n        \"txId\" : \"10c4b760c842433cb58339a0fafef3db\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 2,\n    \"result\":\n    {\n        \"txId\" : \"10c4b760c842433cb58339a0fafef3db\"\n    }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Returns transaction id or "},{"type":"element","tag":"a","props":{"href":"#api-error-codes"},"children":[{"type":"text","value":"error code"}]},{"type":"text","value":"."}]},{"type":"element","tag":"h2","props":{"id":"tx_asset_info"},"children":[{"type":"text","value":"tx_asset_info"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Available from v5.0, can be used after Fork2. Assets must be enabled ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--enable_assets"}]},{"type":"text","value":") or method would fail."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Retrieve full info about any registered asset and save in a local database. If asset has been unregistered or has been never registered transaction would fail. After transaction is completed you can use "},{"type":"element","tag":"a","props":{"href":"#get_asset_info"},"children":[{"type":"text","value":"get_asset_info"}]},{"type":"text","value":" to read/get asset info from the local database."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 2,\n    \"method\": \"tx_asset_info\",\n    \"params\": \n    {\n        \"asset_id\": 1\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 2,\n    \"method\": \"tx_asset_info\",\n    \"params\": \n    {\n        \"asset_id\": 1\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_id"}]},{"type":"text","value":" asset id to retrieve info about. Can be used for any asset even if you don't own it."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"txId"}]},{"type":"text","value":" optional, provide your own transaction ID"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_meta"}]},{"type":"text","value":" obsolete and removed since v6.0"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Asset info transaction is free, i.e. doesn't incur any fees."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 2,\n    \"result\":\n    {\n        \"txId\" : \"10c4b760c842433cb58339a0fafef3db\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 2,\n    \"result\":\n    {\n        \"txId\" : \"10c4b760c842433cb58339a0fafef3db\"\n    }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Returns transaction id or "},{"type":"element","tag":"a","props":{"href":"#api-error-codes"},"children":[{"type":"text","value":"error code"}]},{"type":"text","value":"."}]},{"type":"element","tag":"h2","props":{"id":"tx_cancel"},"children":[{"type":"text","value":"tx_cancel"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Cancels running transaction"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"method\":\"tx_cancel\", \n    \"params\":\n    {\n        \"txId\" : \"a13525181c0d45b0a4c5c1a697c8a7b8\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"method\":\"tx_cancel\", \n    \"params\":\n    {\n        \"txId\" : \"a13525181c0d45b0a4c5c1a697c8a7b8\"\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"txId"}]},{"type":"text","value":" transaction id to cancel."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"result\": true\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"result\": true\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Returns "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"true"}]},{"type":"text","value":" if successfully canceled or "},{"type":"element","tag":"a","props":{"href":"#api-error-codes"},"children":[{"type":"text","value":"error code"}]},{"type":"text","value":" with the reason."}]},{"type":"element","tag":"h2","props":{"id":"tx_delete"},"children":[{"type":"text","value":"tx_delete"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Removes transaction from the local history. Cannot remove running transaction"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"method\":\"tx_delete\", \n    \"params\":\n    {\n        \"txId\" : \"a13525181c0d45b0a4c5c1a697c8a7b8\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"method\":\"tx_delete\", \n    \"params\":\n    {\n        \"txId\" : \"a13525181c0d45b0a4c5c1a697c8a7b8\"\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"txId"}]},{"type":"text","value":" transaction id to be deleted."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"result\": true\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"result\": true\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Returns "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"true"}]},{"type":"text","value":" if the transaction was successfully deleted or "},{"type":"element","tag":"a","props":{"href":"#api-error-codes"},"children":[{"type":"text","value":"error code"}]},{"type":"text","value":" with the reason."}]},{"type":"element","tag":"h2","props":{"id":"tx_status"},"children":[{"type":"text","value":"tx_status"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Get status & extended information about a single transaction by its transaction id. The example below is given for a simple transaction. Different transaction types have different status records. Consult "},{"type":"element","tag":"a","props":{"href":"#tx_list"},"children":[{"type":"text","value":"tx_list"}]},{"type":"text","value":" method description for details. This method can be called for previously started asset-involving transactions even if assets are not enabled in the current session."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"method\":\"tx_status\", \n    \"params\":\n    {\n        \"txId\" : \"10c4b760c842433cb58339a0fafef3db\" \n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"method\":\"tx_status\", \n    \"params\":\n    {\n        \"txId\" : \"10c4b760c842433cb58339a0fafef3db\" \n    }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"result\":\n    { \n        \"txId\" : \"10c4b760c842433cb58339a0fafef3db\",\n        \"asset_id\": 0,\n        \"comment\": \"\",\n        \"fee\": 100,\n        \"kernel\": \"0000000000000000000000000000000000000000000000000000000000000000\",\n        \"receiver\": \"472e17b0419055ffee3b3813b98ae671579b0ac0dcd6f1a23b11a75ab148cc67\",\n        \"sender\": \"f287176bdd517e9c277778e4c012bf6a3e687dd614fc552a1ed22a3fee7d94f2\",\n        \"status\": 4,\n        \"status_string\" : \"Failed\",\n        \"tx_type\": 0,\n        \"tx_type_string\": \"simple\",\n        \"failure_reason\" : \"No inputs\",\n        \"value\": 12342342,\n        \"create_time\" : 1551100217,\n        \"income\" : false,\n        \"sender_identity\": \"a0a1ebbfeed5c312b309e32715c159e6b4548a6c6c3af25d0dbc16f37a1e9dd6\",\n        \"receiver_identity\": \"2d8738b0424ad50631e902fab655e7e1795fbb8d92d47c4c8df7336870fcadf5\",\n        \"token\": \"44pE7ySjZYjbLqwnTJANvr4BudMk1RdvWvaZnBvoCTwFnigfaTSza75bvw7x2GCa377Z4CSRRYZon44Ss9G9joSicNRAgts4u3pL6yV6jDQ6gAVJD9Scyr\"\n    } \n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"result\":\n    { \n        \"txId\" : \"10c4b760c842433cb58339a0fafef3db\",\n        \"asset_id\": 0,\n        \"comment\": \"\",\n        \"fee\": 100,\n        \"kernel\": \"0000000000000000000000000000000000000000000000000000000000000000\",\n        \"receiver\": \"472e17b0419055ffee3b3813b98ae671579b0ac0dcd6f1a23b11a75ab148cc67\",\n        \"sender\": \"f287176bdd517e9c277778e4c012bf6a3e687dd614fc552a1ed22a3fee7d94f2\",\n        \"status\": 4,\n        \"status_string\" : \"Failed\",\n        \"tx_type\": 0,\n        \"tx_type_string\": \"simple\",\n        \"failure_reason\" : \"No inputs\",\n        \"value\": 12342342,\n        \"create_time\" : 1551100217,\n        \"income\" : false,\n        \"sender_identity\": \"a0a1ebbfeed5c312b309e32715c159e6b4548a6c6c3af25d0dbc16f37a1e9dd6\",\n        \"receiver_identity\": \"2d8738b0424ad50631e902fab655e7e1795fbb8d92d47c4c8df7336870fcadf5\",\n        \"token\": \"44pE7ySjZYjbLqwnTJANvr4BudMk1RdvWvaZnBvoCTwFnigfaTSza75bvw7x2GCa377Z4CSRRYZon44Ss9G9joSicNRAgts4u3pL6yV6jDQ6gAVJD9Scyr\"\n    } \n}\n"}]}]},{"type":"element","tag":"h2","props":{"id":"tx_list"},"children":[{"type":"text","value":"tx_list"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Get the transactions list."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 8,\n    \"method\":\"tx_list\",\n    \"params\":\n    {\n        \"filter\" : \n        {\n            \"status\":4,\n            \"height\":1055,\n        },\n        \"skip\" : 0,\n        \"count\" : 10\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 8,\n    \"method\":\"tx_list\",\n    \"params\":\n    {\n        \"filter\" : \n        {\n            \"status\":4,\n            \"height\":1055,\n        },\n        \"skip\" : 0,\n        \"count\" : 10\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"filter.status"}]},{"type":"text","value":" optional, filter transactions by status"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"filter.height"}]},{"type":"text","value":" optional, filter transactions by height. For simple, asset issue and asset consume transactions denotes height when the transaction was registered in the chain. For asset info transaction means height at which asset confirmation was received. Works only for transactions with status Completed(3)."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"count"}]},{"type":"text","value":" optional, number of transactions to get. By default, all transactions are returned."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"skip"}]},{"type":"text","value":" number of transactions to skip, 0 by default."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"If assets are not enabled, the method returns only BEAM transactions. To get asset transactions you should enable assets ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--enable_assets"}]},{"type":"text","value":")."}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"filter.asset_id"}]},{"type":"text","value":" return only asset transactions with given asset id. Present starting from v5.0. If assets are not enabled and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"filter.asset_id"}]},{"type":"text","value":" is non-zero nothing would be returned."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 8,\n    \"result\":\n    [{ \n        \"asset_id\": 0,\n        \"txId\" : \"10c4b760c842433cb58339a0fafef3db\",\n        \"comment\": \"\",\n        \"fee\": 0,\n        \"kernel\": \"0000000000000000000000000000000000000000000000000000000000000000\",\n        \"receiver\": \"472e17b0419055ffee3b3813b98ae671579b0ac0dcd6f1a23b11a75ab148cc67\",\n        \"sender\": \"f287176bdd517e9c277778e4c012bf6a3e687dd614fc552a1ed22a3fee7d94f2\",\n        \"status\": 4,\n        \"status_string\" : \"Failed\",\n        \"failure_reason\" : \"No inputs\",\n        \"value\": 12342342,\n        \"create_time\" : 1551100217,\n        \"income\" : false,\n        \"token\": \"44pE7ySjZYjbLqwnTJANvr4BudMk1RdvWvaZnBvoCTwFnigfaTSza75bvw7x2GCa377Z4CSRRYZon44Ss9G9joSicNRAgts4u3pL6yV6jDQ6gAVJD9Scyr\"\n    },\n    {\n      \"asset_id\": 1,\n      \"asset_meta\": \"STD:N=Coin;SN=CN;UN=Cgro;NTHUN=Cgroth\",\n      \"comment\": \"\",\n      \"confirmations\": 102,\n      \"create_time\": 1586995332,\n      \"fee\": 0,\n      \"height\": 1908,\n      \"income\": false,\n      \"receiver\": \"0\",\n      \"sender\": \"0\",\n      \"status\": 3,\n      \"status_string\": \"asset confirmed\",\n      \"txId\": \"d9f94306127a4ef894733f984b5512cf\",\n      \"tx_type\": 6,\n      \"tx_type_string\": \"asset info\",\n      \"value\": 0\n    },\n    {\n        \"asset_id\": 1,\n        \"asset_meta\": \"STD:N=Coin;SN=CN;UN=Cgro;NTHUN=Cgroth\",\n        \"comment\": \"\",\n        \"confirmations\": 1985,\n        \"height\": 25,\n        \"create_time\": 1586966478,\n        \"fee\": 100,\n        \"income\": false,\n        \"kernel\": \"1c9e4a9a61df1dda00db10ab4477f88355e13d4ed06c0db36c39b22a2a66f642\",\n        \"receiver\": \"0\",\n        \"sender\": \"0\",\n        \"status\": 3,\n        \"status_string\": \"asset issued\",\n        \"txId\": \"77008a76aa4b4da697587040b2d21f1e\",\n        \"tx_type\": 2,\n        \"tx_type_string\": \"asset issue\",\n        \"value\": 500000000\n    }]\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 8,\n    \"result\":\n    [{ \n        \"asset_id\": 0,\n        \"txId\" : \"10c4b760c842433cb58339a0fafef3db\",\n        \"comment\": \"\",\n        \"fee\": 0,\n        \"kernel\": \"0000000000000000000000000000000000000000000000000000000000000000\",\n        \"receiver\": \"472e17b0419055ffee3b3813b98ae671579b0ac0dcd6f1a23b11a75ab148cc67\",\n        \"sender\": \"f287176bdd517e9c277778e4c012bf6a3e687dd614fc552a1ed22a3fee7d94f2\",\n        \"status\": 4,\n        \"status_string\" : \"Failed\",\n        \"failure_reason\" : \"No inputs\",\n        \"value\": 12342342,\n        \"create_time\" : 1551100217,\n        \"income\" : false,\n        \"token\": \"44pE7ySjZYjbLqwnTJANvr4BudMk1RdvWvaZnBvoCTwFnigfaTSza75bvw7x2GCa377Z4CSRRYZon44Ss9G9joSicNRAgts4u3pL6yV6jDQ6gAVJD9Scyr\"\n    },\n    {\n      \"asset_id\": 1,\n      \"asset_meta\": \"STD:N=Coin;SN=CN;UN=Cgro;NTHUN=Cgroth\",\n      \"comment\": \"\",\n      \"confirmations\": 102,\n      \"create_time\": 1586995332,\n      \"fee\": 0,\n      \"height\": 1908,\n      \"income\": false,\n      \"receiver\": \"0\",\n      \"sender\": \"0\",\n      \"status\": 3,\n      \"status_string\": \"asset confirmed\",\n      \"txId\": \"d9f94306127a4ef894733f984b5512cf\",\n      \"tx_type\": 6,\n      \"tx_type_string\": \"asset info\",\n      \"value\": 0\n    },\n    {\n        \"asset_id\": 1,\n        \"asset_meta\": \"STD:N=Coin;SN=CN;UN=Cgro;NTHUN=Cgroth\",\n        \"comment\": \"\",\n        \"confirmations\": 1985,\n        \"height\": 25,\n        \"create_time\": 1586966478,\n        \"fee\": 100,\n        \"income\": false,\n        \"kernel\": \"1c9e4a9a61df1dda00db10ab4477f88355e13d4ed06c0db36c39b22a2a66f642\",\n        \"receiver\": \"0\",\n        \"sender\": \"0\",\n        \"status\": 3,\n        \"status_string\": \"asset issued\",\n        \"txId\": \"77008a76aa4b4da697587040b2d21f1e\",\n        \"tx_type\": 2,\n        \"tx_type_string\": \"asset issue\",\n        \"value\": 500000000\n    }]\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"token"}]},{"type":"text","value":" retuned only in case if the transaction was started with a token."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"height"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"confirmations"}]},{"type":"text","value":" will be absent if the transaction isn't in the chain for simple, asset issue & asset consume transactions, or if asset confirmation is not received for asset info transaction."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"confirmations"}]},{"type":"text","value":" the number of blocks which confirm the presence of the transaction."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"sender_identity"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"receiver_identity"}]},{"type":"text","value":" are present if both participants provided these. In UI and CLI called as \"sender wallet's signature\" and \"receiver wallet's signature\"."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"status_string"}]},{"type":"text","value":" is a string representation of "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"status"}]},{"type":"text","value":" parameter."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_meta"}]},{"type":"text","value":" is an asset metadata string. Present from v5.0."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"tx_type"}]},{"type":"text","value":" is present starting from v5.0."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"tx_type_string"}]},{"type":"text","value":" is a string representation of tx_type parameter. Present starting from v5.0."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_id"}]},{"type":"text","value":" is returned starting from v5.0. For BEAM transactions it is always 0, for transactions that involve assets (including send/receive) it is an asset id. Can be 0 for asset info transaction if the transaction was started with asset_meta and the asset has been not found."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_meta"}]},{"type":"text","value":" is an asset metadata string. Returned starting from v5.0. Always present for asset issue &  consume transactions. Can be empty for asset info transaction if it was started with asset_id and the asset has been not found."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"kernel"}]},{"type":"text","value":" is not returned for asset info transactions. These transactions do not have any kernel and only query node for information."}]}]},{"type":"element","tag":"h3","props":{"id":"important-the-recommended-number-of-confirmations-for-beam-transfers-is-80-blocks"},"children":[{"type":"text","value":"IMPORTANT: The recommended number of confirmations for Beam transfers is 80 blocks."}]},{"type":"element","tag":"h3","props":{"id":"tx-statuses"},"children":[{"type":"text","value":"TX statuses"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"pending (0)     - "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"pending"}]},{"type":"text","value":" initial state, the transaction is created, but not sent yet"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"in progress (1) - "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"self sending"}]},{"type":"text","value":"/"},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"waiting for sender"}]},{"type":"text","value":"/"},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"waiting for receiver"}]},{"type":"text","value":"/"},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"in progress"}]},{"type":"text","value":". For simple transactions indicates that the sender or receiver should come online to initiate the transaction. For asset issue/consume/info transactions indicates that transaction is being assembled. For asset info transaction means waiting for node response."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"canceled (2)    - "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"cancelled"}]},{"type":"text","value":" by sender or due to rollback"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"completed (3)   - transaction is "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"completed"}]},{"type":"text","value":"/"},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"received"}]},{"type":"text","value":"/"},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"sent"}]},{"type":"text","value":"/"},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset issued"}]},{"type":"text","value":"/"},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset consumed"}]},{"type":"text","value":"/"},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset confirmed"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"failed (4)      - "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"failed"}]},{"type":"text","value":" for some reason or "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"expired"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"registering (5) - "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"self sending"}]},{"type":"text","value":"/"},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"receiving"}]},{"type":"text","value":"/"},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"sending"}]},{"type":"text","value":"/"},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"in progress"}]},{"type":"text","value":" transaction is taken care by the blockchain, miners needs to PoW and to add it to a block, then block should be added to the blockchain."}]}]},{"type":"element","tag":"h3","props":{"id":"tx-types"},"children":[{"type":"text","value":"TX types"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"simple (0) - simple transaction, send/receive BEAM or asset"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"reserved (1) - currently not returned"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"asset issue (2) - issue new asset units"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"asset consume (3) - consume asset units"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"reserved (4) - currently not returned"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"reserved (5) - currently not returned"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"asset info (6) - asset info transaction, receive full asset information from blockchain"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"push transaction (7) - lelantus push transaction, is used for offline/max privacy payments"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"contract (12) - starting with v6.0, transaction created by contract request, or to fund or execute node-base contract invocation"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"N.B."}]},{"type":"text","value":" tx_list does not return swap, asset register & asset unregister transactions. Transactions are sorted by height in a descending order."}]},{"type":"element","tag":"h2","props":{"id":"wallet_status"},"children":[{"type":"text","value":"wallet_status"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Get current wallet status."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 6,\n    \"method\":\"wallet_status\"\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 6,\n    \"method\":\"wallet_status\"\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 6,\n    \"result\":\n    {\n        \"current_height\" : 1055,\n        \"current_state_hash\" : \"f287176bdd517e9c277778e4c012bf6a3e687dd614fc552a1ed22a3fee7d94f2\",\n            \"current_state_timestamp\": 1625060769,\n        \"prev_state_hash\" : \"bd39333a66a8b7cb3804b5978d42312c841dbfa03a1c31fc2f0627eeed6e43f2\",\n            \"is_in_sync\": true,\n        \"available\": 100500,\n        \"receiving\": 123,\n        \"sending\": 0,\n        \"maturing\": 50,\n        \"locked\": 30,\n        \"difficulty\": 2.93914,\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 6,\n    \"result\":\n    {\n        \"current_height\" : 1055,\n        \"current_state_hash\" : \"f287176bdd517e9c277778e4c012bf6a3e687dd614fc552a1ed22a3fee7d94f2\",\n            \"current_state_timestamp\": 1625060769,\n        \"prev_state_hash\" : \"bd39333a66a8b7cb3804b5978d42312c841dbfa03a1c31fc2f0627eeed6e43f2\",\n            \"is_in_sync\": true,\n        \"available\": 100500,\n        \"receiving\": 123,\n        \"sending\": 0,\n        \"maturing\": 50,\n        \"locked\": 30,\n        \"difficulty\": 2.93914,\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"available"}]},{"type":"text","value":" sum of available UTXOs you can spend"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"sending/receiving"}]},{"type":"text","value":" sum of UTXOs currently sending/receiving"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"maturing"}]},{"type":"text","value":" sum of UTXOs currently maturing"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"locked"}]},{"type":"text","value":" not used at the moment, ignore"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"difficulty"}]},{"type":"text","value":" the latest blockchain PoW difficulty"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"current_state_timestamp"}]},{"type":"text","value":" is a UNIX timestamp in seconds"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"is_in_sync"}]},{"type":"text","value":" true is wallet is in sync with blockchain"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Starting from v5.0 assets support has been added. This slightly changes API response: totals array is added which provides amounts for each asset int the wallet. To get the totals array assets should be enabled ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--enable_assets"}]},{"type":"text","value":")."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 6,\n    \"method\":\"wallet_status\",\n        \"params\": {\n            \"nz_totals\": false\n        }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 6,\n    \"method\":\"wallet_status\",\n        \"params\": {\n            \"nz_totals\": false\n        }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"nz_totals"}]},{"type":"text","value":"optional bool. If true do not return totals for assets with zero balance. By default is false."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n  \"id\": 1236,\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"current_height\" : 1055,\n    \"current_state_hash\" : \"f287176bdd517e9c277778e4c012bf6a3e687dd614fc552a1ed22a3fee7d94f2\",\n    \"current_state_timestamp\": 1625060769,\n    \"prev_state_hash\" : \"bd39333a66a8b7cb3804b5978d42312c841dbfa03a1c31fc2f0627eeed6e43f2\",\n    \"is_in_sync\": true,\n    \"available\": 100500,\n    \"receiving\": 123,\n    \"sending\": 0,\n    \"maturing\": 50,\n    \"difficulty\": 2.93914,\n    \"totals\": [\n      {\n        \"asset_id\": 0,\n        \"available\": 100500,\n        \"available_str\": \"100500\",\n        \"maturing\": 50,\n        \"maturing_str\": \"50\",\n        \"receiving\": 123,\n        \"receiving_str\": \"123\",\n        \"sending\": 0,\n        \"sending_str\": \"0\"\n      },\n      {\n        \"asset_id\": 1,\n        \"available\": 2000000000,\n        \"available_str\": \"2000000000\",\n        \"maturing\": 0,\n        \"maturing_str\": \"0\",\n        \"receiving\": 0,\n        \"receiving_str\": \"0\",\n        \"sending\": 0,\n        \"sending_str\": \"0\"\n      }\n    ]\n  }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n  \"id\": 1236,\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"current_height\" : 1055,\n    \"current_state_hash\" : \"f287176bdd517e9c277778e4c012bf6a3e687dd614fc552a1ed22a3fee7d94f2\",\n    \"current_state_timestamp\": 1625060769,\n    \"prev_state_hash\" : \"bd39333a66a8b7cb3804b5978d42312c841dbfa03a1c31fc2f0627eeed6e43f2\",\n    \"is_in_sync\": true,\n    \"available\": 100500,\n    \"receiving\": 123,\n    \"sending\": 0,\n    \"maturing\": 50,\n    \"difficulty\": 2.93914,\n    \"totals\": [\n      {\n        \"asset_id\": 0,\n        \"available\": 100500,\n        \"available_str\": \"100500\",\n        \"maturing\": 50,\n        \"maturing_str\": \"50\",\n        \"receiving\": 123,\n        \"receiving_str\": \"123\",\n        \"sending\": 0,\n        \"sending_str\": \"0\"\n      },\n      {\n        \"asset_id\": 1,\n        \"available\": 2000000000,\n        \"available_str\": \"2000000000\",\n        \"maturing\": 0,\n        \"maturing_str\": \"0\",\n        \"receiving\": 0,\n        \"receiving_str\": \"0\",\n        \"sending\": 0,\n        \"sending_str\": \"0\"\n      }\n    ]\n  }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"totals"}]},{"type":"text","value":" is an array of totals per asset. Assets that are included in this array by default:\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"BEAM (asset id 0)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"All assets which have UTXOs."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"All owned assets, even if there is no UTXOs for the given asset."}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Asset is included in the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"totals"}]},{"type":"text","value":" array even if all UTXOs are spent or if there are no UTXOs but asset is owned (issued by the wallet). In case when all the UTXOs are spent totals' fields except "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_id"}]},{"type":"text","value":" would be 0 (zero balance). To avoid getting assets with zero balance specify "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"\"params\": {\"nz_totals\": true}"}]},{"type":"text","value":". BEAM is always included, even if balance is 0 and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"nz_totals"}]},{"type":"text","value":" is true."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Maximum asset emission is 2"},{"type":"element","tag":"sup","props":{},"children":[{"type":"text","value":"128"}]},{"type":"text","value":"-1. To ensure compatibility with JavaScript raw number ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"available"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"maturing"}]},{"type":"text","value":" &c.) returned only if it is less than or equal to "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Number.MAX_SAFE_INTEGER"}]},{"type":"text","value":" (2"},{"type":"element","tag":"sup","props":{},"children":[{"type":"text","value":"53"}]},{"type":"text","value":"-1). If total's value is greater than "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Number.MAX_SAFE_INTEGER"}]},{"type":"text","value":" only corresponding string representation ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"xxxx_str"}]},{"type":"text","value":") is returned."}]},{"type":"element","tag":"h2","props":{"id":"get_utxo"},"children":[{"type":"text","value":"get_utxo"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Get list of all unlocked UTXOs."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 6,\n    \"method\":\"get_utxo\",\n    \"params\" :\n    {\n        \"count\": 10,\n        \"skip\": 0,\n        \"sort\": {\n            \"field\": \"amount\",\n            \"direction\": \"asc\"\n        }\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 6,\n    \"method\":\"get_utxo\",\n    \"params\" :\n    {\n        \"count\": 10,\n        \"skip\": 0,\n        \"sort\": {\n            \"field\": \"amount\",\n            \"direction\": \"asc\"\n        }\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"count"}]},{"type":"text","value":" number of UTXO to get, by default all the UTXOs are returned."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"skip"}]},{"type":"text","value":" number of UTXO to skip, default is "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"0"}]},{"type":"text","value":"."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"sort.field"}]},{"type":"text","value":" name of field to sort. Available values are \"id|asset_id|amount|type|maturity|createTxId|spentTxId|status|status_string\""}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"sort.direction"}]},{"type":"text","value":" sorting directions \"asc\" or \"desc\""}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\": \"2.0\", \n    \"id\": 6,\n    \"result\":\n    [{\n        \"id\": 123,\n        \"asset_id\": 0,\n        \"amount\": 12345,\n        \"maturity\": 60,\n        \"type\": \"mine\",\n        \"createTxId\": \"10c4b760c842433cb58339a0fafef3db\",\n        \"spentTxId\": \"\",\n        \"status\": 2,\n        \"status_string\": \"maturing\"\n    }]\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\": \"2.0\", \n    \"id\": 6,\n    \"result\":\n    [{\n        \"id\": 123,\n        \"asset_id\": 0,\n        \"amount\": 12345,\n        \"maturity\": 60,\n        \"type\": \"mine\",\n        \"createTxId\": \"10c4b760c842433cb58339a0fafef3db\",\n        \"spentTxId\": \"\",\n        \"status\": 2,\n        \"status_string\": \"maturing\"\n    }]\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_id"}]},{"type":"text","value":" asset id if coin belongs to an asset and 0 for BEAM coins. By default method returns only BEAM coins. To get asset coins assets should be enabled ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--enable_assets"}]},{"type":"text","value":")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"filter.asset_id"}]},{"type":"text","value":" return only asset coins with given asset id, 0 for BEAM coins. Present starting from v5.0. Assets should be enabled."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1236,\n    \"method\": \"get_utxo\",\n    \"params\": {\n        \"assets\": true,\n        \"filter\": {\n            \"asset_id\": 1\n        }\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1236,\n    \"method\": \"get_utxo\",\n    \"params\": {\n        \"assets\": true,\n        \"filter\": {\n            \"asset_id\": 1\n        }\n    }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n  \"id\": 1236,\n  \"jsonrpc\": \"2.0\",\n  \"result\": [\n    {\n      \"amount\": 500000000,\n      \"asset_id\": 1,\n      \"createTxId\": \"fd705ce6f8c345309c865dc93de9fec5\",\n      \"id\": \"0000000183ed2de4d94e6bd56e6f726d01000000000000001dcd6500\",\n      \"maturity\": 19,\n      \"spentTxId\": \"\",\n      \"status\": 1,\n      \"status_string\": \"available\",\n      \"type\": \"norm\"\n    }\n  ]\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n  \"id\": 1236,\n  \"jsonrpc\": \"2.0\",\n  \"result\": [\n    {\n      \"amount\": 500000000,\n      \"asset_id\": 1,\n      \"createTxId\": \"fd705ce6f8c345309c865dc93de9fec5\",\n      \"id\": \"0000000183ed2de4d94e6bd56e6f726d01000000000000001dcd6500\",\n      \"maturity\": 19,\n      \"spentTxId\": \"\",\n      \"status\": 1,\n      \"status_string\": \"available\",\n      \"type\": \"norm\"\n    }\n  ]\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"type"}]},{"type":"text","value":" can be "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"fees"}]},{"type":"text","value":" (comission), "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"mine"}]},{"type":"text","value":" (coinbase), "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"norm"}]},{"type":"text","value":" (usual coin, for example received via transaction), "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"chng"}]},{"type":"text","value":" (change), "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"shld"}]},{"type":"text","value":" (shielded)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"status"}]},{"type":"text","value":" can be "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"unavailable (0)"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"available (1)"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"maturing (2)"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"outgoing (3)"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"incoming (4)"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"spent (6)"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"consumed (7)"}]},{"type":"text","value":". "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"consumed"}]},{"type":"text","value":" status is returned only for asset coins starting from v5.0. It means that the coin has been burned (consumed)."}]}]},{"type":"element","tag":"h2","props":{"id":"get_asset_info"},"children":[{"type":"text","value":"get_asset_info"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Read asset info from local database. Asset info can be refreshed using "},{"type":"element","tag":"a","props":{"href":"#tx_asset_info"},"children":[{"type":"text","value":"tx_asset_info"}]},{"type":"text","value":". It is also automatically refreshed during asset transactions (but not always) to ensure that asset operations are safe. This method can be called even if assets are not enabled."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 6,\n    \"method\": \"get_asset_info\",\n    \"params\" :\n    {\n        \"asset_id\": 1\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 6,\n    \"method\": \"get_asset_info\",\n    \"params\" :\n    {\n        \"asset_id\": 1\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_id"}]},{"type":"text","value":" asset id to retrieve info about. Can be used for any asset even if you don't own it."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_meta"}]},{"type":"text","value":" obsolete and removed since v6.0"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"id\": 1236,\n    \"jsonrpc\": \"2.0\",\n    \"result\": \n    {\n        \"asset_id\": 1,\n        \"emission\": 2000000000,\n        \"emission_str\": \"2000000000\",\n        \"isOwned\": 1,\n        \"lockHeight\": 39,\n        \"metadata\": \"STD:SCH_VER=1;N=YAN Coin;SN=YAN;UN=Yan;NTHUN=Yanik\",\n        \"metadata_kv\": true,\n        \"metadata_pairs\": {\n            \"N\": \"YAN Coin\",\n            \"NTHUN\": \"Yanik\",\n            \"SCH_VER\": \"1\",\n            \"SN\": \"YAN\",\n            \"UN\": \"Yan\"\n        },\n        \"metadata_std_min\": true,\n        \"metadata_std\": true,\n        \"ownerId\": \"0ae08a49e018e98177774294107dc033790b87538e54a20e99c6b98f1dbd39ce\",\n        \"refreshHeight\": 927\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"id\": 1236,\n    \"jsonrpc\": \"2.0\",\n    \"result\": \n    {\n        \"asset_id\": 1,\n        \"emission\": 2000000000,\n        \"emission_str\": \"2000000000\",\n        \"isOwned\": 1,\n        \"lockHeight\": 39,\n        \"metadata\": \"STD:SCH_VER=1;N=YAN Coin;SN=YAN;UN=Yan;NTHUN=Yanik\",\n        \"metadata_kv\": true,\n        \"metadata_pairs\": {\n            \"N\": \"YAN Coin\",\n            \"NTHUN\": \"Yanik\",\n            \"SCH_VER\": \"1\",\n            \"SN\": \"YAN\",\n            \"UN\": \"Yan\"\n        },\n        \"metadata_std_min\": true,\n        \"metadata_std\": true,\n        \"ownerId\": \"0ae08a49e018e98177774294107dc033790b87538e54a20e99c6b98f1dbd39ce\",\n        \"refreshHeight\": 927\n    }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Returns full asset info or "},{"type":"element","tag":"a","props":{"href":"#api-error-codes"},"children":[{"type":"text","value":"error code"}]},{"type":"text","value":"."}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_id"}]},{"type":"text","value":" asset id"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"metadata"}]},{"type":"text","value":" asset metadata"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"emission"}]},{"type":"text","value":" & "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"emission_str"}]},{"type":"text","value":" total asset emission. Maximum asset emission is 2"},{"type":"element","tag":"sup","props":{},"children":[{"type":"text","value":"128"}]},{"type":"text","value":"-1. To ensure compatibility with JavaScript raw number returned only if it is less than or equal to "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Number.MAX_SAFE_INTEGER"}]},{"type":"text","value":" (2"},{"type":"element","tag":"sup","props":{},"children":[{"type":"text","value":"53"}]},{"type":"text","value":"-1). If asset emission is greater than "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Number.MAX_SAFE_INTEGER"}]},{"type":"text","value":" only corresponding string representation is returned."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"isOwned"}]},{"type":"text","value":" is 1 if you own this asset"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"lockHeight"}]},{"type":"text","value":" last block when asset emission turned to/from 0."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"refreshHeight"}]},{"type":"text","value":" block at which asset information has been received. Please note, that all returned fields are valid only for this and previous blocks. In next blocks emission might change, asset become unregistered &c. Use "},{"type":"element","tag":"a","props":{"href":"#tx_asset_info"},"children":[{"type":"text","value":"tx_asset_info"}]},{"type":"text","value":" to retrieve the most recent info."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"metadata_kv"}]},{"type":"text","value":" true if metadata was parsed successfully as key=value pairs"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"metadata_pairs"}]},{"type":"text","value":" present only if "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"metadata_kv"}]},{"type":"text","value":" is true, provides actual parsed key=value pairs"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"metadata_std_min"}]},{"type":"text","value":" true if metadata is k=v pairs and minimal necessary pairs are present, i.e. N(Name), UN(Unit Name), SN(Short Name), NTHUN (Smallest Unit Name)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"metadata_std"}]},{"type":"text","value":" true if metadata is k=v pairs and fully adheres to the "},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/wiki/Asset-Descriptor-v1.0","rel":["nofollow"]},"children":[{"type":"text","value":"Asset Descriptor Specification"}]}]}]},{"type":"element","tag":"h2","props":{"id":"generate_tx_id"},"children":[{"type":"text","value":"generate_tx_id"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Generates ID for a transaction."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 2,\n    \"method\":\"generate_tx_id\"\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 2,\n    \"method\":\"generate_tx_id\"\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 2,\n    \"result\":\"10c4b760c842433cb58339a0fafef3db\"\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 2,\n    \"result\":\"10c4b760c842433cb58339a0fafef3db\"\n}\n"}]}]},{"type":"element","tag":"h2","props":{"id":"export_payment_proof"},"children":[{"type":"text","value":"export_payment_proof"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Exports payment proof for given "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"txId"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"method\": \"export_payment_proof\", \n    \"params\":\n    {\n        \"txId\" : \"a13525181c0d45b0a4c5c1a697c8a7b8\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"method\": \"export_payment_proof\", \n    \"params\":\n    {\n        \"txId\" : \"a13525181c0d45b0a4c5c1a697c8a7b8\"\n    }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"result\": \n    {\n        \"payment_proof\": \"8009f28991ef543253c8b6a2caf15cf99e23fb9c2b4ca30dc463c8ceb354d7979e80ef7d4255dd5e885200648abe5826d8e0ba0157d3e8cf9c42dcc8258b036986e50400371789ee82afc25ee29c9c57bcb1018b725a3a94c0ceb1fa7984ea13de4982553e0d78d925a362982182a971e654857b8e407e7ad2e9cb72b2b8228812f8ec50435351000c94e2c85996e9527d9b0c90a1843205a7ec8f99fa534083e5f1d055d9f53894\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"result\": \n    {\n        \"payment_proof\": \"8009f28991ef543253c8b6a2caf15cf99e23fb9c2b4ca30dc463c8ceb354d7979e80ef7d4255dd5e885200648abe5826d8e0ba0157d3e8cf9c42dcc8258b036986e50400371789ee82afc25ee29c9c57bcb1018b725a3a94c0ceb1fa7984ea13de4982553e0d78d925a362982182a971e654857b8e407e7ad2e9cb72b2b8228812f8ec50435351000c94e2c85996e9527d9b0c90a1843205a7ec8f99fa534083e5f1d055d9f53894\"\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"payment_proof"}]},{"type":"text","value":" is a hex-encoded byte buffer which contains information about sender, receiver, amount and kernel, signed with receiver's private key. This info could be unpacked and verified using "},{"type":"element","tag":"a","props":{"href":"#verify_payment_proof"},"children":[{"type":"text","value":"verify_payment_proof"}]},{"type":"text","value":" method by the third party. Receiver creates a payment proof in order give receiver an ability to proof that actual payment was made. Sender does not sign transaction if receiver does not provide him this evidence."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"N.B."}]},{"type":"text","value":" Payment proofs for asset transaction are supported starting from v5.0. These proofs cannot be verified by earlier clients/APIs versions. Regular BEAM payment proofs generated by the latest clients/APIs still would be accepted by earlier versions of clients/APIs."}]},{"type":"element","tag":"h2","props":{"id":"verify_payment_proof"},"children":[{"type":"text","value":"verify_payment_proof"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Verifies "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"payment_proof"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"method\":\"verify_payment_proof\", \n    \"params\":\n    {\n        \"payment_proof\" : \"8009f28991ef543253c8b6a2caf15cf99e23fb9c2b4ca30dc463c8ceb354d7979e80ef7d4255dd5e885200648abe5826d8e0ba0157d3e8cf9c42dcc8258b036986e50400371789ee82afc25ee29c9c57bcb1018b725a3a94c0ceb1fa7984ea13de4982553e0d78d925a362982182a971e654857b8e407e7ad2e9cb72b2b8228812f8ec50435351000c94e2c85996e9527d9b0c90a1843205a7ec8f99fa534083e5f1d055d9f53894\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"method\":\"verify_payment_proof\", \n    \"params\":\n    {\n        \"payment_proof\" : \"8009f28991ef543253c8b6a2caf15cf99e23fb9c2b4ca30dc463c8ceb354d7979e80ef7d4255dd5e885200648abe5826d8e0ba0157d3e8cf9c42dcc8258b036986e50400371789ee82afc25ee29c9c57bcb1018b725a3a94c0ceb1fa7984ea13de4982553e0d78d925a362982182a971e654857b8e407e7ad2e9cb72b2b8228812f8ec50435351000c94e2c85996e9527d9b0c90a1843205a7ec8f99fa534083e5f1d055d9f53894\"\n    }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"result\": \n    {\n        \"is_valid\": true,\n        \"asset_id\": 0,\n        \"sender\":   \"9f28991ef543253c8b6a2caf15cf99e23fb9c2b4ca30dc463c8ceb354d7979e\",\n        \"receiver\": \"ef7d4255dd5e885200648abe5826d8e0ba0157d3e8cf9c42dcc8258b036986e5\",\n        \"amount\":   2300000000,\n        \"kernel\":   \"ee82afc25ee29c9c57bcb1018b725a3a94c0ceb1fa7984ea13de4982553e0d78\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"result\": \n    {\n        \"is_valid\": true,\n        \"asset_id\": 0,\n        \"sender\":   \"9f28991ef543253c8b6a2caf15cf99e23fb9c2b4ca30dc463c8ceb354d7979e\",\n        \"receiver\": \"ef7d4255dd5e885200648abe5826d8e0ba0157d3e8cf9c42dcc8258b036986e5\",\n        \"amount\":   2300000000,\n        \"kernel\":   \"ee82afc25ee29c9c57bcb1018b725a3a94c0ceb1fa7984ea13de4982553e0d78\"\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"is_valid"}]},{"type":"text","value":" true if signature is valid,"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"sender"}]},{"type":"text","value":" sender's SBBS address"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"receiver"}]},{"type":"text","value":" is a receiver's SBBS address, is it is used to verify the signature"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"amount"}]},{"type":"text","value":" amount sent by the transaction in groth"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_id"}]},{"type":"text","value":" asset id of the transaction, 0 for BEAM. Returned starting from v5.0"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"kernel"}]},{"type":"text","value":" id of the kernel of this transaction"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"N.B."}]},{"type":"text","value":" v5.0+ APIs accept proofs generated by older versions."}]},{"type":"element","tag":"h2","props":{"id":"invoke_contract"},"children":[{"type":"text","value":"invoke_contract"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Available from v6.0, can be used after Fork3."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Invokes application shader. Only application/wallet side shaders are accepted. Use CLI to call a contract shader."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\": \"2.0\", \n    \"id\": 2,\n    \"method\": \"invoke_contract\", \n    \"params\":\n    {\n        \"contract\": [123, 123, 123],\n        \"args\": \"role=manager,action=view\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\": \"2.0\", \n    \"id\": 2,\n    \"method\": \"invoke_contract\", \n    \"params\":\n    {\n        \"contract\": [123, 123, 123],\n        \"args\": \"role=manager,action=view\"\n    }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"OR"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\": \"2.0\", \n    \"id\": 2,\n    \"method\": \"invoke_contract\", \n    \"params\":\n    {\n        \"contract_file\": \"....\",\n        \"args\": \"role=manager,action=view\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\": \"2.0\", \n    \"id\": 2,\n    \"method\": \"invoke_contract\", \n    \"params\":\n    {\n        \"contract_file\": \"....\",\n        \"args\": \"role=manager,action=view\"\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"contract"}]},{"type":"text","value":" contract code as raw bytes array, optional."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"contract_file"}]},{"type":"text","value":" file name to read contract code from, optional. Absolute or relative to the executable CWD."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"args"}]},{"type":"text","value":" contract arguments, optional. Depends on the called shader. Consult shader-specific docs for details."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"create_tx"}]},{"type":"text","value":" bool, pass "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"true"}]},{"type":"text","value":" create transaction automatically if contract wants it and return "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"txid"}]},{"type":"text","value":". Pass false to avoid transaction creation, get raw tx data that can be passed to "},{"type":"element","tag":"a","props":{"href":"#process_invoke_data"},"children":[{"type":"text","value":"process_invoke_data"}]},{"type":"text","value":" later. By default is "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"true"}]},{"type":"text","value":"."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"contract"}]},{"type":"text","value":" parameter always takes precedence over the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"contract_file"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n  \"id\": 1236,\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"output\": \"{\\\"contracts\\\": [{\\\"cid\\\": \\\"2b105519ee7e170d92abffbc1eb5426d4e20910af2f54bcee43eb84c74dcfa4b\\\",\\\"Height\\\": 27004},{\\\"cid\\\": \n               \\\"55df189ac5c1f9b982fa34fb8050f005c331203023816ddbb2d641a96a3fcb2a\\\",\\\"Height\\\": 27001},{\\\"cid\\\": \n               \\\"6add645863c29d9dc43ab9987af870cb91fd0dfb4e26ae09ca97ac8ff5372f6e\\\",\\\"Height\\\": 532}]}\"\n  }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n  \"id\": 1236,\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"output\": \"{\\\"contracts\\\": [{\\\"cid\\\": \\\"2b105519ee7e170d92abffbc1eb5426d4e20910af2f54bcee43eb84c74dcfa4b\\\",\\\"Height\\\": 27004},{\\\"cid\\\": \n               \\\"55df189ac5c1f9b982fa34fb8050f005c331203023816ddbb2d641a96a3fcb2a\\\",\\\"Height\\\": 27001},{\\\"cid\\\": \n               \\\"6add645863c29d9dc43ab9987af870cb91fd0dfb4e26ae09ca97ac8ff5372f6e\\\",\\\"Height\\\": 532}]}\"\n  }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"output"}]},{"type":"text","value":" contract output. Depends on the called shader. Can be empty"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"txid"}]},{"type":"text","value":" transaction created by contract (if any)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"raw_data"}]},{"type":"text","value":" raw data returned by the contract based on which transaction can be created using "},{"type":"element","tag":"a","props":{"href":"#process_invoke_data"},"children":[{"type":"text","value":"process_invoke_data"}]}]}]},{"type":"element","tag":"h3","props":{"id":"async-notice"},"children":[{"type":"text","value":"Async Notice"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"invoke_contract method is asynchronous in nature and can take up to several blocks to execute (depends on shader). Please setup your API connection correspondingly (keep alive HTTP or use socket)."}]},{"type":"element","tag":"h3","props":{"id":"shader-errors"},"children":[{"type":"text","value":"Shader Errors"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Please notice that API returns errors only if there is an API error (no shader code, parse error &c.). If there was an error inside the shader itself API call would be successful and shader output should be checked. For example:"}]},{"type":"element","tag":"h3","props":{"id":"code-caching"},"children":[{"type":"text","value":"Code caching"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"If there was an invoke_shader before "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"contract"}]},{"type":"text","value":"/"},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"contract_file"}]},{"type":"text","value":" can be omitted. In this case contract code from previous call would be used. In case of wallet_api code caching works on per-connection level. In case of applications caching works on per-application level."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1236,\n    \"method\": \"invoke_contract\",\n    \"params\": {\n        \"contract_file\": \"./faucetManager.wasm\",\n        \"args\": \"role=manager\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1236,\n    \"method\": \"invoke_contract\",\n    \"params\": {\n        \"contract_file\": \"./faucetManager.wasm\",\n        \"args\": \"role=manager\"\n    }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n  \"id\": 1236,\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"output\": \"{\\\"error\\\": \\\"Action not specified\\\"}\"\n  }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n  \"id\": 1236,\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"output\": \"{\\\"error\\\": \\\"Action not specified\\\"}\"\n  }\n}\n"}]}]},{"type":"element","tag":"h3","props":{"id":"requests-queue"},"children":[{"type":"text","value":"Requests queue"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Before v6.1 it was not allowed to make the next contract call before the previous one is completed. As per v6.1 priority queue is added for "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"invoke_contract"}]},{"type":"text","value":" requests. If previous call is not completed new "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"invoke_shader"}]},{"type":"text","value":" call would be added to the queue and executed later. New parameters were added to control the queue:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"priority"}]},{"type":"text","value":" - integer, 0 by default. Calls with higher priority would be placed on top of the queue"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"unique"}]},{"type":"text","value":" - integer, 0 by default. If there is already an "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"invoke_contract"}]},{"type":"text","value":" call with the same "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"unique"}]},{"type":"text","value":" queued or being executed the new call will not be added to the queue. This might be necessary to avoid queue congestion with multiple status while previous requests are still pending. Value of 0 is ignored and doesn't trigger call omission."}]}]},{"type":"element","tag":"h2","props":{"id":"process_invoke_data"},"children":[{"type":"text","value":"process_invoke_data"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Creates transaction requested by a contract"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1236,\n    \"method\": \"process_invoke_data\",\n    \"params\": {\n        \"data\": [123, 123, 123]\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1236,\n    \"method\": \"process_invoke_data\",\n    \"params\": {\n        \"data\": [123, 123, 123]\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"data"}]},{"type":"text","value":" raw invoke data bytes array returned by "},{"type":"element","tag":"a","props":{"href":"#invoke_contract"},"children":[{"type":"text","value":"invoke_contract"}]},{"type":"text","value":", mandatory"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n  \"id\": 1236,\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"txid\": \"...\"\n  }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n  \"id\": 1236,\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"txid\": \"...\"\n  }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"txid"}]},{"type":"text","value":" contract transaction id created as a result of the call"}]}]},{"type":"element","tag":"h2","props":{"id":"calc_change"},"children":[{"type":"text","value":"calc_change"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Calculates change for given "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"amount"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"method\":\"calc_change\", \n    \"params\":\n    {\n        \"amount\" : 1234,\n        \"asset_id\": 2,\n        \"fee\": 10000,\n        \"is_push_transaction\": true\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"method\":\"calc_change\", \n    \"params\":\n    {\n        \"amount\" : 1234,\n        \"asset_id\": 2,\n        \"fee\": 10000,\n        \"is_push_transaction\": true\n    }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"result\":\n    {\n        \"asset_change\": 12,\n        \"asset_change_str\": \"12\",\n        \"change\": 12,\n        \"change_str\": \"12\",\n        \"explicit_fee\": 1100000,\n        \"explicit_fee_str\": \"1100000\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"result\":\n    {\n        \"asset_change\": 12,\n        \"asset_change_str\": \"12\",\n        \"change\": 12,\n        \"change_str\": \"12\",\n        \"explicit_fee\": 1100000,\n        \"explicit_fee_str\": \"1100000\"\n    }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"where"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"amount"}]},{"type":"text","value":" is a requested amount we are going to send"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_id"}]},{"type":"text","value":" optional asset id of the requested amount. Default is 0 (BEAM). This method can be used for non-BEAM coins even if assets are not enabled."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"fee"}]},{"type":"text","value":" explicit fee in GROTHs chosen by the user"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_change"}]},{"type":"text","value":" change amount for requested "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_id"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"change"}]},{"type":"text","value":" change in for BEAM. "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_change"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"change"}]},{"type":"text","value":" are equal if "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_id == 0"}]},{"type":"text","value":", i.e. BEAM"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"explicit_fee"}]},{"type":"text","value":" the fee which should be used"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"is_push_transaction"}]},{"type":"text","value":" "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"true"}]},{"type":"text","value":" if we are going to push transaction output into the shielded pool."}]}]},{"type":"element","tag":"h2","props":{"id":"block_details"},"children":[{"type":"text","value":"block_details"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Returns block header from blockchain"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\": \"2.0\", \n    \"id\": 2,\n    \"method\": \"block_details\", \n    \"params\":\n    {\n        \"height\": 200\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\": \"2.0\", \n    \"id\": 2,\n    \"method\": \"block_details\", \n    \"params\":\n    {\n        \"height\": 200\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"height"}]},{"type":"text","value":" height of block."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"result\":\n    {\n        \"block_hash\": \"7aec20e5b56706d57a4dca1df4a4d3104dbdbf8d6005499845558b7a32694d02\",\n        \"chainwork\": \"000000000000000000000000000000000000000000000000000000c503b09ac0\",\n        \"definition\": \"0d3f4e63743760c6397d76086e1cc0ebe749c121206c8150738dc84edcd30092\",\n        \"difficulty\": 118.4594497680664,\n        \"height\": 200,\n        \"kernels\": \"705cdfa154eec35e4b4b0e2163ff9c81f8f035641ee4b0b95c3f3c5b0f170ffe\",\n        \"packed_difficulty\": 114939514,\n        \"pow\": \"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004f04638c1f4cee1b7ad6d906\",\n        \"previous_block\": \"d195cc69fbd2b402cc33ecb303f5391f0010f34ee059f30b908ed10f0fe5a255\",\n        \"rules_hash\": \"340bbeabc390f481df1f84aedf0b679c1c7ed1f0e28d4340c9c49b4c41611f85\",\n        \"timestamp\": 1619598150\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"result\":\n    {\n        \"block_hash\": \"7aec20e5b56706d57a4dca1df4a4d3104dbdbf8d6005499845558b7a32694d02\",\n        \"chainwork\": \"000000000000000000000000000000000000000000000000000000c503b09ac0\",\n        \"definition\": \"0d3f4e63743760c6397d76086e1cc0ebe749c121206c8150738dc84edcd30092\",\n        \"difficulty\": 118.4594497680664,\n        \"height\": 200,\n        \"kernels\": \"705cdfa154eec35e4b4b0e2163ff9c81f8f035641ee4b0b95c3f3c5b0f170ffe\",\n        \"packed_difficulty\": 114939514,\n        \"pow\": \"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004f04638c1f4cee1b7ad6d906\",\n        \"previous_block\": \"d195cc69fbd2b402cc33ecb303f5391f0010f34ee059f30b908ed10f0fe5a255\",\n        \"rules_hash\": \"340bbeabc390f481df1f84aedf0b679c1c7ed1f0e28d4340c9c49b4c41611f85\",\n        \"timestamp\": 1619598150\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"block_hash"}]},{"type":"text","value":" is a block hash"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"chainwork"}]},{"type":"text","value":" is a chainwork"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"definition"}]},{"type":"text","value":" is a definition"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"difficulty"}]},{"type":"text","value":" is a difficulty"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"height"}]},{"type":"text","value":" is a block height"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"kernels"}]},{"type":"text","value":" is a kernels"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"packed_difficulty"}]},{"type":"text","value":" is a packed difficulty"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"pow"}]},{"type":"text","value":" is a pow"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"previous_block"}]},{"type":"text","value":" is hash of previous block"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"rules_hash"}]},{"type":"text","value":" is a rules hash"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"timestamp"}]},{"type":"text","value":" is a timestamp"}]}]},{"type":"element","tag":"h3","props":{"id":"async-notice-1"},"children":[{"type":"text","value":"Async Notice"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"block_details method is asynchronous in nature. Please setup your API connection correspondingly (keep alive HTTP or use socket)."}]},{"type":"element","tag":"h2","props":{"id":"get_version"},"children":[{"type":"text","value":"get_version"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Returns version info"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\": \"2.0\", \n    \"id\": 1,\n    \"method\": \"get_version\"\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\": \"2.0\", \n    \"id\": 1,\n    \"method\": \"get_version\"\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n  \"id\": 1,\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"api_version\": \"6.1\",\n    \"api_version_major\": 6,\n    \"api_version_minor\": 1,\n    \"beam_branch_name\": \"master\",\n    \"beam_commit_hash\": \"f7dcfab5341e84a58918f2fde0fc2be9c09264eb\",\n    \"beam_version\": \"6.1.11462\",\n    \"beam_version_major\": 6,\n    \"beam_version_minor\": 1,\n    \"beam_version_rev\": 11462\n  }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n  \"id\": 1,\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"api_version\": \"6.1\",\n    \"api_version_major\": 6,\n    \"api_version_minor\": 1,\n    \"beam_branch_name\": \"master\",\n    \"beam_commit_hash\": \"f7dcfab5341e84a58918f2fde0fc2be9c09264eb\",\n    \"beam_version\": \"6.1.11462\",\n    \"beam_version_major\": 6,\n    \"beam_version_minor\": 1,\n    \"beam_version_rev\": 11462\n  }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"api_xxx"}]},{"type":"text","value":" API version info"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"beam_xxx"}]},{"type":"text","value":" BEAM version info on top of which API is built ("},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam","rel":["nofollow"]},"children":[{"type":"text","value":"https://github.com/BeamMW/beam"}]},{"type":"text","value":")"}]}]},{"type":"element","tag":"h2","props":{"id":"ev_subunsub"},"children":[{"type":"text","value":"ev_subunsub"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Subscribe/unsubscribe to API events."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\": \"2.0\", \n    \"id\": 1,\n    \"method\": \"ev_subunsub\",\n    \"params\": {\n        \"ev_sync_progress\": true,\n        \"ev_system_state\": true,\n        \"ev_assets_changed\": true,\n        \"ev_addrs_changed\": true,\n        \"ev_utxos_changed\": true,\n        \"ev_txs_changed\": true\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\": \"2.0\", \n    \"id\": 1,\n    \"method\": \"ev_subunsub\",\n    \"params\": {\n        \"ev_sync_progress\": true,\n        \"ev_system_state\": true,\n        \"ev_assets_changed\": true,\n        \"ev_addrs_changed\": true,\n        \"ev_utxos_changed\": true,\n        \"ev_txs_changed\": true\n    }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n  \"id\": 1,\n  \"jsonrpc\": \"2.0\",\n  \"result\": true\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n  \"id\": 1,\n  \"jsonrpc\": \"2.0\",\n  \"result\": true\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"ev_xxxx"}]},{"type":"text","value":" corresponding event name, optional, bool. True subscribes to the event, false unsubscribes. All "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"ev_xxxx"}]},{"type":"text","value":" paramaters are optional. If event is not specified its subscription state remains unchanged. Immediately after subscription corresponding event is generated providing the latest state."}]}]},{"type":"element","tag":"h2","props":{"id":"api-events"},"children":[{"type":"text","value":"API Events"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"API generates the following events:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#ev_sync_progress"},"children":[{"type":"text","value":"ev_sync_progress"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#ev_system_state"},"children":[{"type":"text","value":"ev_system_state"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#ev_addrs_changed"},"children":[{"type":"text","value":"ev_addrs_changed"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#ev_assets_changed"},"children":[{"type":"text","value":"ev_assets_changed"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#ev_utxos_changed"},"children":[{"type":"text","value":"ev_utxos_changed"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#ev_txs_changed"},"children":[{"type":"text","value":"ev_txs_changed"}]}]}]},{"type":"element","tag":"h2","props":{"id":"ev_xxx_changed-events"},"children":[{"type":"text","value":"ev_XXX_changed Events"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"These events are generated when some entity/set of entities is changed. Every "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"changed"}]},{"type":"text","value":" event includes the following mandatory fields"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"change"}]},{"type":"text","value":" - numerical change type, possible values are\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"0"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"added"}]},{"type":"text","value":" - newly added entities are in the array"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"1"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"removed"}]},{"type":"text","value":" - removed entities are in the array"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"2"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"updated"}]},{"type":"text","value":" - updated entities are in the array"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"3"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"reset"}]},{"type":"text","value":" - discard all the previously stored entities, new ones are in the array"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"change_str"}]},{"type":"text","value":" - string representation of the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"change"}]},{"type":"text","value":" field, values are listed above"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"array of changed entities (name differs based on the entity type)"}]}]},{"type":"element","tag":"h2","props":{"id":"ev_sync_progress"},"children":[{"type":"text","value":"ev_sync_progress"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Event is generated while wallet is being synced with the blockchain. Let's consider the following situation:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"current wallet height is 105"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"block 106 has been just mined"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In this case the following sequence of events would be generated:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"1. <--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n  \"id\": \"ev_sync_progress\",\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"current_height\": 105,\n    \"current_state_hash\": \"76de9b9bcbc1b1a4775d54f2b98c3edc222f5a86698209200e459043fe218a29\",\n    \"current_state_timestamp\": 1625146903,\n    \"sync_requests_done\": 0,\n    \"sync_requests_total\": 2,\n    \"is_in_sync\": true,\n    \"prev_state_hash\": \"3a2a3bd55615d3de86b86c920f715ad47973be7dbc2fde2d4c39b937e96177e1\",\n    \"tip_height\": 106,\n    \"tip_prev_state_hash\": \"76de9b9bcbc1b1a4775d54f2b98c3edc222f5a86698209200e459043fe218a29\",\n    \"tip_state_hash\": \"7bb40b96ee4606c3e8f085aa633b66c14f041178142eb1077521621cde47e3b1\",\n    \"tip_state_timestamp\": 1625146951\n  }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n  \"id\": \"ev_sync_progress\",\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"current_height\": 105,\n    \"current_state_hash\": \"76de9b9bcbc1b1a4775d54f2b98c3edc222f5a86698209200e459043fe218a29\",\n    \"current_state_timestamp\": 1625146903,\n    \"sync_requests_done\": 0,\n    \"sync_requests_total\": 2,\n    \"is_in_sync\": true,\n    \"prev_state_hash\": \"3a2a3bd55615d3de86b86c920f715ad47973be7dbc2fde2d4c39b937e96177e1\",\n    \"tip_height\": 106,\n    \"tip_prev_state_hash\": \"76de9b9bcbc1b1a4775d54f2b98c3edc222f5a86698209200e459043fe218a29\",\n    \"tip_state_hash\": \"7bb40b96ee4606c3e8f085aa633b66c14f041178142eb1077521621cde47e3b1\",\n    \"tip_state_timestamp\": 1625146951\n  }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In event 1 API tells that there is 1 new block to sync ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"tip_height"}]},{"type":"text","value":" - "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"current_height"}]},{"type":"text","value":" is 1) and nothing has been yet done ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"sync_requests_done"}]},{"type":"text","value":" is 0). Current height is 105 ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"current_height"}]},{"type":"text","value":"), target height is 106 ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"tip_height"}]},{"type":"text","value":") and our wallet is still in a 'synce tolerance range' ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"is_in_sync"}]},{"type":"text","value":" is true). If "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"is_in_sync"}]},{"type":"text","value":" is false all the requested/pending transaction would be delayed until the wallet is synced."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"2. <--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n  \"id\": \"ev_sync_progress\",\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"current_height\": 105,\n    \"current_state_hash\": \"76de9b9bcbc1b1a4775d54f2b98c3edc222f5a86698209200e459043fe218a29\",\n    \"current_state_timestamp\": 1625146903,\n    \"sync_requests_done\": 1,\n    \"sync_requests_total\": 2,\n    \"is_in_sync\": true,\n    \"prev_state_hash\": \"3a2a3bd55615d3de86b86c920f715ad47973be7dbc2fde2d4c39b937e96177e1\",\n    \"tip_height\": 106,\n    \"tip_prev_state_hash\": \"76de9b9bcbc1b1a4775d54f2b98c3edc222f5a86698209200e459043fe218a29\",\n    \"tip_state_hash\": \"7bb40b96ee4606c3e8f085aa633b66c14f041178142eb1077521621cde47e3b1\",\n    \"tip_state_timestamp\": 1625146951\n  }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n  \"id\": \"ev_sync_progress\",\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"current_height\": 105,\n    \"current_state_hash\": \"76de9b9bcbc1b1a4775d54f2b98c3edc222f5a86698209200e459043fe218a29\",\n    \"current_state_timestamp\": 1625146903,\n    \"sync_requests_done\": 1,\n    \"sync_requests_total\": 2,\n    \"is_in_sync\": true,\n    \"prev_state_hash\": \"3a2a3bd55615d3de86b86c920f715ad47973be7dbc2fde2d4c39b937e96177e1\",\n    \"tip_height\": 106,\n    \"tip_prev_state_hash\": \"76de9b9bcbc1b1a4775d54f2b98c3edc222f5a86698209200e459043fe218a29\",\n    \"tip_state_hash\": \"7bb40b96ee4606c3e8f085aa633b66c14f041178142eb1077521621cde47e3b1\",\n    \"tip_state_timestamp\": 1625146951\n  }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In event 2 API tells that 1 sync request has been processed ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"sync_requests_done"}]},{"type":"text","value":" is 1). It can be block body downloaded, utxo received &c. Since "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"sync_requests_total"}]},{"type":"text","value":" is 2 not everything is received, some requests are still pending."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"3. <--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n  \"id\": \"ev_sync_progress\",\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"current_height\": 105,\n    \"current_state_hash\": \"76de9b9bcbc1b1a4775d54f2b98c3edc222f5a86698209200e459043fe218a29\",\n    \"current_state_timestamp\": 1625146903,\n    \"sync_requests_done\": 2,\n    \"sync_requests_total\": 2,\n    \"is_in_sync\": true,\n    \"prev_state_hash\": \"3a2a3bd55615d3de86b86c920f715ad47973be7dbc2fde2d4c39b937e96177e1\",\n    \"tip_height\": 106,\n    \"tip_prev_state_hash\": \"76de9b9bcbc1b1a4775d54f2b98c3edc222f5a86698209200e459043fe218a29\",\n    \"tip_state_hash\": \"7bb40b96ee4606c3e8f085aa633b66c14f041178142eb1077521621cde47e3b1\",\n    \"tip_state_timestamp\": 1625146951\n  }\n}\n\nIn event 3 API tells that 2 sync events have been receive (`sync_requests_done` is 2) and since `sync_requests_total` is 2 too we can conclude that everything is downloaded now though not yet processed and wallet state has not yet moved to the next block (current_height is still not changed and is 105).\n\n`4. <--`\n```json\n{\n  \"id\": \"ev_sync_progress\",\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"current_height\": 106,\n    \"current_state_hash\": \"7bb40b96ee4606c3e8f085aa633b66c14f041178142eb1077521621cde47e3b1\",\n    \"current_state_timestamp\": 1625146903,\n    \"sync_requests_done\": 2,\n    \"sync_requests_total\": 2,\n    \"is_in_sync\": true,\n    \"prev_state_hash\": \"76de9b9bcbc1b1a4775d54f2b98c3edc222f5a86698209200e459043fe218a29\",\n    \"tip_height\": 106,\n    \"tip_prev_state_hash\": \"76de9b9bcbc1b1a4775d54f2b98c3edc222f5a86698209200e459043fe218a29\",\n    \"tip_state_hash\": \"7bb40b96ee4606c3e8f085aa633b66c14f041178142eb1077521621cde47e3b1\",\n    \"tip_state_timestamp\": 1625146951\n  }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n  \"id\": \"ev_sync_progress\",\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"current_height\": 105,\n    \"current_state_hash\": \"76de9b9bcbc1b1a4775d54f2b98c3edc222f5a86698209200e459043fe218a29\",\n    \"current_state_timestamp\": 1625146903,\n    \"sync_requests_done\": 2,\n    \"sync_requests_total\": 2,\n    \"is_in_sync\": true,\n    \"prev_state_hash\": \"3a2a3bd55615d3de86b86c920f715ad47973be7dbc2fde2d4c39b937e96177e1\",\n    \"tip_height\": 106,\n    \"tip_prev_state_hash\": \"76de9b9bcbc1b1a4775d54f2b98c3edc222f5a86698209200e459043fe218a29\",\n    \"tip_state_hash\": \"7bb40b96ee4606c3e8f085aa633b66c14f041178142eb1077521621cde47e3b1\",\n    \"tip_state_timestamp\": 1625146951\n  }\n}\n\nIn event 3 API tells that 2 sync events have been receive (`sync_requests_done` is 2) and since `sync_requests_total` is 2 too we can conclude that everything is downloaded now though not yet processed and wallet state has not yet moved to the next block (current_height is still not changed and is 105).\n\n`4. <--`\n```json\n{\n  \"id\": \"ev_sync_progress\",\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"current_height\": 106,\n    \"current_state_hash\": \"7bb40b96ee4606c3e8f085aa633b66c14f041178142eb1077521621cde47e3b1\",\n    \"current_state_timestamp\": 1625146903,\n    \"sync_requests_done\": 2,\n    \"sync_requests_total\": 2,\n    \"is_in_sync\": true,\n    \"prev_state_hash\": \"76de9b9bcbc1b1a4775d54f2b98c3edc222f5a86698209200e459043fe218a29\",\n    \"tip_height\": 106,\n    \"tip_prev_state_hash\": \"76de9b9bcbc1b1a4775d54f2b98c3edc222f5a86698209200e459043fe218a29\",\n    \"tip_state_hash\": \"7bb40b96ee4606c3e8f085aa633b66c14f041178142eb1077521621cde47e3b1\",\n    \"tip_state_timestamp\": 1625146951\n  }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In event 4 API tells that the wallet state is moved to the last tip ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"sync_requests_total"}]},{"type":"text","value":" == "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"sync_requests_done"}]},{"type":"text","value":" == 0 AND "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"tip_state_hash"}]},{"type":"text","value":" == "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"current_state_hash"}]},{"type":"text","value":" AND "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"tip_height"}]},{"type":"text","value":" == "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"current_height"}]},{"type":"text","value":")."}]},{"type":"element","tag":"h2","props":{"id":"ev_system_state"},"children":[{"type":"text","value":"ev_system_state"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Generated when wallet moves to the next state, for example when new block is mined and wallet has acknowledged and processed this fact or when new block is delivered during the sync."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n  \"id\": \"ev_system_state\",\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"current_height\": 113738,\n    \"current_state_hash\": \"4bbf9eb9cc409ce17c49cc7952edfed7583e8636e3e5d84b2034779034cb439c\",\n    \"current_state_timestamp\": 1625663362,\n    \"is_in_sync\": true,\n    \"prev_state_hash\": \"4995999f065eb5f04687fe9a43b93d7e344e99d17f2e2703260904f70aabfbd0\",\n    \"tip_height\": 113738,\n    \"tip_prev_state_hash\": \"4995999f065eb5f04687fe9a43b93d7e344e99d17f2e2703260904f70aabfbd0\",\n    \"tip_state_hash\": \"4bbf9eb9cc409ce17c49cc7952edfed7583e8636e3e5d84b2034779034cb439c\",\n    \"tip_state_timestamp\": 1625663362\n  }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n  \"id\": \"ev_system_state\",\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"current_height\": 113738,\n    \"current_state_hash\": \"4bbf9eb9cc409ce17c49cc7952edfed7583e8636e3e5d84b2034779034cb439c\",\n    \"current_state_timestamp\": 1625663362,\n    \"is_in_sync\": true,\n    \"prev_state_hash\": \"4995999f065eb5f04687fe9a43b93d7e344e99d17f2e2703260904f70aabfbd0\",\n    \"tip_height\": 113738,\n    \"tip_prev_state_hash\": \"4995999f065eb5f04687fe9a43b93d7e344e99d17f2e2703260904f70aabfbd0\",\n    \"tip_state_hash\": \"4bbf9eb9cc409ce17c49cc7952edfed7583e8636e3e5d84b2034779034cb439c\",\n    \"tip_state_timestamp\": 1625663362\n  }\n}\n"}]}]},{"type":"element","tag":"h2","props":{"id":"ev_addrs_changed"},"children":[{"type":"text","value":"ev_addrs_changed"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Event is generated when any address is changed/removed/updated &c."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n  \"id\": \"ev_addrs_changed\",\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n      \"change\": 3,\n      \"change_str\": \"reset\",\n      \"addrs\": [\n          {\n              \"address\": \"8xQnvWwS78RsbXmvV1wm2Spkye76z5FfiZH2zB3Jdw2BgWqUf4MC2StLVYrM4LvrWsMdY24b5hok4XvEoTBmHoaWBcEvr8nWTY259M4DnRJnRBgdNJEqRxenxRZox8DKnSoGiScV31dXLcxoRH2vFPcrxDsMGDAsyekVGz2NBPCwKFwCwTQwJpbhszCzxM843UMWQMxxoHADsTXnQnVW1Uc3quXgJdEr6tQ5dbgGWwYhNHU3f6mLFxNyxvrM7RfFY6LatPxJaC5M9o7Gg6TnpVc82GzVrKGNQoERJ9pFc7f6VM8w9dcn9CaC8yQvGevAnZqNTDEVpxAK81mJ3VFPUjbePWYQBdPQPm8AprTU1p4xhGHpbVaaTH967CJ86jAUXQEUrVq1wn4uPGLivhdnoWCdGujiZfwrfdPeQ698vm7Mh2HpooextAt4nzmSbEbPNtM5aCbeRyVv8BiEZ394WJCQaDRwHx2R3tfsHNCvTctCUy6NsonhmnSwvucY5KN71AtBGmxq8i\",\n              \"category\": \"\",\n              \"comment\": \"\",\n              \"create_time\": 1553174321,\n              \"duration\": 1520,\n              \"expired\": true,\n              \"own\": true,\n              \"own_id\": 16730903,\n              \"own_id_str\": \"16730903\",\n              \"identity\": \"2d8738b0424ad50631e902fab655e7e1795fbb8d92d47c4c8df7336870fcadf5\",\n              \"type\": \"offline\",\n              \"wallet_id\": \"22813f28ae198b1aa28aed3d0dc69a7c75f0a3c8b72c5950c997d0a569e74f90b61\"\n          },\n          {\n              \"address\": \"19e6ce53a137a1aa59ef19538c181acc5cd06cbfc7b985901345328786f8ae300a7\",\n              \"category\": \"\",\n              \"create_time\": 1553174321,\n              \"duration\": 1520,\n              \"expired\": true,\n              \"comment\": \"\",\n              \"own\": true,\n              \"own_id\": 16730903,\n              \"own_id_str\": \"16730903\",\n              \"identity\": \"9d99a7e3d1a6a73fbfa01efe63020135654f7b1561d65c74266fe9db6e80b096\",\n              \"type\": \"regular\",\n              \"wallet_id\": \"19e6ce53a137a1aa59ef19538c181acc5cd06cbfc7b985901345328786f8ae300a7\"\n          }\n      ]\n  }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n  \"id\": \"ev_addrs_changed\",\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n      \"change\": 3,\n      \"change_str\": \"reset\",\n      \"addrs\": [\n          {\n              \"address\": \"8xQnvWwS78RsbXmvV1wm2Spkye76z5FfiZH2zB3Jdw2BgWqUf4MC2StLVYrM4LvrWsMdY24b5hok4XvEoTBmHoaWBcEvr8nWTY259M4DnRJnRBgdNJEqRxenxRZox8DKnSoGiScV31dXLcxoRH2vFPcrxDsMGDAsyekVGz2NBPCwKFwCwTQwJpbhszCzxM843UMWQMxxoHADsTXnQnVW1Uc3quXgJdEr6tQ5dbgGWwYhNHU3f6mLFxNyxvrM7RfFY6LatPxJaC5M9o7Gg6TnpVc82GzVrKGNQoERJ9pFc7f6VM8w9dcn9CaC8yQvGevAnZqNTDEVpxAK81mJ3VFPUjbePWYQBdPQPm8AprTU1p4xhGHpbVaaTH967CJ86jAUXQEUrVq1wn4uPGLivhdnoWCdGujiZfwrfdPeQ698vm7Mh2HpooextAt4nzmSbEbPNtM5aCbeRyVv8BiEZ394WJCQaDRwHx2R3tfsHNCvTctCUy6NsonhmnSwvucY5KN71AtBGmxq8i\",\n              \"category\": \"\",\n              \"comment\": \"\",\n              \"create_time\": 1553174321,\n              \"duration\": 1520,\n              \"expired\": true,\n              \"own\": true,\n              \"own_id\": 16730903,\n              \"own_id_str\": \"16730903\",\n              \"identity\": \"2d8738b0424ad50631e902fab655e7e1795fbb8d92d47c4c8df7336870fcadf5\",\n              \"type\": \"offline\",\n              \"wallet_id\": \"22813f28ae198b1aa28aed3d0dc69a7c75f0a3c8b72c5950c997d0a569e74f90b61\"\n          },\n          {\n              \"address\": \"19e6ce53a137a1aa59ef19538c181acc5cd06cbfc7b985901345328786f8ae300a7\",\n              \"category\": \"\",\n              \"create_time\": 1553174321,\n              \"duration\": 1520,\n              \"expired\": true,\n              \"comment\": \"\",\n              \"own\": true,\n              \"own_id\": 16730903,\n              \"own_id_str\": \"16730903\",\n              \"identity\": \"9d99a7e3d1a6a73fbfa01efe63020135654f7b1561d65c74266fe9db6e80b096\",\n              \"type\": \"regular\",\n              \"wallet_id\": \"19e6ce53a137a1aa59ef19538c181acc5cd06cbfc7b985901345328786f8ae300a7\"\n          }\n      ]\n  }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"change"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"change_str"}]},{"type":"text","value":" - check "},{"type":"element","tag":"a","props":{"href":"#ev_xxx_changed-events"},"children":[{"type":"text","value":"ev_XXX_changed Events"}]},{"type":"text","value":" section for details"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"addrs"}]},{"type":"text","value":" - array of changed addresses"}]}]},{"type":"element","tag":"h2","props":{"id":"ev_assets_changed"},"children":[{"type":"text","value":"ev_assets_changed"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Event is generated when an asset is changed, i.e. metadata refreshed or metadata dropped due to the asset delisting or internal metadata processing error. Note that metadata can be dropped while an asset is still on chain but local metadata becomes invalid, for example in certain situations during rollback. If you have any asset coins in wallet but no valid metadata for a given asset id refresh it using "},{"type":"element","tag":"a","props":{"href":"#tx_asset_info"},"children":[{"type":"text","value":"tx_asset_info"}]},{"type":"text","value":". Metadata is also automatically refreshed during the send/receive/issue/consume operations if necessary."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Metadata dropped:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<-"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n  \"id\": \"ev_assets_changed\",\n  \"jsonrpc\": \"2.0\",\n  \"result\": { \n      \"change\": 1,\n      \"change_str\": \"removed\",\n      \"assets\": [\n         {\"asset_id\": 121}, \n         {\"asset_id\": 122} \n      ]\n  }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n  \"id\": \"ev_assets_changed\",\n  \"jsonrpc\": \"2.0\",\n  \"result\": { \n      \"change\": 1,\n      \"change_str\": \"removed\",\n      \"assets\": [\n         {\"asset_id\": 121}, \n         {\"asset_id\": 122} \n      ]\n  }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"change"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"change_str"}]},{"type":"text","value":" - check "},{"type":"element","tag":"a","props":{"href":"#ev_xxx_changed-events"},"children":[{"type":"text","value":"ev_XXX_changed Events"}]},{"type":"text","value":" section for details"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"assets"}]},{"type":"text","value":" - array of changed assets. In case of the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"removed"}]},{"type":"text","value":" event only asset ids are provided"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Metadata updated:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<-"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"id\": \"ev_assets_changed\",\n    \"jsonrpc\": \"2.0\",\n    \"result\": {\n        \"change\": 3,\n        \"change_str\": \"reset\",\n        \"assets\": [\n           {\n              \"asset_id\": 1,\n              \"emission\": 2000000000,\n              \"emission_str\": \"2000000000\",\n              \"isOwned\": 1,\n              \"lockHeight\": 39,\n              \"metadata\": \"STD:SCH_VER=1;N=YAN Coin;SN=YAN;UN=Yan;NTHUN=Yanik\",\n              \"metadata_kv\": true,\n              \"metadata_pairs\": {\n                 \"N\": \"YAN Coin\",\n                 \"NTHUN\": \"Yanik\",\n                 \"SCH_VER\": \"1\",\n                 \"SN\": \"YAN\",\n                 \"UN\": \"Yan\"\n              },\n              \"metadata_std_min\": true,\n              \"metadata_std\": true,\n              \"ownerId\": \"0ae08a49e018e98177774294107dc033790b87538e54a20e99c6b98f1dbd39ce\",\n              \"refreshHeight\": 927\n          }\n       ]\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"id\": \"ev_assets_changed\",\n    \"jsonrpc\": \"2.0\",\n    \"result\": {\n        \"change\": 3,\n        \"change_str\": \"reset\",\n        \"assets\": [\n           {\n              \"asset_id\": 1,\n              \"emission\": 2000000000,\n              \"emission_str\": \"2000000000\",\n              \"isOwned\": 1,\n              \"lockHeight\": 39,\n              \"metadata\": \"STD:SCH_VER=1;N=YAN Coin;SN=YAN;UN=Yan;NTHUN=Yanik\",\n              \"metadata_kv\": true,\n              \"metadata_pairs\": {\n                 \"N\": \"YAN Coin\",\n                 \"NTHUN\": \"Yanik\",\n                 \"SCH_VER\": \"1\",\n                 \"SN\": \"YAN\",\n                 \"UN\": \"Yan\"\n              },\n              \"metadata_std_min\": true,\n              \"metadata_std\": true,\n              \"ownerId\": \"0ae08a49e018e98177774294107dc033790b87538e54a20e99c6b98f1dbd39ce\",\n              \"refreshHeight\": 927\n          }\n       ]\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"change"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"change_str"}]},{"type":"text","value":" - check "},{"type":"element","tag":"a","props":{"href":"#ev_xxx_changed-events"},"children":[{"type":"text","value":"ev_XXX_changed Events"}]},{"type":"text","value":" section for details"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"assets"}]},{"type":"text","value":" array of changed assets, most up to date meta. Check "},{"type":"element","tag":"a","props":{"href":"#get_asset_info"},"children":[{"type":"text","value":"get_asset_info"}]},{"type":"text","value":" for more details"}]}]},{"type":"element","tag":"h2","props":{"id":"ev_utxos_changed"},"children":[{"type":"text","value":"ev_utxos_changed"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Event is generated when UTXOs/Coins are changed. If assets are not enabled event is generated only for BEAM UTXOs. To get asset UTXOs notifications assets should be enabled ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--enable_assets"}]},{"type":"text","value":")."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<-"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"id\": \"ev_utxos_changed\",\n    \"jsonrpc\": \"2.0\",\n    \"result\": {\n        \"change\": 3,\n        \"change_str\": \"reset\",\n        \"utxos\": [\n            {\n                \"id\": 123,\n                \"asset_id\": 0,\n                \"amount\": 12345,\n                \"maturity\": 60,\n                \"type\": \"mine\",\n                \"createTxId\": \"10c4b760c842433cb58339a0fafef3db\",\n                \"spentTxId\": \"\",\n                \"status\": 2,\n                \"status_string\": \"maturing\"\n            } \n        ]\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"id\": \"ev_utxos_changed\",\n    \"jsonrpc\": \"2.0\",\n    \"result\": {\n        \"change\": 3,\n        \"change_str\": \"reset\",\n        \"utxos\": [\n            {\n                \"id\": 123,\n                \"asset_id\": 0,\n                \"amount\": 12345,\n                \"maturity\": 60,\n                \"type\": \"mine\",\n                \"createTxId\": \"10c4b760c842433cb58339a0fafef3db\",\n                \"spentTxId\": \"\",\n                \"status\": 2,\n                \"status_string\": \"maturing\"\n            } \n        ]\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"change"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"change_str"}]},{"type":"text","value":" - check "},{"type":"element","tag":"a","props":{"href":"#ev_xxx_changed-events"},"children":[{"type":"text","value":"ev_XXX_changed Events"}]},{"type":"text","value":" section for details"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"coins"}]},{"type":"text","value":" array of changed utxos, most up to date meta. Check "},{"type":"element","tag":"a","props":{"href":"#get_utxo"},"children":[{"type":"text","value":"get_utxo"}]},{"type":"text","value":" for more details"}]}]},{"type":"element","tag":"h2","props":{"id":"ev_txs_changed"},"children":[{"type":"text","value":"ev_txs_changed"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Event is generated when transactions are changed."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<-"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"id\": \"ev_txs_changed\",\n    \"jsonrpc\": \"2.0\",\n    \"result\": {\n        \"change\": 3,\n        \"change_str\": \"reset\",\n        \"txs\": [\n            {\n                \"txId\" : \"10c4b760c842433cb58339a0fafef3db\",\n                \"asset_id\": 0,\n                \"comment\": \"\",\n                \"fee\": 100,\n                \"kernel\": \"0000000000000000000000000000000000000000000000000000000000000000\",\n                \"receiver\": \"472e17b0419055ffee3b3813b98ae671579b0ac0dcd6f1a23b11a75ab148cc67\",\n                \"sender\": \"f287176bdd517e9c277778e4c012bf6a3e687dd614fc552a1ed22a3fee7d94f2\",\n                \"status\": 4,\n                \"status_string\" : \"Failed\",\n                \"tx_type\": 0,\n                \"tx_type_string\": \"simple\",\n                \"failure_reason\" : \"No inputs\",\n                \"value\": 12342342,\n                \"create_time\" : 1551100217,\n                \"income\" : false,\n                \"sender_identity\": \"a0a1ebbfeed5c312b309e32715c159e6b4548a6c6c3af25d0dbc16f37a1e9dd6\",\n                \"receiver_identity\": \"2d8738b0424ad50631e902fab655e7e1795fbb8d92d47c4c8df7336870fcadf5\",\n                \"token\": \"44pE7ySjZYjbLqwnTJANvr4BudMk1RdvWvaZnBvoCTwFnigfaTSza75bvw7x2GCa377Z4CSRRYZon44Ss9G9joSicNRAgts4u3pL6yV6jDQ6gAVJD9Scyr\"\n            } \n        ]\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"id\": \"ev_txs_changed\",\n    \"jsonrpc\": \"2.0\",\n    \"result\": {\n        \"change\": 3,\n        \"change_str\": \"reset\",\n        \"txs\": [\n            {\n                \"txId\" : \"10c4b760c842433cb58339a0fafef3db\",\n                \"asset_id\": 0,\n                \"comment\": \"\",\n                \"fee\": 100,\n                \"kernel\": \"0000000000000000000000000000000000000000000000000000000000000000\",\n                \"receiver\": \"472e17b0419055ffee3b3813b98ae671579b0ac0dcd6f1a23b11a75ab148cc67\",\n                \"sender\": \"f287176bdd517e9c277778e4c012bf6a3e687dd614fc552a1ed22a3fee7d94f2\",\n                \"status\": 4,\n                \"status_string\" : \"Failed\",\n                \"tx_type\": 0,\n                \"tx_type_string\": \"simple\",\n                \"failure_reason\" : \"No inputs\",\n                \"value\": 12342342,\n                \"create_time\" : 1551100217,\n                \"income\" : false,\n                \"sender_identity\": \"a0a1ebbfeed5c312b309e32715c159e6b4548a6c6c3af25d0dbc16f37a1e9dd6\",\n                \"receiver_identity\": \"2d8738b0424ad50631e902fab655e7e1795fbb8d92d47c4c8df7336870fcadf5\",\n                \"token\": \"44pE7ySjZYjbLqwnTJANvr4BudMk1RdvWvaZnBvoCTwFnigfaTSza75bvw7x2GCa377Z4CSRRYZon44Ss9G9joSicNRAgts4u3pL6yV6jDQ6gAVJD9Scyr\"\n            } \n        ]\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"change"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"change_str"}]},{"type":"text","value":" - check "},{"type":"element","tag":"a","props":{"href":"#ev_xxx_changed-events"},"children":[{"type":"text","value":"ev_XXX_changed Events"}]},{"type":"text","value":" section for details"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"txs"}]},{"type":"text","value":" array of changed transactions. Check "},{"type":"element","tag":"a","props":{"href":"#tx_status"},"children":[{"type":"text","value":"tx_status"}]},{"type":"text","value":" for more details"}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"whats-new-in-v61","depth":2,"text":"What's new in v6.1","children":[{"id":"new-methods","depth":3,"text":"New methods"},{"id":"changed-methods","depth":3,"text":"Changed methods"},{"id":"new-events","depth":3,"text":"New events"}]},{"id":"api-error-codes","depth":2,"text":"API Error codes"},{"id":"api-methods","depth":2,"text":"API Methods"},{"id":"swap-api-methods","depth":2,"text":"SWAP API Methods"},{"id":"create_address","depth":2,"text":"create_address"},{"id":"validate_address","depth":2,"text":"validate_address"},{"id":"addr_list","depth":2,"text":"addr_list","children":[{"id":"identity","depth":3,"text":"Identity"}]},{"id":"delete_address","depth":2,"text":"delete_address"},{"id":"edit_address","depth":2,"text":"edit_address"},{"id":"tx_send","depth":2,"text":"tx_send"},{"id":"tx_split","depth":2,"text":"tx_split"},{"id":"tx_asset_issue","depth":2,"text":"tx_asset_issue"},{"id":"tx_asset_consume","depth":2,"text":"tx_asset_consume"},{"id":"tx_asset_info","depth":2,"text":"tx_asset_info"},{"id":"tx_cancel","depth":2,"text":"tx_cancel"},{"id":"tx_delete","depth":2,"text":"tx_delete"},{"id":"tx_status","depth":2,"text":"tx_status"},{"id":"tx_list","depth":2,"text":"tx_list","children":[{"id":"important-the-recommended-number-of-confirmations-for-beam-transfers-is-80-blocks","depth":3,"text":"IMPORTANT: The recommended number of confirmations for Beam transfers is 80 blocks."},{"id":"tx-statuses","depth":3,"text":"TX statuses"},{"id":"tx-types","depth":3,"text":"TX types"}]},{"id":"wallet_status","depth":2,"text":"wallet_status"},{"id":"get_utxo","depth":2,"text":"get_utxo"},{"id":"get_asset_info","depth":2,"text":"get_asset_info"},{"id":"generate_tx_id","depth":2,"text":"generate_tx_id"},{"id":"export_payment_proof","depth":2,"text":"export_payment_proof"},{"id":"verify_payment_proof","depth":2,"text":"verify_payment_proof"},{"id":"invoke_contract","depth":2,"text":"invoke_contract","children":[{"id":"async-notice","depth":3,"text":"Async Notice"},{"id":"shader-errors","depth":3,"text":"Shader Errors"},{"id":"code-caching","depth":3,"text":"Code caching"},{"id":"requests-queue","depth":3,"text":"Requests queue"}]},{"id":"process_invoke_data","depth":2,"text":"process_invoke_data"},{"id":"calc_change","depth":2,"text":"calc_change"},{"id":"block_details","depth":2,"text":"block_details","children":[{"id":"async-notice-1","depth":3,"text":"Async Notice"}]},{"id":"get_version","depth":2,"text":"get_version"},{"id":"ev_subunsub","depth":2,"text":"ev_subunsub"},{"id":"api-events","depth":2,"text":"API Events"},{"id":"ev_xxx_changed-events","depth":2,"text":"ev_XXX_changed Events"},{"id":"ev_sync_progress","depth":2,"text":"ev_sync_progress"},{"id":"ev_system_state","depth":2,"text":"ev_system_state"},{"id":"ev_addrs_changed","depth":2,"text":"ev_addrs_changed"},{"id":"ev_assets_changed","depth":2,"text":"ev_assets_changed"},{"id":"ev_utxos_changed","depth":2,"text":"ev_utxos_changed"},{"id":"ev_txs_changed","depth":2,"text":"ev_txs_changed"}]}},"_type":"markdown","_id":"content:docs:core-tech:Beam-wallet-protocol-API-v6.1.md","_source":"content","_file":"docs/core-tech/Beam-wallet-protocol-API-v6.1.md","_extension":"md"},{"_path":"/docs/core-tech/beam-wallet-protocol-api-v6.2","_dir":"core-tech","_draft":false,"_partial":false,"_locale":"","title":"Beam Wallet Protocol API V62","description":"There were no API changes in version 6.2\nPlease refer version 6.1 docs.","body":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"There were no API changes in version 6.2\nPlease refer "},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/wiki/Beam-wallet-protocol-API-v6.1","rel":["nofollow"]},"children":[{"type":"text","value":"version 6.1"}]},{"type":"text","value":" docs."}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[]}},"_type":"markdown","_id":"content:docs:core-tech:Beam-wallet-protocol-API-v6.2.md","_source":"content","_file":"docs/core-tech/Beam-wallet-protocol-API-v6.2.md","_extension":"md"},{"_path":"/docs/core-tech/beam-wallet-protocol-api-v7.0","_dir":"core-tech","_draft":false,"_partial":false,"_locale":"","title":"Beam Wallet Protocol API V70","description":"","body":{"type":"root","children":[{"type":"element","tag":"h2","props":{"id":"whats-new-in-v70"},"children":[{"type":"text","value":"What's new in v7.0"}]},{"type":"element","tag":"h3","props":{"id":"changed-methods"},"children":[{"type":"text","value":"Changed methods"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#tx_status"},"children":[{"type":"text","value":"tx_status"}]},{"type":"text","value":" and "},{"type":"element","tag":"a","props":{"href":"#tx_list"},"children":[{"type":"text","value":"tx_list"}]},{"type":"text","value":" return "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"appid"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"appname"}]},{"type":"text","value":" for transactions initated by dapps."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#tx_status"},"children":[{"type":"text","value":"tx_status"}]},{"type":"text","value":" and "},{"type":"element","tag":"a","props":{"href":"#tx_list"},"children":[{"type":"text","value":"tx_list"}]},{"type":"text","value":" return currency "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"rates"}]},{"type":"text","value":" at the moment of transaction"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#ev_connection_changed"},"children":[{"type":"text","value":"ev_connection_changed"}]},{"type":"text","value":" event added to "},{"type":"element","tag":"a","props":{"href":"#ev_subunsub"},"children":[{"type":"text","value":"ev_subunsub"}]},{"type":"text","value":" method"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"available_regular"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"available_regular_str"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"available_mp"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"available_mp_str"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"receiving_regular"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"receiving_regular_str"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"receiving_mp"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"receiving_mp_str"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"sending_regular"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"sending_regular_str"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"sending_mp"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"sending_mp_str"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"maturing_regular"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"maturing_regular_str"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"maturing_mp"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"maturing_mp_str"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"change"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"change_str"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"locked"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"locked_str"}]},{"type":"text","value":" fields added for each asset in "},{"type":"element","tag":"a","props":{"href":"#wallet_status"},"children":[{"type":"text","value":"wallet_status"}]},{"type":"text","value":" method"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#tx_status"},"children":[{"type":"text","value":"tx_status"}]},{"type":"text","value":" and "},{"type":"element","tag":"a","props":{"href":"#tx_list"},"children":[{"type":"text","value":"tx_list"}]},{"type":"text","value":" added field "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"address_type"}]},{"type":"text","value":" for push transactions"}]}]},{"type":"element","tag":"h3","props":{"id":"new-methods"},"children":[{"type":"text","value":"New methods"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"v7.0 API adds IPFS support. Refer "},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/wiki/BEAM-IPFS-Support","rel":["nofollow"]},"children":[{"type":"text","value":"BEAM IPFS Support"}]},{"type":"text","value":" for details."}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#ipfs_add"},"children":[{"type":"text","value":"ipfs_add"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-async-orange"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#ipfs_hash"},"children":[{"type":"text","value":"ipfs_hash"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-async-orange"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#ipfs_get"},"children":[{"type":"text","value":"ipfs_get"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-async-orange"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#ipfs_pin"},"children":[{"type":"text","value":"ipfs_pin"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-async-orange"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#ipfs_unpin"},"children":[{"type":"text","value":"ipfs_unpin"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-async-orange"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#ipfs_gc"},"children":[{"type":"text","value":"ipfs_gc"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-async-orange"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#sign_message"},"children":[{"type":"text","value":"sign_message"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#verify_signature"},"children":[{"type":"text","value":"verify_signature"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]}]},{"type":"element","tag":"h3","props":{"id":"new-events"},"children":[{"type":"text","value":"New events"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#ev_connection_changed"},"children":[{"type":"text","value":"ev_connection_changed"}]}]}]},{"type":"element","tag":"h3","props":{"id":"changed-events"},"children":[{"type":"text","value":"Changed events"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#ev_txs_changed"},"children":[{"type":"text","value":"ev_txs_changed"}]},{"type":"text","value":" returns "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"rates"}]},{"type":"text","value":" array by default for all transactions"}]}]},{"type":"element","tag":"h2","props":{"id":"api-error-codes"},"children":[{"type":"text","value":"API Error codes"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"List of the possible error codes (with messages):"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32600 InvalidJsonRpc (\"Invalid JSON-RPC.\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32601 NotFoundJsonRpc (\"Procedure not found.\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32602 InvalidParamsJsonRpc (\"Invalid parameters.\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32603 InternalErrorJsonRpc (\"Internal JSON-RPC error.\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32001 InvalidTxStatus (\"Invalid TX status.\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32002 UnknownApiKey (\"Unknown API key.\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32003 InvalidAddress (\"Invalid address.\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32004 InvalidTxId (\"Invalid transaction ID.\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32005 NotSupported (\"Feature is not supported\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32006 InvalidPaymentProof (\"Invalid payment proof provided\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32007 PaymentProofExportError (\"Cannot export payment proof\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32008 SwapFailToParseToken (\"Invalid swap token.\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32009 SwapFailToAcceptOwn (\"Can't accept own swap offer.\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32010 SwapNotEnoughtBeams (\"Not enought beams.\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32011 SwapFailToConnect (\"Doesn't have active connection.\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32012 DatabaseError (\"Database error\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32013 DatabaseNotFound (\"Database not found\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32014 ThrottleError (\"Requests limit exceeded\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32015 NotOpenedError (\"Wallet not opened\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32016 NoSwapsError (\"Swaps are not enabled\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32017 UnexpectedError (\"Unexpected call\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32018 ContractCompileError (\"Failed to compile contract\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32019 ContractError (\"Contract call failed\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32020 NotAllowedError (\"Call is not allowed\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32021 UserRejected (\"Call is rejected by user\")"}]}]},{"type":"element","tag":"h2","props":{"id":"api-methods"},"children":[{"type":"text","value":"API Methods"}]},{"type":"element","tag":"h3","props":{"id":"general-methods"},"children":[{"type":"text","value":"General methods"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#create_address"},"children":[{"type":"text","value":"create_address"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#delete_address"},"children":[{"type":"text","value":"delete_address"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#edit_address"},"children":[{"type":"text","value":"edit_address"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#addr_list"},"children":[{"type":"text","value":"addr_list"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#validate_address"},"children":[{"type":"text","value":"validate_address"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#tx_send"},"children":[{"type":"text","value":"tx_send"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#tx_asset_issue"},"children":[{"type":"text","value":"tx_asset_issue"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#tx_asset_consume"},"children":[{"type":"text","value":"tx_asset_consume"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#tx_asset_info"},"children":[{"type":"text","value":"tx_asset_info"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#tx_status"},"children":[{"type":"text","value":"tx_status"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#tx_split"},"children":[{"type":"text","value":"tx_split"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#tx_cancel"},"children":[{"type":"text","value":"tx_cancel"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#tx_delete"},"children":[{"type":"text","value":"tx_delete"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#get_utxo"},"children":[{"type":"text","value":"get_utxo"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#tx_list"},"children":[{"type":"text","value":"tx_list"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#wallet_status"},"children":[{"type":"text","value":"wallet_status"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#generate_tx_id"},"children":[{"type":"text","value":"generate_tx_id"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#export_payment_proof"},"children":[{"type":"text","value":"export_payment_proof"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#verify_payment_proof"},"children":[{"type":"text","value":"verify_payment_proof"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#get_asset_info"},"children":[{"type":"text","value":"get_asset_info"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#set_confirmations_count"},"children":[{"type":"text","value":"set_confirmations_count"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#get_confirmations_count"},"children":[{"type":"text","value":"get_confirmations_count"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#invoke_contract"},"children":[{"type":"text","value":"invoke_contract"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-async-orange"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#process_invoke_data"},"children":[{"type":"text","value":"process_invoke_data"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-async-orange"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#block_details"},"children":[{"type":"text","value":"block_details"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-async-orange"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#calc_change"},"children":[{"type":"text","value":"calc_change"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#get_version"},"children":[{"type":"text","value":"get_version"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#ev_subunsub"},"children":[{"type":"text","value":"ev_subunsub"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#sign_message"},"children":[{"type":"text","value":"sign_message"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#verify_signature"},"children":[{"type":"text","value":"verify_signature"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]}]},{"type":"element","tag":"h3","props":{"id":"ipfs-methods"},"children":[{"type":"text","value":"IPFS methods"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#ipfs_add"},"children":[{"type":"text","value":"ipfs_add"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-async-orange"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#ipfs_hash"},"children":[{"type":"text","value":"ipfs_hash"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-async-orange"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#ipfs_get"},"children":[{"type":"text","value":"ipfs_get"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-async-orange"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#ipfs_pin"},"children":[{"type":"text","value":"ipfs_pin"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-async-orange"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#ipfs_unpin"},"children":[{"type":"text","value":"ipfs_unpin"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-async-orange"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#ipfs_gc"},"children":[{"type":"text","value":"ipfs_gc"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-async-orange"},"children":[]}]}]},{"type":"element","tag":"h3","props":{"id":"swap-methods"},"children":[{"type":"text","value":"SWAP methods"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"If you build "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"wallet-api"}]},{"type":"text","value":" with "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"BEAM_ATOMIC_SWAP_SUPPORT"}]},{"type":"text","value":" then you can use additional "},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/wiki/Beam-wallet-protocol-SWAP-API-(BETA)","rel":["nofollow"]},"children":[{"type":"text","value":"SWAP API methods"}]},{"type":"text","value":"."}]},{"type":"element","tag":"h2","props":{"id":"api-events"},"children":[{"type":"text","value":"API events"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Client should subscribe to events via "},{"type":"element","tag":"a","props":{"href":"#ev_subunsub"},"children":[{"type":"text","value":"ev_subunsub"}]},{"type":"text","value":" method. Events are generated by API when some entity/set of entities is changed. Every "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"changed"}]},{"type":"text","value":" event includes the following mandatory fields"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"change"}]},{"type":"text","value":" - numerical change type, possible values are\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"0"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"added"}]},{"type":"text","value":" - newly added entities are in the array"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"1"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"removed"}]},{"type":"text","value":" - removed entities are in the array"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"2"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"updated"}]},{"type":"text","value":" - updated entities are in the array"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"3"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"reset"}]},{"type":"text","value":" - discard all the previously stored entities, new ones are in the array"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"changestr"}]},{"type":"text","value":" - string representation of the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"change"}]},{"type":"text","value":" field, values are listed above"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"array of changed entities (name differs based on the entity type)"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#ev_sync_progress"},"children":[{"type":"text","value":"ev_sync_progress"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-async-orange"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#ev_system_state"},"children":[{"type":"text","value":"ev_system_state"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-async-orange"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#ev_addrs_changed"},"children":[{"type":"text","value":"ev_addrs_changed"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-async-orange"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#ev_assets_changed"},"children":[{"type":"text","value":"ev_assets_changed"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-async-orange"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#ev_utxos_changed"},"children":[{"type":"text","value":"ev_utxos_changed"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-async-orange"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#ev_txs_changed"},"children":[{"type":"text","value":"ev_txs_changed"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-async-orange"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#ev_connection_changed"},"children":[{"type":"text","value":"ev_connection_changed"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-async-orange"},"children":[]}]}]},{"type":"element","tag":"h2","props":{"id":"async-notice"},"children":[{"type":"text","value":"Async Notice"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Async method are asynchronous in nature. Please setup your API connection correspondingly (use keep alive HTTP or raw sockets)."}]},{"type":"element","tag":"h2","props":{"id":"create_address"},"children":[{"type":"text","value":"create_address"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Creates new receiver address."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\": \"2.0\", \n    \"id\": 1,\n    \"method\": \"create_address\", \n    \"params\":\n    {\n        \"type\": \"regular\",\n        \"expiration\": \"auto\",\n        \"comment\": \"John Smith\",\n        \"new_style_regular\" : true\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\": \"2.0\", \n    \"id\": 1,\n    \"method\": \"create_address\", \n    \"params\":\n    {\n        \"type\": \"regular\",\n        \"expiration\": \"auto\",\n        \"comment\": \"John Smith\",\n        \"new_style_regular\" : true\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"type"}]},{"type":"text","value":" the type of address, possible values are"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"regular"}]},{"type":"text","value":" - regular old-style address, default"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"offline"}]},{"type":"text","value":" - address offline transaction using Lelantus MW shielded pool, could be used more than once, there are no guaranties for extended privacy"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"max_privacy"}]},{"type":"text","value":" - address for guarantied maximum privacy transaction. Could be used only once."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"public_offline"}]},{"type":"text","value":" - address for donation, could be used as many times as you wish"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"regular_new"}]},{"type":"text","value":" - since v6.0, regular new-style address (base58), this address has SBBS internally"}]}]},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"Details of some address types are described "},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/wiki/Lelantus-CLI","rel":["nofollow"]},"children":[{"type":"text","value":"in this document"}]},{"type":"text","value":". Since v6.0, UI gives the sender an opportunity to choose between regular and offline send operation and the default address type provided via the \"receive\" UI dialog is an "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"offline"}]},{"type":"text","value":" address with "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"offline_payments=1"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"expiration"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"before v6.0 can be "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"expired/never/24h"}]},{"type":"text","value":"."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"since  v6.0 can be "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"expired/never/24h/auto"}]},{"type":"text","value":"."}]}]},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"Optional, by default address expires in 24 hours. "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"auto"}]},{"type":"text","value":" expiration means that address expires in 61 days (roughly 2 months). "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"auto"}]},{"type":"text","value":" addresses are renewed for another 2 months when any transaction is received with this address."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"comment"}]},{"type":"text","value":" - any string, optional."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"new_style_regular"}]},{"type":"text","value":" - if this flag is "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"true"}]},{"type":"text","value":" new style base58 address will be returned otherwise hexadecimal string will be returned, this option is ignored for the types different "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"regular"}]},{"type":"text","value":". "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"type=regular"}]},{"type":"text","value":" + "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"new_style_regular=true"}]},{"type":"text","value":" = "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"type=regular_new"}]},{"type":"text","value":"."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"offline_payments"}]},{"type":"text","value":" - number of offline payments embedded into an "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"offline"}]},{"type":"text","value":" address, default value is "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"1"}]},{"type":"text","value":". Valid only for the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"type=offline"}]},{"type":"text","value":"."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"All these address types could be passed as "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"address"}]},{"type":"text","value":" parameter of the "},{"type":"element","tag":"a","props":{"href":"#tx_send"},"children":[{"type":"text","value":"send"}]},{"type":"text","value":" method and/or used with the cli/UI. "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--enable_lelantus"}]},{"type":"text","value":" should be used in the command line of the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"wallet-api"}]},{"type":"text","value":" to enable sending/receiving using "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"offline"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"max_privacy"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"public_offline"}]},{"type":"text","value":" transactions. To generate "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"offline"}]},{"type":"text","value":"/"},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"max_privacy"}]},{"type":"text","value":"/"},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"public_offline"}]},{"type":"text","value":" addresses API must be connected to the own node (node with the wallet's viewer key)."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\" : \"2.0\", \n    \"id\" : 1,\n    \"result\" : \"472e17b0419055ffee3b3813b98ae671579b0ac0dcd6f1a23b11a75ab148cc67\"\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\" : \"2.0\", \n    \"id\" : 1,\n    \"result\" : \"472e17b0419055ffee3b3813b98ae671579b0ac0dcd6f1a23b11a75ab148cc67\"\n}\n"}]}]},{"type":"element","tag":"h2","props":{"id":"validate_address"},"children":[{"type":"text","value":"validate_address"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Just a simple validations, checks if the address isn't garbage and belongs to our elliptic curve. Also returns "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"is_mine == true"}]},{"type":"text","value":" if address is found in the local wallet DB."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"method\": \"validate_address\", \n    \"params\":\n    {\n        \"address\" : \"472e17b0419055ffee3b3813b98ae671579b0ac0dcd6f1a23b11a75ab148cc67\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"method\": \"validate_address\", \n    \"params\":\n    {\n        \"address\" : \"472e17b0419055ffee3b3813b98ae671579b0ac0dcd6f1a23b11a75ab148cc67\"\n    }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"result\" : \n    {\n        \"is_valid\" : true,\n        \"is_mine\" : false,\n        \"type\": \"offline\", \n        \"payments\": 3\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"result\" : \n    {\n        \"is_valid\" : true,\n        \"is_mine\" : false,\n        \"type\": \"offline\", \n        \"payments\": 3\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"type"}]},{"type":"text","value":" type of address. Check "},{"type":"element","tag":"a","props":{"href":"#create_address"},"children":[{"type":"text","value":"create_address"}]},{"type":"text","value":" for details"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"payments"}]},{"type":"text","value":" number of offline payments left for the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"offline"}]},{"type":"text","value":" address"}]}]},{"type":"element","tag":"h2","props":{"id":"addr_list"},"children":[{"type":"text","value":"addr_list"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Get addresses stored in the wallet database."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 8,\n    \"method\":\"addr_list\",\n    \"params\":\n    {\n        \"own\" : true\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 8,\n    \"method\":\"addr_list\",\n    \"params\":\n    {\n        \"own\" : true\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"own"}]},{"type":"text","value":", optional bool. If "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"true"}]},{"type":"text","value":" returns only own addresses, if "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"false"}]},{"type":"text","value":" returns only peer addresses. By default is false."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"id\": 8,\n    \"jsonrpc\": \"2.0\",\n    \"result\":\n    [{\n        \"address\": \"29510b33fac0cb20695fd3b836d835451e600c4224d8fb335dc1a68271deb9b6b5b\",\n        \"category\": \"\",\n        \"create_time\": 1553174321,\n        \"duration\": 1520,\n        \"expired\": true,\n        \"comment\": \"\",\n        \"own\": true,\n        \"own_id\": 16730903,\n        \"own_id_str\": \"16730903\",\n        \"identity\": \"2d8738b0424ad50631e902fab655e7e1795fbb8d92d47c4c8df7336870fcadf5\",\n        \"type\": \"regular\",\n        \"wallet_id\": \"29510b33fac0cb20695fd3b836d835451e600c4224d8fb335dc1a68271deb9b6b5b\"\n    }] \n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"id\": 8,\n    \"jsonrpc\": \"2.0\",\n    \"result\":\n    [{\n        \"address\": \"29510b33fac0cb20695fd3b836d835451e600c4224d8fb335dc1a68271deb9b6b5b\",\n        \"category\": \"\",\n        \"create_time\": 1553174321,\n        \"duration\": 1520,\n        \"expired\": true,\n        \"comment\": \"\",\n        \"own\": true,\n        \"own_id\": 16730903,\n        \"own_id_str\": \"16730903\",\n        \"identity\": \"2d8738b0424ad50631e902fab655e7e1795fbb8d92d47c4c8df7336870fcadf5\",\n        \"type\": \"regular\",\n        \"wallet_id\": \"29510b33fac0cb20695fd3b836d835451e600c4224d8fb335dc1a68271deb9b6b5b\"\n    }] \n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"address"}]},{"type":"text","value":" address that should be distributed among users and used to send funds to"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"own_id"}]},{"type":"text","value":" unsigned 64 bit index used to generate given address"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"own_id_str"}]},{"type":"text","value":" string representation of index used to generate given address (for JavaScript)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"identity"}]},{"type":"text","value":" identity linked to the given address. In UI and CLI called as \"wallet's signature\"."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"type"}]},{"type":"text","value":" address type. Consult "},{"type":"element","tag":"a","props":{"href":"#create_address"},"children":[{"type":"text","value":"create_address"}]},{"type":"text","value":" method for detailed description"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"wallet_id"}]},{"type":"text","value":" - Wallet ID (SBBS address) associated with the given address. This is the same as an SBBS address in CLI/UI. Note that not all address types have an associated SBBS address. For example non-own "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"max_privacy"}]},{"type":"text","value":" addresses do not have "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"wallet_id"}]},{"type":"text","value":". While own "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"max_privacy"}]},{"type":"text","value":" ones do it is recommended not to publish it. SBBS address can be safely published for "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"regular"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"regular_new"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"offline"}]},{"type":"text","value":" addresses."}]}]},{"type":"element","tag":"h3","props":{"id":"identity"},"children":[{"type":"text","value":"Identity"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Starting from version 4.2 we introduce an additional entity in order to make transfer more reliable. It is called "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"identity"}]},{"type":"text","value":". From version 6.1 in UI and CLI it  called as \"wallet's signature\". The main goal of "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"identity"}]},{"type":"text","value":" is to proof and ensure that transaction performs between claimed participants also it could be done using untrusted 3rd parties. The main scenario is "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"hardware wallet"}]},{"type":"text","value":" when host machine could be compromised, since it has ability to generate SBBS addresses, it can sign payment proof or accept transaction without need to ask hardware wallet about any secret, but if we give our identity to the other side (in addition to SBBS address), and this identity can be generated using hardware wallet only, then only hardware wallet can sign or approve transaction."}]},{"type":"element","tag":"h2","props":{"id":"delete_address"},"children":[{"type":"text","value":"delete_address"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Delete specific address from the wallet."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 8,\n    \"method\":\"delete_address\",\n    \"params\":\n    {\n        \"address\" : \"29510b33fac0cb20695fd3b836d835451e600c4224d8fb335dc1a68271deb9b6b5b\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 8,\n    \"method\":\"delete_address\",\n    \"params\":\n    {\n        \"address\" : \"29510b33fac0cb20695fd3b836d835451e600c4224d8fb335dc1a68271deb9b6b5b\"\n    }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"id\": 8,\n    \"jsonrpc\": \"2.0\",\n    \"result\": \"done\"\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"id\": 8,\n    \"jsonrpc\": \"2.0\",\n    \"result\": \"done\"\n}\n"}]}]},{"type":"element","tag":"h2","props":{"id":"edit_address"},"children":[{"type":"text","value":"edit_address"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Edit specific address. You can change the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"comment"}]},{"type":"text","value":" and/or "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"expiration"}]},{"type":"text","value":". Consult "},{"type":"element","tag":"a","props":{"href":"#create_address"},"children":[{"type":"text","value":"create_address"}]},{"type":"text","value":" for more details on acceptable values."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 8,\n    \"method\":\"edit_address\",\n    \"params\":\n    {\n        \"address\" : \"29510b33fac0cb20695fd3b836d835451e600c4224d8fb335dc1a68271deb9b6b5b\",\n        \"comment\" : \"John Smith\",\n        \"expiration\" : \"expired\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 8,\n    \"method\":\"edit_address\",\n    \"params\":\n    {\n        \"address\" : \"29510b33fac0cb20695fd3b836d835451e600c4224d8fb335dc1a68271deb9b6b5b\",\n        \"comment\" : \"John Smith\",\n        \"expiration\" : \"expired\"\n    }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"id\": 8,\n    \"jsonrpc\": \"2.0\",\n    \"result\": \"done\"\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"id\": 8,\n    \"jsonrpc\": \"2.0\",\n    \"result\": \"done\"\n}\n"}]}]},{"type":"element","tag":"h2","props":{"id":"tx_send"},"children":[{"type":"text","value":"tx_send"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Send BEAM or asset to a given address."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 2,\n    \"method\":\"tx_send\", \n    \"params\":\n    {\n        \"value\": 12342342,\n        \"fee\": 2,\n        \"from\": \"472e17b0419055ffee3b3813b98ae671579b0ac0dcd6f1a23b11a75ab148cc67\",\n        \"address\": \"472e17b0419055ffee3b3813b98ae671579b0ac0dcd6f1a23b11a75ab148cc67\",\n        \"comment\": \"thank you!\",\n        \"asset_id\": 1,\n        \"offline\": false\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 2,\n    \"method\":\"tx_send\", \n    \"params\":\n    {\n        \"value\": 12342342,\n        \"fee\": 2,\n        \"from\": \"472e17b0419055ffee3b3813b98ae671579b0ac0dcd6f1a23b11a75ab148cc67\",\n        \"address\": \"472e17b0419055ffee3b3813b98ae671579b0ac0dcd6f1a23b11a75ab148cc67\",\n        \"comment\": \"thank you!\",\n        \"asset_id\": 1,\n        \"offline\": false\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"value"}]},{"type":"text","value":" how much BEAM or asset to send in groth or asset groth."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"fee"}]},{"type":"text","value":" always in BEAM groth, optional. Omit for default fee."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"from"}]},{"type":"text","value":" own address, optional. If omitted new own address is generated and registered."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"address"}]},{"type":"text","value":" receiver's SBBS address or token. Token is an extension of SBBS address. It is a "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"base58"}]},{"type":"text","value":" encoded byte buffer which contains serialized parameters of a transaction. At least it contains SBBS "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"address"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"identity"}]},{"type":"text","value":"."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"comment"}]},{"type":"text","value":" transaction comment, optional."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"txId"}]},{"type":"text","value":" optional, you can provide your own transaction ID."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_id"}]},{"type":"text","value":" asset id to send, optional. Present starting from v5.0 and can be used only after Fork 2. Omit or set to 0 for BEAM transaction. If "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_id"}]},{"type":"text","value":" is non-zero assets must be enabled ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--enable_assets"}]},{"type":"text","value":") or method would fail."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"offline"}]},{"type":"text","value":" - since v6.0 offline addresses by default start the regular online transaction. Specify "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"\"offline\":true\""}]},{"type":"text","value":" to start an offline transaction. Applied only for "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"offline"}]},{"type":"text","value":" addresses and ignored for all other address types."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"You can preselect specific UTXOs for a transaction and fee via optional "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"coins"}]},{"type":"text","value":" array parameter like "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"\"coins\" : [\"00057e8eca5673476e6f726d000000000000015d3ef79800\", \"00057e8eca1233476e6f726d000000000000015d3ef79800\"]"}]},{"type":"text","value":". In case of asset transaction you can specify both asset coins (to send) and non-asset coins (to pay fee)."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 2,\n    \"result\":\n    {\n        \"txId\" : \"10c4b760c842433cb58339a0fafef3db\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 2,\n    \"result\":\n    {\n        \"txId\" : \"10c4b760c842433cb58339a0fafef3db\"\n    }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Returns transaction id or "},{"type":"element","tag":"a","props":{"href":"#api-error-codes"},"children":[{"type":"text","value":"error code"}]},{"type":"text","value":"."}]},{"type":"element","tag":"h2","props":{"id":"tx_split"},"children":[{"type":"text","value":"tx_split"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Creates a specific set of outputs with given values."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"NOTE: The "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"session"}]},{"type":"text","value":" parameter is not IMPLEMENTED and was removed!"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 5,\n    \"method\":\"tx_split\", \n    \"params\":\n    {\n        \"coins\" : [11, 12, 13, 50000000],\n        \"fee\" : 100,\n        \"asset_id\": 1\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 5,\n    \"method\":\"tx_split\", \n    \"params\":\n    {\n        \"coins\" : [11, 12, 13, 50000000],\n        \"fee\" : 100,\n        \"asset_id\": 1\n    }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 5,\n    \"result\":\n    {\n        \"txId\" : \"10c4b760c842433cb58339a0fafef3db\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 5,\n    \"result\":\n    {\n        \"txId\" : \"10c4b760c842433cb58339a0fafef3db\"\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"fee"}]},{"type":"text","value":" is always in BEAM groth. Omit for default fee."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"coins"}]},{"type":"text","value":" amounts of coins your want to have after split."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"txId"}]},{"type":"text","value":" optional, provide your own transaction ID."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_id"}]},{"type":"text","value":" asset id to split, optional. Omit or set to 0 to split BEAM coins. Present starting from v5.0 and can be used only after Fork 2. If "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_id"}]},{"type":"text","value":" is non-zero assets must be enabled ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--enable_assets"}]},{"type":"text","value":") or method would fail."}]}]},{"type":"element","tag":"h2","props":{"id":"tx_asset_issue"},"children":[{"type":"text","value":"tx_asset_issue"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Available from v5.0, can be used after Fork2. Assets must be enabled ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--enable_assets"}]},{"type":"text","value":") or method would fail."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Mints new asset coins. You must own the asset and info about the asset should be in a local database. Use "},{"type":"element","tag":"a","props":{"href":"#tx_asset_info"},"children":[{"type":"text","value":"tx_asset_info"}]},{"type":"text","value":" to retrieve the latest asset info if necessary. Asset minting is free. You need to pay only regular transaction fee."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\": \"2.0\", \n    \"id\": 2,\n    \"method\": \"tx_asset_issue\", \n    \"params\":\n    {\n        \"value\": 6,\n        \"asset_id\": 1\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\": \"2.0\", \n    \"id\": 2,\n    \"method\": \"tx_asset_issue\", \n    \"params\":\n    {\n        \"value\": 6,\n        \"asset_id\": 1\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"value"}]},{"type":"text","value":" how much asset to mint, in asset groth."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"fee"}]},{"type":"text","value":" transaction fee in BEAM groth. Omit to use default fee."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_id"}]},{"type":"text","value":" asset id of the asset to mint."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"txId"}]},{"type":"text","value":" optional,  provide your own transaction ID."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_meta"}]},{"type":"text","value":" obsolete and removed in v6.0."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"You can preselect specific BEAM UTXOs for a transaction fee by adding "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"coins"}]},{"type":"text","value":" array parameter, like "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"\"coins\" : [\"00057e8eca5673476e6f726d000000000000015d3ef79800\", \"00057e8eca1233476e6f726d000000000000015d3ef79800\"]"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\": \"2.0\", \n    \"id\": 2,\n    \"result\":\n    {\n        \"txId\" : \"10c4b760c842433cb58339a0fafef3db\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\": \"2.0\", \n    \"id\": 2,\n    \"result\":\n    {\n        \"txId\" : \"10c4b760c842433cb58339a0fafef3db\"\n    }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Returns transaction id or "},{"type":"element","tag":"a","props":{"href":"#api-error-codes"},"children":[{"type":"text","value":"error code"}]},{"type":"text","value":"."}]},{"type":"element","tag":"h2","props":{"id":"tx_asset_consume"},"children":[{"type":"text","value":"tx_asset_consume"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Available from v5.0, can be used after Fork2. Assets must be enabled ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--enable_assets"}]},{"type":"text","value":") or method would fail."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Burns existing asset coins. You must own the asset itself as well as asset coins to burn them. You cannot burn asset coins that belong to another wallet. Info about the asset should be in a local database. Use "},{"type":"element","tag":"a","props":{"href":"#tx_asset_info"},"children":[{"type":"text","value":"tx_asset_info"}]},{"type":"text","value":" to retrieve the latest asset info if necessary. Asset coins burning is absolutely free. You need to pay only regular transaction fee."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 2,\n    \"method\":\"tx_asset_consume\", \n    \"params\":\n    {\n        \"value\": 6,\n        \"asset_id\": 1\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 2,\n    \"method\":\"tx_asset_consume\", \n    \"params\":\n    {\n        \"value\": 6,\n        \"asset_id\": 1\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"value"}]},{"type":"text","value":" how much asset to burn, in asset groth."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"fee"}]},{"type":"text","value":" transaction fee in BEAM groth, omit for a default fee."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_id"}]},{"type":"text","value":" id of the asset to consume."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"txId"}]},{"type":"text","value":" optional, provide your own transaction ID"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_meta"}]},{"type":"text","value":" obsolete and removed since v6.0"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"You can preselect specific UTXOs to burn and to pay fee by adding "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"coins"}]},{"type":"text","value":" array parameter, like "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"\"coins\" : [\"00057e8eca5673476e6f726d000000000000015d3ef79800\", \"00057e8eca1233476e6f726d000000000000015d3ef79800\"]"}]},{"type":"text","value":". Both asset coins (to burn) and BEAM coins (to pay fee) can be in this array."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 2,\n    \"result\":\n    {\n        \"txId\" : \"10c4b760c842433cb58339a0fafef3db\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 2,\n    \"result\":\n    {\n        \"txId\" : \"10c4b760c842433cb58339a0fafef3db\"\n    }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Returns transaction id or "},{"type":"element","tag":"a","props":{"href":"#api-error-codes"},"children":[{"type":"text","value":"error code"}]},{"type":"text","value":"."}]},{"type":"element","tag":"h2","props":{"id":"tx_asset_info"},"children":[{"type":"text","value":"tx_asset_info"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Available from v5.0, can be used after Fork2. Assets must be enabled ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--enable_assets"}]},{"type":"text","value":") or method would fail."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Retrieve full info about any registered asset and save in a local database. If asset has been unregistered or has been never registered transaction would fail. After transaction is completed you can use "},{"type":"element","tag":"a","props":{"href":"#get_asset_info"},"children":[{"type":"text","value":"get_asset_info"}]},{"type":"text","value":" to read/get asset info from the local database."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 2,\n    \"method\": \"tx_asset_info\",\n    \"params\": \n    {\n        \"asset_id\": 1\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 2,\n    \"method\": \"tx_asset_info\",\n    \"params\": \n    {\n        \"asset_id\": 1\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_id"}]},{"type":"text","value":" asset id to retrieve info about. Can be used for any asset even if you don't own it."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"txId"}]},{"type":"text","value":" optional, provide your own transaction ID"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_meta"}]},{"type":"text","value":" obsolete and removed since v6.0"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Asset info transaction is free, i.e. doesn't incur any fees."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 2,\n    \"result\":\n    {\n        \"txId\" : \"10c4b760c842433cb58339a0fafef3db\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 2,\n    \"result\":\n    {\n        \"txId\" : \"10c4b760c842433cb58339a0fafef3db\"\n    }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Returns transaction id or "},{"type":"element","tag":"a","props":{"href":"#api-error-codes"},"children":[{"type":"text","value":"error code"}]},{"type":"text","value":"."}]},{"type":"element","tag":"h2","props":{"id":"tx_cancel"},"children":[{"type":"text","value":"tx_cancel"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Cancels running transaction"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"method\":\"tx_cancel\", \n    \"params\":\n    {\n        \"txId\" : \"a13525181c0d45b0a4c5c1a697c8a7b8\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"method\":\"tx_cancel\", \n    \"params\":\n    {\n        \"txId\" : \"a13525181c0d45b0a4c5c1a697c8a7b8\"\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"txId"}]},{"type":"text","value":" transaction id to cancel."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"result\": true\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"result\": true\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Returns "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"true"}]},{"type":"text","value":" if successfully canceled or "},{"type":"element","tag":"a","props":{"href":"#api-error-codes"},"children":[{"type":"text","value":"error code"}]},{"type":"text","value":" with the reason."}]},{"type":"element","tag":"h2","props":{"id":"tx_delete"},"children":[{"type":"text","value":"tx_delete"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Removes transaction from the local history. Cannot remove running transaction"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"method\":\"tx_delete\", \n    \"params\":\n    {\n        \"txId\" : \"a13525181c0d45b0a4c5c1a697c8a7b8\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"method\":\"tx_delete\", \n    \"params\":\n    {\n        \"txId\" : \"a13525181c0d45b0a4c5c1a697c8a7b8\"\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"txId"}]},{"type":"text","value":" transaction id to be deleted."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"result\": true\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"result\": true\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Returns "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"true"}]},{"type":"text","value":" if the transaction was successfully deleted or "},{"type":"element","tag":"a","props":{"href":"#api-error-codes"},"children":[{"type":"text","value":"error code"}]},{"type":"text","value":" with the reason."}]},{"type":"element","tag":"h2","props":{"id":"tx_status"},"children":[{"type":"text","value":"tx_status"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Get status & extended information about a single transaction by its transaction id. The example below is given for a simple transaction. Different transaction types have different status records. Consult "},{"type":"element","tag":"a","props":{"href":"#tx_list"},"children":[{"type":"text","value":"tx_list"}]},{"type":"text","value":" method description for details. This method can be called for previously started asset-involving transactions even if assets are not enabled in the current session."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"method\":\"tx_status\", \n    \"params\":\n    {\n        \"txId\" : \"10c4b760c842433cb58339a0fafef3db\",\n        \"rates\": false\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"method\":\"tx_status\", \n    \"params\":\n    {\n        \"txId\" : \"10c4b760c842433cb58339a0fafef3db\",\n        \"rates\": false\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"txId"}]},{"type":"text","value":" - transaction id to return status for"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"rates"}]},{"type":"text","value":" - returns currency rates array at the moment of transaction if set to "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"true"}]},{"type":"text","value":". By default is "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"false"}]},{"type":"text","value":"."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"result\":\n    { \n        \"txId\" : \"10c4b760c842433cb58339a0fafef3db\",\n        \"asset_id\": 0,\n        \"comment\": \"\",\n        \"fee\": 100,\n        \"kernel\": \"0000000000000000000000000000000000000000000000000000000000000000\",\n        \"receiver\": \"472e17b0419055ffee3b3813b98ae671579b0ac0dcd6f1a23b11a75ab148cc67\",\n        \"sender\": \"f287176bdd517e9c277778e4c012bf6a3e687dd614fc552a1ed22a3fee7d94f2\",\n        \"status\": 4,\n        \"status_string\" : \"Failed\",\n        \"tx_type\": 0,\n        \"tx_type_string\": \"simple\",\n        \"failure_reason\" : \"No inputs\",\n        \"value\": 12342342,\n        \"create_time\" : 1551100217,\n        \"income\" : false,\n        \"sender_identity\": \"a0a1ebbfeed5c312b309e32715c159e6b4548a6c6c3af25d0dbc16f37a1e9dd6\",\n        \"receiver_identity\": \"2d8738b0424ad50631e902fab655e7e1795fbb8d92d47c4c8df7336870fcadf5\",\n        \"token\": \"44pE7ySjZYjbLqwnTJANvr4BudMk1RdvWvaZnBvoCTwFnigfaTSza75bvw7x2GCa377Z4CSRRYZon44Ss9G9joSicNRAgts4u3pL6yV6jDQ6gAVJD9Scyr\"\n    } \n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"result\":\n    { \n        \"txId\" : \"10c4b760c842433cb58339a0fafef3db\",\n        \"asset_id\": 0,\n        \"comment\": \"\",\n        \"fee\": 100,\n        \"kernel\": \"0000000000000000000000000000000000000000000000000000000000000000\",\n        \"receiver\": \"472e17b0419055ffee3b3813b98ae671579b0ac0dcd6f1a23b11a75ab148cc67\",\n        \"sender\": \"f287176bdd517e9c277778e4c012bf6a3e687dd614fc552a1ed22a3fee7d94f2\",\n        \"status\": 4,\n        \"status_string\" : \"Failed\",\n        \"tx_type\": 0,\n        \"tx_type_string\": \"simple\",\n        \"failure_reason\" : \"No inputs\",\n        \"value\": 12342342,\n        \"create_time\" : 1551100217,\n        \"income\" : false,\n        \"sender_identity\": \"a0a1ebbfeed5c312b309e32715c159e6b4548a6c6c3af25d0dbc16f37a1e9dd6\",\n        \"receiver_identity\": \"2d8738b0424ad50631e902fab655e7e1795fbb8d92d47c4c8df7336870fcadf5\",\n        \"token\": \"44pE7ySjZYjbLqwnTJANvr4BudMk1RdvWvaZnBvoCTwFnigfaTSza75bvw7x2GCa377Z4CSRRYZon44Ss9G9joSicNRAgts4u3pL6yV6jDQ6gAVJD9Scyr\"\n    } \n}\n"}]}]},{"type":"element","tag":"h2","props":{"id":"tx_list"},"children":[{"type":"text","value":"tx_list"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Get the transactions list."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 8,\n    \"method\":\"tx_list\",\n    \"params\":\n    {\n        \"filter\" : \n        {\n            \"status\":4,\n            \"height\":1055,\n        },\n        \"rates\": true,\n        \"skip\" : 0,\n        \"count\" : 10\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 8,\n    \"method\":\"tx_list\",\n    \"params\":\n    {\n        \"filter\" : \n        {\n            \"status\":4,\n            \"height\":1055,\n        },\n        \"rates\": true,\n        \"skip\" : 0,\n        \"count\" : 10\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"filter.status"}]},{"type":"text","value":" optional, filter transactions by status"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"filter.height"}]},{"type":"text","value":" optional, filter transactions by height. For simple, asset issue and asset consume transactions denotes height when the transaction was registered in the chain. For asset info transaction means height at which asset confirmation was received. Works only for transactions with status Completed(3)."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"count"}]},{"type":"text","value":" optional, number of transactions to get. By default, all transactions are returned."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"skip"}]},{"type":"text","value":" number of transactions to skip, 0 by default."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"rates"}]},{"type":"text","value":" return currency rates at the moment of transaction if "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"true"}]},{"type":"text","value":". By default is "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"false"}]},{"type":"text","value":"."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"If assets are not enabled, the method returns only BEAM transactions. To get asset transactions you should enable assets ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--enable_assets"}]},{"type":"text","value":")."}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"filter.asset_id"}]},{"type":"text","value":" return only asset transactions with given asset id. Present starting from v5.0. If assets are not enabled and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"filter.asset_id"}]},{"type":"text","value":" is non-zero nothing would be returned."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 8,\n    \"result\":\n    [{ \n        \"asset_id\": 0,\n        \"txId\" : \"10c4b760c842433cb58339a0fafef3db\",\n        \"comment\": \"\",\n        \"fee\": 0,\n        \"kernel\": \"0000000000000000000000000000000000000000000000000000000000000000\",\n        \"receiver\": \"472e17b0419055ffee3b3813b98ae671579b0ac0dcd6f1a23b11a75ab148cc67\",\n        \"sender\": \"f287176bdd517e9c277778e4c012bf6a3e687dd614fc552a1ed22a3fee7d94f2\",\n        \"status\": 4,\n        \"status_string\" : \"Failed\",\n        \"failure_reason\" : \"No inputs\",\n        \"value\": 12342342,\n        \"create_time\" : 1551100217,\n        \"income\" : false,\n        \"token\": \"44pE7ySjZYjbLqwnTJANvr4BudMk1RdvWvaZnBvoCTwFnigfaTSza75bvw7x2GCa377Z4CSRRYZon44Ss9G9joSicNRAgts4u3pL6yV6jDQ6gAVJD9Scyr\",\n        \"rates\": [\n            {\n                \"from\": 3,\n                \"rate\": 200000000,\n                \"rate_str\": \"200000000\",\n                \"to\": \"btc\"\n            },\n            {\n                \"from\": 0,\n                \"rate\": 50000000,\n                \"rate_str\": \"50000000\",\n                \"to\": \"usd\"\n            }\n        ]\n    },\n    {\n      \"asset_id\": 1,\n      \"asset_meta\": \"STD:N=Coin;SN=CN;UN=Cgro;NTHUN=Cgroth\",\n      \"comment\": \"\",\n      \"confirmations\": 102,\n      \"create_time\": 1586995332,\n      \"fee\": 0,\n      \"height\": 1908,\n      \"income\": false,\n      \"receiver\": \"0\",\n      \"sender\": \"0\",\n      \"status\": 3,\n      \"status_string\": \"asset confirmed\",\n      \"txId\": \"d9f94306127a4ef894733f984b5512cf\",\n      \"tx_type\": 6,\n      \"tx_type_string\": \"asset info\",\n      \"value\": 0,\n      \"rates\": []\n    },\n    {\n        \"asset_id\": 1,\n        \"asset_meta\": \"STD:N=Coin;SN=CN;UN=Cgro;NTHUN=Cgroth\",\n        \"comment\": \"\",\n        \"confirmations\": 1985,\n        \"height\": 25,\n        \"create_time\": 1586966478,\n        \"fee\": 100,\n        \"income\": false,\n        \"kernel\": \"1c9e4a9a61df1dda00db10ab4477f88355e13d4ed06c0db36c39b22a2a66f642\",\n        \"receiver\": \"0\",\n        \"sender\": \"0\",\n        \"status\": 3,\n        \"status_string\": \"asset issued\",\n        \"txId\": \"77008a76aa4b4da697587040b2d21f1e\",\n        \"tx_type\": 2,\n        \"tx_type_string\": \"asset issue\",\n        \"value\": 500000000,\n        \"rates\": []\n    }]\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 8,\n    \"result\":\n    [{ \n        \"asset_id\": 0,\n        \"txId\" : \"10c4b760c842433cb58339a0fafef3db\",\n        \"comment\": \"\",\n        \"fee\": 0,\n        \"kernel\": \"0000000000000000000000000000000000000000000000000000000000000000\",\n        \"receiver\": \"472e17b0419055ffee3b3813b98ae671579b0ac0dcd6f1a23b11a75ab148cc67\",\n        \"sender\": \"f287176bdd517e9c277778e4c012bf6a3e687dd614fc552a1ed22a3fee7d94f2\",\n        \"status\": 4,\n        \"status_string\" : \"Failed\",\n        \"failure_reason\" : \"No inputs\",\n        \"value\": 12342342,\n        \"create_time\" : 1551100217,\n        \"income\" : false,\n        \"token\": \"44pE7ySjZYjbLqwnTJANvr4BudMk1RdvWvaZnBvoCTwFnigfaTSza75bvw7x2GCa377Z4CSRRYZon44Ss9G9joSicNRAgts4u3pL6yV6jDQ6gAVJD9Scyr\",\n        \"rates\": [\n            {\n                \"from\": 3,\n                \"rate\": 200000000,\n                \"rate_str\": \"200000000\",\n                \"to\": \"btc\"\n            },\n            {\n                \"from\": 0,\n                \"rate\": 50000000,\n                \"rate_str\": \"50000000\",\n                \"to\": \"usd\"\n            }\n        ]\n    },\n    {\n      \"asset_id\": 1,\n      \"asset_meta\": \"STD:N=Coin;SN=CN;UN=Cgro;NTHUN=Cgroth\",\n      \"comment\": \"\",\n      \"confirmations\": 102,\n      \"create_time\": 1586995332,\n      \"fee\": 0,\n      \"height\": 1908,\n      \"income\": false,\n      \"receiver\": \"0\",\n      \"sender\": \"0\",\n      \"status\": 3,\n      \"status_string\": \"asset confirmed\",\n      \"txId\": \"d9f94306127a4ef894733f984b5512cf\",\n      \"tx_type\": 6,\n      \"tx_type_string\": \"asset info\",\n      \"value\": 0,\n      \"rates\": []\n    },\n    {\n        \"asset_id\": 1,\n        \"asset_meta\": \"STD:N=Coin;SN=CN;UN=Cgro;NTHUN=Cgroth\",\n        \"comment\": \"\",\n        \"confirmations\": 1985,\n        \"height\": 25,\n        \"create_time\": 1586966478,\n        \"fee\": 100,\n        \"income\": false,\n        \"kernel\": \"1c9e4a9a61df1dda00db10ab4477f88355e13d4ed06c0db36c39b22a2a66f642\",\n        \"receiver\": \"0\",\n        \"sender\": \"0\",\n        \"status\": 3,\n        \"status_string\": \"asset issued\",\n        \"txId\": \"77008a76aa4b4da697587040b2d21f1e\",\n        \"tx_type\": 2,\n        \"tx_type_string\": \"asset issue\",\n        \"value\": 500000000,\n        \"rates\": []\n    }]\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"token"}]},{"type":"text","value":" retuned only in case if the transaction was started with a token."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"height"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"confirmations"}]},{"type":"text","value":" will be absent if the transaction isn't in the chain for simple, asset issue & asset consume transactions, or if asset confirmation is not received for asset info transaction."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"confirmations"}]},{"type":"text","value":" the number of blocks which confirm the presence of the transaction."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"sender_identity"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"receiver_identity"}]},{"type":"text","value":" are present if both participants provided these. In UI and CLI called as \"sender wallet's signature\" and \"receiver wallet's signature\"."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"status_string"}]},{"type":"text","value":" is a string representation of "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"status"}]},{"type":"text","value":" parameter."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_meta"}]},{"type":"text","value":" is an asset metadata string. Present from v5.0."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"tx_type"}]},{"type":"text","value":" is present starting from v5.0."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"tx_type_string"}]},{"type":"text","value":" is a string representation of tx_type parameter. Present starting from v5.0."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_id"}]},{"type":"text","value":" is returned starting from v5.0. For BEAM transactions it is always 0, for transactions that involve assets (including send/receive) it is an asset id. Can be 0 for asset info transaction if the transaction was started with asset_meta and the asset has been not found."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_meta"}]},{"type":"text","value":" is an asset metadata string. Returned starting from v5.0. Always present for asset issue &  consume transactions. Can be empty for asset info transaction if it was started with asset_id and the asset has been not found."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"kernel"}]},{"type":"text","value":" is not returned for asset info transactions. These transactions do not have any kernel and only query node for information."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"appname"}]},{"type":"text","value":" returned for transactions initiated by DApps. DApp Name"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"appid"}]},{"type":"text","value":" returned for transactions initiated by DApps. DApp ID (apppid)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"rates"}]},{"type":"text","value":" currency rates at the moment of transaction. Empty array if rates were not available at the moment of transaction or transaction does not store rates (asset issue/consume for example)."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"rates.from"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"rates.to"}]},{"type":"text","value":" from and to currencies. "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Number"}]},{"type":"text","value":" denotes asset id (0 for BEAM), "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"string"}]},{"type":"text","value":" - third-party currencies such as "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"eth"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"btc"}]},{"type":"text","value":" &c."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"rates.rate"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"rates.rate_str"}]},{"type":"text","value":" is a conversion rate."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"address_type"}]},{"type":"text","value":" type off address used for pust transaction (7), see "},{"type":"element","tag":"a","props":{"href":"#create_address"},"children":[{"type":"text","value":"create_address"}]},{"type":"text","value":" and "},{"type":"element","tag":"a","props":{"href":"#tx-types"},"children":[{"type":"text","value":"TX types"}]},{"type":"text","value":". Possible values are\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"offline"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"public_offline"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"max_privacy"}]}]}]}]}]},{"type":"element","tag":"h3","props":{"id":"important-the-recommended-number-of-confirmations-for-beam-transfers-is-80-blocks"},"children":[{"type":"text","value":"IMPORTANT: The recommended number of confirmations for Beam transfers is 80 blocks."}]},{"type":"element","tag":"h3","props":{"id":"tx-statuses"},"children":[{"type":"text","value":"TX statuses"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"pending (0)     - "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"pending"}]},{"type":"text","value":" initial state, the transaction is created, but not sent yet"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"in progress (1) - "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"self sending"}]},{"type":"text","value":"/"},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"waiting for sender"}]},{"type":"text","value":"/"},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"waiting for receiver"}]},{"type":"text","value":"/"},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"in progress"}]},{"type":"text","value":". For simple transactions indicates that the sender or receiver should come online to initiate the transaction. For asset issue/consume/info transactions indicates that transaction is being assembled. For asset info transaction means waiting for node response."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"canceled (2)    - "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"cancelled"}]},{"type":"text","value":" by sender or due to rollback"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"completed (3)   - transaction is "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"completed"}]},{"type":"text","value":"/"},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"received"}]},{"type":"text","value":"/"},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"sent"}]},{"type":"text","value":"/"},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset issued"}]},{"type":"text","value":"/"},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset consumed"}]},{"type":"text","value":"/"},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset confirmed"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"failed (4)      - "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"failed"}]},{"type":"text","value":" for some reason or "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"expired"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"registering (5) - "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"self sending"}]},{"type":"text","value":"/"},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"receiving"}]},{"type":"text","value":"/"},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"sending"}]},{"type":"text","value":"/"},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"in progress"}]},{"type":"text","value":" transaction is taken care by the blockchain, miners needs to PoW and to add it to a block, then block should be added to the blockchain."}]}]},{"type":"element","tag":"h3","props":{"id":"tx-types"},"children":[{"type":"text","value":"TX types"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"simple (0) - simple transaction, send/receive BEAM or asset"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"reserved (1) - currently not returned"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"asset issue (2) - issue new asset units"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"asset consume (3) - consume asset units"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"reserved (4) - currently not returned"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"reserved (5) - currently not returned"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"asset info (6) - asset info transaction, receive full asset information from blockchain"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"push transaction (7) - lelantus push transaction, is used for offline/max privacy payments"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"contract (12) - starting with v6.0, transaction created by contract request, or to fund or execute node-base contract invocation"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"N.B."}]},{"type":"text","value":" tx_list does not return swap, asset register & asset unregister transactions. Transactions are sorted by height in a descending order."}]},{"type":"element","tag":"h2","props":{"id":"wallet_status"},"children":[{"type":"text","value":"wallet_status"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Get current wallet status."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 6,\n    \"method\":\"wallet_status\"\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 6,\n    \"method\":\"wallet_status\"\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 6,\n    \"result\":\n    {\n        \"current_height\" : 1055,\n        \"current_state_hash\" : \"f287176bdd517e9c277778e4c012bf6a3e687dd614fc552a1ed22a3fee7d94f2\",\n            \"current_state_timestamp\": 1625060769,\n        \"prev_state_hash\" : \"bd39333a66a8b7cb3804b5978d42312c841dbfa03a1c31fc2f0627eeed6e43f2\",\n            \"is_in_sync\": true,\n        \"available\": 100500,\n        \"receiving\": 123,\n        \"sending\": 0,\n        \"maturing\": 50,\n        \"difficulty\": 2.93914,\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 6,\n    \"result\":\n    {\n        \"current_height\" : 1055,\n        \"current_state_hash\" : \"f287176bdd517e9c277778e4c012bf6a3e687dd614fc552a1ed22a3fee7d94f2\",\n            \"current_state_timestamp\": 1625060769,\n        \"prev_state_hash\" : \"bd39333a66a8b7cb3804b5978d42312c841dbfa03a1c31fc2f0627eeed6e43f2\",\n            \"is_in_sync\": true,\n        \"available\": 100500,\n        \"receiving\": 123,\n        \"sending\": 0,\n        \"maturing\": 50,\n        \"difficulty\": 2.93914,\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"available"}]},{"type":"text","value":" sum of available UTXOs you can spend"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"sending/receiving"}]},{"type":"text","value":" sum of UTXOs currently sending/receiving"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"maturing"}]},{"type":"text","value":" sum of UTXOs currently maturing"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"locked"}]},{"type":"text","value":" not used at the moment, ignore"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"difficulty"}]},{"type":"text","value":" the latest blockchain PoW difficulty"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"current_state_timestamp"}]},{"type":"text","value":" is a UNIX timestamp in seconds"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"is_in_sync"}]},{"type":"text","value":" true is wallet is in sync with blockchain"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Starting from v5.0 assets support has been added. This slightly changes API response: totals array is added which provides amounts for each asset int the wallet. To get the totals array assets should be enabled ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--enable_assets"}]},{"type":"text","value":")."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 6,\n    \"method\":\"wallet_status\",\n        \"params\": {\n            \"nz_totals\": false\n        }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 6,\n    \"method\":\"wallet_status\",\n        \"params\": {\n            \"nz_totals\": false\n        }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"nz_totals"}]},{"type":"text","value":"optional bool. If true do not return totals for assets with zero balance. By default is false."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n  \"id\": 1236,\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"current_height\" : 1055,\n    \"current_state_hash\" : \"f287176bdd517e9c277778e4c012bf6a3e687dd614fc552a1ed22a3fee7d94f2\",\n    \"current_state_timestamp\": 1625060769,\n    \"prev_state_hash\" : \"bd39333a66a8b7cb3804b5978d42312c841dbfa03a1c31fc2f0627eeed6e43f2\",\n    \"is_in_sync\": true,\n    \"available\": 100500,\n    \"receiving\": 123,\n    \"sending\": 0,\n    \"maturing\": 50,\n    \"difficulty\": 2.93914,\n    \"totals\": [\n      {\n        \"asset_id\": 0,\n        \"available\": 117065840575291,\n        \"available_mp\": 0,\n        \"available_mp_str\": \"0\",\n        \"available_regular\": 117065840575291,\n        \"available_regular_str\": \"117065840575291\",\n        \"available_str\": \"117065840575291\",\n        \"change\": 0,\n        \"change_str\": \"0\",\n        \"locked\": 183629687500000,\n        \"locked_str\": \"183629687500000\",\n        \"maturing\": 183629687500000,\n        \"maturing_mp\": 0,\n        \"maturing_mp_str\": \"0\",\n        \"maturing_regular\": 183629687500000,\n        \"maturing_regular_str\": \"183629687500000\",\n        \"maturing_str\": \"183629687500000\",\n        \"receiving\": 0,\n        \"receiving_mp\": 0,\n        \"receiving_mp_str\": \"0\",\n        \"receiving_regular\": 0,\n        \"receiving_regular_str\": \"0\",\n        \"receiving_str\": \"0\",\n        \"sending\": 0,\n        \"sending_mp\": 0,\n        \"sending_mp_str\": \"0\",\n        \"sending_regular\": 0,\n        \"sending_regular_str\": \"0\",\n        \"sending_str\": \"0\"\n      },\n      {\n        \"asset_id\": 3,\n        \"available\": 4262500000,\n        \"available_mp\": 0,\n        \"available_mp_str\": \"0\",\n        \"available_regular\": 4262500000,\n        \"available_regular_str\": \"4262500000\",\n        \"available_str\": \"4262500000\",\n        \"change\": 0,\n        \"change_str\": \"0\",\n        \"locked\": 0,\n        \"locked_str\": \"0\",\n        \"maturing\": 0,\n        \"maturing_mp\": 0,\n        \"maturing_mp_str\": \"0\",\n        \"maturing_regular\": 0,\n        \"maturing_regular_str\": \"0\",\n        \"maturing_str\": \"0\",\n        \"receiving\": 0,\n        \"receiving_mp\": 0,\n        \"receiving_mp_str\": \"0\",\n        \"receiving_regular\": 0,\n        \"receiving_regular_str\": \"0\",\n        \"receiving_str\": \"0\",\n        \"sending\": 0,\n        \"sending_mp\": 0,\n        \"sending_mp_str\": \"0\",\n        \"sending_regular\": 0,\n        \"sending_regular_str\": \"0\",\n        \"sending_str\": \"0\"\n      }\n    ]\n  }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n  \"id\": 1236,\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"current_height\" : 1055,\n    \"current_state_hash\" : \"f287176bdd517e9c277778e4c012bf6a3e687dd614fc552a1ed22a3fee7d94f2\",\n    \"current_state_timestamp\": 1625060769,\n    \"prev_state_hash\" : \"bd39333a66a8b7cb3804b5978d42312c841dbfa03a1c31fc2f0627eeed6e43f2\",\n    \"is_in_sync\": true,\n    \"available\": 100500,\n    \"receiving\": 123,\n    \"sending\": 0,\n    \"maturing\": 50,\n    \"difficulty\": 2.93914,\n    \"totals\": [\n      {\n        \"asset_id\": 0,\n        \"available\": 117065840575291,\n        \"available_mp\": 0,\n        \"available_mp_str\": \"0\",\n        \"available_regular\": 117065840575291,\n        \"available_regular_str\": \"117065840575291\",\n        \"available_str\": \"117065840575291\",\n        \"change\": 0,\n        \"change_str\": \"0\",\n        \"locked\": 183629687500000,\n        \"locked_str\": \"183629687500000\",\n        \"maturing\": 183629687500000,\n        \"maturing_mp\": 0,\n        \"maturing_mp_str\": \"0\",\n        \"maturing_regular\": 183629687500000,\n        \"maturing_regular_str\": \"183629687500000\",\n        \"maturing_str\": \"183629687500000\",\n        \"receiving\": 0,\n        \"receiving_mp\": 0,\n        \"receiving_mp_str\": \"0\",\n        \"receiving_regular\": 0,\n        \"receiving_regular_str\": \"0\",\n        \"receiving_str\": \"0\",\n        \"sending\": 0,\n        \"sending_mp\": 0,\n        \"sending_mp_str\": \"0\",\n        \"sending_regular\": 0,\n        \"sending_regular_str\": \"0\",\n        \"sending_str\": \"0\"\n      },\n      {\n        \"asset_id\": 3,\n        \"available\": 4262500000,\n        \"available_mp\": 0,\n        \"available_mp_str\": \"0\",\n        \"available_regular\": 4262500000,\n        \"available_regular_str\": \"4262500000\",\n        \"available_str\": \"4262500000\",\n        \"change\": 0,\n        \"change_str\": \"0\",\n        \"locked\": 0,\n        \"locked_str\": \"0\",\n        \"maturing\": 0,\n        \"maturing_mp\": 0,\n        \"maturing_mp_str\": \"0\",\n        \"maturing_regular\": 0,\n        \"maturing_regular_str\": \"0\",\n        \"maturing_str\": \"0\",\n        \"receiving\": 0,\n        \"receiving_mp\": 0,\n        \"receiving_mp_str\": \"0\",\n        \"receiving_regular\": 0,\n        \"receiving_regular_str\": \"0\",\n        \"receiving_str\": \"0\",\n        \"sending\": 0,\n        \"sending_mp\": 0,\n        \"sending_mp_str\": \"0\",\n        \"sending_regular\": 0,\n        \"sending_regular_str\": \"0\",\n        \"sending_str\": \"0\"\n      }\n    ]\n  }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"totals"}]},{"type":"text","value":" is an array of totals per asset. Assets that are included in this array by default:"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"BEAM (asset id 0)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"All assets which have UTXOs."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"All owned assets, even if there is no UTXOs for the given asset."}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"available_regular"}]},{"type":"text","value":" available regular UTXOs wallet can spend"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"available_mp"}]},{"type":"text","value":" available max privacy (shielded) UTXOs wallet can spend"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"available"}]},{"type":"text","value":" sum of "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"available_regular"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"available_mp"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"receiving_regular"}]},{"type":"text","value":" regular UTXOs wallet is currently receiving"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"receiving_mp"}]},{"type":"text","value":" max privacy (shielded) UTXOs wallet is currently receiving"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"receiving"}]},{"type":"text","value":" sum of "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"receiving_regular"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"receiving_mp"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"sending_regular"}]},{"type":"text","value":" regular UTXOs wallet is currently sending"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"sending_mp"}]},{"type":"text","value":" max privacy (shielded) UTXOs wallet is currently sending"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"sending"}]},{"type":"text","value":" sum of "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"sending_regular"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"sending_mp"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"maturing_regular"}]},{"type":"text","value":" regular UTXOs currently maturing"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"maturing_mp"}]},{"type":"text","value":" max privacy (shielded) UTXOs currently maturing"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"maturing"}]},{"type":"text","value":" sum of "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"maturing_regular"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"maturing_mp"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"change"}]},{"type":"text","value":" change that is currently incoming to wallet"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"locked"}]},{"type":"text","value":" locked UTXOs, sum of "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"maturing_regular"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"maturing_mp"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"change"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Asset is included in the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"totals"}]},{"type":"text","value":" array even if all UTXOs are spent or if there are no UTXOs but asset is owned (issued by the wallet). In case when all the UTXOs are spent totals' fields except "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_id"}]},{"type":"text","value":" would be 0 (zero balance). To avoid getting assets with zero balance specify "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"\"params\": {\"nz_totals\": true}"}]},{"type":"text","value":". BEAM is always included, even if balance is 0 and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"nz_totals"}]},{"type":"text","value":" is true."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Maximum asset emission is 2"},{"type":"element","tag":"sup","props":{},"children":[{"type":"text","value":"128"}]},{"type":"text","value":"-1. To ensure compatibility with JavaScript raw number ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"available"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"maturing"}]},{"type":"text","value":" &c.) returned only if it is less than or equal to "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Number.MAX_SAFE_INTEGER"}]},{"type":"text","value":" (2"},{"type":"element","tag":"sup","props":{},"children":[{"type":"text","value":"53"}]},{"type":"text","value":"-1). If total's value is greater than "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Number.MAX_SAFE_INTEGER"}]},{"type":"text","value":" only corresponding string representation ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"xxxx_str"}]},{"type":"text","value":") is returned."}]},{"type":"element","tag":"h2","props":{"id":"get_utxo"},"children":[{"type":"text","value":"get_utxo"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Get list of all unlocked UTXOs."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 6,\n    \"method\":\"get_utxo\",\n    \"params\" :\n    {\n        \"count\": 10,\n        \"skip\": 0,\n        \"sort\": {\n            \"field\": \"amount\",\n            \"direction\": \"asc\"\n        }\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 6,\n    \"method\":\"get_utxo\",\n    \"params\" :\n    {\n        \"count\": 10,\n        \"skip\": 0,\n        \"sort\": {\n            \"field\": \"amount\",\n            \"direction\": \"asc\"\n        }\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"count"}]},{"type":"text","value":" number of UTXO to get, by default all the UTXOs are returned."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"skip"}]},{"type":"text","value":" number of UTXO to skip, default is "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"0"}]},{"type":"text","value":"."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"sort.field"}]},{"type":"text","value":" name of field to sort. Available values are \"id|asset_id|amount|type|maturity|createTxId|spentTxId|status|status_string\""}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"sort.direction"}]},{"type":"text","value":" sorting directions \"asc\" or \"desc\""}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\": \"2.0\", \n    \"id\": 6,\n    \"result\":\n    [{\n        \"id\": 123,\n        \"asset_id\": 0,\n        \"amount\": 12345,\n        \"maturity\": 60,\n        \"type\": \"mine\",\n        \"createTxId\": \"10c4b760c842433cb58339a0fafef3db\",\n        \"spentTxId\": \"\",\n        \"status\": 2,\n        \"status_string\": \"maturing\"\n    }]\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\": \"2.0\", \n    \"id\": 6,\n    \"result\":\n    [{\n        \"id\": 123,\n        \"asset_id\": 0,\n        \"amount\": 12345,\n        \"maturity\": 60,\n        \"type\": \"mine\",\n        \"createTxId\": \"10c4b760c842433cb58339a0fafef3db\",\n        \"spentTxId\": \"\",\n        \"status\": 2,\n        \"status_string\": \"maturing\"\n    }]\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_id"}]},{"type":"text","value":" asset id if coin belongs to an asset and 0 for BEAM coins. By default method returns only BEAM coins. To get asset coins assets should be enabled ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--enable_assets"}]},{"type":"text","value":")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"filter.asset_id"}]},{"type":"text","value":" return only asset coins with given asset id, 0 for BEAM coins. Present starting from v5.0. Assets should be enabled."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1236,\n    \"method\": \"get_utxo\",\n    \"params\": {\n        \"assets\": true,\n        \"filter\": {\n            \"asset_id\": 1\n        }\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1236,\n    \"method\": \"get_utxo\",\n    \"params\": {\n        \"assets\": true,\n        \"filter\": {\n            \"asset_id\": 1\n        }\n    }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n  \"id\": 1236,\n  \"jsonrpc\": \"2.0\",\n  \"result\": [\n    {\n      \"amount\": 500000000,\n      \"asset_id\": 1,\n      \"createTxId\": \"fd705ce6f8c345309c865dc93de9fec5\",\n      \"id\": \"0000000183ed2de4d94e6bd56e6f726d01000000000000001dcd6500\",\n      \"maturity\": 19,\n      \"spentTxId\": \"\",\n      \"status\": 1,\n      \"status_string\": \"available\",\n      \"type\": \"norm\"\n    }\n  ]\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n  \"id\": 1236,\n  \"jsonrpc\": \"2.0\",\n  \"result\": [\n    {\n      \"amount\": 500000000,\n      \"asset_id\": 1,\n      \"createTxId\": \"fd705ce6f8c345309c865dc93de9fec5\",\n      \"id\": \"0000000183ed2de4d94e6bd56e6f726d01000000000000001dcd6500\",\n      \"maturity\": 19,\n      \"spentTxId\": \"\",\n      \"status\": 1,\n      \"status_string\": \"available\",\n      \"type\": \"norm\"\n    }\n  ]\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"type"}]},{"type":"text","value":" can be "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"fees"}]},{"type":"text","value":" (comission), "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"mine"}]},{"type":"text","value":" (coinbase), "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"norm"}]},{"type":"text","value":" (usual coin, for example received via transaction), "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"chng"}]},{"type":"text","value":" (change), "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"shld"}]},{"type":"text","value":" (shielded)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"status"}]},{"type":"text","value":" can be "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"unavailable (0)"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"available (1)"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"maturing (2)"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"outgoing (3)"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"incoming (4)"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"spent (6)"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"consumed (7)"}]},{"type":"text","value":". "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"consumed"}]},{"type":"text","value":" status is returned only for asset coins starting from v5.0. It means that the coin has been burned (consumed)."}]}]},{"type":"element","tag":"h2","props":{"id":"get_asset_info"},"children":[{"type":"text","value":"get_asset_info"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Read asset info from local database. Asset info can be refreshed using "},{"type":"element","tag":"a","props":{"href":"#tx_asset_info"},"children":[{"type":"text","value":"tx_asset_info"}]},{"type":"text","value":". It is also automatically refreshed during asset transactions (but not always) to ensure that asset operations are safe. This method can be called even if assets are not enabled."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 6,\n    \"method\": \"get_asset_info\",\n    \"params\" :\n    {\n        \"asset_id\": 1\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 6,\n    \"method\": \"get_asset_info\",\n    \"params\" :\n    {\n        \"asset_id\": 1\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_id"}]},{"type":"text","value":" asset id to retrieve info about. Can be used for any asset even if you don't own it."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_meta"}]},{"type":"text","value":" obsolete and removed since v6.0"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"id\": 1236,\n    \"jsonrpc\": \"2.0\",\n    \"result\": \n    {\n        \"asset_id\": 1,\n        \"emission\": 2000000000,\n        \"emission_str\": \"2000000000\",\n        \"isOwned\": 1,\n        \"lockHeight\": 39,\n        \"metadata\": \"STD:SCH_VER=1;N=YAN Coin;SN=YAN;UN=Yan;NTHUN=Yanik\",\n        \"metadata_kv\": true,\n        \"metadata_pairs\": {\n            \"N\": \"YAN Coin\",\n            \"NTHUN\": \"Yanik\",\n            \"SCH_VER\": \"1\",\n            \"SN\": \"YAN\",\n            \"UN\": \"Yan\"\n        },\n        \"metadata_std_min\": true,\n        \"metadata_std\": true,\n        \"ownerId\": \"0ae08a49e018e98177774294107dc033790b87538e54a20e99c6b98f1dbd39ce\",\n        \"refreshHeight\": 927\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"id\": 1236,\n    \"jsonrpc\": \"2.0\",\n    \"result\": \n    {\n        \"asset_id\": 1,\n        \"emission\": 2000000000,\n        \"emission_str\": \"2000000000\",\n        \"isOwned\": 1,\n        \"lockHeight\": 39,\n        \"metadata\": \"STD:SCH_VER=1;N=YAN Coin;SN=YAN;UN=Yan;NTHUN=Yanik\",\n        \"metadata_kv\": true,\n        \"metadata_pairs\": {\n            \"N\": \"YAN Coin\",\n            \"NTHUN\": \"Yanik\",\n            \"SCH_VER\": \"1\",\n            \"SN\": \"YAN\",\n            \"UN\": \"Yan\"\n        },\n        \"metadata_std_min\": true,\n        \"metadata_std\": true,\n        \"ownerId\": \"0ae08a49e018e98177774294107dc033790b87538e54a20e99c6b98f1dbd39ce\",\n        \"refreshHeight\": 927\n    }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Returns full asset info or "},{"type":"element","tag":"a","props":{"href":"#api-error-codes"},"children":[{"type":"text","value":"error code"}]},{"type":"text","value":"."}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_id"}]},{"type":"text","value":" asset id"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"metadata"}]},{"type":"text","value":" asset metadata"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"emission"}]},{"type":"text","value":" & "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"emission_str"}]},{"type":"text","value":" total asset emission. Maximum asset emission is 2"},{"type":"element","tag":"sup","props":{},"children":[{"type":"text","value":"128"}]},{"type":"text","value":"-1. To ensure compatibility with JavaScript raw number returned only if it is less than or equal to "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Number.MAX_SAFE_INTEGER"}]},{"type":"text","value":" (2"},{"type":"element","tag":"sup","props":{},"children":[{"type":"text","value":"53"}]},{"type":"text","value":"-1). If asset emission is greater than "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Number.MAX_SAFE_INTEGER"}]},{"type":"text","value":" only corresponding string representation is returned."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"isOwned"}]},{"type":"text","value":" is 1 if you own this asset"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"lockHeight"}]},{"type":"text","value":" last block when asset emission turned to/from 0."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"refreshHeight"}]},{"type":"text","value":" block at which asset information has been received. Please note, that all returned fields are valid only for this and previous blocks. In next blocks emission might change, asset become unregistered &c. Use "},{"type":"element","tag":"a","props":{"href":"#tx_asset_info"},"children":[{"type":"text","value":"tx_asset_info"}]},{"type":"text","value":" to retrieve the most recent info."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"metadata_kv"}]},{"type":"text","value":" true if metadata was parsed successfully as key=value pairs"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"metadata_pairs"}]},{"type":"text","value":" present only if "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"metadata_kv"}]},{"type":"text","value":" is true, provides actual parsed key=value pairs"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"metadata_std_min"}]},{"type":"text","value":" true if metadata is k=v pairs and minimal necessary pairs are present, i.e. N(Name), UN(Unit Name), SN(Short Name), NTHUN (Smallest Unit Name)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"metadata_std"}]},{"type":"text","value":" true if metadata is k=v pairs and fully adheres to the "},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/wiki/Asset-Descriptor-v1.0","rel":["nofollow"]},"children":[{"type":"text","value":"Asset Descriptor Specification"}]}]}]},{"type":"element","tag":"h2","props":{"id":"generate_tx_id"},"children":[{"type":"text","value":"generate_tx_id"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Generates ID for a transaction."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 2,\n    \"method\":\"generate_tx_id\"\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 2,\n    \"method\":\"generate_tx_id\"\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 2,\n    \"result\":\"10c4b760c842433cb58339a0fafef3db\"\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 2,\n    \"result\":\"10c4b760c842433cb58339a0fafef3db\"\n}\n"}]}]},{"type":"element","tag":"h2","props":{"id":"export_payment_proof"},"children":[{"type":"text","value":"export_payment_proof"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Exports payment proof for given "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"txId"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"method\": \"export_payment_proof\", \n    \"params\":\n    {\n        \"txId\" : \"a13525181c0d45b0a4c5c1a697c8a7b8\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"method\": \"export_payment_proof\", \n    \"params\":\n    {\n        \"txId\" : \"a13525181c0d45b0a4c5c1a697c8a7b8\"\n    }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"result\": \n    {\n        \"payment_proof\": \"8009f28991ef543253c8b6a2caf15cf99e23fb9c2b4ca30dc463c8ceb354d7979e80ef7d4255dd5e885200648abe5826d8e0ba0157d3e8cf9c42dcc8258b036986e50400371789ee82afc25ee29c9c57bcb1018b725a3a94c0ceb1fa7984ea13de4982553e0d78d925a362982182a971e654857b8e407e7ad2e9cb72b2b8228812f8ec50435351000c94e2c85996e9527d9b0c90a1843205a7ec8f99fa534083e5f1d055d9f53894\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"result\": \n    {\n        \"payment_proof\": \"8009f28991ef543253c8b6a2caf15cf99e23fb9c2b4ca30dc463c8ceb354d7979e80ef7d4255dd5e885200648abe5826d8e0ba0157d3e8cf9c42dcc8258b036986e50400371789ee82afc25ee29c9c57bcb1018b725a3a94c0ceb1fa7984ea13de4982553e0d78d925a362982182a971e654857b8e407e7ad2e9cb72b2b8228812f8ec50435351000c94e2c85996e9527d9b0c90a1843205a7ec8f99fa534083e5f1d055d9f53894\"\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"payment_proof"}]},{"type":"text","value":" is a hex-encoded byte buffer which contains information about sender, receiver, amount and kernel, signed with receiver's private key. This info could be unpacked and verified using "},{"type":"element","tag":"a","props":{"href":"#verify_payment_proof"},"children":[{"type":"text","value":"verify_payment_proof"}]},{"type":"text","value":" method by the third party. Receiver creates a payment proof in order give receiver an ability to proof that actual payment was made. Sender does not sign transaction if receiver does not provide him this evidence."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"N.B."}]},{"type":"text","value":" Payment proofs for asset transaction are supported starting from v5.0. These proofs cannot be verified by earlier clients/APIs versions. Regular BEAM payment proofs generated by the latest clients/APIs still would be accepted by earlier versions of clients/APIs."}]},{"type":"element","tag":"h2","props":{"id":"verify_payment_proof"},"children":[{"type":"text","value":"verify_payment_proof"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Verifies "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"payment_proof"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"method\":\"verify_payment_proof\", \n    \"params\":\n    {\n        \"payment_proof\" : \"8009f28991ef543253c8b6a2caf15cf99e23fb9c2b4ca30dc463c8ceb354d7979e80ef7d4255dd5e885200648abe5826d8e0ba0157d3e8cf9c42dcc8258b036986e50400371789ee82afc25ee29c9c57bcb1018b725a3a94c0ceb1fa7984ea13de4982553e0d78d925a362982182a971e654857b8e407e7ad2e9cb72b2b8228812f8ec50435351000c94e2c85996e9527d9b0c90a1843205a7ec8f99fa534083e5f1d055d9f53894\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"method\":\"verify_payment_proof\", \n    \"params\":\n    {\n        \"payment_proof\" : \"8009f28991ef543253c8b6a2caf15cf99e23fb9c2b4ca30dc463c8ceb354d7979e80ef7d4255dd5e885200648abe5826d8e0ba0157d3e8cf9c42dcc8258b036986e50400371789ee82afc25ee29c9c57bcb1018b725a3a94c0ceb1fa7984ea13de4982553e0d78d925a362982182a971e654857b8e407e7ad2e9cb72b2b8228812f8ec50435351000c94e2c85996e9527d9b0c90a1843205a7ec8f99fa534083e5f1d055d9f53894\"\n    }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"result\": \n    {\n        \"is_valid\": true,\n        \"asset_id\": 0,\n        \"sender\":   \"9f28991ef543253c8b6a2caf15cf99e23fb9c2b4ca30dc463c8ceb354d7979e\",\n        \"receiver\": \"ef7d4255dd5e885200648abe5826d8e0ba0157d3e8cf9c42dcc8258b036986e5\",\n        \"amount\":   2300000000,\n        \"kernel\":   \"ee82afc25ee29c9c57bcb1018b725a3a94c0ceb1fa7984ea13de4982553e0d78\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"result\": \n    {\n        \"is_valid\": true,\n        \"asset_id\": 0,\n        \"sender\":   \"9f28991ef543253c8b6a2caf15cf99e23fb9c2b4ca30dc463c8ceb354d7979e\",\n        \"receiver\": \"ef7d4255dd5e885200648abe5826d8e0ba0157d3e8cf9c42dcc8258b036986e5\",\n        \"amount\":   2300000000,\n        \"kernel\":   \"ee82afc25ee29c9c57bcb1018b725a3a94c0ceb1fa7984ea13de4982553e0d78\"\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"is_valid"}]},{"type":"text","value":" true if signature is valid,"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"sender"}]},{"type":"text","value":" sender's SBBS address"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"receiver"}]},{"type":"text","value":" is a receiver's SBBS address, is it is used to verify the signature"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"amount"}]},{"type":"text","value":" amount sent by the transaction in groth"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_id"}]},{"type":"text","value":" asset id of the transaction, 0 for BEAM. Returned starting from v5.0"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"kernel"}]},{"type":"text","value":" id of the kernel of this transaction"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"N.B."}]},{"type":"text","value":" v5.0+ APIs accept proofs generated by older versions."}]},{"type":"element","tag":"h2","props":{"id":"invoke_contract"},"children":[{"type":"text","value":"invoke_contract"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Available from v6.0, can be used after Fork3."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Invokes application shader. Only application/wallet side shaders are accepted. Use CLI to call a contract shader."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\": \"2.0\", \n    \"id\": 2,\n    \"method\": \"invoke_contract\", \n    \"params\":\n    {\n        \"contract\": [123, 123, 123],\n        \"args\": \"role=manager,action=view\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\": \"2.0\", \n    \"id\": 2,\n    \"method\": \"invoke_contract\", \n    \"params\":\n    {\n        \"contract\": [123, 123, 123],\n        \"args\": \"role=manager,action=view\"\n    }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"OR"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\": \"2.0\", \n    \"id\": 2,\n    \"method\": \"invoke_contract\", \n    \"params\":\n    {\n        \"contract_file\": \"....\",\n        \"args\": \"role=manager,action=view\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\": \"2.0\", \n    \"id\": 2,\n    \"method\": \"invoke_contract\", \n    \"params\":\n    {\n        \"contract_file\": \"....\",\n        \"args\": \"role=manager,action=view\"\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"contract"}]},{"type":"text","value":" contract code as raw bytes array, optional."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"contract_file"}]},{"type":"text","value":" file name to read contract code from, optional. Absolute or relative to the executable CWD."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"args"}]},{"type":"text","value":" contract arguments, optional. Depends on the called shader. Consult shader-specific docs for details."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"create_tx"}]},{"type":"text","value":" bool, pass "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"true"}]},{"type":"text","value":" create transaction automatically if contract wants it and return "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"txid"}]},{"type":"text","value":". Pass false to avoid transaction creation, get raw tx data that can be passed to "},{"type":"element","tag":"a","props":{"href":"#process_invoke_data"},"children":[{"type":"text","value":"process_invoke_data"}]},{"type":"text","value":" later. By default is "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"true"}]},{"type":"text","value":"."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"contract"}]},{"type":"text","value":" parameter always takes precedence over the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"contract_file"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n  \"id\": 1236,\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"output\": \"{\\\"contracts\\\": [{\\\"cid\\\": \\\"2b105519ee7e170d92abffbc1eb5426d4e20910af2f54bcee43eb84c74dcfa4b\\\",\\\"Height\\\": 27004},{\\\"cid\\\": \n               \\\"55df189ac5c1f9b982fa34fb8050f005c331203023816ddbb2d641a96a3fcb2a\\\",\\\"Height\\\": 27001},{\\\"cid\\\": \n               \\\"6add645863c29d9dc43ab9987af870cb91fd0dfb4e26ae09ca97ac8ff5372f6e\\\",\\\"Height\\\": 532}]}\"\n  }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n  \"id\": 1236,\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"output\": \"{\\\"contracts\\\": [{\\\"cid\\\": \\\"2b105519ee7e170d92abffbc1eb5426d4e20910af2f54bcee43eb84c74dcfa4b\\\",\\\"Height\\\": 27004},{\\\"cid\\\": \n               \\\"55df189ac5c1f9b982fa34fb8050f005c331203023816ddbb2d641a96a3fcb2a\\\",\\\"Height\\\": 27001},{\\\"cid\\\": \n               \\\"6add645863c29d9dc43ab9987af870cb91fd0dfb4e26ae09ca97ac8ff5372f6e\\\",\\\"Height\\\": 532}]}\"\n  }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"output"}]},{"type":"text","value":" contract output. Depends on the called shader. Can be empty"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"txid"}]},{"type":"text","value":" transaction created by contract (if any)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"raw_data"}]},{"type":"text","value":" raw data returned by the contract based on which transaction can be created using "},{"type":"element","tag":"a","props":{"href":"#process_invoke_data"},"children":[{"type":"text","value":"process_invoke_data"}]}]}]},{"type":"element","tag":"h3","props":{"id":"shader-errors"},"children":[{"type":"text","value":"Shader Errors"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Please notice that API returns errors only if there is an API error (no shader code, parse error &c.). If there was an error inside the shader itself API call would be successful and shader output should be checked. For example:"}]},{"type":"element","tag":"h3","props":{"id":"code-caching"},"children":[{"type":"text","value":"Code caching"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"If there was an invoke_shader before "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"contract"}]},{"type":"text","value":"/"},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"contract_file"}]},{"type":"text","value":" can be omitted. In this case contract code from previous call would be used. In case of wallet_api code caching works on per-connection level. In case of applications caching works on per-application level."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1236,\n    \"method\": \"invoke_contract\",\n    \"params\": {\n        \"contract_file\": \"./faucetManager.wasm\",\n        \"args\": \"role=manager\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1236,\n    \"method\": \"invoke_contract\",\n    \"params\": {\n        \"contract_file\": \"./faucetManager.wasm\",\n        \"args\": \"role=manager\"\n    }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n  \"id\": 1236,\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"output\": \"{\\\"error\\\": \\\"Action not specified\\\"}\"\n  }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n  \"id\": 1236,\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"output\": \"{\\\"error\\\": \\\"Action not specified\\\"}\"\n  }\n}\n"}]}]},{"type":"element","tag":"h3","props":{"id":"requests-queue"},"children":[{"type":"text","value":"Requests queue"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Before v6.1 it was not allowed to make the next contract call before the previous one is completed. As per v6.1 priority queue is added for "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"invoke_contract"}]},{"type":"text","value":" requests. If previous call is not completed new "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"invoke_shader"}]},{"type":"text","value":" call would be added to the queue and executed later. New parameters were added to control the queue:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"priority"}]},{"type":"text","value":" - integer, 0 by default. Calls with higher priority would be placed on top of the queue"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"unique"}]},{"type":"text","value":" - integer, 0 by default. If there is already an "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"invoke_contract"}]},{"type":"text","value":" call with the same "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"unique"}]},{"type":"text","value":" queued or being executed the new call will not be added to the queue. This might be necessary to avoid queue congestion with multiple status while previous requests are still pending. Value of 0 is ignored and doesn't trigger call omission."}]}]},{"type":"element","tag":"h2","props":{"id":"process_invoke_data"},"children":[{"type":"text","value":"process_invoke_data"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Creates transaction requested by a contract"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1236,\n    \"method\": \"process_invoke_data\",\n    \"params\": {\n        \"data\": [123, 123, 123]\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1236,\n    \"method\": \"process_invoke_data\",\n    \"params\": {\n        \"data\": [123, 123, 123]\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"data"}]},{"type":"text","value":" raw invoke data bytes array returned by "},{"type":"element","tag":"a","props":{"href":"#invoke_contract"},"children":[{"type":"text","value":"invoke_contract"}]},{"type":"text","value":", mandatory"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n  \"id\": 1236,\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"txid\": \"...\"\n  }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n  \"id\": 1236,\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"txid\": \"...\"\n  }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"txid"}]},{"type":"text","value":" contract transaction id created as a result of the call"}]}]},{"type":"element","tag":"h2","props":{"id":"calc_change"},"children":[{"type":"text","value":"calc_change"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Calculates change for given "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"amount"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"method\":\"calc_change\", \n    \"params\":\n    {\n        \"amount\" : 1234,\n        \"asset_id\": 2,\n        \"fee\": 10000,\n        \"is_push_transaction\": true\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"method\":\"calc_change\", \n    \"params\":\n    {\n        \"amount\" : 1234,\n        \"asset_id\": 2,\n        \"fee\": 10000,\n        \"is_push_transaction\": true\n    }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"result\":\n    {\n        \"asset_change\": 12,\n        \"asset_change_str\": \"12\",\n        \"change\": 12,\n        \"change_str\": \"12\",\n        \"explicit_fee\": 1100000,\n        \"explicit_fee_str\": \"1100000\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"result\":\n    {\n        \"asset_change\": 12,\n        \"asset_change_str\": \"12\",\n        \"change\": 12,\n        \"change_str\": \"12\",\n        \"explicit_fee\": 1100000,\n        \"explicit_fee_str\": \"1100000\"\n    }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"where"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"amount"}]},{"type":"text","value":" is a requested amount we are going to send"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_id"}]},{"type":"text","value":" optional asset id of the requested amount. Default is 0 (BEAM). This method can be used for non-BEAM coins even if assets are not enabled."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"fee"}]},{"type":"text","value":" explicit fee in GROTHs chosen by the user"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_change"}]},{"type":"text","value":" change amount for requested "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_id"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"change"}]},{"type":"text","value":" change in for BEAM. "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_change"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"change"}]},{"type":"text","value":" are equal if "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_id == 0"}]},{"type":"text","value":", i.e. BEAM"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"explicit_fee"}]},{"type":"text","value":" the fee which should be used"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"is_push_transaction"}]},{"type":"text","value":" "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"true"}]},{"type":"text","value":" if we are going to push transaction output into the shielded pool."}]}]},{"type":"element","tag":"h2","props":{"id":"block_details"},"children":[{"type":"text","value":"block_details"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Returns block header from blockchain"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\": \"2.0\", \n    \"id\": 2,\n    \"method\": \"block_details\", \n    \"params\":\n    {\n        \"height\": 200\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\": \"2.0\", \n    \"id\": 2,\n    \"method\": \"block_details\", \n    \"params\":\n    {\n        \"height\": 200\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"height"}]},{"type":"text","value":" height of block."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"result\":\n    {\n        \"block_hash\": \"7aec20e5b56706d57a4dca1df4a4d3104dbdbf8d6005499845558b7a32694d02\",\n        \"chainwork\": \"000000000000000000000000000000000000000000000000000000c503b09ac0\",\n        \"definition\": \"0d3f4e63743760c6397d76086e1cc0ebe749c121206c8150738dc84edcd30092\",\n        \"difficulty\": 118.4594497680664,\n        \"height\": 200,\n        \"kernels\": \"705cdfa154eec35e4b4b0e2163ff9c81f8f035641ee4b0b95c3f3c5b0f170ffe\",\n        \"packed_difficulty\": 114939514,\n        \"pow\": \"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004f04638c1f4cee1b7ad6d906\",\n        \"previous_block\": \"d195cc69fbd2b402cc33ecb303f5391f0010f34ee059f30b908ed10f0fe5a255\",\n        \"rules_hash\": \"340bbeabc390f481df1f84aedf0b679c1c7ed1f0e28d4340c9c49b4c41611f85\",\n        \"timestamp\": 1619598150\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"result\":\n    {\n        \"block_hash\": \"7aec20e5b56706d57a4dca1df4a4d3104dbdbf8d6005499845558b7a32694d02\",\n        \"chainwork\": \"000000000000000000000000000000000000000000000000000000c503b09ac0\",\n        \"definition\": \"0d3f4e63743760c6397d76086e1cc0ebe749c121206c8150738dc84edcd30092\",\n        \"difficulty\": 118.4594497680664,\n        \"height\": 200,\n        \"kernels\": \"705cdfa154eec35e4b4b0e2163ff9c81f8f035641ee4b0b95c3f3c5b0f170ffe\",\n        \"packed_difficulty\": 114939514,\n        \"pow\": \"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004f04638c1f4cee1b7ad6d906\",\n        \"previous_block\": \"d195cc69fbd2b402cc33ecb303f5391f0010f34ee059f30b908ed10f0fe5a255\",\n        \"rules_hash\": \"340bbeabc390f481df1f84aedf0b679c1c7ed1f0e28d4340c9c49b4c41611f85\",\n        \"timestamp\": 1619598150\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"block_hash"}]},{"type":"text","value":" is a block hash"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"chainwork"}]},{"type":"text","value":" is a chainwork"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"definition"}]},{"type":"text","value":" is a definition"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"difficulty"}]},{"type":"text","value":" is a difficulty"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"height"}]},{"type":"text","value":" is a block height"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"kernels"}]},{"type":"text","value":" is a kernels"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"packed_difficulty"}]},{"type":"text","value":" is a packed difficulty"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"pow"}]},{"type":"text","value":" is a pow"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"previous_block"}]},{"type":"text","value":" is hash of previous block"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"rules_hash"}]},{"type":"text","value":" is a rules hash"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"timestamp"}]},{"type":"text","value":" is a timestamp"}]}]},{"type":"element","tag":"h2","props":{"id":"get_version"},"children":[{"type":"text","value":"get_version"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Returns version info"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\": \"2.0\", \n    \"id\": 1,\n    \"method\": \"get_version\"\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\": \"2.0\", \n    \"id\": 1,\n    \"method\": \"get_version\"\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n  \"id\": 1,\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"api_version\": \"6.1\",\n    \"api_version_major\": 6,\n    \"api_version_minor\": 1,\n    \"beam_branch_name\": \"master\",\n    \"beam_commit_hash\": \"f7dcfab5341e84a58918f2fde0fc2be9c09264eb\",\n    \"beam_version\": \"6.1.11462\",\n    \"beam_version_major\": 6,\n    \"beam_version_minor\": 1,\n    \"beam_version_rev\": 11462\n  }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n  \"id\": 1,\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"api_version\": \"6.1\",\n    \"api_version_major\": 6,\n    \"api_version_minor\": 1,\n    \"beam_branch_name\": \"master\",\n    \"beam_commit_hash\": \"f7dcfab5341e84a58918f2fde0fc2be9c09264eb\",\n    \"beam_version\": \"6.1.11462\",\n    \"beam_version_major\": 6,\n    \"beam_version_minor\": 1,\n    \"beam_version_rev\": 11462\n  }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"api_xxx"}]},{"type":"text","value":" API version info"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"beam_xxx"}]},{"type":"text","value":" BEAM version info on top of which API is built ("},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam","rel":["nofollow"]},"children":[{"type":"text","value":"https://github.com/BeamMW/beam"}]},{"type":"text","value":")"}]}]},{"type":"element","tag":"h2","props":{"id":"ipfs_add"},"children":[{"type":"text","value":"ipfs_add"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Add data to IPFS local node and pin it. Action is automatically cancelled on API restart."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"method\": \"ipfs_add\", \n    \"params\":\n    {\n        \"data\" : [1, 2, 3],\n        \"pin\"  : true,\n        \"timeout\": 5000\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"method\": \"ipfs_add\", \n    \"params\":\n    {\n        \"data\" : [1, 2, 3],\n        \"pin\"  : true,\n        \"timeout\": 5000\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"data"}]},{"type":"text","value":" raw uint8 bytes array to store in IPFS"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"pin"}]},{"type":"text","value":" optional bool, if "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"true"}]},{"type":"text","value":" data would also be pinned to the local IPFS node. Default is "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"true"}]},{"type":"text","value":"."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"timeout"}]},{"type":"text","value":" timeout in milliseconds. By default method doesn't timeout"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"result\" : \n    {\n        \"hash\" : \"QmWWQSuPMS6aXCbZKpEjPHPUZN2NjB3YrhJTHsV4X3vb2t\",\n        \"pinned\": true\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"result\" : \n    {\n        \"hash\" : \"QmWWQSuPMS6aXCbZKpEjPHPUZN2NjB3YrhJTHsV4X3vb2t\",\n        \"pinned\": true\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"hash"}]},{"type":"text","value":" IPFS hash of the added data"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"pinned"}]},{"type":"text","value":" bool flag that indicates if data has been pinned or just added"}]}]},{"type":"element","tag":"h2","props":{"id":"ipfs_hash"},"children":[{"type":"text","value":"ipfs_hash"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Calculate IPFS hash (CID) of the data"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"method\": \"ipfs_hash\", \n    \"params\":\n    {\n        \"data\" : [1, 2, 3],\n        \"timeout\": 5000\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"method\": \"ipfs_hash\", \n    \"params\":\n    {\n        \"data\" : [1, 2, 3],\n        \"timeout\": 5000\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"data"}]},{"type":"text","value":" raw uint8 bytes to calculate hash of"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"timeout"}]},{"type":"text","value":" timeout in milliseconds. By default method doesn't timeout"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"result\" : \n    {\n        \"hash\" : \"QmWWQSuPMS6aXCbZKpEjPHPUZN2NjB3YrhJTHsV4X3vb2t\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"result\" : \n    {\n        \"hash\" : \"QmWWQSuPMS6aXCbZKpEjPHPUZN2NjB3YrhJTHsV4X3vb2t\"\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"hash"}]},{"type":"text","value":" IPFS hash of the data"}]}]},{"type":"element","tag":"h2","props":{"id":"ipfs_get"},"children":[{"type":"text","value":"ipfs_get"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Get data from IPFS by hash. Action is automatically cancelled on API restart. May take a lot of time if data is not present on the local node."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"method\": \"ipfs_get\", \n    \"params\":\n    {\n        \"hash\" : \"QmWWQSuPMS6aXCbZKpEjPHPUZN2NjB3YrhJTHsV4X3vb2t\",\n        \"timeout\": 5000\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"method\": \"ipfs_get\", \n    \"params\":\n    {\n        \"hash\" : \"QmWWQSuPMS6aXCbZKpEjPHPUZN2NjB3YrhJTHsV4X3vb2t\",\n        \"timeout\": 5000\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"hash"}]},{"type":"text","value":" IPFS has of the data to get"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"timeout"}]},{"type":"text","value":" timeout in milliseconds. By default method doesn't timeout"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"result\" : \n    {\n        \"hash\" : \"QmWWQSuPMS6aXCbZKpEjPHPUZN2NjB3YrhJTHsV4X3vb2t\",\n        \"data\" : [1, 2, 3]\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"result\" : \n    {\n        \"hash\" : \"QmWWQSuPMS6aXCbZKpEjPHPUZN2NjB3YrhJTHsV4X3vb2t\",\n        \"data\" : [1, 2, 3]\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"hash"}]},{"type":"text","value":" IPFS hash of the data"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"data"}]},{"type":"text","value":" actual data as uint8 bytes array"}]}]},{"type":"element","tag":"h2","props":{"id":"ipfs_pin"},"children":[{"type":"text","value":"ipfs_pin"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Pin data to the local node. If data is not stored in the local node it is discovered and downloaded ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"ipfs_get"}]},{"type":"text","value":"). Action is automatically cancelled at API restart. May take a lot of time."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"method\": \"ipfs_pin\", \n    \"params\":\n    {\n        \"hash\" : \"QmWWQSuPMS6aXCbZKpEjPHPUZN2NjB3YrhJTHsV4X3vb2t\",\n        \"timeout\": 5000\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"method\": \"ipfs_pin\", \n    \"params\":\n    {\n        \"hash\" : \"QmWWQSuPMS6aXCbZKpEjPHPUZN2NjB3YrhJTHsV4X3vb2t\",\n        \"timeout\": 5000\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"hash"}]},{"type":"text","value":" IPFS has of the data to pin"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"timeout"}]},{"type":"text","value":" timeout in milliseconds. By default method doesn't timeout"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"result\" : \n    {\n        \"hash\" : \"QmWWQSuPMS6aXCbZKpEjPHPUZN2NjB3YrhJTHsV4X3vb2t\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"result\" : \n    {\n        \"hash\" : \"QmWWQSuPMS6aXCbZKpEjPHPUZN2NjB3YrhJTHsV4X3vb2t\"\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"hash"}]},{"type":"text","value":" IPFS hash of the pinned data"}]}]},{"type":"element","tag":"h2","props":{"id":"ipfs_unpin"},"children":[{"type":"text","value":"ipfs_unpin"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Unpin data from the local node. Data is not deleted and will be available via "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"ipfs_get"}]},{"type":"text","value":" until garbage collected."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"method\": \"ipfs_unpin\", \n    \"params\":\n    {\n        \"hash\" : \"QmWWQSuPMS6aXCbZKpEjPHPUZN2NjB3YrhJTHsV4X3vb2t\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"method\": \"ipfs_unpin\", \n    \"params\":\n    {\n        \"hash\" : \"QmWWQSuPMS6aXCbZKpEjPHPUZN2NjB3YrhJTHsV4X3vb2t\"\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"hash"}]},{"type":"text","value":" IPFS has of the data to unpin"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"result\" : \n    {\n        \"hash\" : \"QmWWQSuPMS6aXCbZKpEjPHPUZN2NjB3YrhJTHsV4X3vb2t\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"result\" : \n    {\n        \"hash\" : \"QmWWQSuPMS6aXCbZKpEjPHPUZN2NjB3YrhJTHsV4X3vb2t\"\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"hash"}]},{"type":"text","value":" IPFS hash of the unpinned data"}]}]},{"type":"element","tag":"h2","props":{"id":"ipfs_gc"},"children":[{"type":"text","value":"ipfs_gc"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Garbage collect IPFS storage, i.e. delete unpinned data until storage has at least 10% of free space (default settings). May take a lot of time. In desktop client gc is run automatically every hour."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"method\": \"ipfs_gc\", \n    \"params\":\n    {\n        \"timeout\" : 60000\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"method\": \"ipfs_gc\", \n    \"params\":\n    {\n        \"timeout\" : 60000\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"timeout"}]},{"type":"text","value":" timeout in milliseconds. By default method doesn't timeout"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"result\" : \n    {\n        \"result\" : true\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"result\" : \n    {\n        \"result\" : true\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"result"}]},{"type":"text","value":" success flag"}]}]},{"type":"element","tag":"h2","props":{"id":"ev_subunsub"},"children":[{"type":"text","value":"ev_subunsub"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Subscribe/unsubscribe to API events."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\": \"2.0\", \n    \"id\": 1,\n    \"method\": \"ev_subunsub\",\n    \"params\": {\n        \"ev_sync_progress\": true,\n        \"ev_system_state\": true,\n        \"ev_assets_changed\": true,\n        \"ev_addrs_changed\": true,\n        \"ev_utxos_changed\": true,\n        \"ev_txs_changed\": true\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\": \"2.0\", \n    \"id\": 1,\n    \"method\": \"ev_subunsub\",\n    \"params\": {\n        \"ev_sync_progress\": true,\n        \"ev_system_state\": true,\n        \"ev_assets_changed\": true,\n        \"ev_addrs_changed\": true,\n        \"ev_utxos_changed\": true,\n        \"ev_txs_changed\": true\n    }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n  \"id\": 1,\n  \"jsonrpc\": \"2.0\",\n  \"result\": true\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n  \"id\": 1,\n  \"jsonrpc\": \"2.0\",\n  \"result\": true\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"ev_xxxx"}]},{"type":"text","value":" corresponding event name, optional, bool. True subscribes to the event, false unsubscribes. All "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"ev_xxxx"}]},{"type":"text","value":" paramaters are optional. If event is not specified its subscription state remains unchanged. Immediately after subscription corresponding event is generated providing the latest state."}]}]},{"type":"element","tag":"h2","props":{"id":"ev_sync_progress"},"children":[{"type":"text","value":"ev_sync_progress"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Event is generated while wallet is being synced with the blockchain. Let's consider the following situation:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"current wallet height is 105"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"block 106 has been just mined"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In this case the following sequence of events would be generated:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"1. <--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n  \"id\": \"ev_sync_progress\",\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"current_height\": 105,\n    \"current_state_hash\": \"76de9b9bcbc1b1a4775d54f2b98c3edc222f5a86698209200e459043fe218a29\",\n    \"current_state_timestamp\": 1625146903,\n    \"sync_requests_done\": 0,\n    \"sync_requests_total\": 2,\n    \"is_in_sync\": true,\n    \"prev_state_hash\": \"3a2a3bd55615d3de86b86c920f715ad47973be7dbc2fde2d4c39b937e96177e1\",\n    \"tip_height\": 106,\n    \"tip_prev_state_hash\": \"76de9b9bcbc1b1a4775d54f2b98c3edc222f5a86698209200e459043fe218a29\",\n    \"tip_state_hash\": \"7bb40b96ee4606c3e8f085aa633b66c14f041178142eb1077521621cde47e3b1\",\n    \"tip_state_timestamp\": 1625146951\n  }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n  \"id\": \"ev_sync_progress\",\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"current_height\": 105,\n    \"current_state_hash\": \"76de9b9bcbc1b1a4775d54f2b98c3edc222f5a86698209200e459043fe218a29\",\n    \"current_state_timestamp\": 1625146903,\n    \"sync_requests_done\": 0,\n    \"sync_requests_total\": 2,\n    \"is_in_sync\": true,\n    \"prev_state_hash\": \"3a2a3bd55615d3de86b86c920f715ad47973be7dbc2fde2d4c39b937e96177e1\",\n    \"tip_height\": 106,\n    \"tip_prev_state_hash\": \"76de9b9bcbc1b1a4775d54f2b98c3edc222f5a86698209200e459043fe218a29\",\n    \"tip_state_hash\": \"7bb40b96ee4606c3e8f085aa633b66c14f041178142eb1077521621cde47e3b1\",\n    \"tip_state_timestamp\": 1625146951\n  }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In event 1 API tells that there is 1 new block to sync ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"tip_height"}]},{"type":"text","value":" - "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"current_height"}]},{"type":"text","value":" is 1) and nothing has been yet done ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"sync_requests_done"}]},{"type":"text","value":" is 0). Current height is 105 ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"current_height"}]},{"type":"text","value":"), target height is 106 ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"tip_height"}]},{"type":"text","value":") and our wallet is still in a 'synce tolerance range' ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"is_in_sync"}]},{"type":"text","value":" is true). If "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"is_in_sync"}]},{"type":"text","value":" is false all the requested/pending transaction would be delayed until the wallet is synced."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"2. <--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n  \"id\": \"ev_sync_progress\",\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"current_height\": 105,\n    \"current_state_hash\": \"76de9b9bcbc1b1a4775d54f2b98c3edc222f5a86698209200e459043fe218a29\",\n    \"current_state_timestamp\": 1625146903,\n    \"sync_requests_done\": 1,\n    \"sync_requests_total\": 2,\n    \"is_in_sync\": true,\n    \"prev_state_hash\": \"3a2a3bd55615d3de86b86c920f715ad47973be7dbc2fde2d4c39b937e96177e1\",\n    \"tip_height\": 106,\n    \"tip_prev_state_hash\": \"76de9b9bcbc1b1a4775d54f2b98c3edc222f5a86698209200e459043fe218a29\",\n    \"tip_state_hash\": \"7bb40b96ee4606c3e8f085aa633b66c14f041178142eb1077521621cde47e3b1\",\n    \"tip_state_timestamp\": 1625146951\n  }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n  \"id\": \"ev_sync_progress\",\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"current_height\": 105,\n    \"current_state_hash\": \"76de9b9bcbc1b1a4775d54f2b98c3edc222f5a86698209200e459043fe218a29\",\n    \"current_state_timestamp\": 1625146903,\n    \"sync_requests_done\": 1,\n    \"sync_requests_total\": 2,\n    \"is_in_sync\": true,\n    \"prev_state_hash\": \"3a2a3bd55615d3de86b86c920f715ad47973be7dbc2fde2d4c39b937e96177e1\",\n    \"tip_height\": 106,\n    \"tip_prev_state_hash\": \"76de9b9bcbc1b1a4775d54f2b98c3edc222f5a86698209200e459043fe218a29\",\n    \"tip_state_hash\": \"7bb40b96ee4606c3e8f085aa633b66c14f041178142eb1077521621cde47e3b1\",\n    \"tip_state_timestamp\": 1625146951\n  }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In event 2 API tells that 1 sync request has been processed ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"sync_requests_done"}]},{"type":"text","value":" is 1). It can be block body downloaded, utxo received &c. Since "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"sync_requests_total"}]},{"type":"text","value":" is 2 not everything is received, some requests are still pending."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"3. <--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n  \"id\": \"ev_sync_progress\",\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"current_height\": 105,\n    \"current_state_hash\": \"76de9b9bcbc1b1a4775d54f2b98c3edc222f5a86698209200e459043fe218a29\",\n    \"current_state_timestamp\": 1625146903,\n    \"sync_requests_done\": 2,\n    \"sync_requests_total\": 2,\n    \"is_in_sync\": true,\n    \"prev_state_hash\": \"3a2a3bd55615d3de86b86c920f715ad47973be7dbc2fde2d4c39b937e96177e1\",\n    \"tip_height\": 106,\n    \"tip_prev_state_hash\": \"76de9b9bcbc1b1a4775d54f2b98c3edc222f5a86698209200e459043fe218a29\",\n    \"tip_state_hash\": \"7bb40b96ee4606c3e8f085aa633b66c14f041178142eb1077521621cde47e3b1\",\n    \"tip_state_timestamp\": 1625146951\n  }\n}\n\nIn event 3 API tells that 2 sync events have been receive (`sync_requests_done` is 2) and since `sync_requests_total` is 2 too we can conclude that everything is downloaded now though not yet processed and wallet state has not yet moved to the next block (current_height is still not changed and is 105).\n\n`4. <--`\n```json\n{\n  \"id\": \"ev_sync_progress\",\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"current_height\": 106,\n    \"current_state_hash\": \"7bb40b96ee4606c3e8f085aa633b66c14f041178142eb1077521621cde47e3b1\",\n    \"current_state_timestamp\": 1625146903,\n    \"sync_requests_done\": 2,\n    \"sync_requests_total\": 2,\n    \"is_in_sync\": true,\n    \"prev_state_hash\": \"76de9b9bcbc1b1a4775d54f2b98c3edc222f5a86698209200e459043fe218a29\",\n    \"tip_height\": 106,\n    \"tip_prev_state_hash\": \"76de9b9bcbc1b1a4775d54f2b98c3edc222f5a86698209200e459043fe218a29\",\n    \"tip_state_hash\": \"7bb40b96ee4606c3e8f085aa633b66c14f041178142eb1077521621cde47e3b1\",\n    \"tip_state_timestamp\": 1625146951\n  }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n  \"id\": \"ev_sync_progress\",\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"current_height\": 105,\n    \"current_state_hash\": \"76de9b9bcbc1b1a4775d54f2b98c3edc222f5a86698209200e459043fe218a29\",\n    \"current_state_timestamp\": 1625146903,\n    \"sync_requests_done\": 2,\n    \"sync_requests_total\": 2,\n    \"is_in_sync\": true,\n    \"prev_state_hash\": \"3a2a3bd55615d3de86b86c920f715ad47973be7dbc2fde2d4c39b937e96177e1\",\n    \"tip_height\": 106,\n    \"tip_prev_state_hash\": \"76de9b9bcbc1b1a4775d54f2b98c3edc222f5a86698209200e459043fe218a29\",\n    \"tip_state_hash\": \"7bb40b96ee4606c3e8f085aa633b66c14f041178142eb1077521621cde47e3b1\",\n    \"tip_state_timestamp\": 1625146951\n  }\n}\n\nIn event 3 API tells that 2 sync events have been receive (`sync_requests_done` is 2) and since `sync_requests_total` is 2 too we can conclude that everything is downloaded now though not yet processed and wallet state has not yet moved to the next block (current_height is still not changed and is 105).\n\n`4. <--`\n```json\n{\n  \"id\": \"ev_sync_progress\",\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"current_height\": 106,\n    \"current_state_hash\": \"7bb40b96ee4606c3e8f085aa633b66c14f041178142eb1077521621cde47e3b1\",\n    \"current_state_timestamp\": 1625146903,\n    \"sync_requests_done\": 2,\n    \"sync_requests_total\": 2,\n    \"is_in_sync\": true,\n    \"prev_state_hash\": \"76de9b9bcbc1b1a4775d54f2b98c3edc222f5a86698209200e459043fe218a29\",\n    \"tip_height\": 106,\n    \"tip_prev_state_hash\": \"76de9b9bcbc1b1a4775d54f2b98c3edc222f5a86698209200e459043fe218a29\",\n    \"tip_state_hash\": \"7bb40b96ee4606c3e8f085aa633b66c14f041178142eb1077521621cde47e3b1\",\n    \"tip_state_timestamp\": 1625146951\n  }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In event 4 API tells that the wallet state is moved to the last tip ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"sync_requests_total"}]},{"type":"text","value":" == "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"sync_requests_done"}]},{"type":"text","value":" == 0 AND "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"tip_state_hash"}]},{"type":"text","value":" == "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"current_state_hash"}]},{"type":"text","value":" AND "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"tip_height"}]},{"type":"text","value":" == "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"current_height"}]},{"type":"text","value":")."}]},{"type":"element","tag":"h2","props":{"id":"ev_system_state"},"children":[{"type":"text","value":"ev_system_state"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Generated when wallet moves to the next state, for example when new block is mined and wallet has acknowledged and processed this fact or when new block is delivered during the sync."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n  \"id\": \"ev_system_state\",\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"current_height\": 113738,\n    \"current_state_hash\": \"4bbf9eb9cc409ce17c49cc7952edfed7583e8636e3e5d84b2034779034cb439c\",\n    \"current_state_timestamp\": 1625663362,\n    \"is_in_sync\": true,\n    \"prev_state_hash\": \"4995999f065eb5f04687fe9a43b93d7e344e99d17f2e2703260904f70aabfbd0\",\n    \"tip_height\": 113738,\n    \"tip_prev_state_hash\": \"4995999f065eb5f04687fe9a43b93d7e344e99d17f2e2703260904f70aabfbd0\",\n    \"tip_state_hash\": \"4bbf9eb9cc409ce17c49cc7952edfed7583e8636e3e5d84b2034779034cb439c\",\n    \"tip_state_timestamp\": 1625663362\n  }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n  \"id\": \"ev_system_state\",\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"current_height\": 113738,\n    \"current_state_hash\": \"4bbf9eb9cc409ce17c49cc7952edfed7583e8636e3e5d84b2034779034cb439c\",\n    \"current_state_timestamp\": 1625663362,\n    \"is_in_sync\": true,\n    \"prev_state_hash\": \"4995999f065eb5f04687fe9a43b93d7e344e99d17f2e2703260904f70aabfbd0\",\n    \"tip_height\": 113738,\n    \"tip_prev_state_hash\": \"4995999f065eb5f04687fe9a43b93d7e344e99d17f2e2703260904f70aabfbd0\",\n    \"tip_state_hash\": \"4bbf9eb9cc409ce17c49cc7952edfed7583e8636e3e5d84b2034779034cb439c\",\n    \"tip_state_timestamp\": 1625663362\n  }\n}\n"}]}]},{"type":"element","tag":"h2","props":{"id":"ev_addrs_changed"},"children":[{"type":"text","value":"ev_addrs_changed"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Event is generated when any address is changed/removed/updated &c."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n  \"id\": \"ev_addrs_changed\",\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n      \"change\": 3,\n      \"change_str\": \"reset\",\n      \"addrs\": [\n          {\n              \"address\": \"8xQnvWwS78RsbXmvV1wm2Spkye76z5FfiZH2zB3Jdw2BgWqUf4MC2StLVYrM4LvrWsMdY24b5hok4XvEoTBmHoaWBcEvr8nWTY259M4DnRJnRBgdNJEqRxenxRZox8DKnSoGiScV31dXLcxoRH2vFPcrxDsMGDAsyekVGz2NBPCwKFwCwTQwJpbhszCzxM843UMWQMxxoHADsTXnQnVW1Uc3quXgJdEr6tQ5dbgGWwYhNHU3f6mLFxNyxvrM7RfFY6LatPxJaC5M9o7Gg6TnpVc82GzVrKGNQoERJ9pFc7f6VM8w9dcn9CaC8yQvGevAnZqNTDEVpxAK81mJ3VFPUjbePWYQBdPQPm8AprTU1p4xhGHpbVaaTH967CJ86jAUXQEUrVq1wn4uPGLivhdnoWCdGujiZfwrfdPeQ698vm7Mh2HpooextAt4nzmSbEbPNtM5aCbeRyVv8BiEZ394WJCQaDRwHx2R3tfsHNCvTctCUy6NsonhmnSwvucY5KN71AtBGmxq8i\",\n              \"category\": \"\",\n              \"comment\": \"\",\n              \"create_time\": 1553174321,\n              \"duration\": 1520,\n              \"expired\": true,\n              \"own\": true,\n              \"own_id\": 16730903,\n              \"own_id_str\": \"16730903\",\n              \"identity\": \"2d8738b0424ad50631e902fab655e7e1795fbb8d92d47c4c8df7336870fcadf5\",\n              \"type\": \"offline\",\n              \"wallet_id\": \"22813f28ae198b1aa28aed3d0dc69a7c75f0a3c8b72c5950c997d0a569e74f90b61\"\n          },\n          {\n              \"address\": \"19e6ce53a137a1aa59ef19538c181acc5cd06cbfc7b985901345328786f8ae300a7\",\n              \"category\": \"\",\n              \"create_time\": 1553174321,\n              \"duration\": 1520,\n              \"expired\": true,\n              \"comment\": \"\",\n              \"own\": true,\n              \"own_id\": 16730903,\n              \"own_id_str\": \"16730903\",\n              \"identity\": \"9d99a7e3d1a6a73fbfa01efe63020135654f7b1561d65c74266fe9db6e80b096\",\n              \"type\": \"regular\",\n              \"wallet_id\": \"19e6ce53a137a1aa59ef19538c181acc5cd06cbfc7b985901345328786f8ae300a7\"\n          }\n      ]\n  }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n  \"id\": \"ev_addrs_changed\",\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n      \"change\": 3,\n      \"change_str\": \"reset\",\n      \"addrs\": [\n          {\n              \"address\": \"8xQnvWwS78RsbXmvV1wm2Spkye76z5FfiZH2zB3Jdw2BgWqUf4MC2StLVYrM4LvrWsMdY24b5hok4XvEoTBmHoaWBcEvr8nWTY259M4DnRJnRBgdNJEqRxenxRZox8DKnSoGiScV31dXLcxoRH2vFPcrxDsMGDAsyekVGz2NBPCwKFwCwTQwJpbhszCzxM843UMWQMxxoHADsTXnQnVW1Uc3quXgJdEr6tQ5dbgGWwYhNHU3f6mLFxNyxvrM7RfFY6LatPxJaC5M9o7Gg6TnpVc82GzVrKGNQoERJ9pFc7f6VM8w9dcn9CaC8yQvGevAnZqNTDEVpxAK81mJ3VFPUjbePWYQBdPQPm8AprTU1p4xhGHpbVaaTH967CJ86jAUXQEUrVq1wn4uPGLivhdnoWCdGujiZfwrfdPeQ698vm7Mh2HpooextAt4nzmSbEbPNtM5aCbeRyVv8BiEZ394WJCQaDRwHx2R3tfsHNCvTctCUy6NsonhmnSwvucY5KN71AtBGmxq8i\",\n              \"category\": \"\",\n              \"comment\": \"\",\n              \"create_time\": 1553174321,\n              \"duration\": 1520,\n              \"expired\": true,\n              \"own\": true,\n              \"own_id\": 16730903,\n              \"own_id_str\": \"16730903\",\n              \"identity\": \"2d8738b0424ad50631e902fab655e7e1795fbb8d92d47c4c8df7336870fcadf5\",\n              \"type\": \"offline\",\n              \"wallet_id\": \"22813f28ae198b1aa28aed3d0dc69a7c75f0a3c8b72c5950c997d0a569e74f90b61\"\n          },\n          {\n              \"address\": \"19e6ce53a137a1aa59ef19538c181acc5cd06cbfc7b985901345328786f8ae300a7\",\n              \"category\": \"\",\n              \"create_time\": 1553174321,\n              \"duration\": 1520,\n              \"expired\": true,\n              \"comment\": \"\",\n              \"own\": true,\n              \"own_id\": 16730903,\n              \"own_id_str\": \"16730903\",\n              \"identity\": \"9d99a7e3d1a6a73fbfa01efe63020135654f7b1561d65c74266fe9db6e80b096\",\n              \"type\": \"regular\",\n              \"wallet_id\": \"19e6ce53a137a1aa59ef19538c181acc5cd06cbfc7b985901345328786f8ae300a7\"\n          }\n      ]\n  }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"change"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"change_str"}]},{"type":"text","value":" - check "},{"type":"element","tag":"a","props":{"href":"#ev_xxx_changed-events"},"children":[{"type":"text","value":"ev_XXX_changed Events"}]},{"type":"text","value":" section for details"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"addrs"}]},{"type":"text","value":" - array of changed addresses"}]}]},{"type":"element","tag":"h2","props":{"id":"ev_assets_changed"},"children":[{"type":"text","value":"ev_assets_changed"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Event is generated when an asset is changed, i.e. metadata refreshed or metadata dropped due to the asset delisting or internal metadata processing error. Note that metadata can be dropped while an asset is still on chain but local metadata becomes invalid, for example in certain situations during rollback. If you have any asset coins in wallet but no valid metadata for a given asset id refresh it using "},{"type":"element","tag":"a","props":{"href":"#tx_asset_info"},"children":[{"type":"text","value":"tx_asset_info"}]},{"type":"text","value":". Metadata is also automatically refreshed during the send/receive/issue/consume operations if necessary."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Metadata dropped:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<-"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n  \"id\": \"ev_assets_changed\",\n  \"jsonrpc\": \"2.0\",\n  \"result\": { \n      \"change\": 1,\n      \"change_str\": \"removed\",\n      \"assets\": [\n         {\"asset_id\": 121}, \n         {\"asset_id\": 122} \n      ]\n  }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n  \"id\": \"ev_assets_changed\",\n  \"jsonrpc\": \"2.0\",\n  \"result\": { \n      \"change\": 1,\n      \"change_str\": \"removed\",\n      \"assets\": [\n         {\"asset_id\": 121}, \n         {\"asset_id\": 122} \n      ]\n  }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"change"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"change_str"}]},{"type":"text","value":" - check "},{"type":"element","tag":"a","props":{"href":"#ev_xxx_changed-events"},"children":[{"type":"text","value":"ev_XXX_changed Events"}]},{"type":"text","value":" section for details"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"assets"}]},{"type":"text","value":" - array of changed assets. In case of the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"removed"}]},{"type":"text","value":" event only asset ids are provided"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Metadata updated:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<-"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"id\": \"ev_assets_changed\",\n    \"jsonrpc\": \"2.0\",\n    \"result\": {\n        \"change\": 3,\n        \"change_str\": \"reset\",\n        \"assets\": [\n           {\n              \"asset_id\": 1,\n              \"emission\": 2000000000,\n              \"emission_str\": \"2000000000\",\n              \"isOwned\": 1,\n              \"lockHeight\": 39,\n              \"metadata\": \"STD:SCH_VER=1;N=YAN Coin;SN=YAN;UN=Yan;NTHUN=Yanik\",\n              \"metadata_kv\": true,\n              \"metadata_pairs\": {\n                 \"N\": \"YAN Coin\",\n                 \"NTHUN\": \"Yanik\",\n                 \"SCH_VER\": \"1\",\n                 \"SN\": \"YAN\",\n                 \"UN\": \"Yan\"\n              },\n              \"metadata_std_min\": true,\n              \"metadata_std\": true,\n              \"ownerId\": \"0ae08a49e018e98177774294107dc033790b87538e54a20e99c6b98f1dbd39ce\",\n              \"refreshHeight\": 927\n          }\n       ]\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"id\": \"ev_assets_changed\",\n    \"jsonrpc\": \"2.0\",\n    \"result\": {\n        \"change\": 3,\n        \"change_str\": \"reset\",\n        \"assets\": [\n           {\n              \"asset_id\": 1,\n              \"emission\": 2000000000,\n              \"emission_str\": \"2000000000\",\n              \"isOwned\": 1,\n              \"lockHeight\": 39,\n              \"metadata\": \"STD:SCH_VER=1;N=YAN Coin;SN=YAN;UN=Yan;NTHUN=Yanik\",\n              \"metadata_kv\": true,\n              \"metadata_pairs\": {\n                 \"N\": \"YAN Coin\",\n                 \"NTHUN\": \"Yanik\",\n                 \"SCH_VER\": \"1\",\n                 \"SN\": \"YAN\",\n                 \"UN\": \"Yan\"\n              },\n              \"metadata_std_min\": true,\n              \"metadata_std\": true,\n              \"ownerId\": \"0ae08a49e018e98177774294107dc033790b87538e54a20e99c6b98f1dbd39ce\",\n              \"refreshHeight\": 927\n          }\n       ]\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"change"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"change_str"}]},{"type":"text","value":" - check "},{"type":"element","tag":"a","props":{"href":"#ev_xxx_changed-events"},"children":[{"type":"text","value":"ev_XXX_changed Events"}]},{"type":"text","value":" section for details"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"assets"}]},{"type":"text","value":" array of changed assets, most up to date meta. Check "},{"type":"element","tag":"a","props":{"href":"#get_asset_info"},"children":[{"type":"text","value":"get_asset_info"}]},{"type":"text","value":" for more details"}]}]},{"type":"element","tag":"h2","props":{"id":"ev_utxos_changed"},"children":[{"type":"text","value":"ev_utxos_changed"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Event is generated when UTXOs/Coins are changed. If assets are not enabled event is generated only for BEAM UTXOs. To get asset UTXOs notifications assets should be enabled ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--enable_assets"}]},{"type":"text","value":")."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<-"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"id\": \"ev_utxos_changed\",\n    \"jsonrpc\": \"2.0\",\n    \"result\": {\n        \"change\": 3,\n        \"change_str\": \"reset\",\n        \"utxos\": [\n            {\n                \"id\": 123,\n                \"asset_id\": 0,\n                \"amount\": 12345,\n                \"maturity\": 60,\n                \"type\": \"mine\",\n                \"createTxId\": \"10c4b760c842433cb58339a0fafef3db\",\n                \"spentTxId\": \"\",\n                \"status\": 2,\n                \"status_string\": \"maturing\"\n            } \n        ]\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"id\": \"ev_utxos_changed\",\n    \"jsonrpc\": \"2.0\",\n    \"result\": {\n        \"change\": 3,\n        \"change_str\": \"reset\",\n        \"utxos\": [\n            {\n                \"id\": 123,\n                \"asset_id\": 0,\n                \"amount\": 12345,\n                \"maturity\": 60,\n                \"type\": \"mine\",\n                \"createTxId\": \"10c4b760c842433cb58339a0fafef3db\",\n                \"spentTxId\": \"\",\n                \"status\": 2,\n                \"status_string\": \"maturing\"\n            } \n        ]\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"change"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"change_str"}]},{"type":"text","value":" - check "},{"type":"element","tag":"a","props":{"href":"#ev_xxx_changed-events"},"children":[{"type":"text","value":"ev_XXX_changed Events"}]},{"type":"text","value":" section for details"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"coins"}]},{"type":"text","value":" array of changed utxos, most up to date meta. Check "},{"type":"element","tag":"a","props":{"href":"#get_utxo"},"children":[{"type":"text","value":"get_utxo"}]},{"type":"text","value":" for more details"}]}]},{"type":"element","tag":"h2","props":{"id":"ev_txs_changed"},"children":[{"type":"text","value":"ev_txs_changed"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Event is generated when transactions are changed."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<-"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"id\": \"ev_txs_changed\",\n    \"jsonrpc\": \"2.0\",\n    \"result\": {\n        \"change\": 3,\n        \"change_str\": \"reset\",\n        \"txs\": [\n            {\n                \"txId\" : \"10c4b760c842433cb58339a0fafef3db\",\n                \"asset_id\": 0,\n                \"comment\": \"\",\n                \"fee\": 100,\n                \"kernel\": \"0000000000000000000000000000000000000000000000000000000000000000\",\n                \"receiver\": \"472e17b0419055ffee3b3813b98ae671579b0ac0dcd6f1a23b11a75ab148cc67\",\n                \"sender\": \"f287176bdd517e9c277778e4c012bf6a3e687dd614fc552a1ed22a3fee7d94f2\",\n                \"status\": 4,\n                \"status_string\" : \"Failed\",\n                \"tx_type\": 0,\n                \"tx_type_string\": \"simple\",\n                \"failure_reason\" : \"No inputs\",\n                \"value\": 12342342,\n                \"create_time\" : 1551100217,\n                \"income\" : false,\n                \"rates\": [],\n                \"sender_identity\": \"a0a1ebbfeed5c312b309e32715c159e6b4548a6c6c3af25d0dbc16f37a1e9dd6\",\n                \"receiver_identity\": \"2d8738b0424ad50631e902fab655e7e1795fbb8d92d47c4c8df7336870fcadf5\",\n                \"token\": \"44pE7ySjZYjbLqwnTJANvr4BudMk1RdvWvaZnBvoCTwFnigfaTSza75bvw7x2GCa377Z4CSRRYZon44Ss9G9joSicNRAgts4u3pL6yV6jDQ6gAVJD9Scyr\"\n            } \n        ]\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"id\": \"ev_txs_changed\",\n    \"jsonrpc\": \"2.0\",\n    \"result\": {\n        \"change\": 3,\n        \"change_str\": \"reset\",\n        \"txs\": [\n            {\n                \"txId\" : \"10c4b760c842433cb58339a0fafef3db\",\n                \"asset_id\": 0,\n                \"comment\": \"\",\n                \"fee\": 100,\n                \"kernel\": \"0000000000000000000000000000000000000000000000000000000000000000\",\n                \"receiver\": \"472e17b0419055ffee3b3813b98ae671579b0ac0dcd6f1a23b11a75ab148cc67\",\n                \"sender\": \"f287176bdd517e9c277778e4c012bf6a3e687dd614fc552a1ed22a3fee7d94f2\",\n                \"status\": 4,\n                \"status_string\" : \"Failed\",\n                \"tx_type\": 0,\n                \"tx_type_string\": \"simple\",\n                \"failure_reason\" : \"No inputs\",\n                \"value\": 12342342,\n                \"create_time\" : 1551100217,\n                \"income\" : false,\n                \"rates\": [],\n                \"sender_identity\": \"a0a1ebbfeed5c312b309e32715c159e6b4548a6c6c3af25d0dbc16f37a1e9dd6\",\n                \"receiver_identity\": \"2d8738b0424ad50631e902fab655e7e1795fbb8d92d47c4c8df7336870fcadf5\",\n                \"token\": \"44pE7ySjZYjbLqwnTJANvr4BudMk1RdvWvaZnBvoCTwFnigfaTSza75bvw7x2GCa377Z4CSRRYZon44Ss9G9joSicNRAgts4u3pL6yV6jDQ6gAVJD9Scyr\"\n            } \n        ]\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"change"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"change_str"}]},{"type":"text","value":" - check "},{"type":"element","tag":"a","props":{"href":"#ev_xxx_changed-events"},"children":[{"type":"text","value":"ev_XXX_changed Events"}]},{"type":"text","value":" section for details"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"txs"}]},{"type":"text","value":" array of changed transactions. Check "},{"type":"element","tag":"a","props":{"href":"#tx_status"},"children":[{"type":"text","value":"tx_status"}]},{"type":"text","value":" for more details"}]}]},{"type":"element","tag":"h1","props":{"id":"ev_connection_changed"},"children":[{"type":"text","value":"ev_connection_changed"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Event is generated when wallet connection status is changed. For example, connected/disconnected to node, detected own node, etc."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n  \"id\": \"ev_connection_changed\",\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"node_connected\": true,\n    \"own_node\": false,\n  }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n  \"id\": \"ev_connection_changed\",\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"node_connected\": true,\n    \"own_node\": false,\n  }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"node_connected"}]},{"type":"text","value":" - if "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"true"}]},{"type":"text","value":" this means that wallet successfully connected at least to one node"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"own_node"}]},{"type":"text","value":" - "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"true"}]},{"type":"text","value":" if one of connected beam nodes has owner key"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"last_connect_error"}]},{"type":"text","value":" - this field contains a string with last connection error explanation"}]}]},{"type":"element","tag":"h2","props":{"id":"sign_message"},"children":[{"type":"text","value":"sign_message"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Generates Schnorr signature for a custom message with public key generated from the given key material."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"method\": \"sign_message\", \n    \"params\":\n    {\n        \"message\" : \"my message\",\n        \"key_material\": \"b51efe78d3e7c83c8dbc3d59d5e06b2bd770139e645bc19e50652632cbdd47d10000000047616c6c6572792d6b65792d6f776e6572\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"method\": \"sign_message\", \n    \"params\":\n    {\n        \"message\" : \"my message\",\n        \"key_material\": \"b51efe78d3e7c83c8dbc3d59d5e06b2bd770139e645bc19e50652632cbdd47d10000000047616c6c6572792d6b65792d6f776e6572\"\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"message"}]},{"type":"text","value":" user message to sign"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"key_material"}]},{"type":"text","value":" hex encoded key material for key generation. It could be retrieved from application shader"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"result\" : \n    {\n        \"signature\" : \"bb025df14a3f0539c4b89d5eeacb8510de5de49456cff3d4027323697469021b0022262fc2457523a28524e696ec3b2825e9c4558d78da2db165cd93b8710eb7b3\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"result\" : \n    {\n        \"signature\" : \"bb025df14a3f0539c4b89d5eeacb8510de5de49456cff3d4027323697469021b0022262fc2457523a28524e696ec3b2825e9c4558d78da2db165cd93b8710eb7b3\"\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"signature"}]},{"type":"text","value":" 65-byte hex encoded Schnorr signature. It signes SHA256(\"beam.signed.message\"+len(message)+message)"}]}]},{"type":"element","tag":"h2","props":{"id":"verify_signature"},"children":[{"type":"text","value":"verify_signature"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Verifies Schnorr signature for a custom message."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"method\": \"verify_signature\", \n    \"params\":\n    {\n        \"message\" : \"my message\",\n        \"public_key\": \"37b20c87f7b70c133e3c99e54e97b1febc51b61c0310a3a5ba6856748a67e9e601\",\n        \"signature\": \"bb025df14a3f0539c4b89d5eeacb8510de5de49456cff3d4027323697469021b0022262fc2457523a28524e696ec3b2825e9c4558d78da2db165cd93b8710eb7b3\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"method\": \"verify_signature\", \n    \"params\":\n    {\n        \"message\" : \"my message\",\n        \"public_key\": \"37b20c87f7b70c133e3c99e54e97b1febc51b61c0310a3a5ba6856748a67e9e601\",\n        \"signature\": \"bb025df14a3f0539c4b89d5eeacb8510de5de49456cff3d4027323697469021b0022262fc2457523a28524e696ec3b2825e9c4558d78da2db165cd93b8710eb7b3\"\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"message"}]},{"type":"text","value":" user message to sign"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"public_key"}]},{"type":"text","value":" 33 byte hex encoded public key"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"signature"}]},{"type":"text","value":" 65 byte hex encode signature"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"result\" : true\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"result\" : true\n}\n"}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"whats-new-in-v70","depth":2,"text":"What's new in v7.0","children":[{"id":"changed-methods","depth":3,"text":"Changed methods"},{"id":"new-methods","depth":3,"text":"New methods"},{"id":"new-events","depth":3,"text":"New events"},{"id":"changed-events","depth":3,"text":"Changed events"}]},{"id":"api-error-codes","depth":2,"text":"API Error codes"},{"id":"api-methods","depth":2,"text":"API Methods","children":[{"id":"general-methods","depth":3,"text":"General methods"},{"id":"ipfs-methods","depth":3,"text":"IPFS methods"},{"id":"swap-methods","depth":3,"text":"SWAP methods"}]},{"id":"api-events","depth":2,"text":"API events"},{"id":"async-notice","depth":2,"text":"Async Notice"},{"id":"create_address","depth":2,"text":"create_address"},{"id":"validate_address","depth":2,"text":"validate_address"},{"id":"addr_list","depth":2,"text":"addr_list","children":[{"id":"identity","depth":3,"text":"Identity"}]},{"id":"delete_address","depth":2,"text":"delete_address"},{"id":"edit_address","depth":2,"text":"edit_address"},{"id":"tx_send","depth":2,"text":"tx_send"},{"id":"tx_split","depth":2,"text":"tx_split"},{"id":"tx_asset_issue","depth":2,"text":"tx_asset_issue"},{"id":"tx_asset_consume","depth":2,"text":"tx_asset_consume"},{"id":"tx_asset_info","depth":2,"text":"tx_asset_info"},{"id":"tx_cancel","depth":2,"text":"tx_cancel"},{"id":"tx_delete","depth":2,"text":"tx_delete"},{"id":"tx_status","depth":2,"text":"tx_status"},{"id":"tx_list","depth":2,"text":"tx_list","children":[{"id":"important-the-recommended-number-of-confirmations-for-beam-transfers-is-80-blocks","depth":3,"text":"IMPORTANT: The recommended number of confirmations for Beam transfers is 80 blocks."},{"id":"tx-statuses","depth":3,"text":"TX statuses"},{"id":"tx-types","depth":3,"text":"TX types"}]},{"id":"wallet_status","depth":2,"text":"wallet_status"},{"id":"get_utxo","depth":2,"text":"get_utxo"},{"id":"get_asset_info","depth":2,"text":"get_asset_info"},{"id":"generate_tx_id","depth":2,"text":"generate_tx_id"},{"id":"export_payment_proof","depth":2,"text":"export_payment_proof"},{"id":"verify_payment_proof","depth":2,"text":"verify_payment_proof"},{"id":"invoke_contract","depth":2,"text":"invoke_contract","children":[{"id":"shader-errors","depth":3,"text":"Shader Errors"},{"id":"code-caching","depth":3,"text":"Code caching"},{"id":"requests-queue","depth":3,"text":"Requests queue"}]},{"id":"process_invoke_data","depth":2,"text":"process_invoke_data"},{"id":"calc_change","depth":2,"text":"calc_change"},{"id":"block_details","depth":2,"text":"block_details"},{"id":"get_version","depth":2,"text":"get_version"},{"id":"ipfs_add","depth":2,"text":"ipfs_add"},{"id":"ipfs_hash","depth":2,"text":"ipfs_hash"},{"id":"ipfs_get","depth":2,"text":"ipfs_get"},{"id":"ipfs_pin","depth":2,"text":"ipfs_pin"},{"id":"ipfs_unpin","depth":2,"text":"ipfs_unpin"},{"id":"ipfs_gc","depth":2,"text":"ipfs_gc"},{"id":"ev_subunsub","depth":2,"text":"ev_subunsub"},{"id":"ev_sync_progress","depth":2,"text":"ev_sync_progress"},{"id":"ev_system_state","depth":2,"text":"ev_system_state"},{"id":"ev_addrs_changed","depth":2,"text":"ev_addrs_changed"},{"id":"ev_assets_changed","depth":2,"text":"ev_assets_changed"},{"id":"ev_utxos_changed","depth":2,"text":"ev_utxos_changed"},{"id":"ev_txs_changed","depth":2,"text":"ev_txs_changed"},{"id":"sign_message","depth":2,"text":"sign_message"},{"id":"verify_signature","depth":2,"text":"verify_signature"}]}},"_type":"markdown","_id":"content:docs:core-tech:Beam-wallet-protocol-API-v7.0.md","_source":"content","_file":"docs/core-tech/Beam-wallet-protocol-API-v7.0.md","_extension":"md"},{"_path":"/docs/core-tech/beam-wallet-protocol-api-v7.1","_dir":"core-tech","_draft":false,"_partial":false,"_locale":"","title":"Beam Wallet Protocol API V71","description":"","body":{"type":"root","children":[{"type":"element","tag":"h2","props":{"id":"whats-new-in-v71"},"children":[{"type":"text","value":"What's new in v7.1"}]},{"type":"element","tag":"h3","props":{"id":"new-methods"},"children":[{"type":"text","value":"New methods"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#derive_id"},"children":[{"type":"text","value":"derive_id"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]}]},{"type":"element","tag":"h2","props":{"id":"api-error-codes"},"children":[{"type":"text","value":"API Error codes"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"List of the possible error codes (with messages):"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32600 InvalidJsonRpc (\"Invalid JSON-RPC.\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32601 NotFoundJsonRpc (\"Procedure not found.\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32602 InvalidParamsJsonRpc (\"Invalid parameters.\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32603 InternalErrorJsonRpc (\"Internal JSON-RPC error.\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32001 InvalidTxStatus (\"Invalid TX status.\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32002 UnknownApiKey (\"Unknown API key.\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32003 InvalidAddress (\"Invalid address.\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32004 InvalidTxId (\"Invalid transaction ID.\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32005 NotSupported (\"Feature is not supported\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32006 InvalidPaymentProof (\"Invalid payment proof provided\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32007 PaymentProofExportError (\"Cannot export payment proof\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32008 SwapFailToParseToken (\"Invalid swap token.\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32009 SwapFailToAcceptOwn (\"Can't accept own swap offer.\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32010 SwapNotEnoughtBeams (\"Not enought beams.\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32011 SwapFailToConnect (\"Doesn't have active connection.\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32012 DatabaseError (\"Database error\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32013 DatabaseNotFound (\"Database not found\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32014 ThrottleError (\"Requests limit exceeded\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32015 NotOpenedError (\"Wallet not opened\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32016 NoSwapsError (\"Swaps are not enabled\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32017 UnexpectedError (\"Unexpected call\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32018 ContractCompileError (\"Failed to compile contract\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32019 ContractError (\"Contract call failed\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32020 NotAllowedError (\"Call is not allowed\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32021 UserRejected (\"Call is rejected by user\")"}]}]},{"type":"element","tag":"h2","props":{"id":"api-methods"},"children":[{"type":"text","value":"API Methods"}]},{"type":"element","tag":"h3","props":{"id":"general-methods"},"children":[{"type":"text","value":"General methods"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#create_address"},"children":[{"type":"text","value":"create_address"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#delete_address"},"children":[{"type":"text","value":"delete_address"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#edit_address"},"children":[{"type":"text","value":"edit_address"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#addr_list"},"children":[{"type":"text","value":"addr_list"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#validate_address"},"children":[{"type":"text","value":"validate_address"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#tx_send"},"children":[{"type":"text","value":"tx_send"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#tx_asset_issue"},"children":[{"type":"text","value":"tx_asset_issue"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#tx_asset_consume"},"children":[{"type":"text","value":"tx_asset_consume"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#tx_asset_info"},"children":[{"type":"text","value":"tx_asset_info"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#tx_status"},"children":[{"type":"text","value":"tx_status"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#tx_split"},"children":[{"type":"text","value":"tx_split"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#tx_cancel"},"children":[{"type":"text","value":"tx_cancel"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#tx_delete"},"children":[{"type":"text","value":"tx_delete"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#get_utxo"},"children":[{"type":"text","value":"get_utxo"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#tx_list"},"children":[{"type":"text","value":"tx_list"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#wallet_status"},"children":[{"type":"text","value":"wallet_status"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#generate_tx_id"},"children":[{"type":"text","value":"generate_tx_id"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#export_payment_proof"},"children":[{"type":"text","value":"export_payment_proof"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#verify_payment_proof"},"children":[{"type":"text","value":"verify_payment_proof"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#get_asset_info"},"children":[{"type":"text","value":"get_asset_info"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#set_confirmations_count"},"children":[{"type":"text","value":"set_confirmations_count"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#get_confirmations_count"},"children":[{"type":"text","value":"get_confirmations_count"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#invoke_contract"},"children":[{"type":"text","value":"invoke_contract"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-async-orange"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#process_invoke_data"},"children":[{"type":"text","value":"process_invoke_data"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-async-orange"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#block_details"},"children":[{"type":"text","value":"block_details"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-async-orange"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#calc_change"},"children":[{"type":"text","value":"calc_change"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#get_version"},"children":[{"type":"text","value":"get_version"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#ev_subunsub"},"children":[{"type":"text","value":"ev_subunsub"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#sign_message"},"children":[{"type":"text","value":"sign_message"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#verify_signature"},"children":[{"type":"text","value":"verify_signature"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#derive_id"},"children":[{"type":"text","value":"derive_id"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]}]},{"type":"element","tag":"h3","props":{"id":"ipfs-methods"},"children":[{"type":"text","value":"IPFS methods"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#ipfs_add"},"children":[{"type":"text","value":"ipfs_add"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-async-orange"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#ipfs_hash"},"children":[{"type":"text","value":"ipfs_hash"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-async-orange"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#ipfs_get"},"children":[{"type":"text","value":"ipfs_get"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-async-orange"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#ipfs_pin"},"children":[{"type":"text","value":"ipfs_pin"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-async-orange"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#ipfs_unpin"},"children":[{"type":"text","value":"ipfs_unpin"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-async-orange"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#ipfs_gc"},"children":[{"type":"text","value":"ipfs_gc"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-async-orange"},"children":[]}]}]},{"type":"element","tag":"h3","props":{"id":"swap-methods"},"children":[{"type":"text","value":"SWAP methods"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"If you build "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"wallet-api"}]},{"type":"text","value":" with "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"BEAM_ATOMIC_SWAP_SUPPORT"}]},{"type":"text","value":" then you can use additional "},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/wiki/Beam-wallet-protocol-SWAP-API-(BETA)","rel":["nofollow"]},"children":[{"type":"text","value":"SWAP API methods"}]},{"type":"text","value":"."}]},{"type":"element","tag":"h2","props":{"id":"api-events"},"children":[{"type":"text","value":"API events"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Client should subscribe to events via "},{"type":"element","tag":"a","props":{"href":"#ev_subunsub"},"children":[{"type":"text","value":"ev_subunsub"}]},{"type":"text","value":" method. Events are generated by API when some entity/set of entities is changed. Every "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"changed"}]},{"type":"text","value":" event includes the following mandatory fields"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"change"}]},{"type":"text","value":" - numerical change type, possible values are\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"0"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"added"}]},{"type":"text","value":" - newly added entities are in the array"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"1"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"removed"}]},{"type":"text","value":" - removed entities are in the array"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"2"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"updated"}]},{"type":"text","value":" - updated entities are in the array"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"3"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"reset"}]},{"type":"text","value":" - discard all the previously stored entities, new ones are in the array"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"changestr"}]},{"type":"text","value":" - string representation of the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"change"}]},{"type":"text","value":" field, values are listed above"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"array of changed entities (name differs based on the entity type)"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#ev_sync_progress"},"children":[{"type":"text","value":"ev_sync_progress"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-async-orange"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#ev_system_state"},"children":[{"type":"text","value":"ev_system_state"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-async-orange"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#ev_addrs_changed"},"children":[{"type":"text","value":"ev_addrs_changed"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-async-orange"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#ev_assets_changed"},"children":[{"type":"text","value":"ev_assets_changed"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-async-orange"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#ev_utxos_changed"},"children":[{"type":"text","value":"ev_utxos_changed"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-async-orange"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#ev_txs_changed"},"children":[{"type":"text","value":"ev_txs_changed"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-async-orange"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#ev_connection_changed"},"children":[{"type":"text","value":"ev_connection_changed"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-async-orange"},"children":[]}]}]},{"type":"element","tag":"h2","props":{"id":"async-notice"},"children":[{"type":"text","value":"Async Notice"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Async method are asynchronous in nature. Please setup your API connection correspondingly (use keep alive HTTP or raw sockets)."}]},{"type":"element","tag":"h2","props":{"id":"create_address"},"children":[{"type":"text","value":"create_address"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Creates new receiver address."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\": \"2.0\", \n    \"id\": 1,\n    \"method\": \"create_address\", \n    \"params\":\n    {\n        \"type\": \"regular\",\n        \"expiration\": \"auto\",\n        \"comment\": \"John Smith\",\n        \"new_style_regular\" : true\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\": \"2.0\", \n    \"id\": 1,\n    \"method\": \"create_address\", \n    \"params\":\n    {\n        \"type\": \"regular\",\n        \"expiration\": \"auto\",\n        \"comment\": \"John Smith\",\n        \"new_style_regular\" : true\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"type"}]},{"type":"text","value":" the type of address, possible values are"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"regular"}]},{"type":"text","value":" - regular old-style address, default"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"offline"}]},{"type":"text","value":" - address offline transaction using Lelantus MW shielded pool, could be used more than once, there are no guaranties for extended privacy"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"max_privacy"}]},{"type":"text","value":" - address for guarantied maximum privacy transaction. Could be used only once."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"public_offline"}]},{"type":"text","value":" - address for donation, could be used as many times as you wish"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"regular_new"}]},{"type":"text","value":" - since v6.0, regular new-style address (base58), this address has SBBS internally"}]}]},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"Details of some address types are described "},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/wiki/Lelantus-CLI","rel":["nofollow"]},"children":[{"type":"text","value":"in this document"}]},{"type":"text","value":". Since v6.0, UI gives the sender an opportunity to choose between regular and offline send operation and the default address type provided via the \"receive\" UI dialog is an "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"offline"}]},{"type":"text","value":" address with "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"offline_payments=1"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"expiration"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"before v6.0 can be "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"expired/never/24h"}]},{"type":"text","value":"."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"since  v6.0 can be "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"expired/never/24h/auto"}]},{"type":"text","value":"."}]}]},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"Optional, by default address expires in 24 hours. "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"auto"}]},{"type":"text","value":" expiration means that address expires in 61 days (roughly 2 months). "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"auto"}]},{"type":"text","value":" addresses are renewed for another 2 months when any transaction is received with this address."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"comment"}]},{"type":"text","value":" - any string, optional."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"new_style_regular"}]},{"type":"text","value":" - if this flag is "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"true"}]},{"type":"text","value":" new style base58 address will be returned otherwise hexadecimal string will be returned, this option is ignored for the types different "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"regular"}]},{"type":"text","value":". "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"type=regular"}]},{"type":"text","value":" + "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"new_style_regular=true"}]},{"type":"text","value":" = "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"type=regular_new"}]},{"type":"text","value":"."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"offline_payments"}]},{"type":"text","value":" - number of offline payments embedded into an "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"offline"}]},{"type":"text","value":" address, default value is "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"1"}]},{"type":"text","value":". Valid only for the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"type=offline"}]},{"type":"text","value":"."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"All these address types could be passed as "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"address"}]},{"type":"text","value":" parameter of the "},{"type":"element","tag":"a","props":{"href":"#tx_send"},"children":[{"type":"text","value":"send"}]},{"type":"text","value":" method and/or used with the cli/UI. "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--enable_lelantus"}]},{"type":"text","value":" should be used in the command line of the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"wallet-api"}]},{"type":"text","value":" to enable sending/receiving using "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"offline"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"max_privacy"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"public_offline"}]},{"type":"text","value":" transactions. To generate "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"offline"}]},{"type":"text","value":"/"},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"max_privacy"}]},{"type":"text","value":"/"},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"public_offline"}]},{"type":"text","value":" addresses API must be connected to the own node (node with the wallet's viewer key)."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\" : \"2.0\", \n    \"id\" : 1,\n    \"result\" : \"472e17b0419055ffee3b3813b98ae671579b0ac0dcd6f1a23b11a75ab148cc67\"\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\" : \"2.0\", \n    \"id\" : 1,\n    \"result\" : \"472e17b0419055ffee3b3813b98ae671579b0ac0dcd6f1a23b11a75ab148cc67\"\n}\n"}]}]},{"type":"element","tag":"h2","props":{"id":"validate_address"},"children":[{"type":"text","value":"validate_address"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Just a simple validations, checks if the address isn't garbage and belongs to our elliptic curve. Also returns "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"is_mine == true"}]},{"type":"text","value":" if address is found in the local wallet DB."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"method\": \"validate_address\", \n    \"params\":\n    {\n        \"address\" : \"472e17b0419055ffee3b3813b98ae671579b0ac0dcd6f1a23b11a75ab148cc67\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"method\": \"validate_address\", \n    \"params\":\n    {\n        \"address\" : \"472e17b0419055ffee3b3813b98ae671579b0ac0dcd6f1a23b11a75ab148cc67\"\n    }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"result\" : \n    {\n        \"is_valid\" : true,\n        \"is_mine\" : false,\n        \"type\": \"offline\", \n        \"payments\": 3\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"result\" : \n    {\n        \"is_valid\" : true,\n        \"is_mine\" : false,\n        \"type\": \"offline\", \n        \"payments\": 3\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"type"}]},{"type":"text","value":" type of address. Check "},{"type":"element","tag":"a","props":{"href":"#create_address"},"children":[{"type":"text","value":"create_address"}]},{"type":"text","value":" for details"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"payments"}]},{"type":"text","value":" number of offline payments left for the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"offline"}]},{"type":"text","value":" address"}]}]},{"type":"element","tag":"h2","props":{"id":"addr_list"},"children":[{"type":"text","value":"addr_list"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Get addresses stored in the wallet database."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 8,\n    \"method\":\"addr_list\",\n    \"params\":\n    {\n        \"own\" : true\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 8,\n    \"method\":\"addr_list\",\n    \"params\":\n    {\n        \"own\" : true\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"own"}]},{"type":"text","value":", optional bool. If "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"true"}]},{"type":"text","value":" returns only own addresses, if "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"false"}]},{"type":"text","value":" returns only peer addresses. By default is false."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"id\": 8,\n    \"jsonrpc\": \"2.0\",\n    \"result\":\n    [{\n        \"address\": \"29510b33fac0cb20695fd3b836d835451e600c4224d8fb335dc1a68271deb9b6b5b\",\n        \"category\": \"\",\n        \"create_time\": 1553174321,\n        \"duration\": 1520,\n        \"expired\": true,\n        \"comment\": \"\",\n        \"own\": true,\n        \"own_id\": 16730903,\n        \"own_id_str\": \"16730903\",\n        \"identity\": \"2d8738b0424ad50631e902fab655e7e1795fbb8d92d47c4c8df7336870fcadf5\",\n        \"type\": \"regular\",\n        \"wallet_id\": \"29510b33fac0cb20695fd3b836d835451e600c4224d8fb335dc1a68271deb9b6b5b\"\n    }] \n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"id\": 8,\n    \"jsonrpc\": \"2.0\",\n    \"result\":\n    [{\n        \"address\": \"29510b33fac0cb20695fd3b836d835451e600c4224d8fb335dc1a68271deb9b6b5b\",\n        \"category\": \"\",\n        \"create_time\": 1553174321,\n        \"duration\": 1520,\n        \"expired\": true,\n        \"comment\": \"\",\n        \"own\": true,\n        \"own_id\": 16730903,\n        \"own_id_str\": \"16730903\",\n        \"identity\": \"2d8738b0424ad50631e902fab655e7e1795fbb8d92d47c4c8df7336870fcadf5\",\n        \"type\": \"regular\",\n        \"wallet_id\": \"29510b33fac0cb20695fd3b836d835451e600c4224d8fb335dc1a68271deb9b6b5b\"\n    }] \n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"address"}]},{"type":"text","value":" address that should be distributed among users and used to send funds to"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"own_id"}]},{"type":"text","value":" unsigned 64 bit index used to generate given address"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"own_id_str"}]},{"type":"text","value":" string representation of index used to generate given address (for JavaScript)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"identity"}]},{"type":"text","value":" identity linked to the given address. In UI and CLI called as \"wallet's signature\"."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"type"}]},{"type":"text","value":" address type. Consult "},{"type":"element","tag":"a","props":{"href":"#create_address"},"children":[{"type":"text","value":"create_address"}]},{"type":"text","value":" method for detailed description"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"wallet_id"}]},{"type":"text","value":" - Wallet ID (SBBS address) associated with the given address. This is the same as an SBBS address in CLI/UI. Note that not all address types have an associated SBBS address. For example non-own "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"max_privacy"}]},{"type":"text","value":" addresses do not have "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"wallet_id"}]},{"type":"text","value":". While own "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"max_privacy"}]},{"type":"text","value":" ones do it is recommended not to publish it. SBBS address can be safely published for "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"regular"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"regular_new"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"offline"}]},{"type":"text","value":" addresses."}]}]},{"type":"element","tag":"h3","props":{"id":"identity"},"children":[{"type":"text","value":"Identity"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Starting from version 4.2 we introduce an additional entity in order to make transfer more reliable. It is called "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"identity"}]},{"type":"text","value":". From version 6.1 in UI and CLI it  called as \"wallet's signature\". The main goal of "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"identity"}]},{"type":"text","value":" is to proof and ensure that transaction performs between claimed participants also it could be done using untrusted 3rd parties. The main scenario is "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"hardware wallet"}]},{"type":"text","value":" when host machine could be compromised, since it has ability to generate SBBS addresses, it can sign payment proof or accept transaction without need to ask hardware wallet about any secret, but if we give our identity to the other side (in addition to SBBS address), and this identity can be generated using hardware wallet only, then only hardware wallet can sign or approve transaction."}]},{"type":"element","tag":"h2","props":{"id":"delete_address"},"children":[{"type":"text","value":"delete_address"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Delete specific address from the wallet."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 8,\n    \"method\":\"delete_address\",\n    \"params\":\n    {\n        \"address\" : \"29510b33fac0cb20695fd3b836d835451e600c4224d8fb335dc1a68271deb9b6b5b\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 8,\n    \"method\":\"delete_address\",\n    \"params\":\n    {\n        \"address\" : \"29510b33fac0cb20695fd3b836d835451e600c4224d8fb335dc1a68271deb9b6b5b\"\n    }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"id\": 8,\n    \"jsonrpc\": \"2.0\",\n    \"result\": \"done\"\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"id\": 8,\n    \"jsonrpc\": \"2.0\",\n    \"result\": \"done\"\n}\n"}]}]},{"type":"element","tag":"h2","props":{"id":"edit_address"},"children":[{"type":"text","value":"edit_address"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Edit specific address. You can change the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"comment"}]},{"type":"text","value":" and/or "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"expiration"}]},{"type":"text","value":". Consult "},{"type":"element","tag":"a","props":{"href":"#create_address"},"children":[{"type":"text","value":"create_address"}]},{"type":"text","value":" for more details on acceptable values."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 8,\n    \"method\":\"edit_address\",\n    \"params\":\n    {\n        \"address\" : \"29510b33fac0cb20695fd3b836d835451e600c4224d8fb335dc1a68271deb9b6b5b\",\n        \"comment\" : \"John Smith\",\n        \"expiration\" : \"expired\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 8,\n    \"method\":\"edit_address\",\n    \"params\":\n    {\n        \"address\" : \"29510b33fac0cb20695fd3b836d835451e600c4224d8fb335dc1a68271deb9b6b5b\",\n        \"comment\" : \"John Smith\",\n        \"expiration\" : \"expired\"\n    }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"id\": 8,\n    \"jsonrpc\": \"2.0\",\n    \"result\": \"done\"\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"id\": 8,\n    \"jsonrpc\": \"2.0\",\n    \"result\": \"done\"\n}\n"}]}]},{"type":"element","tag":"h2","props":{"id":"tx_send"},"children":[{"type":"text","value":"tx_send"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Send BEAM or asset to a given address."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 2,\n    \"method\":\"tx_send\", \n    \"params\":\n    {\n        \"value\": 12342342,\n        \"fee\": 2,\n        \"from\": \"472e17b0419055ffee3b3813b98ae671579b0ac0dcd6f1a23b11a75ab148cc67\",\n        \"address\": \"472e17b0419055ffee3b3813b98ae671579b0ac0dcd6f1a23b11a75ab148cc67\",\n        \"comment\": \"thank you!\",\n        \"asset_id\": 1,\n        \"offline\": false\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 2,\n    \"method\":\"tx_send\", \n    \"params\":\n    {\n        \"value\": 12342342,\n        \"fee\": 2,\n        \"from\": \"472e17b0419055ffee3b3813b98ae671579b0ac0dcd6f1a23b11a75ab148cc67\",\n        \"address\": \"472e17b0419055ffee3b3813b98ae671579b0ac0dcd6f1a23b11a75ab148cc67\",\n        \"comment\": \"thank you!\",\n        \"asset_id\": 1,\n        \"offline\": false\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"value"}]},{"type":"text","value":" how much BEAM or asset to send in groth or asset groth."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"fee"}]},{"type":"text","value":" always in BEAM groth, optional. Omit for default fee."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"from"}]},{"type":"text","value":" own address, optional. If omitted new own address is generated and registered."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"address"}]},{"type":"text","value":" receiver's SBBS address or token. Token is an extension of SBBS address. It is a "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"base58"}]},{"type":"text","value":" encoded byte buffer which contains serialized parameters of a transaction. At least it contains SBBS "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"address"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"identity"}]},{"type":"text","value":"."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"comment"}]},{"type":"text","value":" transaction comment, optional."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"txId"}]},{"type":"text","value":" optional, you can provide your own transaction ID."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_id"}]},{"type":"text","value":" asset id to send, optional. Present starting from v5.0 and can be used only after Fork 2. Omit or set to 0 for BEAM transaction. If "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_id"}]},{"type":"text","value":" is non-zero assets must be enabled ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--enable_assets"}]},{"type":"text","value":") or method would fail."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"offline"}]},{"type":"text","value":" - since v6.0 offline addresses by default start the regular online transaction. Specify "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"\"offline\":true\""}]},{"type":"text","value":" to start an offline transaction. Applied only for "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"offline"}]},{"type":"text","value":" addresses and ignored for all other address types."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"You can preselect specific UTXOs for a transaction and fee via optional "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"coins"}]},{"type":"text","value":" array parameter like "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"\"coins\" : [\"00057e8eca5673476e6f726d000000000000015d3ef79800\", \"00057e8eca1233476e6f726d000000000000015d3ef79800\"]"}]},{"type":"text","value":". In case of asset transaction you can specify both asset coins (to send) and non-asset coins (to pay fee)."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 2,\n    \"result\":\n    {\n        \"txId\" : \"10c4b760c842433cb58339a0fafef3db\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 2,\n    \"result\":\n    {\n        \"txId\" : \"10c4b760c842433cb58339a0fafef3db\"\n    }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Returns transaction id or "},{"type":"element","tag":"a","props":{"href":"#api-error-codes"},"children":[{"type":"text","value":"error code"}]},{"type":"text","value":"."}]},{"type":"element","tag":"h2","props":{"id":"tx_split"},"children":[{"type":"text","value":"tx_split"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Creates a specific set of outputs with given values."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"NOTE: The "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"session"}]},{"type":"text","value":" parameter is not IMPLEMENTED and was removed!"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 5,\n    \"method\":\"tx_split\", \n    \"params\":\n    {\n        \"coins\" : [11, 12, 13, 50000000],\n        \"fee\" : 100,\n        \"asset_id\": 1\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 5,\n    \"method\":\"tx_split\", \n    \"params\":\n    {\n        \"coins\" : [11, 12, 13, 50000000],\n        \"fee\" : 100,\n        \"asset_id\": 1\n    }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 5,\n    \"result\":\n    {\n        \"txId\" : \"10c4b760c842433cb58339a0fafef3db\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 5,\n    \"result\":\n    {\n        \"txId\" : \"10c4b760c842433cb58339a0fafef3db\"\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"fee"}]},{"type":"text","value":" is always in BEAM groth. Omit for default fee."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"coins"}]},{"type":"text","value":" amounts of coins your want to have after split."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"txId"}]},{"type":"text","value":" optional, provide your own transaction ID."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_id"}]},{"type":"text","value":" asset id to split, optional. Omit or set to 0 to split BEAM coins. Present starting from v5.0 and can be used only after Fork 2. If "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_id"}]},{"type":"text","value":" is non-zero assets must be enabled ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--enable_assets"}]},{"type":"text","value":") or method would fail."}]}]},{"type":"element","tag":"h2","props":{"id":"tx_asset_issue"},"children":[{"type":"text","value":"tx_asset_issue"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Available from v5.0, can be used after Fork2. Assets must be enabled ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--enable_assets"}]},{"type":"text","value":") or method would fail."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Mints new asset coins. You must own the asset and info about the asset should be in a local database. Use "},{"type":"element","tag":"a","props":{"href":"#tx_asset_info"},"children":[{"type":"text","value":"tx_asset_info"}]},{"type":"text","value":" to retrieve the latest asset info if necessary. Asset minting is free. You need to pay only regular transaction fee."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\": \"2.0\", \n    \"id\": 2,\n    \"method\": \"tx_asset_issue\", \n    \"params\":\n    {\n        \"value\": 6,\n        \"asset_id\": 1\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\": \"2.0\", \n    \"id\": 2,\n    \"method\": \"tx_asset_issue\", \n    \"params\":\n    {\n        \"value\": 6,\n        \"asset_id\": 1\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"value"}]},{"type":"text","value":" how much asset to mint, in asset groth."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"fee"}]},{"type":"text","value":" transaction fee in BEAM groth. Omit to use default fee."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_id"}]},{"type":"text","value":" asset id of the asset to mint."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"txId"}]},{"type":"text","value":" optional,  provide your own transaction ID."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_meta"}]},{"type":"text","value":" obsolete and removed in v6.0."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"You can preselect specific BEAM UTXOs for a transaction fee by adding "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"coins"}]},{"type":"text","value":" array parameter, like "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"\"coins\" : [\"00057e8eca5673476e6f726d000000000000015d3ef79800\", \"00057e8eca1233476e6f726d000000000000015d3ef79800\"]"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\": \"2.0\", \n    \"id\": 2,\n    \"result\":\n    {\n        \"txId\" : \"10c4b760c842433cb58339a0fafef3db\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\": \"2.0\", \n    \"id\": 2,\n    \"result\":\n    {\n        \"txId\" : \"10c4b760c842433cb58339a0fafef3db\"\n    }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Returns transaction id or "},{"type":"element","tag":"a","props":{"href":"#api-error-codes"},"children":[{"type":"text","value":"error code"}]},{"type":"text","value":"."}]},{"type":"element","tag":"h2","props":{"id":"tx_asset_consume"},"children":[{"type":"text","value":"tx_asset_consume"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Available from v5.0, can be used after Fork2. Assets must be enabled ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--enable_assets"}]},{"type":"text","value":") or method would fail."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Burns existing asset coins. You must own the asset itself as well as asset coins to burn them. You cannot burn asset coins that belong to another wallet. Info about the asset should be in a local database. Use "},{"type":"element","tag":"a","props":{"href":"#tx_asset_info"},"children":[{"type":"text","value":"tx_asset_info"}]},{"type":"text","value":" to retrieve the latest asset info if necessary. Asset coins burning is absolutely free. You need to pay only regular transaction fee."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 2,\n    \"method\":\"tx_asset_consume\", \n    \"params\":\n    {\n        \"value\": 6,\n        \"asset_id\": 1\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 2,\n    \"method\":\"tx_asset_consume\", \n    \"params\":\n    {\n        \"value\": 6,\n        \"asset_id\": 1\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"value"}]},{"type":"text","value":" how much asset to burn, in asset groth."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"fee"}]},{"type":"text","value":" transaction fee in BEAM groth, omit for a default fee."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_id"}]},{"type":"text","value":" id of the asset to consume."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"txId"}]},{"type":"text","value":" optional, provide your own transaction ID"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_meta"}]},{"type":"text","value":" obsolete and removed since v6.0"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"You can preselect specific UTXOs to burn and to pay fee by adding "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"coins"}]},{"type":"text","value":" array parameter, like "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"\"coins\" : [\"00057e8eca5673476e6f726d000000000000015d3ef79800\", \"00057e8eca1233476e6f726d000000000000015d3ef79800\"]"}]},{"type":"text","value":". Both asset coins (to burn) and BEAM coins (to pay fee) can be in this array."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 2,\n    \"result\":\n    {\n        \"txId\" : \"10c4b760c842433cb58339a0fafef3db\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 2,\n    \"result\":\n    {\n        \"txId\" : \"10c4b760c842433cb58339a0fafef3db\"\n    }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Returns transaction id or "},{"type":"element","tag":"a","props":{"href":"#api-error-codes"},"children":[{"type":"text","value":"error code"}]},{"type":"text","value":"."}]},{"type":"element","tag":"h2","props":{"id":"tx_asset_info"},"children":[{"type":"text","value":"tx_asset_info"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Available from v5.0, can be used after Fork2. Assets must be enabled ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--enable_assets"}]},{"type":"text","value":") or method would fail."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Retrieve full info about any registered asset and save in a local database. If asset has been unregistered or has been never registered transaction would fail. After transaction is completed you can use "},{"type":"element","tag":"a","props":{"href":"#get_asset_info"},"children":[{"type":"text","value":"get_asset_info"}]},{"type":"text","value":" to read/get asset info from the local database."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 2,\n    \"method\": \"tx_asset_info\",\n    \"params\": \n    {\n        \"asset_id\": 1\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 2,\n    \"method\": \"tx_asset_info\",\n    \"params\": \n    {\n        \"asset_id\": 1\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_id"}]},{"type":"text","value":" asset id to retrieve info about. Can be used for any asset even if you don't own it."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"txId"}]},{"type":"text","value":" optional, provide your own transaction ID"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_meta"}]},{"type":"text","value":" obsolete and removed since v6.0"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Asset info transaction is free, i.e. doesn't incur any fees."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 2,\n    \"result\":\n    {\n        \"txId\" : \"10c4b760c842433cb58339a0fafef3db\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 2,\n    \"result\":\n    {\n        \"txId\" : \"10c4b760c842433cb58339a0fafef3db\"\n    }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Returns transaction id or "},{"type":"element","tag":"a","props":{"href":"#api-error-codes"},"children":[{"type":"text","value":"error code"}]},{"type":"text","value":"."}]},{"type":"element","tag":"h2","props":{"id":"tx_cancel"},"children":[{"type":"text","value":"tx_cancel"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Cancels running transaction"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"method\":\"tx_cancel\", \n    \"params\":\n    {\n        \"txId\" : \"a13525181c0d45b0a4c5c1a697c8a7b8\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"method\":\"tx_cancel\", \n    \"params\":\n    {\n        \"txId\" : \"a13525181c0d45b0a4c5c1a697c8a7b8\"\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"txId"}]},{"type":"text","value":" transaction id to cancel."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"result\": true\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"result\": true\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Returns "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"true"}]},{"type":"text","value":" if successfully canceled or "},{"type":"element","tag":"a","props":{"href":"#api-error-codes"},"children":[{"type":"text","value":"error code"}]},{"type":"text","value":" with the reason."}]},{"type":"element","tag":"h2","props":{"id":"tx_delete"},"children":[{"type":"text","value":"tx_delete"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Removes transaction from the local history. Cannot remove running transaction"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"method\":\"tx_delete\", \n    \"params\":\n    {\n        \"txId\" : \"a13525181c0d45b0a4c5c1a697c8a7b8\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"method\":\"tx_delete\", \n    \"params\":\n    {\n        \"txId\" : \"a13525181c0d45b0a4c5c1a697c8a7b8\"\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"txId"}]},{"type":"text","value":" transaction id to be deleted."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"result\": true\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"result\": true\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Returns "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"true"}]},{"type":"text","value":" if the transaction was successfully deleted or "},{"type":"element","tag":"a","props":{"href":"#api-error-codes"},"children":[{"type":"text","value":"error code"}]},{"type":"text","value":" with the reason."}]},{"type":"element","tag":"h2","props":{"id":"tx_status"},"children":[{"type":"text","value":"tx_status"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Get status & extended information about a single transaction by its transaction id. The example below is given for a simple transaction. Different transaction types have different status records. Consult "},{"type":"element","tag":"a","props":{"href":"#tx_list"},"children":[{"type":"text","value":"tx_list"}]},{"type":"text","value":" method description for details. This method can be called for previously started asset-involving transactions even if assets are not enabled in the current session."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"method\":\"tx_status\", \n    \"params\":\n    {\n        \"txId\" : \"10c4b760c842433cb58339a0fafef3db\",\n        \"rates\": false\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"method\":\"tx_status\", \n    \"params\":\n    {\n        \"txId\" : \"10c4b760c842433cb58339a0fafef3db\",\n        \"rates\": false\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"txId"}]},{"type":"text","value":" - transaction id to return status for"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"rates"}]},{"type":"text","value":" - returns currency rates array at the moment of transaction if set to "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"true"}]},{"type":"text","value":". By default is "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"false"}]},{"type":"text","value":"."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"result\":\n    { \n        \"txId\" : \"10c4b760c842433cb58339a0fafef3db\",\n        \"asset_id\": 0,\n        \"comment\": \"\",\n        \"fee\": 100,\n        \"kernel\": \"0000000000000000000000000000000000000000000000000000000000000000\",\n        \"receiver\": \"472e17b0419055ffee3b3813b98ae671579b0ac0dcd6f1a23b11a75ab148cc67\",\n        \"sender\": \"f287176bdd517e9c277778e4c012bf6a3e687dd614fc552a1ed22a3fee7d94f2\",\n        \"status\": 4,\n        \"status_string\" : \"Failed\",\n        \"tx_type\": 0,\n        \"tx_type_string\": \"simple\",\n        \"failure_reason\" : \"No inputs\",\n        \"value\": 12342342,\n        \"create_time\" : 1551100217,\n        \"income\" : false,\n        \"sender_identity\": \"a0a1ebbfeed5c312b309e32715c159e6b4548a6c6c3af25d0dbc16f37a1e9dd6\",\n        \"receiver_identity\": \"2d8738b0424ad50631e902fab655e7e1795fbb8d92d47c4c8df7336870fcadf5\",\n        \"token\": \"44pE7ySjZYjbLqwnTJANvr4BudMk1RdvWvaZnBvoCTwFnigfaTSza75bvw7x2GCa377Z4CSRRYZon44Ss9G9joSicNRAgts4u3pL6yV6jDQ6gAVJD9Scyr\"\n    } \n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"result\":\n    { \n        \"txId\" : \"10c4b760c842433cb58339a0fafef3db\",\n        \"asset_id\": 0,\n        \"comment\": \"\",\n        \"fee\": 100,\n        \"kernel\": \"0000000000000000000000000000000000000000000000000000000000000000\",\n        \"receiver\": \"472e17b0419055ffee3b3813b98ae671579b0ac0dcd6f1a23b11a75ab148cc67\",\n        \"sender\": \"f287176bdd517e9c277778e4c012bf6a3e687dd614fc552a1ed22a3fee7d94f2\",\n        \"status\": 4,\n        \"status_string\" : \"Failed\",\n        \"tx_type\": 0,\n        \"tx_type_string\": \"simple\",\n        \"failure_reason\" : \"No inputs\",\n        \"value\": 12342342,\n        \"create_time\" : 1551100217,\n        \"income\" : false,\n        \"sender_identity\": \"a0a1ebbfeed5c312b309e32715c159e6b4548a6c6c3af25d0dbc16f37a1e9dd6\",\n        \"receiver_identity\": \"2d8738b0424ad50631e902fab655e7e1795fbb8d92d47c4c8df7336870fcadf5\",\n        \"token\": \"44pE7ySjZYjbLqwnTJANvr4BudMk1RdvWvaZnBvoCTwFnigfaTSza75bvw7x2GCa377Z4CSRRYZon44Ss9G9joSicNRAgts4u3pL6yV6jDQ6gAVJD9Scyr\"\n    } \n}\n"}]}]},{"type":"element","tag":"h2","props":{"id":"tx_list"},"children":[{"type":"text","value":"tx_list"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Get the transactions list."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 8,\n    \"method\":\"tx_list\",\n    \"params\":\n    {\n        \"filter\" : \n        {\n            \"status\":4,\n            \"height\":1055,\n        },\n        \"rates\": true,\n        \"skip\" : 0,\n        \"count\" : 10\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 8,\n    \"method\":\"tx_list\",\n    \"params\":\n    {\n        \"filter\" : \n        {\n            \"status\":4,\n            \"height\":1055,\n        },\n        \"rates\": true,\n        \"skip\" : 0,\n        \"count\" : 10\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"filter.status"}]},{"type":"text","value":" optional, filter transactions by status"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"filter.height"}]},{"type":"text","value":" optional, filter transactions by height. For simple, asset issue and asset consume transactions denotes height when the transaction was registered in the chain. For asset info transaction means height at which asset confirmation was received. Works only for transactions with status Completed(3)."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"count"}]},{"type":"text","value":" optional, number of transactions to get. By default, all transactions are returned."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"skip"}]},{"type":"text","value":" number of transactions to skip, 0 by default."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"rates"}]},{"type":"text","value":" return currency rates at the moment of transaction if "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"true"}]},{"type":"text","value":". By default is "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"false"}]},{"type":"text","value":"."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"If assets are not enabled, the method returns only BEAM transactions. To get asset transactions you should enable assets ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--enable_assets"}]},{"type":"text","value":")."}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"filter.asset_id"}]},{"type":"text","value":" return only asset transactions with given asset id. Present starting from v5.0. If assets are not enabled and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"filter.asset_id"}]},{"type":"text","value":" is non-zero nothing would be returned."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 8,\n    \"result\":\n    [{ \n        \"asset_id\": 0,\n        \"txId\" : \"10c4b760c842433cb58339a0fafef3db\",\n        \"comment\": \"\",\n        \"fee\": 0,\n        \"kernel\": \"0000000000000000000000000000000000000000000000000000000000000000\",\n        \"receiver\": \"472e17b0419055ffee3b3813b98ae671579b0ac0dcd6f1a23b11a75ab148cc67\",\n        \"sender\": \"f287176bdd517e9c277778e4c012bf6a3e687dd614fc552a1ed22a3fee7d94f2\",\n        \"status\": 4,\n        \"status_string\" : \"Failed\",\n        \"failure_reason\" : \"No inputs\",\n        \"value\": 12342342,\n        \"create_time\" : 1551100217,\n        \"income\" : false,\n        \"token\": \"44pE7ySjZYjbLqwnTJANvr4BudMk1RdvWvaZnBvoCTwFnigfaTSza75bvw7x2GCa377Z4CSRRYZon44Ss9G9joSicNRAgts4u3pL6yV6jDQ6gAVJD9Scyr\",\n        \"rates\": [\n            {\n                \"from\": 3,\n                \"rate\": 200000000,\n                \"rate_str\": \"200000000\",\n                \"to\": \"btc\"\n            },\n            {\n                \"from\": 0,\n                \"rate\": 50000000,\n                \"rate_str\": \"50000000\",\n                \"to\": \"usd\"\n            }\n        ]\n    },\n    {\n      \"asset_id\": 1,\n      \"asset_meta\": \"STD:N=Coin;SN=CN;UN=Cgro;NTHUN=Cgroth\",\n      \"comment\": \"\",\n      \"confirmations\": 102,\n      \"create_time\": 1586995332,\n      \"fee\": 0,\n      \"height\": 1908,\n      \"income\": false,\n      \"receiver\": \"0\",\n      \"sender\": \"0\",\n      \"status\": 3,\n      \"status_string\": \"asset confirmed\",\n      \"txId\": \"d9f94306127a4ef894733f984b5512cf\",\n      \"tx_type\": 6,\n      \"tx_type_string\": \"asset info\",\n      \"value\": 0,\n      \"rates\": []\n    },\n    {\n        \"asset_id\": 1,\n        \"asset_meta\": \"STD:N=Coin;SN=CN;UN=Cgro;NTHUN=Cgroth\",\n        \"comment\": \"\",\n        \"confirmations\": 1985,\n        \"height\": 25,\n        \"create_time\": 1586966478,\n        \"fee\": 100,\n        \"income\": false,\n        \"kernel\": \"1c9e4a9a61df1dda00db10ab4477f88355e13d4ed06c0db36c39b22a2a66f642\",\n        \"receiver\": \"0\",\n        \"sender\": \"0\",\n        \"status\": 3,\n        \"status_string\": \"asset issued\",\n        \"txId\": \"77008a76aa4b4da697587040b2d21f1e\",\n        \"tx_type\": 2,\n        \"tx_type_string\": \"asset issue\",\n        \"value\": 500000000,\n        \"rates\": []\n    }]\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 8,\n    \"result\":\n    [{ \n        \"asset_id\": 0,\n        \"txId\" : \"10c4b760c842433cb58339a0fafef3db\",\n        \"comment\": \"\",\n        \"fee\": 0,\n        \"kernel\": \"0000000000000000000000000000000000000000000000000000000000000000\",\n        \"receiver\": \"472e17b0419055ffee3b3813b98ae671579b0ac0dcd6f1a23b11a75ab148cc67\",\n        \"sender\": \"f287176bdd517e9c277778e4c012bf6a3e687dd614fc552a1ed22a3fee7d94f2\",\n        \"status\": 4,\n        \"status_string\" : \"Failed\",\n        \"failure_reason\" : \"No inputs\",\n        \"value\": 12342342,\n        \"create_time\" : 1551100217,\n        \"income\" : false,\n        \"token\": \"44pE7ySjZYjbLqwnTJANvr4BudMk1RdvWvaZnBvoCTwFnigfaTSza75bvw7x2GCa377Z4CSRRYZon44Ss9G9joSicNRAgts4u3pL6yV6jDQ6gAVJD9Scyr\",\n        \"rates\": [\n            {\n                \"from\": 3,\n                \"rate\": 200000000,\n                \"rate_str\": \"200000000\",\n                \"to\": \"btc\"\n            },\n            {\n                \"from\": 0,\n                \"rate\": 50000000,\n                \"rate_str\": \"50000000\",\n                \"to\": \"usd\"\n            }\n        ]\n    },\n    {\n      \"asset_id\": 1,\n      \"asset_meta\": \"STD:N=Coin;SN=CN;UN=Cgro;NTHUN=Cgroth\",\n      \"comment\": \"\",\n      \"confirmations\": 102,\n      \"create_time\": 1586995332,\n      \"fee\": 0,\n      \"height\": 1908,\n      \"income\": false,\n      \"receiver\": \"0\",\n      \"sender\": \"0\",\n      \"status\": 3,\n      \"status_string\": \"asset confirmed\",\n      \"txId\": \"d9f94306127a4ef894733f984b5512cf\",\n      \"tx_type\": 6,\n      \"tx_type_string\": \"asset info\",\n      \"value\": 0,\n      \"rates\": []\n    },\n    {\n        \"asset_id\": 1,\n        \"asset_meta\": \"STD:N=Coin;SN=CN;UN=Cgro;NTHUN=Cgroth\",\n        \"comment\": \"\",\n        \"confirmations\": 1985,\n        \"height\": 25,\n        \"create_time\": 1586966478,\n        \"fee\": 100,\n        \"income\": false,\n        \"kernel\": \"1c9e4a9a61df1dda00db10ab4477f88355e13d4ed06c0db36c39b22a2a66f642\",\n        \"receiver\": \"0\",\n        \"sender\": \"0\",\n        \"status\": 3,\n        \"status_string\": \"asset issued\",\n        \"txId\": \"77008a76aa4b4da697587040b2d21f1e\",\n        \"tx_type\": 2,\n        \"tx_type_string\": \"asset issue\",\n        \"value\": 500000000,\n        \"rates\": []\n    }]\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"token"}]},{"type":"text","value":" retuned only in case if the transaction was started with a token."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"height"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"confirmations"}]},{"type":"text","value":" will be absent if the transaction isn't in the chain for simple, asset issue & asset consume transactions, or if asset confirmation is not received for asset info transaction."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"confirmations"}]},{"type":"text","value":" the number of blocks which confirm the presence of the transaction."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"sender_identity"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"receiver_identity"}]},{"type":"text","value":" are present if both participants provided these. In UI and CLI called as \"sender wallet's signature\" and \"receiver wallet's signature\"."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"status_string"}]},{"type":"text","value":" is a string representation of "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"status"}]},{"type":"text","value":" parameter."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_meta"}]},{"type":"text","value":" is an asset metadata string. Present from v5.0."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"tx_type"}]},{"type":"text","value":" is present starting from v5.0."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"tx_type_string"}]},{"type":"text","value":" is a string representation of tx_type parameter. Present starting from v5.0."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_id"}]},{"type":"text","value":" is returned starting from v5.0. For BEAM transactions it is always 0, for transactions that involve assets (including send/receive) it is an asset id. Can be 0 for asset info transaction if the transaction was started with asset_meta and the asset has been not found."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_meta"}]},{"type":"text","value":" is an asset metadata string. Returned starting from v5.0. Always present for asset issue &  consume transactions. Can be empty for asset info transaction if it was started with asset_id and the asset has been not found."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"kernel"}]},{"type":"text","value":" is not returned for asset info transactions. These transactions do not have any kernel and only query node for information."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"appname"}]},{"type":"text","value":" returned for transactions initiated by DApps. DApp Name"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"appid"}]},{"type":"text","value":" returned for transactions initiated by DApps. DApp ID (apppid)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"rates"}]},{"type":"text","value":" currency rates at the moment of transaction. Empty array if rates were not available at the moment of transaction or transaction does not store rates (asset issue/consume for example)."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"rates.from"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"rates.to"}]},{"type":"text","value":" from and to currencies. "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Number"}]},{"type":"text","value":" denotes asset id (0 for BEAM), "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"string"}]},{"type":"text","value":" - third-party currencies such as "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"eth"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"btc"}]},{"type":"text","value":" &c."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"rates.rate"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"rates.rate_str"}]},{"type":"text","value":" is a conversion rate."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"address_type"}]},{"type":"text","value":" type off address used for pust transaction (7), see "},{"type":"element","tag":"a","props":{"href":"#create_address"},"children":[{"type":"text","value":"create_address"}]},{"type":"text","value":" and "},{"type":"element","tag":"a","props":{"href":"#tx-types"},"children":[{"type":"text","value":"TX types"}]},{"type":"text","value":". Possible values are\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"offline"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"public_offline"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"max_privacy"}]}]}]}]}]},{"type":"element","tag":"h3","props":{"id":"important-the-recommended-number-of-confirmations-for-beam-transfers-is-80-blocks"},"children":[{"type":"text","value":"IMPORTANT: The recommended number of confirmations for Beam transfers is 80 blocks."}]},{"type":"element","tag":"h3","props":{"id":"tx-statuses"},"children":[{"type":"text","value":"TX statuses"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"pending (0)     - "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"pending"}]},{"type":"text","value":" initial state, the transaction is created, but not sent yet"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"in progress (1) - "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"self sending"}]},{"type":"text","value":"/"},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"waiting for sender"}]},{"type":"text","value":"/"},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"waiting for receiver"}]},{"type":"text","value":"/"},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"in progress"}]},{"type":"text","value":". For simple transactions indicates that the sender or receiver should come online to initiate the transaction. For asset issue/consume/info transactions indicates that transaction is being assembled. For asset info transaction means waiting for node response."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"canceled (2)    - "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"cancelled"}]},{"type":"text","value":" by sender or due to rollback"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"completed (3)   - transaction is "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"completed"}]},{"type":"text","value":"/"},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"received"}]},{"type":"text","value":"/"},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"sent"}]},{"type":"text","value":"/"},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset issued"}]},{"type":"text","value":"/"},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset consumed"}]},{"type":"text","value":"/"},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset confirmed"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"failed (4)      - "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"failed"}]},{"type":"text","value":" for some reason or "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"expired"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"registering (5) - "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"self sending"}]},{"type":"text","value":"/"},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"receiving"}]},{"type":"text","value":"/"},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"sending"}]},{"type":"text","value":"/"},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"in progress"}]},{"type":"text","value":" transaction is taken care by the blockchain, miners needs to PoW and to add it to a block, then block should be added to the blockchain."}]}]},{"type":"element","tag":"h3","props":{"id":"tx-types"},"children":[{"type":"text","value":"TX types"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"simple (0) - simple transaction, send/receive BEAM or asset"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"reserved (1) - currently not returned"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"asset issue (2) - issue new asset units"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"asset consume (3) - consume asset units"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"reserved (4) - currently not returned"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"reserved (5) - currently not returned"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"asset info (6) - asset info transaction, receive full asset information from blockchain"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"push transaction (7) - lelantus push transaction, is used for offline/max privacy payments"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"contract (12) - starting with v6.0, transaction created by contract request, or to fund or execute node-base contract invocation"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"N.B."}]},{"type":"text","value":" tx_list does not return swap, asset register & asset unregister transactions. Transactions are sorted by height in a descending order."}]},{"type":"element","tag":"h2","props":{"id":"wallet_status"},"children":[{"type":"text","value":"wallet_status"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Get current wallet status."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 6,\n    \"method\":\"wallet_status\"\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 6,\n    \"method\":\"wallet_status\"\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 6,\n    \"result\":\n    {\n        \"current_height\" : 1055,\n        \"current_state_hash\" : \"f287176bdd517e9c277778e4c012bf6a3e687dd614fc552a1ed22a3fee7d94f2\",\n            \"current_state_timestamp\": 1625060769,\n        \"prev_state_hash\" : \"bd39333a66a8b7cb3804b5978d42312c841dbfa03a1c31fc2f0627eeed6e43f2\",\n            \"is_in_sync\": true,\n        \"available\": 100500,\n        \"receiving\": 123,\n        \"sending\": 0,\n        \"maturing\": 50,\n        \"difficulty\": 2.93914,\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 6,\n    \"result\":\n    {\n        \"current_height\" : 1055,\n        \"current_state_hash\" : \"f287176bdd517e9c277778e4c012bf6a3e687dd614fc552a1ed22a3fee7d94f2\",\n            \"current_state_timestamp\": 1625060769,\n        \"prev_state_hash\" : \"bd39333a66a8b7cb3804b5978d42312c841dbfa03a1c31fc2f0627eeed6e43f2\",\n            \"is_in_sync\": true,\n        \"available\": 100500,\n        \"receiving\": 123,\n        \"sending\": 0,\n        \"maturing\": 50,\n        \"difficulty\": 2.93914,\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"available"}]},{"type":"text","value":" sum of available UTXOs you can spend"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"sending/receiving"}]},{"type":"text","value":" sum of UTXOs currently sending/receiving"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"maturing"}]},{"type":"text","value":" sum of UTXOs currently maturing"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"locked"}]},{"type":"text","value":" not used at the moment, ignore"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"difficulty"}]},{"type":"text","value":" the latest blockchain PoW difficulty"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"current_state_timestamp"}]},{"type":"text","value":" is a UNIX timestamp in seconds"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"is_in_sync"}]},{"type":"text","value":" true is wallet is in sync with blockchain"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Starting from v5.0 assets support has been added. This slightly changes API response: totals array is added which provides amounts for each asset int the wallet. To get the totals array assets should be enabled ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--enable_assets"}]},{"type":"text","value":")."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 6,\n    \"method\":\"wallet_status\",\n        \"params\": {\n            \"nz_totals\": false\n        }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 6,\n    \"method\":\"wallet_status\",\n        \"params\": {\n            \"nz_totals\": false\n        }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"nz_totals"}]},{"type":"text","value":"optional bool. If true do not return totals for assets with zero balance. By default is false."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n  \"id\": 1236,\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"current_height\" : 1055,\n    \"current_state_hash\" : \"f287176bdd517e9c277778e4c012bf6a3e687dd614fc552a1ed22a3fee7d94f2\",\n    \"current_state_timestamp\": 1625060769,\n    \"prev_state_hash\" : \"bd39333a66a8b7cb3804b5978d42312c841dbfa03a1c31fc2f0627eeed6e43f2\",\n    \"is_in_sync\": true,\n    \"available\": 100500,\n    \"receiving\": 123,\n    \"sending\": 0,\n    \"maturing\": 50,\n    \"difficulty\": 2.93914,\n    \"totals\": [\n      {\n        \"asset_id\": 0,\n        \"available\": 117065840575291,\n        \"available_mp\": 0,\n        \"available_mp_str\": \"0\",\n        \"available_regular\": 117065840575291,\n        \"available_regular_str\": \"117065840575291\",\n        \"available_str\": \"117065840575291\",\n        \"change\": 0,\n        \"change_str\": \"0\",\n        \"locked\": 183629687500000,\n        \"locked_str\": \"183629687500000\",\n        \"maturing\": 183629687500000,\n        \"maturing_mp\": 0,\n        \"maturing_mp_str\": \"0\",\n        \"maturing_regular\": 183629687500000,\n        \"maturing_regular_str\": \"183629687500000\",\n        \"maturing_str\": \"183629687500000\",\n        \"receiving\": 0,\n        \"receiving_mp\": 0,\n        \"receiving_mp_str\": \"0\",\n        \"receiving_regular\": 0,\n        \"receiving_regular_str\": \"0\",\n        \"receiving_str\": \"0\",\n        \"sending\": 0,\n        \"sending_mp\": 0,\n        \"sending_mp_str\": \"0\",\n        \"sending_regular\": 0,\n        \"sending_regular_str\": \"0\",\n        \"sending_str\": \"0\"\n      },\n      {\n        \"asset_id\": 3,\n        \"available\": 4262500000,\n        \"available_mp\": 0,\n        \"available_mp_str\": \"0\",\n        \"available_regular\": 4262500000,\n        \"available_regular_str\": \"4262500000\",\n        \"available_str\": \"4262500000\",\n        \"change\": 0,\n        \"change_str\": \"0\",\n        \"locked\": 0,\n        \"locked_str\": \"0\",\n        \"maturing\": 0,\n        \"maturing_mp\": 0,\n        \"maturing_mp_str\": \"0\",\n        \"maturing_regular\": 0,\n        \"maturing_regular_str\": \"0\",\n        \"maturing_str\": \"0\",\n        \"receiving\": 0,\n        \"receiving_mp\": 0,\n        \"receiving_mp_str\": \"0\",\n        \"receiving_regular\": 0,\n        \"receiving_regular_str\": \"0\",\n        \"receiving_str\": \"0\",\n        \"sending\": 0,\n        \"sending_mp\": 0,\n        \"sending_mp_str\": \"0\",\n        \"sending_regular\": 0,\n        \"sending_regular_str\": \"0\",\n        \"sending_str\": \"0\"\n      }\n    ]\n  }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n  \"id\": 1236,\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"current_height\" : 1055,\n    \"current_state_hash\" : \"f287176bdd517e9c277778e4c012bf6a3e687dd614fc552a1ed22a3fee7d94f2\",\n    \"current_state_timestamp\": 1625060769,\n    \"prev_state_hash\" : \"bd39333a66a8b7cb3804b5978d42312c841dbfa03a1c31fc2f0627eeed6e43f2\",\n    \"is_in_sync\": true,\n    \"available\": 100500,\n    \"receiving\": 123,\n    \"sending\": 0,\n    \"maturing\": 50,\n    \"difficulty\": 2.93914,\n    \"totals\": [\n      {\n        \"asset_id\": 0,\n        \"available\": 117065840575291,\n        \"available_mp\": 0,\n        \"available_mp_str\": \"0\",\n        \"available_regular\": 117065840575291,\n        \"available_regular_str\": \"117065840575291\",\n        \"available_str\": \"117065840575291\",\n        \"change\": 0,\n        \"change_str\": \"0\",\n        \"locked\": 183629687500000,\n        \"locked_str\": \"183629687500000\",\n        \"maturing\": 183629687500000,\n        \"maturing_mp\": 0,\n        \"maturing_mp_str\": \"0\",\n        \"maturing_regular\": 183629687500000,\n        \"maturing_regular_str\": \"183629687500000\",\n        \"maturing_str\": \"183629687500000\",\n        \"receiving\": 0,\n        \"receiving_mp\": 0,\n        \"receiving_mp_str\": \"0\",\n        \"receiving_regular\": 0,\n        \"receiving_regular_str\": \"0\",\n        \"receiving_str\": \"0\",\n        \"sending\": 0,\n        \"sending_mp\": 0,\n        \"sending_mp_str\": \"0\",\n        \"sending_regular\": 0,\n        \"sending_regular_str\": \"0\",\n        \"sending_str\": \"0\"\n      },\n      {\n        \"asset_id\": 3,\n        \"available\": 4262500000,\n        \"available_mp\": 0,\n        \"available_mp_str\": \"0\",\n        \"available_regular\": 4262500000,\n        \"available_regular_str\": \"4262500000\",\n        \"available_str\": \"4262500000\",\n        \"change\": 0,\n        \"change_str\": \"0\",\n        \"locked\": 0,\n        \"locked_str\": \"0\",\n        \"maturing\": 0,\n        \"maturing_mp\": 0,\n        \"maturing_mp_str\": \"0\",\n        \"maturing_regular\": 0,\n        \"maturing_regular_str\": \"0\",\n        \"maturing_str\": \"0\",\n        \"receiving\": 0,\n        \"receiving_mp\": 0,\n        \"receiving_mp_str\": \"0\",\n        \"receiving_regular\": 0,\n        \"receiving_regular_str\": \"0\",\n        \"receiving_str\": \"0\",\n        \"sending\": 0,\n        \"sending_mp\": 0,\n        \"sending_mp_str\": \"0\",\n        \"sending_regular\": 0,\n        \"sending_regular_str\": \"0\",\n        \"sending_str\": \"0\"\n      }\n    ]\n  }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"totals"}]},{"type":"text","value":" is an array of totals per asset. Assets that are included in this array by default:"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"BEAM (asset id 0)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"All assets which have UTXOs."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"All owned assets, even if there is no UTXOs for the given asset."}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"available_regular"}]},{"type":"text","value":" available regular UTXOs wallet can spend"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"available_mp"}]},{"type":"text","value":" available max privacy (shielded) UTXOs wallet can spend"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"available"}]},{"type":"text","value":" sum of "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"available_regular"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"available_mp"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"receiving_regular"}]},{"type":"text","value":" regular UTXOs wallet is currently receiving"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"receiving_mp"}]},{"type":"text","value":" max privacy (shielded) UTXOs wallet is currently receiving"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"receiving"}]},{"type":"text","value":" sum of "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"receiving_regular"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"receiving_mp"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"sending_regular"}]},{"type":"text","value":" regular UTXOs wallet is currently sending"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"sending_mp"}]},{"type":"text","value":" max privacy (shielded) UTXOs wallet is currently sending"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"sending"}]},{"type":"text","value":" sum of "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"sending_regular"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"sending_mp"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"maturing_regular"}]},{"type":"text","value":" regular UTXOs currently maturing"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"maturing_mp"}]},{"type":"text","value":" max privacy (shielded) UTXOs currently maturing"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"maturing"}]},{"type":"text","value":" sum of "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"maturing_regular"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"maturing_mp"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"change"}]},{"type":"text","value":" change that is currently incoming to wallet"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"locked"}]},{"type":"text","value":" locked UTXOs, sum of "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"maturing_regular"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"maturing_mp"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"change"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Asset is included in the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"totals"}]},{"type":"text","value":" array even if all UTXOs are spent or if there are no UTXOs but asset is owned (issued by the wallet). In case when all the UTXOs are spent totals' fields except "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_id"}]},{"type":"text","value":" would be 0 (zero balance). To avoid getting assets with zero balance specify "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"\"params\": {\"nz_totals\": true}"}]},{"type":"text","value":". BEAM is always included, even if balance is 0 and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"nz_totals"}]},{"type":"text","value":" is true."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Maximum asset emission is 2"},{"type":"element","tag":"sup","props":{},"children":[{"type":"text","value":"128"}]},{"type":"text","value":"-1. To ensure compatibility with JavaScript raw number ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"available"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"maturing"}]},{"type":"text","value":" &c.) returned only if it is less than or equal to "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Number.MAX_SAFE_INTEGER"}]},{"type":"text","value":" (2"},{"type":"element","tag":"sup","props":{},"children":[{"type":"text","value":"53"}]},{"type":"text","value":"-1). If total's value is greater than "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Number.MAX_SAFE_INTEGER"}]},{"type":"text","value":" only corresponding string representation ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"xxxx_str"}]},{"type":"text","value":") is returned."}]},{"type":"element","tag":"h2","props":{"id":"get_utxo"},"children":[{"type":"text","value":"get_utxo"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Get list of all unlocked UTXOs."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 6,\n    \"method\":\"get_utxo\",\n    \"params\" :\n    {\n        \"count\": 10,\n        \"skip\": 0,\n        \"sort\": {\n            \"field\": \"amount\",\n            \"direction\": \"asc\"\n        }\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 6,\n    \"method\":\"get_utxo\",\n    \"params\" :\n    {\n        \"count\": 10,\n        \"skip\": 0,\n        \"sort\": {\n            \"field\": \"amount\",\n            \"direction\": \"asc\"\n        }\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"count"}]},{"type":"text","value":" number of UTXO to get, by default all the UTXOs are returned."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"skip"}]},{"type":"text","value":" number of UTXO to skip, default is "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"0"}]},{"type":"text","value":"."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"sort.field"}]},{"type":"text","value":" name of field to sort. Available values are \"id|asset_id|amount|type|maturity|createTxId|spentTxId|status|status_string\""}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"sort.direction"}]},{"type":"text","value":" sorting directions \"asc\" or \"desc\""}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\": \"2.0\", \n    \"id\": 6,\n    \"result\":\n    [{\n        \"id\": 123,\n        \"asset_id\": 0,\n        \"amount\": 12345,\n        \"maturity\": 60,\n        \"type\": \"mine\",\n        \"createTxId\": \"10c4b760c842433cb58339a0fafef3db\",\n        \"spentTxId\": \"\",\n        \"status\": 2,\n        \"status_string\": \"maturing\"\n    }]\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\": \"2.0\", \n    \"id\": 6,\n    \"result\":\n    [{\n        \"id\": 123,\n        \"asset_id\": 0,\n        \"amount\": 12345,\n        \"maturity\": 60,\n        \"type\": \"mine\",\n        \"createTxId\": \"10c4b760c842433cb58339a0fafef3db\",\n        \"spentTxId\": \"\",\n        \"status\": 2,\n        \"status_string\": \"maturing\"\n    }]\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_id"}]},{"type":"text","value":" asset id if coin belongs to an asset and 0 for BEAM coins. By default method returns only BEAM coins. To get asset coins assets should be enabled ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--enable_assets"}]},{"type":"text","value":")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"filter.asset_id"}]},{"type":"text","value":" return only asset coins with given asset id, 0 for BEAM coins. Present starting from v5.0. Assets should be enabled."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1236,\n    \"method\": \"get_utxo\",\n    \"params\": {\n        \"assets\": true,\n        \"filter\": {\n            \"asset_id\": 1\n        }\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1236,\n    \"method\": \"get_utxo\",\n    \"params\": {\n        \"assets\": true,\n        \"filter\": {\n            \"asset_id\": 1\n        }\n    }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n  \"id\": 1236,\n  \"jsonrpc\": \"2.0\",\n  \"result\": [\n    {\n      \"amount\": 500000000,\n      \"asset_id\": 1,\n      \"createTxId\": \"fd705ce6f8c345309c865dc93de9fec5\",\n      \"id\": \"0000000183ed2de4d94e6bd56e6f726d01000000000000001dcd6500\",\n      \"maturity\": 19,\n      \"spentTxId\": \"\",\n      \"status\": 1,\n      \"status_string\": \"available\",\n      \"type\": \"norm\"\n    }\n  ]\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n  \"id\": 1236,\n  \"jsonrpc\": \"2.0\",\n  \"result\": [\n    {\n      \"amount\": 500000000,\n      \"asset_id\": 1,\n      \"createTxId\": \"fd705ce6f8c345309c865dc93de9fec5\",\n      \"id\": \"0000000183ed2de4d94e6bd56e6f726d01000000000000001dcd6500\",\n      \"maturity\": 19,\n      \"spentTxId\": \"\",\n      \"status\": 1,\n      \"status_string\": \"available\",\n      \"type\": \"norm\"\n    }\n  ]\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"type"}]},{"type":"text","value":" can be "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"fees"}]},{"type":"text","value":" (comission), "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"mine"}]},{"type":"text","value":" (coinbase), "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"norm"}]},{"type":"text","value":" (usual coin, for example received via transaction), "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"chng"}]},{"type":"text","value":" (change), "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"shld"}]},{"type":"text","value":" (shielded)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"status"}]},{"type":"text","value":" can be "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"unavailable (0)"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"available (1)"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"maturing (2)"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"outgoing (3)"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"incoming (4)"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"spent (6)"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"consumed (7)"}]},{"type":"text","value":". "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"consumed"}]},{"type":"text","value":" status is returned only for asset coins starting from v5.0. It means that the coin has been burned (consumed)."}]}]},{"type":"element","tag":"h2","props":{"id":"get_asset_info"},"children":[{"type":"text","value":"get_asset_info"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Read asset info from local database. Asset info can be refreshed using "},{"type":"element","tag":"a","props":{"href":"#tx_asset_info"},"children":[{"type":"text","value":"tx_asset_info"}]},{"type":"text","value":". It is also automatically refreshed during asset transactions (but not always) to ensure that asset operations are safe. This method can be called even if assets are not enabled."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 6,\n    \"method\": \"get_asset_info\",\n    \"params\" :\n    {\n        \"asset_id\": 1\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 6,\n    \"method\": \"get_asset_info\",\n    \"params\" :\n    {\n        \"asset_id\": 1\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_id"}]},{"type":"text","value":" asset id to retrieve info about. Can be used for any asset even if you don't own it."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_meta"}]},{"type":"text","value":" obsolete and removed since v6.0"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"id\": 1236,\n    \"jsonrpc\": \"2.0\",\n    \"result\": \n    {\n        \"asset_id\": 1,\n        \"emission\": 2000000000,\n        \"emission_str\": \"2000000000\",\n        \"isOwned\": 1,\n        \"lockHeight\": 39,\n        \"metadata\": \"STD:SCH_VER=1;N=YAN Coin;SN=YAN;UN=Yan;NTHUN=Yanik\",\n        \"metadata_kv\": true,\n        \"metadata_pairs\": {\n            \"N\": \"YAN Coin\",\n            \"NTHUN\": \"Yanik\",\n            \"SCH_VER\": \"1\",\n            \"SN\": \"YAN\",\n            \"UN\": \"Yan\"\n        },\n        \"metadata_std_min\": true,\n        \"metadata_std\": true,\n        \"ownerId\": \"0ae08a49e018e98177774294107dc033790b87538e54a20e99c6b98f1dbd39ce\",\n        \"refreshHeight\": 927\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"id\": 1236,\n    \"jsonrpc\": \"2.0\",\n    \"result\": \n    {\n        \"asset_id\": 1,\n        \"emission\": 2000000000,\n        \"emission_str\": \"2000000000\",\n        \"isOwned\": 1,\n        \"lockHeight\": 39,\n        \"metadata\": \"STD:SCH_VER=1;N=YAN Coin;SN=YAN;UN=Yan;NTHUN=Yanik\",\n        \"metadata_kv\": true,\n        \"metadata_pairs\": {\n            \"N\": \"YAN Coin\",\n            \"NTHUN\": \"Yanik\",\n            \"SCH_VER\": \"1\",\n            \"SN\": \"YAN\",\n            \"UN\": \"Yan\"\n        },\n        \"metadata_std_min\": true,\n        \"metadata_std\": true,\n        \"ownerId\": \"0ae08a49e018e98177774294107dc033790b87538e54a20e99c6b98f1dbd39ce\",\n        \"refreshHeight\": 927\n    }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Returns full asset info or "},{"type":"element","tag":"a","props":{"href":"#api-error-codes"},"children":[{"type":"text","value":"error code"}]},{"type":"text","value":"."}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_id"}]},{"type":"text","value":" asset id"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"metadata"}]},{"type":"text","value":" asset metadata"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"emission"}]},{"type":"text","value":" & "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"emission_str"}]},{"type":"text","value":" total asset emission. Maximum asset emission is 2"},{"type":"element","tag":"sup","props":{},"children":[{"type":"text","value":"128"}]},{"type":"text","value":"-1. To ensure compatibility with JavaScript raw number returned only if it is less than or equal to "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Number.MAX_SAFE_INTEGER"}]},{"type":"text","value":" (2"},{"type":"element","tag":"sup","props":{},"children":[{"type":"text","value":"53"}]},{"type":"text","value":"-1). If asset emission is greater than "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Number.MAX_SAFE_INTEGER"}]},{"type":"text","value":" only corresponding string representation is returned."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"isOwned"}]},{"type":"text","value":" is 1 if you own this asset"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"lockHeight"}]},{"type":"text","value":" last block when asset emission turned to/from 0."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"refreshHeight"}]},{"type":"text","value":" block at which asset information has been received. Please note, that all returned fields are valid only for this and previous blocks. In next blocks emission might change, asset become unregistered &c. Use "},{"type":"element","tag":"a","props":{"href":"#tx_asset_info"},"children":[{"type":"text","value":"tx_asset_info"}]},{"type":"text","value":" to retrieve the most recent info."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"metadata_kv"}]},{"type":"text","value":" true if metadata was parsed successfully as key=value pairs"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"metadata_pairs"}]},{"type":"text","value":" present only if "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"metadata_kv"}]},{"type":"text","value":" is true, provides actual parsed key=value pairs"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"metadata_std_min"}]},{"type":"text","value":" true if metadata is k=v pairs and minimal necessary pairs are present, i.e. N(Name), UN(Unit Name), SN(Short Name), NTHUN (Smallest Unit Name)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"metadata_std"}]},{"type":"text","value":" true if metadata is k=v pairs and fully adheres to the "},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/wiki/Asset-Descriptor-v1.0","rel":["nofollow"]},"children":[{"type":"text","value":"Asset Descriptor Specification"}]}]}]},{"type":"element","tag":"h2","props":{"id":"generate_tx_id"},"children":[{"type":"text","value":"generate_tx_id"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Generates ID for a transaction."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 2,\n    \"method\":\"generate_tx_id\"\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 2,\n    \"method\":\"generate_tx_id\"\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 2,\n    \"result\":\"10c4b760c842433cb58339a0fafef3db\"\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 2,\n    \"result\":\"10c4b760c842433cb58339a0fafef3db\"\n}\n"}]}]},{"type":"element","tag":"h2","props":{"id":"export_payment_proof"},"children":[{"type":"text","value":"export_payment_proof"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Exports payment proof for given "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"txId"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"method\": \"export_payment_proof\", \n    \"params\":\n    {\n        \"txId\" : \"a13525181c0d45b0a4c5c1a697c8a7b8\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"method\": \"export_payment_proof\", \n    \"params\":\n    {\n        \"txId\" : \"a13525181c0d45b0a4c5c1a697c8a7b8\"\n    }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"result\": \n    {\n        \"payment_proof\": \"8009f28991ef543253c8b6a2caf15cf99e23fb9c2b4ca30dc463c8ceb354d7979e80ef7d4255dd5e885200648abe5826d8e0ba0157d3e8cf9c42dcc8258b036986e50400371789ee82afc25ee29c9c57bcb1018b725a3a94c0ceb1fa7984ea13de4982553e0d78d925a362982182a971e654857b8e407e7ad2e9cb72b2b8228812f8ec50435351000c94e2c85996e9527d9b0c90a1843205a7ec8f99fa534083e5f1d055d9f53894\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"result\": \n    {\n        \"payment_proof\": \"8009f28991ef543253c8b6a2caf15cf99e23fb9c2b4ca30dc463c8ceb354d7979e80ef7d4255dd5e885200648abe5826d8e0ba0157d3e8cf9c42dcc8258b036986e50400371789ee82afc25ee29c9c57bcb1018b725a3a94c0ceb1fa7984ea13de4982553e0d78d925a362982182a971e654857b8e407e7ad2e9cb72b2b8228812f8ec50435351000c94e2c85996e9527d9b0c90a1843205a7ec8f99fa534083e5f1d055d9f53894\"\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"payment_proof"}]},{"type":"text","value":" is a hex-encoded byte buffer which contains information about sender, receiver, amount and kernel, signed with receiver's private key. This info could be unpacked and verified using "},{"type":"element","tag":"a","props":{"href":"#verify_payment_proof"},"children":[{"type":"text","value":"verify_payment_proof"}]},{"type":"text","value":" method by the third party. Receiver creates a payment proof in order give receiver an ability to proof that actual payment was made. Sender does not sign transaction if receiver does not provide him this evidence."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"N.B."}]},{"type":"text","value":" Payment proofs for asset transaction are supported starting from v5.0. These proofs cannot be verified by earlier clients/APIs versions. Regular BEAM payment proofs generated by the latest clients/APIs still would be accepted by earlier versions of clients/APIs."}]},{"type":"element","tag":"h2","props":{"id":"verify_payment_proof"},"children":[{"type":"text","value":"verify_payment_proof"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Verifies "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"payment_proof"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"method\":\"verify_payment_proof\", \n    \"params\":\n    {\n        \"payment_proof\" : \"8009f28991ef543253c8b6a2caf15cf99e23fb9c2b4ca30dc463c8ceb354d7979e80ef7d4255dd5e885200648abe5826d8e0ba0157d3e8cf9c42dcc8258b036986e50400371789ee82afc25ee29c9c57bcb1018b725a3a94c0ceb1fa7984ea13de4982553e0d78d925a362982182a971e654857b8e407e7ad2e9cb72b2b8228812f8ec50435351000c94e2c85996e9527d9b0c90a1843205a7ec8f99fa534083e5f1d055d9f53894\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"method\":\"verify_payment_proof\", \n    \"params\":\n    {\n        \"payment_proof\" : \"8009f28991ef543253c8b6a2caf15cf99e23fb9c2b4ca30dc463c8ceb354d7979e80ef7d4255dd5e885200648abe5826d8e0ba0157d3e8cf9c42dcc8258b036986e50400371789ee82afc25ee29c9c57bcb1018b725a3a94c0ceb1fa7984ea13de4982553e0d78d925a362982182a971e654857b8e407e7ad2e9cb72b2b8228812f8ec50435351000c94e2c85996e9527d9b0c90a1843205a7ec8f99fa534083e5f1d055d9f53894\"\n    }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"result\": \n    {\n        \"is_valid\": true,\n        \"asset_id\": 0,\n        \"sender\":   \"9f28991ef543253c8b6a2caf15cf99e23fb9c2b4ca30dc463c8ceb354d7979e\",\n        \"receiver\": \"ef7d4255dd5e885200648abe5826d8e0ba0157d3e8cf9c42dcc8258b036986e5\",\n        \"amount\":   2300000000,\n        \"kernel\":   \"ee82afc25ee29c9c57bcb1018b725a3a94c0ceb1fa7984ea13de4982553e0d78\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"result\": \n    {\n        \"is_valid\": true,\n        \"asset_id\": 0,\n        \"sender\":   \"9f28991ef543253c8b6a2caf15cf99e23fb9c2b4ca30dc463c8ceb354d7979e\",\n        \"receiver\": \"ef7d4255dd5e885200648abe5826d8e0ba0157d3e8cf9c42dcc8258b036986e5\",\n        \"amount\":   2300000000,\n        \"kernel\":   \"ee82afc25ee29c9c57bcb1018b725a3a94c0ceb1fa7984ea13de4982553e0d78\"\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"is_valid"}]},{"type":"text","value":" true if signature is valid,"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"sender"}]},{"type":"text","value":" sender's SBBS address"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"receiver"}]},{"type":"text","value":" is a receiver's SBBS address, is it is used to verify the signature"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"amount"}]},{"type":"text","value":" amount sent by the transaction in groth"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_id"}]},{"type":"text","value":" asset id of the transaction, 0 for BEAM. Returned starting from v5.0"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"kernel"}]},{"type":"text","value":" id of the kernel of this transaction"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"N.B."}]},{"type":"text","value":" v5.0+ APIs accept proofs generated by older versions."}]},{"type":"element","tag":"h2","props":{"id":"invoke_contract"},"children":[{"type":"text","value":"invoke_contract"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Available from v6.0, can be used after Fork3."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Invokes application shader. Only application/wallet side shaders are accepted. Use CLI to call a contract shader."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\": \"2.0\", \n    \"id\": 2,\n    \"method\": \"invoke_contract\", \n    \"params\":\n    {\n        \"contract\": [123, 123, 123],\n        \"args\": \"role=manager,action=view\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\": \"2.0\", \n    \"id\": 2,\n    \"method\": \"invoke_contract\", \n    \"params\":\n    {\n        \"contract\": [123, 123, 123],\n        \"args\": \"role=manager,action=view\"\n    }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"OR"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\": \"2.0\", \n    \"id\": 2,\n    \"method\": \"invoke_contract\", \n    \"params\":\n    {\n        \"contract_file\": \"....\",\n        \"args\": \"role=manager,action=view\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\": \"2.0\", \n    \"id\": 2,\n    \"method\": \"invoke_contract\", \n    \"params\":\n    {\n        \"contract_file\": \"....\",\n        \"args\": \"role=manager,action=view\"\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"contract"}]},{"type":"text","value":" contract code as raw bytes array, optional."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"contract_file"}]},{"type":"text","value":" file name to read contract code from, optional. Absolute or relative to the executable CWD."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"args"}]},{"type":"text","value":" contract arguments, optional. Depends on the called shader. Consult shader-specific docs for details."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"create_tx"}]},{"type":"text","value":" bool, pass "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"true"}]},{"type":"text","value":" create transaction automatically if contract wants it and return "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"txid"}]},{"type":"text","value":". Pass false to avoid transaction creation, get raw tx data that can be passed to "},{"type":"element","tag":"a","props":{"href":"#process_invoke_data"},"children":[{"type":"text","value":"process_invoke_data"}]},{"type":"text","value":" later. By default is "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"true"}]},{"type":"text","value":"."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"contract"}]},{"type":"text","value":" parameter always takes precedence over the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"contract_file"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n  \"id\": 1236,\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"output\": \"{\\\"contracts\\\": [{\\\"cid\\\": \\\"2b105519ee7e170d92abffbc1eb5426d4e20910af2f54bcee43eb84c74dcfa4b\\\",\\\"Height\\\": 27004},{\\\"cid\\\": \n               \\\"55df189ac5c1f9b982fa34fb8050f005c331203023816ddbb2d641a96a3fcb2a\\\",\\\"Height\\\": 27001},{\\\"cid\\\": \n               \\\"6add645863c29d9dc43ab9987af870cb91fd0dfb4e26ae09ca97ac8ff5372f6e\\\",\\\"Height\\\": 532}]}\"\n  }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n  \"id\": 1236,\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"output\": \"{\\\"contracts\\\": [{\\\"cid\\\": \\\"2b105519ee7e170d92abffbc1eb5426d4e20910af2f54bcee43eb84c74dcfa4b\\\",\\\"Height\\\": 27004},{\\\"cid\\\": \n               \\\"55df189ac5c1f9b982fa34fb8050f005c331203023816ddbb2d641a96a3fcb2a\\\",\\\"Height\\\": 27001},{\\\"cid\\\": \n               \\\"6add645863c29d9dc43ab9987af870cb91fd0dfb4e26ae09ca97ac8ff5372f6e\\\",\\\"Height\\\": 532}]}\"\n  }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"output"}]},{"type":"text","value":" contract output. Depends on the called shader. Can be empty"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"txid"}]},{"type":"text","value":" transaction created by contract (if any)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"raw_data"}]},{"type":"text","value":" raw data returned by the contract based on which transaction can be created using "},{"type":"element","tag":"a","props":{"href":"#process_invoke_data"},"children":[{"type":"text","value":"process_invoke_data"}]}]}]},{"type":"element","tag":"h3","props":{"id":"shader-errors"},"children":[{"type":"text","value":"Shader Errors"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Please notice that API returns errors only if there is an API error (no shader code, parse error &c.). If there was an error inside the shader itself API call would be successful and shader output should be checked. For example:"}]},{"type":"element","tag":"h3","props":{"id":"code-caching"},"children":[{"type":"text","value":"Code caching"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"If there was an invoke_shader before "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"contract"}]},{"type":"text","value":"/"},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"contract_file"}]},{"type":"text","value":" can be omitted. In this case contract code from previous call would be used. In case of wallet_api code caching works on per-connection level. In case of applications caching works on per-application level."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1236,\n    \"method\": \"invoke_contract\",\n    \"params\": {\n        \"contract_file\": \"./faucetManager.wasm\",\n        \"args\": \"role=manager\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1236,\n    \"method\": \"invoke_contract\",\n    \"params\": {\n        \"contract_file\": \"./faucetManager.wasm\",\n        \"args\": \"role=manager\"\n    }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n  \"id\": 1236,\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"output\": \"{\\\"error\\\": \\\"Action not specified\\\"}\"\n  }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n  \"id\": 1236,\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"output\": \"{\\\"error\\\": \\\"Action not specified\\\"}\"\n  }\n}\n"}]}]},{"type":"element","tag":"h3","props":{"id":"requests-queue"},"children":[{"type":"text","value":"Requests queue"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Before v6.1 it was not allowed to make the next contract call before the previous one is completed. As per v6.1 priority queue is added for "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"invoke_contract"}]},{"type":"text","value":" requests. If previous call is not completed new "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"invoke_shader"}]},{"type":"text","value":" call would be added to the queue and executed later. New parameters were added to control the queue:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"priority"}]},{"type":"text","value":" - integer, 0 by default. Calls with higher priority would be placed on top of the queue"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"unique"}]},{"type":"text","value":" - integer, 0 by default. If there is already an "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"invoke_contract"}]},{"type":"text","value":" call with the same "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"unique"}]},{"type":"text","value":" queued or being executed the new call will not be added to the queue. This might be necessary to avoid queue congestion with multiple status while previous requests are still pending. Value of 0 is ignored and doesn't trigger call omission."}]}]},{"type":"element","tag":"h2","props":{"id":"process_invoke_data"},"children":[{"type":"text","value":"process_invoke_data"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Creates transaction requested by a contract"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1236,\n    \"method\": \"process_invoke_data\",\n    \"params\": {\n        \"data\": [123, 123, 123]\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1236,\n    \"method\": \"process_invoke_data\",\n    \"params\": {\n        \"data\": [123, 123, 123]\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"data"}]},{"type":"text","value":" raw invoke data bytes array returned by "},{"type":"element","tag":"a","props":{"href":"#invoke_contract"},"children":[{"type":"text","value":"invoke_contract"}]},{"type":"text","value":", mandatory"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n  \"id\": 1236,\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"txid\": \"...\"\n  }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n  \"id\": 1236,\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"txid\": \"...\"\n  }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"txid"}]},{"type":"text","value":" contract transaction id created as a result of the call"}]}]},{"type":"element","tag":"h2","props":{"id":"calc_change"},"children":[{"type":"text","value":"calc_change"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Calculates change for given "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"amount"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"method\":\"calc_change\", \n    \"params\":\n    {\n        \"amount\" : 1234,\n        \"asset_id\": 2,\n        \"fee\": 10000,\n        \"is_push_transaction\": true\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"method\":\"calc_change\", \n    \"params\":\n    {\n        \"amount\" : 1234,\n        \"asset_id\": 2,\n        \"fee\": 10000,\n        \"is_push_transaction\": true\n    }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"result\":\n    {\n        \"asset_change\": 12,\n        \"asset_change_str\": \"12\",\n        \"change\": 12,\n        \"change_str\": \"12\",\n        \"explicit_fee\": 1100000,\n        \"explicit_fee_str\": \"1100000\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"result\":\n    {\n        \"asset_change\": 12,\n        \"asset_change_str\": \"12\",\n        \"change\": 12,\n        \"change_str\": \"12\",\n        \"explicit_fee\": 1100000,\n        \"explicit_fee_str\": \"1100000\"\n    }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"where"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"amount"}]},{"type":"text","value":" is a requested amount we are going to send"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_id"}]},{"type":"text","value":" optional asset id of the requested amount. Default is 0 (BEAM). This method can be used for non-BEAM coins even if assets are not enabled."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"fee"}]},{"type":"text","value":" explicit fee in GROTHs chosen by the user"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_change"}]},{"type":"text","value":" change amount for requested "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_id"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"change"}]},{"type":"text","value":" change in for BEAM. "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_change"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"change"}]},{"type":"text","value":" are equal if "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_id == 0"}]},{"type":"text","value":", i.e. BEAM"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"explicit_fee"}]},{"type":"text","value":" the fee which should be used"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"is_push_transaction"}]},{"type":"text","value":" "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"true"}]},{"type":"text","value":" if we are going to push transaction output into the shielded pool."}]}]},{"type":"element","tag":"h2","props":{"id":"block_details"},"children":[{"type":"text","value":"block_details"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Returns block header from blockchain"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\": \"2.0\", \n    \"id\": 2,\n    \"method\": \"block_details\", \n    \"params\":\n    {\n        \"height\": 200\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\": \"2.0\", \n    \"id\": 2,\n    \"method\": \"block_details\", \n    \"params\":\n    {\n        \"height\": 200\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"height"}]},{"type":"text","value":" height of block."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"result\":\n    {\n        \"block_hash\": \"7aec20e5b56706d57a4dca1df4a4d3104dbdbf8d6005499845558b7a32694d02\",\n        \"chainwork\": \"000000000000000000000000000000000000000000000000000000c503b09ac0\",\n        \"definition\": \"0d3f4e63743760c6397d76086e1cc0ebe749c121206c8150738dc84edcd30092\",\n        \"difficulty\": 118.4594497680664,\n        \"height\": 200,\n        \"kernels\": \"705cdfa154eec35e4b4b0e2163ff9c81f8f035641ee4b0b95c3f3c5b0f170ffe\",\n        \"packed_difficulty\": 114939514,\n        \"pow\": \"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004f04638c1f4cee1b7ad6d906\",\n        \"previous_block\": \"d195cc69fbd2b402cc33ecb303f5391f0010f34ee059f30b908ed10f0fe5a255\",\n        \"rules_hash\": \"340bbeabc390f481df1f84aedf0b679c1c7ed1f0e28d4340c9c49b4c41611f85\",\n        \"timestamp\": 1619598150\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"result\":\n    {\n        \"block_hash\": \"7aec20e5b56706d57a4dca1df4a4d3104dbdbf8d6005499845558b7a32694d02\",\n        \"chainwork\": \"000000000000000000000000000000000000000000000000000000c503b09ac0\",\n        \"definition\": \"0d3f4e63743760c6397d76086e1cc0ebe749c121206c8150738dc84edcd30092\",\n        \"difficulty\": 118.4594497680664,\n        \"height\": 200,\n        \"kernels\": \"705cdfa154eec35e4b4b0e2163ff9c81f8f035641ee4b0b95c3f3c5b0f170ffe\",\n        \"packed_difficulty\": 114939514,\n        \"pow\": \"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004f04638c1f4cee1b7ad6d906\",\n        \"previous_block\": \"d195cc69fbd2b402cc33ecb303f5391f0010f34ee059f30b908ed10f0fe5a255\",\n        \"rules_hash\": \"340bbeabc390f481df1f84aedf0b679c1c7ed1f0e28d4340c9c49b4c41611f85\",\n        \"timestamp\": 1619598150\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"block_hash"}]},{"type":"text","value":" is a block hash"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"chainwork"}]},{"type":"text","value":" is a chainwork"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"definition"}]},{"type":"text","value":" is a definition"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"difficulty"}]},{"type":"text","value":" is a difficulty"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"height"}]},{"type":"text","value":" is a block height"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"kernels"}]},{"type":"text","value":" is a kernels"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"packed_difficulty"}]},{"type":"text","value":" is a packed difficulty"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"pow"}]},{"type":"text","value":" is a pow"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"previous_block"}]},{"type":"text","value":" is hash of previous block"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"rules_hash"}]},{"type":"text","value":" is a rules hash"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"timestamp"}]},{"type":"text","value":" is a timestamp"}]}]},{"type":"element","tag":"h2","props":{"id":"get_version"},"children":[{"type":"text","value":"get_version"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Returns version info"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\": \"2.0\", \n    \"id\": 1,\n    \"method\": \"get_version\"\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\": \"2.0\", \n    \"id\": 1,\n    \"method\": \"get_version\"\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n  \"id\": 1,\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"api_version\": \"6.1\",\n    \"api_version_major\": 6,\n    \"api_version_minor\": 1,\n    \"beam_branch_name\": \"master\",\n    \"beam_commit_hash\": \"f7dcfab5341e84a58918f2fde0fc2be9c09264eb\",\n    \"beam_version\": \"6.1.11462\",\n    \"beam_version_major\": 6,\n    \"beam_version_minor\": 1,\n    \"beam_version_rev\": 11462\n  }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n  \"id\": 1,\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"api_version\": \"6.1\",\n    \"api_version_major\": 6,\n    \"api_version_minor\": 1,\n    \"beam_branch_name\": \"master\",\n    \"beam_commit_hash\": \"f7dcfab5341e84a58918f2fde0fc2be9c09264eb\",\n    \"beam_version\": \"6.1.11462\",\n    \"beam_version_major\": 6,\n    \"beam_version_minor\": 1,\n    \"beam_version_rev\": 11462\n  }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"api_xxx"}]},{"type":"text","value":" API version info"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"beam_xxx"}]},{"type":"text","value":" BEAM version info on top of which API is built ("},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam","rel":["nofollow"]},"children":[{"type":"text","value":"https://github.com/BeamMW/beam"}]},{"type":"text","value":")"}]}]},{"type":"element","tag":"h2","props":{"id":"ipfs_add"},"children":[{"type":"text","value":"ipfs_add"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Add data to IPFS local node and pin it. Action is automatically cancelled on API restart."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"method\": \"ipfs_add\", \n    \"params\":\n    {\n        \"data\" : [1, 2, 3],\n        \"pin\"  : true,\n        \"timeout\": 5000\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"method\": \"ipfs_add\", \n    \"params\":\n    {\n        \"data\" : [1, 2, 3],\n        \"pin\"  : true,\n        \"timeout\": 5000\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"data"}]},{"type":"text","value":" raw uint8 bytes array to store in IPFS"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"pin"}]},{"type":"text","value":" optional bool, if "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"true"}]},{"type":"text","value":" data would also be pinned to the local IPFS node. Default is "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"true"}]},{"type":"text","value":"."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"timeout"}]},{"type":"text","value":" timeout in milliseconds. By default method doesn't timeout"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"result\" : \n    {\n        \"hash\" : \"QmWWQSuPMS6aXCbZKpEjPHPUZN2NjB3YrhJTHsV4X3vb2t\",\n        \"pinned\": true\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"result\" : \n    {\n        \"hash\" : \"QmWWQSuPMS6aXCbZKpEjPHPUZN2NjB3YrhJTHsV4X3vb2t\",\n        \"pinned\": true\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"hash"}]},{"type":"text","value":" IPFS hash of the added data"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"pinned"}]},{"type":"text","value":" bool flag that indicates if data has been pinned or just added"}]}]},{"type":"element","tag":"h2","props":{"id":"ipfs_hash"},"children":[{"type":"text","value":"ipfs_hash"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Calculate IPFS hash (CID) of the data"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"method\": \"ipfs_hash\", \n    \"params\":\n    {\n        \"data\" : [1, 2, 3],\n        \"timeout\": 5000\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"method\": \"ipfs_hash\", \n    \"params\":\n    {\n        \"data\" : [1, 2, 3],\n        \"timeout\": 5000\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"data"}]},{"type":"text","value":" raw uint8 bytes to calculate hash of"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"timeout"}]},{"type":"text","value":" timeout in milliseconds. By default method doesn't timeout"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"result\" : \n    {\n        \"hash\" : \"QmWWQSuPMS6aXCbZKpEjPHPUZN2NjB3YrhJTHsV4X3vb2t\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"result\" : \n    {\n        \"hash\" : \"QmWWQSuPMS6aXCbZKpEjPHPUZN2NjB3YrhJTHsV4X3vb2t\"\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"hash"}]},{"type":"text","value":" IPFS hash of the data"}]}]},{"type":"element","tag":"h2","props":{"id":"ipfs_get"},"children":[{"type":"text","value":"ipfs_get"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Get data from IPFS by hash. Action is automatically cancelled on API restart. May take a lot of time if data is not present on the local node."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"method\": \"ipfs_get\", \n    \"params\":\n    {\n        \"hash\" : \"QmWWQSuPMS6aXCbZKpEjPHPUZN2NjB3YrhJTHsV4X3vb2t\",\n        \"timeout\": 5000\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"method\": \"ipfs_get\", \n    \"params\":\n    {\n        \"hash\" : \"QmWWQSuPMS6aXCbZKpEjPHPUZN2NjB3YrhJTHsV4X3vb2t\",\n        \"timeout\": 5000\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"hash"}]},{"type":"text","value":" IPFS has of the data to get"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"timeout"}]},{"type":"text","value":" timeout in milliseconds. By default method doesn't timeout"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"result\" : \n    {\n        \"hash\" : \"QmWWQSuPMS6aXCbZKpEjPHPUZN2NjB3YrhJTHsV4X3vb2t\",\n        \"data\" : [1, 2, 3]\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"result\" : \n    {\n        \"hash\" : \"QmWWQSuPMS6aXCbZKpEjPHPUZN2NjB3YrhJTHsV4X3vb2t\",\n        \"data\" : [1, 2, 3]\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"hash"}]},{"type":"text","value":" IPFS hash of the data"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"data"}]},{"type":"text","value":" actual data as uint8 bytes array"}]}]},{"type":"element","tag":"h2","props":{"id":"ipfs_pin"},"children":[{"type":"text","value":"ipfs_pin"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Pin data to the local node. If data is not stored in the local node it is discovered and downloaded ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"ipfs_get"}]},{"type":"text","value":"). Action is automatically cancelled at API restart. May take a lot of time."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"method\": \"ipfs_pin\", \n    \"params\":\n    {\n        \"hash\" : \"QmWWQSuPMS6aXCbZKpEjPHPUZN2NjB3YrhJTHsV4X3vb2t\",\n        \"timeout\": 5000\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"method\": \"ipfs_pin\", \n    \"params\":\n    {\n        \"hash\" : \"QmWWQSuPMS6aXCbZKpEjPHPUZN2NjB3YrhJTHsV4X3vb2t\",\n        \"timeout\": 5000\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"hash"}]},{"type":"text","value":" IPFS has of the data to pin"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"timeout"}]},{"type":"text","value":" timeout in milliseconds. By default method doesn't timeout"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"result\" : \n    {\n        \"hash\" : \"QmWWQSuPMS6aXCbZKpEjPHPUZN2NjB3YrhJTHsV4X3vb2t\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"result\" : \n    {\n        \"hash\" : \"QmWWQSuPMS6aXCbZKpEjPHPUZN2NjB3YrhJTHsV4X3vb2t\"\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"hash"}]},{"type":"text","value":" IPFS hash of the pinned data"}]}]},{"type":"element","tag":"h2","props":{"id":"ipfs_unpin"},"children":[{"type":"text","value":"ipfs_unpin"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Unpin data from the local node. Data is not deleted and will be available via "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"ipfs_get"}]},{"type":"text","value":" until garbage collected."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"method\": \"ipfs_unpin\", \n    \"params\":\n    {\n        \"hash\" : \"QmWWQSuPMS6aXCbZKpEjPHPUZN2NjB3YrhJTHsV4X3vb2t\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"method\": \"ipfs_unpin\", \n    \"params\":\n    {\n        \"hash\" : \"QmWWQSuPMS6aXCbZKpEjPHPUZN2NjB3YrhJTHsV4X3vb2t\"\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"hash"}]},{"type":"text","value":" IPFS has of the data to unpin"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"result\" : \n    {\n        \"hash\" : \"QmWWQSuPMS6aXCbZKpEjPHPUZN2NjB3YrhJTHsV4X3vb2t\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"result\" : \n    {\n        \"hash\" : \"QmWWQSuPMS6aXCbZKpEjPHPUZN2NjB3YrhJTHsV4X3vb2t\"\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"hash"}]},{"type":"text","value":" IPFS hash of the unpinned data"}]}]},{"type":"element","tag":"h2","props":{"id":"ipfs_gc"},"children":[{"type":"text","value":"ipfs_gc"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Garbage collect IPFS storage, i.e. delete unpinned data until storage has at least 10% of free space (default settings). May take a lot of time. In desktop client gc is run automatically every hour."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"method\": \"ipfs_gc\", \n    \"params\":\n    {\n        \"timeout\" : 60000\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"method\": \"ipfs_gc\", \n    \"params\":\n    {\n        \"timeout\" : 60000\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"timeout"}]},{"type":"text","value":" timeout in milliseconds. By default method doesn't timeout"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"result\" : \n    {\n        \"result\" : true\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"result\" : \n    {\n        \"result\" : true\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"result"}]},{"type":"text","value":" success flag"}]}]},{"type":"element","tag":"h2","props":{"id":"ev_subunsub"},"children":[{"type":"text","value":"ev_subunsub"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Subscribe/unsubscribe to API events."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\": \"2.0\", \n    \"id\": 1,\n    \"method\": \"ev_subunsub\",\n    \"params\": {\n        \"ev_sync_progress\": true,\n        \"ev_system_state\": true,\n        \"ev_assets_changed\": true,\n        \"ev_addrs_changed\": true,\n        \"ev_utxos_changed\": true,\n        \"ev_txs_changed\": true\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\": \"2.0\", \n    \"id\": 1,\n    \"method\": \"ev_subunsub\",\n    \"params\": {\n        \"ev_sync_progress\": true,\n        \"ev_system_state\": true,\n        \"ev_assets_changed\": true,\n        \"ev_addrs_changed\": true,\n        \"ev_utxos_changed\": true,\n        \"ev_txs_changed\": true\n    }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n  \"id\": 1,\n  \"jsonrpc\": \"2.0\",\n  \"result\": true\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n  \"id\": 1,\n  \"jsonrpc\": \"2.0\",\n  \"result\": true\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"ev_xxxx"}]},{"type":"text","value":" corresponding event name, optional, bool. True subscribes to the event, false unsubscribes. All "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"ev_xxxx"}]},{"type":"text","value":" paramaters are optional. If event is not specified its subscription state remains unchanged. Immediately after subscription corresponding event is generated providing the latest state."}]}]},{"type":"element","tag":"h2","props":{"id":"ev_sync_progress"},"children":[{"type":"text","value":"ev_sync_progress"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Event is generated while wallet is being synced with the blockchain. Let's consider the following situation:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"current wallet height is 105"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"block 106 has been just mined"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In this case the following sequence of events would be generated:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"1. <--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n  \"id\": \"ev_sync_progress\",\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"current_height\": 105,\n    \"current_state_hash\": \"76de9b9bcbc1b1a4775d54f2b98c3edc222f5a86698209200e459043fe218a29\",\n    \"current_state_timestamp\": 1625146903,\n    \"sync_requests_done\": 0,\n    \"sync_requests_total\": 2,\n    \"is_in_sync\": true,\n    \"prev_state_hash\": \"3a2a3bd55615d3de86b86c920f715ad47973be7dbc2fde2d4c39b937e96177e1\",\n    \"tip_height\": 106,\n    \"tip_prev_state_hash\": \"76de9b9bcbc1b1a4775d54f2b98c3edc222f5a86698209200e459043fe218a29\",\n    \"tip_state_hash\": \"7bb40b96ee4606c3e8f085aa633b66c14f041178142eb1077521621cde47e3b1\",\n    \"tip_state_timestamp\": 1625146951\n  }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n  \"id\": \"ev_sync_progress\",\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"current_height\": 105,\n    \"current_state_hash\": \"76de9b9bcbc1b1a4775d54f2b98c3edc222f5a86698209200e459043fe218a29\",\n    \"current_state_timestamp\": 1625146903,\n    \"sync_requests_done\": 0,\n    \"sync_requests_total\": 2,\n    \"is_in_sync\": true,\n    \"prev_state_hash\": \"3a2a3bd55615d3de86b86c920f715ad47973be7dbc2fde2d4c39b937e96177e1\",\n    \"tip_height\": 106,\n    \"tip_prev_state_hash\": \"76de9b9bcbc1b1a4775d54f2b98c3edc222f5a86698209200e459043fe218a29\",\n    \"tip_state_hash\": \"7bb40b96ee4606c3e8f085aa633b66c14f041178142eb1077521621cde47e3b1\",\n    \"tip_state_timestamp\": 1625146951\n  }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In event 1 API tells that there is 1 new block to sync ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"tip_height"}]},{"type":"text","value":" - "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"current_height"}]},{"type":"text","value":" is 1) and nothing has been yet done ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"sync_requests_done"}]},{"type":"text","value":" is 0). Current height is 105 ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"current_height"}]},{"type":"text","value":"), target height is 106 ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"tip_height"}]},{"type":"text","value":") and our wallet is still in a 'synce tolerance range' ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"is_in_sync"}]},{"type":"text","value":" is true). If "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"is_in_sync"}]},{"type":"text","value":" is false all the requested/pending transaction would be delayed until the wallet is synced."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"2. <--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n  \"id\": \"ev_sync_progress\",\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"current_height\": 105,\n    \"current_state_hash\": \"76de9b9bcbc1b1a4775d54f2b98c3edc222f5a86698209200e459043fe218a29\",\n    \"current_state_timestamp\": 1625146903,\n    \"sync_requests_done\": 1,\n    \"sync_requests_total\": 2,\n    \"is_in_sync\": true,\n    \"prev_state_hash\": \"3a2a3bd55615d3de86b86c920f715ad47973be7dbc2fde2d4c39b937e96177e1\",\n    \"tip_height\": 106,\n    \"tip_prev_state_hash\": \"76de9b9bcbc1b1a4775d54f2b98c3edc222f5a86698209200e459043fe218a29\",\n    \"tip_state_hash\": \"7bb40b96ee4606c3e8f085aa633b66c14f041178142eb1077521621cde47e3b1\",\n    \"tip_state_timestamp\": 1625146951\n  }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n  \"id\": \"ev_sync_progress\",\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"current_height\": 105,\n    \"current_state_hash\": \"76de9b9bcbc1b1a4775d54f2b98c3edc222f5a86698209200e459043fe218a29\",\n    \"current_state_timestamp\": 1625146903,\n    \"sync_requests_done\": 1,\n    \"sync_requests_total\": 2,\n    \"is_in_sync\": true,\n    \"prev_state_hash\": \"3a2a3bd55615d3de86b86c920f715ad47973be7dbc2fde2d4c39b937e96177e1\",\n    \"tip_height\": 106,\n    \"tip_prev_state_hash\": \"76de9b9bcbc1b1a4775d54f2b98c3edc222f5a86698209200e459043fe218a29\",\n    \"tip_state_hash\": \"7bb40b96ee4606c3e8f085aa633b66c14f041178142eb1077521621cde47e3b1\",\n    \"tip_state_timestamp\": 1625146951\n  }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In event 2 API tells that 1 sync request has been processed ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"sync_requests_done"}]},{"type":"text","value":" is 1). It can be block body downloaded, utxo received &c. Since "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"sync_requests_total"}]},{"type":"text","value":" is 2 not everything is received, some requests are still pending."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"3. <--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n  \"id\": \"ev_sync_progress\",\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"current_height\": 105,\n    \"current_state_hash\": \"76de9b9bcbc1b1a4775d54f2b98c3edc222f5a86698209200e459043fe218a29\",\n    \"current_state_timestamp\": 1625146903,\n    \"sync_requests_done\": 2,\n    \"sync_requests_total\": 2,\n    \"is_in_sync\": true,\n    \"prev_state_hash\": \"3a2a3bd55615d3de86b86c920f715ad47973be7dbc2fde2d4c39b937e96177e1\",\n    \"tip_height\": 106,\n    \"tip_prev_state_hash\": \"76de9b9bcbc1b1a4775d54f2b98c3edc222f5a86698209200e459043fe218a29\",\n    \"tip_state_hash\": \"7bb40b96ee4606c3e8f085aa633b66c14f041178142eb1077521621cde47e3b1\",\n    \"tip_state_timestamp\": 1625146951\n  }\n}\n\nIn event 3 API tells that 2 sync events have been receive (`sync_requests_done` is 2) and since `sync_requests_total` is 2 too we can conclude that everything is downloaded now though not yet processed and wallet state has not yet moved to the next block (current_height is still not changed and is 105).\n\n`4. <--`\n```json\n{\n  \"id\": \"ev_sync_progress\",\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"current_height\": 106,\n    \"current_state_hash\": \"7bb40b96ee4606c3e8f085aa633b66c14f041178142eb1077521621cde47e3b1\",\n    \"current_state_timestamp\": 1625146903,\n    \"sync_requests_done\": 2,\n    \"sync_requests_total\": 2,\n    \"is_in_sync\": true,\n    \"prev_state_hash\": \"76de9b9bcbc1b1a4775d54f2b98c3edc222f5a86698209200e459043fe218a29\",\n    \"tip_height\": 106,\n    \"tip_prev_state_hash\": \"76de9b9bcbc1b1a4775d54f2b98c3edc222f5a86698209200e459043fe218a29\",\n    \"tip_state_hash\": \"7bb40b96ee4606c3e8f085aa633b66c14f041178142eb1077521621cde47e3b1\",\n    \"tip_state_timestamp\": 1625146951\n  }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n  \"id\": \"ev_sync_progress\",\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"current_height\": 105,\n    \"current_state_hash\": \"76de9b9bcbc1b1a4775d54f2b98c3edc222f5a86698209200e459043fe218a29\",\n    \"current_state_timestamp\": 1625146903,\n    \"sync_requests_done\": 2,\n    \"sync_requests_total\": 2,\n    \"is_in_sync\": true,\n    \"prev_state_hash\": \"3a2a3bd55615d3de86b86c920f715ad47973be7dbc2fde2d4c39b937e96177e1\",\n    \"tip_height\": 106,\n    \"tip_prev_state_hash\": \"76de9b9bcbc1b1a4775d54f2b98c3edc222f5a86698209200e459043fe218a29\",\n    \"tip_state_hash\": \"7bb40b96ee4606c3e8f085aa633b66c14f041178142eb1077521621cde47e3b1\",\n    \"tip_state_timestamp\": 1625146951\n  }\n}\n\nIn event 3 API tells that 2 sync events have been receive (`sync_requests_done` is 2) and since `sync_requests_total` is 2 too we can conclude that everything is downloaded now though not yet processed and wallet state has not yet moved to the next block (current_height is still not changed and is 105).\n\n`4. <--`\n```json\n{\n  \"id\": \"ev_sync_progress\",\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"current_height\": 106,\n    \"current_state_hash\": \"7bb40b96ee4606c3e8f085aa633b66c14f041178142eb1077521621cde47e3b1\",\n    \"current_state_timestamp\": 1625146903,\n    \"sync_requests_done\": 2,\n    \"sync_requests_total\": 2,\n    \"is_in_sync\": true,\n    \"prev_state_hash\": \"76de9b9bcbc1b1a4775d54f2b98c3edc222f5a86698209200e459043fe218a29\",\n    \"tip_height\": 106,\n    \"tip_prev_state_hash\": \"76de9b9bcbc1b1a4775d54f2b98c3edc222f5a86698209200e459043fe218a29\",\n    \"tip_state_hash\": \"7bb40b96ee4606c3e8f085aa633b66c14f041178142eb1077521621cde47e3b1\",\n    \"tip_state_timestamp\": 1625146951\n  }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In event 4 API tells that the wallet state is moved to the last tip ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"sync_requests_total"}]},{"type":"text","value":" == "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"sync_requests_done"}]},{"type":"text","value":" == 0 AND "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"tip_state_hash"}]},{"type":"text","value":" == "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"current_state_hash"}]},{"type":"text","value":" AND "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"tip_height"}]},{"type":"text","value":" == "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"current_height"}]},{"type":"text","value":")."}]},{"type":"element","tag":"h2","props":{"id":"ev_system_state"},"children":[{"type":"text","value":"ev_system_state"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Generated when wallet moves to the next state, for example when new block is mined and wallet has acknowledged and processed this fact or when new block is delivered during the sync."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n  \"id\": \"ev_system_state\",\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"current_height\": 113738,\n    \"current_state_hash\": \"4bbf9eb9cc409ce17c49cc7952edfed7583e8636e3e5d84b2034779034cb439c\",\n    \"current_state_timestamp\": 1625663362,\n    \"is_in_sync\": true,\n    \"prev_state_hash\": \"4995999f065eb5f04687fe9a43b93d7e344e99d17f2e2703260904f70aabfbd0\",\n    \"tip_height\": 113738,\n    \"tip_prev_state_hash\": \"4995999f065eb5f04687fe9a43b93d7e344e99d17f2e2703260904f70aabfbd0\",\n    \"tip_state_hash\": \"4bbf9eb9cc409ce17c49cc7952edfed7583e8636e3e5d84b2034779034cb439c\",\n    \"tip_state_timestamp\": 1625663362\n  }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n  \"id\": \"ev_system_state\",\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"current_height\": 113738,\n    \"current_state_hash\": \"4bbf9eb9cc409ce17c49cc7952edfed7583e8636e3e5d84b2034779034cb439c\",\n    \"current_state_timestamp\": 1625663362,\n    \"is_in_sync\": true,\n    \"prev_state_hash\": \"4995999f065eb5f04687fe9a43b93d7e344e99d17f2e2703260904f70aabfbd0\",\n    \"tip_height\": 113738,\n    \"tip_prev_state_hash\": \"4995999f065eb5f04687fe9a43b93d7e344e99d17f2e2703260904f70aabfbd0\",\n    \"tip_state_hash\": \"4bbf9eb9cc409ce17c49cc7952edfed7583e8636e3e5d84b2034779034cb439c\",\n    \"tip_state_timestamp\": 1625663362\n  }\n}\n"}]}]},{"type":"element","tag":"h2","props":{"id":"ev_addrs_changed"},"children":[{"type":"text","value":"ev_addrs_changed"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Event is generated when any address is changed/removed/updated &c."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n  \"id\": \"ev_addrs_changed\",\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n      \"change\": 3,\n      \"change_str\": \"reset\",\n      \"addrs\": [\n          {\n              \"address\": \"8xQnvWwS78RsbXmvV1wm2Spkye76z5FfiZH2zB3Jdw2BgWqUf4MC2StLVYrM4LvrWsMdY24b5hok4XvEoTBmHoaWBcEvr8nWTY259M4DnRJnRBgdNJEqRxenxRZox8DKnSoGiScV31dXLcxoRH2vFPcrxDsMGDAsyekVGz2NBPCwKFwCwTQwJpbhszCzxM843UMWQMxxoHADsTXnQnVW1Uc3quXgJdEr6tQ5dbgGWwYhNHU3f6mLFxNyxvrM7RfFY6LatPxJaC5M9o7Gg6TnpVc82GzVrKGNQoERJ9pFc7f6VM8w9dcn9CaC8yQvGevAnZqNTDEVpxAK81mJ3VFPUjbePWYQBdPQPm8AprTU1p4xhGHpbVaaTH967CJ86jAUXQEUrVq1wn4uPGLivhdnoWCdGujiZfwrfdPeQ698vm7Mh2HpooextAt4nzmSbEbPNtM5aCbeRyVv8BiEZ394WJCQaDRwHx2R3tfsHNCvTctCUy6NsonhmnSwvucY5KN71AtBGmxq8i\",\n              \"category\": \"\",\n              \"comment\": \"\",\n              \"create_time\": 1553174321,\n              \"duration\": 1520,\n              \"expired\": true,\n              \"own\": true,\n              \"own_id\": 16730903,\n              \"own_id_str\": \"16730903\",\n              \"identity\": \"2d8738b0424ad50631e902fab655e7e1795fbb8d92d47c4c8df7336870fcadf5\",\n              \"type\": \"offline\",\n              \"wallet_id\": \"22813f28ae198b1aa28aed3d0dc69a7c75f0a3c8b72c5950c997d0a569e74f90b61\"\n          },\n          {\n              \"address\": \"19e6ce53a137a1aa59ef19538c181acc5cd06cbfc7b985901345328786f8ae300a7\",\n              \"category\": \"\",\n              \"create_time\": 1553174321,\n              \"duration\": 1520,\n              \"expired\": true,\n              \"comment\": \"\",\n              \"own\": true,\n              \"own_id\": 16730903,\n              \"own_id_str\": \"16730903\",\n              \"identity\": \"9d99a7e3d1a6a73fbfa01efe63020135654f7b1561d65c74266fe9db6e80b096\",\n              \"type\": \"regular\",\n              \"wallet_id\": \"19e6ce53a137a1aa59ef19538c181acc5cd06cbfc7b985901345328786f8ae300a7\"\n          }\n      ]\n  }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n  \"id\": \"ev_addrs_changed\",\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n      \"change\": 3,\n      \"change_str\": \"reset\",\n      \"addrs\": [\n          {\n              \"address\": \"8xQnvWwS78RsbXmvV1wm2Spkye76z5FfiZH2zB3Jdw2BgWqUf4MC2StLVYrM4LvrWsMdY24b5hok4XvEoTBmHoaWBcEvr8nWTY259M4DnRJnRBgdNJEqRxenxRZox8DKnSoGiScV31dXLcxoRH2vFPcrxDsMGDAsyekVGz2NBPCwKFwCwTQwJpbhszCzxM843UMWQMxxoHADsTXnQnVW1Uc3quXgJdEr6tQ5dbgGWwYhNHU3f6mLFxNyxvrM7RfFY6LatPxJaC5M9o7Gg6TnpVc82GzVrKGNQoERJ9pFc7f6VM8w9dcn9CaC8yQvGevAnZqNTDEVpxAK81mJ3VFPUjbePWYQBdPQPm8AprTU1p4xhGHpbVaaTH967CJ86jAUXQEUrVq1wn4uPGLivhdnoWCdGujiZfwrfdPeQ698vm7Mh2HpooextAt4nzmSbEbPNtM5aCbeRyVv8BiEZ394WJCQaDRwHx2R3tfsHNCvTctCUy6NsonhmnSwvucY5KN71AtBGmxq8i\",\n              \"category\": \"\",\n              \"comment\": \"\",\n              \"create_time\": 1553174321,\n              \"duration\": 1520,\n              \"expired\": true,\n              \"own\": true,\n              \"own_id\": 16730903,\n              \"own_id_str\": \"16730903\",\n              \"identity\": \"2d8738b0424ad50631e902fab655e7e1795fbb8d92d47c4c8df7336870fcadf5\",\n              \"type\": \"offline\",\n              \"wallet_id\": \"22813f28ae198b1aa28aed3d0dc69a7c75f0a3c8b72c5950c997d0a569e74f90b61\"\n          },\n          {\n              \"address\": \"19e6ce53a137a1aa59ef19538c181acc5cd06cbfc7b985901345328786f8ae300a7\",\n              \"category\": \"\",\n              \"create_time\": 1553174321,\n              \"duration\": 1520,\n              \"expired\": true,\n              \"comment\": \"\",\n              \"own\": true,\n              \"own_id\": 16730903,\n              \"own_id_str\": \"16730903\",\n              \"identity\": \"9d99a7e3d1a6a73fbfa01efe63020135654f7b1561d65c74266fe9db6e80b096\",\n              \"type\": \"regular\",\n              \"wallet_id\": \"19e6ce53a137a1aa59ef19538c181acc5cd06cbfc7b985901345328786f8ae300a7\"\n          }\n      ]\n  }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"change"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"change_str"}]},{"type":"text","value":" - check "},{"type":"element","tag":"a","props":{"href":"#ev_xxx_changed-events"},"children":[{"type":"text","value":"ev_XXX_changed Events"}]},{"type":"text","value":" section for details"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"addrs"}]},{"type":"text","value":" - array of changed addresses"}]}]},{"type":"element","tag":"h2","props":{"id":"ev_assets_changed"},"children":[{"type":"text","value":"ev_assets_changed"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Event is generated when an asset is changed, i.e. metadata refreshed or metadata dropped due to the asset delisting or internal metadata processing error. Note that metadata can be dropped while an asset is still on chain but local metadata becomes invalid, for example in certain situations during rollback. If you have any asset coins in wallet but no valid metadata for a given asset id refresh it using "},{"type":"element","tag":"a","props":{"href":"#tx_asset_info"},"children":[{"type":"text","value":"tx_asset_info"}]},{"type":"text","value":". Metadata is also automatically refreshed during the send/receive/issue/consume operations if necessary."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Metadata dropped:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<-"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n  \"id\": \"ev_assets_changed\",\n  \"jsonrpc\": \"2.0\",\n  \"result\": { \n      \"change\": 1,\n      \"change_str\": \"removed\",\n      \"assets\": [\n         {\"asset_id\": 121}, \n         {\"asset_id\": 122} \n      ]\n  }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n  \"id\": \"ev_assets_changed\",\n  \"jsonrpc\": \"2.0\",\n  \"result\": { \n      \"change\": 1,\n      \"change_str\": \"removed\",\n      \"assets\": [\n         {\"asset_id\": 121}, \n         {\"asset_id\": 122} \n      ]\n  }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"change"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"change_str"}]},{"type":"text","value":" - check "},{"type":"element","tag":"a","props":{"href":"#ev_xxx_changed-events"},"children":[{"type":"text","value":"ev_XXX_changed Events"}]},{"type":"text","value":" section for details"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"assets"}]},{"type":"text","value":" - array of changed assets. In case of the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"removed"}]},{"type":"text","value":" event only asset ids are provided"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Metadata updated:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<-"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"id\": \"ev_assets_changed\",\n    \"jsonrpc\": \"2.0\",\n    \"result\": {\n        \"change\": 3,\n        \"change_str\": \"reset\",\n        \"assets\": [\n           {\n              \"asset_id\": 1,\n              \"emission\": 2000000000,\n              \"emission_str\": \"2000000000\",\n              \"isOwned\": 1,\n              \"lockHeight\": 39,\n              \"metadata\": \"STD:SCH_VER=1;N=YAN Coin;SN=YAN;UN=Yan;NTHUN=Yanik\",\n              \"metadata_kv\": true,\n              \"metadata_pairs\": {\n                 \"N\": \"YAN Coin\",\n                 \"NTHUN\": \"Yanik\",\n                 \"SCH_VER\": \"1\",\n                 \"SN\": \"YAN\",\n                 \"UN\": \"Yan\"\n              },\n              \"metadata_std_min\": true,\n              \"metadata_std\": true,\n              \"ownerId\": \"0ae08a49e018e98177774294107dc033790b87538e54a20e99c6b98f1dbd39ce\",\n              \"refreshHeight\": 927\n          }\n       ]\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"id\": \"ev_assets_changed\",\n    \"jsonrpc\": \"2.0\",\n    \"result\": {\n        \"change\": 3,\n        \"change_str\": \"reset\",\n        \"assets\": [\n           {\n              \"asset_id\": 1,\n              \"emission\": 2000000000,\n              \"emission_str\": \"2000000000\",\n              \"isOwned\": 1,\n              \"lockHeight\": 39,\n              \"metadata\": \"STD:SCH_VER=1;N=YAN Coin;SN=YAN;UN=Yan;NTHUN=Yanik\",\n              \"metadata_kv\": true,\n              \"metadata_pairs\": {\n                 \"N\": \"YAN Coin\",\n                 \"NTHUN\": \"Yanik\",\n                 \"SCH_VER\": \"1\",\n                 \"SN\": \"YAN\",\n                 \"UN\": \"Yan\"\n              },\n              \"metadata_std_min\": true,\n              \"metadata_std\": true,\n              \"ownerId\": \"0ae08a49e018e98177774294107dc033790b87538e54a20e99c6b98f1dbd39ce\",\n              \"refreshHeight\": 927\n          }\n       ]\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"change"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"change_str"}]},{"type":"text","value":" - check "},{"type":"element","tag":"a","props":{"href":"#ev_xxx_changed-events"},"children":[{"type":"text","value":"ev_XXX_changed Events"}]},{"type":"text","value":" section for details"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"assets"}]},{"type":"text","value":" array of changed assets, most up to date meta. Check "},{"type":"element","tag":"a","props":{"href":"#get_asset_info"},"children":[{"type":"text","value":"get_asset_info"}]},{"type":"text","value":" for more details"}]}]},{"type":"element","tag":"h2","props":{"id":"ev_utxos_changed"},"children":[{"type":"text","value":"ev_utxos_changed"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Event is generated when UTXOs/Coins are changed. If assets are not enabled event is generated only for BEAM UTXOs. To get asset UTXOs notifications assets should be enabled ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--enable_assets"}]},{"type":"text","value":")."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<-"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"id\": \"ev_utxos_changed\",\n    \"jsonrpc\": \"2.0\",\n    \"result\": {\n        \"change\": 3,\n        \"change_str\": \"reset\",\n        \"utxos\": [\n            {\n                \"id\": 123,\n                \"asset_id\": 0,\n                \"amount\": 12345,\n                \"maturity\": 60,\n                \"type\": \"mine\",\n                \"createTxId\": \"10c4b760c842433cb58339a0fafef3db\",\n                \"spentTxId\": \"\",\n                \"status\": 2,\n                \"status_string\": \"maturing\"\n            } \n        ]\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"id\": \"ev_utxos_changed\",\n    \"jsonrpc\": \"2.0\",\n    \"result\": {\n        \"change\": 3,\n        \"change_str\": \"reset\",\n        \"utxos\": [\n            {\n                \"id\": 123,\n                \"asset_id\": 0,\n                \"amount\": 12345,\n                \"maturity\": 60,\n                \"type\": \"mine\",\n                \"createTxId\": \"10c4b760c842433cb58339a0fafef3db\",\n                \"spentTxId\": \"\",\n                \"status\": 2,\n                \"status_string\": \"maturing\"\n            } \n        ]\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"change"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"change_str"}]},{"type":"text","value":" - check "},{"type":"element","tag":"a","props":{"href":"#ev_xxx_changed-events"},"children":[{"type":"text","value":"ev_XXX_changed Events"}]},{"type":"text","value":" section for details"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"coins"}]},{"type":"text","value":" array of changed utxos, most up to date meta. Check "},{"type":"element","tag":"a","props":{"href":"#get_utxo"},"children":[{"type":"text","value":"get_utxo"}]},{"type":"text","value":" for more details"}]}]},{"type":"element","tag":"h2","props":{"id":"ev_txs_changed"},"children":[{"type":"text","value":"ev_txs_changed"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Event is generated when transactions are changed."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<-"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"id\": \"ev_txs_changed\",\n    \"jsonrpc\": \"2.0\",\n    \"result\": {\n        \"change\": 3,\n        \"change_str\": \"reset\",\n        \"txs\": [\n            {\n                \"txId\" : \"10c4b760c842433cb58339a0fafef3db\",\n                \"asset_id\": 0,\n                \"comment\": \"\",\n                \"fee\": 100,\n                \"kernel\": \"0000000000000000000000000000000000000000000000000000000000000000\",\n                \"receiver\": \"472e17b0419055ffee3b3813b98ae671579b0ac0dcd6f1a23b11a75ab148cc67\",\n                \"sender\": \"f287176bdd517e9c277778e4c012bf6a3e687dd614fc552a1ed22a3fee7d94f2\",\n                \"status\": 4,\n                \"status_string\" : \"Failed\",\n                \"tx_type\": 0,\n                \"tx_type_string\": \"simple\",\n                \"failure_reason\" : \"No inputs\",\n                \"value\": 12342342,\n                \"create_time\" : 1551100217,\n                \"income\" : false,\n                \"rates\": [],\n                \"sender_identity\": \"a0a1ebbfeed5c312b309e32715c159e6b4548a6c6c3af25d0dbc16f37a1e9dd6\",\n                \"receiver_identity\": \"2d8738b0424ad50631e902fab655e7e1795fbb8d92d47c4c8df7336870fcadf5\",\n                \"token\": \"44pE7ySjZYjbLqwnTJANvr4BudMk1RdvWvaZnBvoCTwFnigfaTSza75bvw7x2GCa377Z4CSRRYZon44Ss9G9joSicNRAgts4u3pL6yV6jDQ6gAVJD9Scyr\"\n            } \n        ]\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"id\": \"ev_txs_changed\",\n    \"jsonrpc\": \"2.0\",\n    \"result\": {\n        \"change\": 3,\n        \"change_str\": \"reset\",\n        \"txs\": [\n            {\n                \"txId\" : \"10c4b760c842433cb58339a0fafef3db\",\n                \"asset_id\": 0,\n                \"comment\": \"\",\n                \"fee\": 100,\n                \"kernel\": \"0000000000000000000000000000000000000000000000000000000000000000\",\n                \"receiver\": \"472e17b0419055ffee3b3813b98ae671579b0ac0dcd6f1a23b11a75ab148cc67\",\n                \"sender\": \"f287176bdd517e9c277778e4c012bf6a3e687dd614fc552a1ed22a3fee7d94f2\",\n                \"status\": 4,\n                \"status_string\" : \"Failed\",\n                \"tx_type\": 0,\n                \"tx_type_string\": \"simple\",\n                \"failure_reason\" : \"No inputs\",\n                \"value\": 12342342,\n                \"create_time\" : 1551100217,\n                \"income\" : false,\n                \"rates\": [],\n                \"sender_identity\": \"a0a1ebbfeed5c312b309e32715c159e6b4548a6c6c3af25d0dbc16f37a1e9dd6\",\n                \"receiver_identity\": \"2d8738b0424ad50631e902fab655e7e1795fbb8d92d47c4c8df7336870fcadf5\",\n                \"token\": \"44pE7ySjZYjbLqwnTJANvr4BudMk1RdvWvaZnBvoCTwFnigfaTSza75bvw7x2GCa377Z4CSRRYZon44Ss9G9joSicNRAgts4u3pL6yV6jDQ6gAVJD9Scyr\"\n            } \n        ]\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"change"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"change_str"}]},{"type":"text","value":" - check "},{"type":"element","tag":"a","props":{"href":"#ev_xxx_changed-events"},"children":[{"type":"text","value":"ev_XXX_changed Events"}]},{"type":"text","value":" section for details"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"txs"}]},{"type":"text","value":" array of changed transactions. Check "},{"type":"element","tag":"a","props":{"href":"#tx_status"},"children":[{"type":"text","value":"tx_status"}]},{"type":"text","value":" for more details"}]}]},{"type":"element","tag":"h1","props":{"id":"ev_connection_changed"},"children":[{"type":"text","value":"ev_connection_changed"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Event is generated when wallet connection status is changed. For example, connected/disconnected to node, detected own node, etc."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n  \"id\": \"ev_connection_changed\",\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"node_connected\": true,\n    \"own_node\": false,\n  }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n  \"id\": \"ev_connection_changed\",\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"node_connected\": true,\n    \"own_node\": false,\n  }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"node_connected"}]},{"type":"text","value":" - if "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"true"}]},{"type":"text","value":" this means that wallet successfully connected at least to one node"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"own_node"}]},{"type":"text","value":" - "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"true"}]},{"type":"text","value":" if one of connected beam nodes has owner key"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"last_connect_error"}]},{"type":"text","value":" - this field contains a string with last connection error explanation"}]}]},{"type":"element","tag":"h2","props":{"id":"sign_message"},"children":[{"type":"text","value":"sign_message"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Generates Schnorr signature for a custom message with public key generated from the given key material."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"method\": \"sign_message\", \n    \"params\":\n    {\n        \"message\" : \"my message\",\n        \"key_material\": \"b51efe78d3e7c83c8dbc3d59d5e06b2bd770139e645bc19e50652632cbdd47d10000000047616c6c6572792d6b65792d6f776e6572\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"method\": \"sign_message\", \n    \"params\":\n    {\n        \"message\" : \"my message\",\n        \"key_material\": \"b51efe78d3e7c83c8dbc3d59d5e06b2bd770139e645bc19e50652632cbdd47d10000000047616c6c6572792d6b65792d6f776e6572\"\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"message"}]},{"type":"text","value":" user message to sign"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"key_material"}]},{"type":"text","value":" hex encoded key material for key generation. It could be retrieved from application shader"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"result\" : \n    {\n        \"signature\" : \"bb025df14a3f0539c4b89d5eeacb8510de5de49456cff3d4027323697469021b0022262fc2457523a28524e696ec3b2825e9c4558d78da2db165cd93b8710eb7b3\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"result\" : \n    {\n        \"signature\" : \"bb025df14a3f0539c4b89d5eeacb8510de5de49456cff3d4027323697469021b0022262fc2457523a28524e696ec3b2825e9c4558d78da2db165cd93b8710eb7b3\"\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"signature"}]},{"type":"text","value":" 65-byte hex encoded Schnorr signature. It signes SHA256(\"beam.signed.message\"+len(message)+message)"}]}]},{"type":"element","tag":"h2","props":{"id":"verify_signature"},"children":[{"type":"text","value":"verify_signature"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Verifies Schnorr signature for a custom message."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"method\": \"verify_signature\", \n    \"params\":\n    {\n        \"message\" : \"my message\",\n        \"public_key\": \"37b20c87f7b70c133e3c99e54e97b1febc51b61c0310a3a5ba6856748a67e9e601\",\n        \"signature\": \"bb025df14a3f0539c4b89d5eeacb8510de5de49456cff3d4027323697469021b0022262fc2457523a28524e696ec3b2825e9c4558d78da2db165cd93b8710eb7b3\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"method\": \"verify_signature\", \n    \"params\":\n    {\n        \"message\" : \"my message\",\n        \"public_key\": \"37b20c87f7b70c133e3c99e54e97b1febc51b61c0310a3a5ba6856748a67e9e601\",\n        \"signature\": \"bb025df14a3f0539c4b89d5eeacb8510de5de49456cff3d4027323697469021b0022262fc2457523a28524e696ec3b2825e9c4558d78da2db165cd93b8710eb7b3\"\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"message"}]},{"type":"text","value":" user message to sign"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"public_key"}]},{"type":"text","value":" 33 byte hex encoded public key"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"signature"}]},{"type":"text","value":" 65 byte hex encode signature"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"result\" : true\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"result\" : true\n}\n"}]}]},{"type":"element","tag":"h2","props":{"id":"derive_id"},"children":[{"type":"text","value":"derive_id"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Derives per-seed, per-app (if called from DApp), per-tag unique ID for DApps use."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"method\": \"derive_id\", \n    \"params\":\n    {\n        \"tag\" : \"anything\",\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"method\": \"derive_id\", \n    \"params\":\n    {\n        \"tag\" : \"anything\",\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"tag"}]},{"type":"text","value":" arbitrary string, cannot be empty. Every dapp would have different ID even with the same tag."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"result\" : {\n       \"hash\": \"bd1109eb4499d4c420c66d7b827f10ec3b6171a58f22c6c2f6168fdc58db595c01\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"result\" : {\n       \"hash\": \"bd1109eb4499d4c420c66d7b827f10ec3b6171a58f22c6c2f6168fdc58db595c01\"\n    }\n}\n"}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"whats-new-in-v71","depth":2,"text":"What's new in v7.1","children":[{"id":"new-methods","depth":3,"text":"New methods"}]},{"id":"api-error-codes","depth":2,"text":"API Error codes"},{"id":"api-methods","depth":2,"text":"API Methods","children":[{"id":"general-methods","depth":3,"text":"General methods"},{"id":"ipfs-methods","depth":3,"text":"IPFS methods"},{"id":"swap-methods","depth":3,"text":"SWAP methods"}]},{"id":"api-events","depth":2,"text":"API events"},{"id":"async-notice","depth":2,"text":"Async Notice"},{"id":"create_address","depth":2,"text":"create_address"},{"id":"validate_address","depth":2,"text":"validate_address"},{"id":"addr_list","depth":2,"text":"addr_list","children":[{"id":"identity","depth":3,"text":"Identity"}]},{"id":"delete_address","depth":2,"text":"delete_address"},{"id":"edit_address","depth":2,"text":"edit_address"},{"id":"tx_send","depth":2,"text":"tx_send"},{"id":"tx_split","depth":2,"text":"tx_split"},{"id":"tx_asset_issue","depth":2,"text":"tx_asset_issue"},{"id":"tx_asset_consume","depth":2,"text":"tx_asset_consume"},{"id":"tx_asset_info","depth":2,"text":"tx_asset_info"},{"id":"tx_cancel","depth":2,"text":"tx_cancel"},{"id":"tx_delete","depth":2,"text":"tx_delete"},{"id":"tx_status","depth":2,"text":"tx_status"},{"id":"tx_list","depth":2,"text":"tx_list","children":[{"id":"important-the-recommended-number-of-confirmations-for-beam-transfers-is-80-blocks","depth":3,"text":"IMPORTANT: The recommended number of confirmations for Beam transfers is 80 blocks."},{"id":"tx-statuses","depth":3,"text":"TX statuses"},{"id":"tx-types","depth":3,"text":"TX types"}]},{"id":"wallet_status","depth":2,"text":"wallet_status"},{"id":"get_utxo","depth":2,"text":"get_utxo"},{"id":"get_asset_info","depth":2,"text":"get_asset_info"},{"id":"generate_tx_id","depth":2,"text":"generate_tx_id"},{"id":"export_payment_proof","depth":2,"text":"export_payment_proof"},{"id":"verify_payment_proof","depth":2,"text":"verify_payment_proof"},{"id":"invoke_contract","depth":2,"text":"invoke_contract","children":[{"id":"shader-errors","depth":3,"text":"Shader Errors"},{"id":"code-caching","depth":3,"text":"Code caching"},{"id":"requests-queue","depth":3,"text":"Requests queue"}]},{"id":"process_invoke_data","depth":2,"text":"process_invoke_data"},{"id":"calc_change","depth":2,"text":"calc_change"},{"id":"block_details","depth":2,"text":"block_details"},{"id":"get_version","depth":2,"text":"get_version"},{"id":"ipfs_add","depth":2,"text":"ipfs_add"},{"id":"ipfs_hash","depth":2,"text":"ipfs_hash"},{"id":"ipfs_get","depth":2,"text":"ipfs_get"},{"id":"ipfs_pin","depth":2,"text":"ipfs_pin"},{"id":"ipfs_unpin","depth":2,"text":"ipfs_unpin"},{"id":"ipfs_gc","depth":2,"text":"ipfs_gc"},{"id":"ev_subunsub","depth":2,"text":"ev_subunsub"},{"id":"ev_sync_progress","depth":2,"text":"ev_sync_progress"},{"id":"ev_system_state","depth":2,"text":"ev_system_state"},{"id":"ev_addrs_changed","depth":2,"text":"ev_addrs_changed"},{"id":"ev_assets_changed","depth":2,"text":"ev_assets_changed"},{"id":"ev_utxos_changed","depth":2,"text":"ev_utxos_changed"},{"id":"ev_txs_changed","depth":2,"text":"ev_txs_changed"},{"id":"sign_message","depth":2,"text":"sign_message"},{"id":"verify_signature","depth":2,"text":"verify_signature"},{"id":"derive_id","depth":2,"text":"derive_id"}]}},"_type":"markdown","_id":"content:docs:core-tech:Beam-wallet-protocol-API-v7.1.md","_source":"content","_file":"docs/core-tech/Beam-wallet-protocol-API-v7.1.md","_extension":"md"},{"_path":"/docs/core-tech/beam-wallet-protocol-api-v7.2","_dir":"core-tech","_draft":false,"_partial":false,"_locale":"","title":"Beam Wallet Protocol API V72","description":"","body":{"type":"root","children":[{"type":"element","tag":"h2","props":{"id":"whats-new-in-v72"},"children":[{"type":"text","value":"What's new in v7.2"}]},{"type":"element","tag":"h3","props":{"id":"new-methods"},"children":[{"type":"text","value":"New methods"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"If you build wallet-api with BEAM_ASSET_SWAP_SUPPORT then you can use additional "},{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"ASSET SWAP API methods"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#assets_swap_offers_list"},"children":[{"type":"text","value":"assets_swap_offers_list"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#assets_swap_create"},"children":[{"type":"text","value":"assets_swap_create"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#assets_swap_cancel"},"children":[{"type":"text","value":"assets_swap_cancel"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#assets_swap_accept"},"children":[{"type":"text","value":"assets_swap_accept"}]}]}]},{"type":"element","tag":"h2","props":{"id":"api-error-codes"},"children":[{"type":"text","value":"API Error codes"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"List of the possible error codes (with messages):"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32600 InvalidJsonRpc (\"Invalid JSON-RPC.\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32601 NotFoundJsonRpc (\"Procedure not found.\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32602 InvalidParamsJsonRpc (\"Invalid parameters.\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32603 InternalErrorJsonRpc (\"Internal JSON-RPC error.\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32001 InvalidTxStatus (\"Invalid TX status.\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32002 UnknownApiKey (\"Unknown API key.\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32003 InvalidAddress (\"Invalid address.\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32004 InvalidTxId (\"Invalid transaction ID.\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32005 NotSupported (\"Feature is not supported\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32006 InvalidPaymentProof (\"Invalid payment proof provided\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32007 PaymentProofExportError (\"Cannot export payment proof\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32008 SwapFailToParseToken (\"Invalid swap token.\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32009 SwapFailToAcceptOwn (\"Can't accept own swap offer.\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32010 SwapNotEnoughtBeams (\"Not enought beams.\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32011 SwapFailToConnect (\"Doesn't have active connection.\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32012 DatabaseError (\"Database error\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32013 DatabaseNotFound (\"Database not found\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32014 ThrottleError (\"Requests limit exceeded\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32015 NotOpenedError (\"Wallet not opened\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32016 NoSwapsError (\"Swaps are not enabled\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32017 UnexpectedError (\"Unexpected call\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32018 ContractCompileError (\"Failed to compile contract\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32019 ContractError (\"Contract call failed\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32020 NotAllowedError (\"Call is not allowed\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32021 UserRejected (\"Call is rejected by user\")"}]}]},{"type":"element","tag":"h2","props":{"id":"api-methods"},"children":[{"type":"text","value":"API Methods"}]},{"type":"element","tag":"h3","props":{"id":"general-methods"},"children":[{"type":"text","value":"General methods"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#create_address"},"children":[{"type":"text","value":"create_address"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#delete_address"},"children":[{"type":"text","value":"delete_address"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#edit_address"},"children":[{"type":"text","value":"edit_address"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#addr_list"},"children":[{"type":"text","value":"addr_list"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#validate_address"},"children":[{"type":"text","value":"validate_address"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#tx_send"},"children":[{"type":"text","value":"tx_send"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#tx_asset_issue"},"children":[{"type":"text","value":"tx_asset_issue"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#tx_asset_consume"},"children":[{"type":"text","value":"tx_asset_consume"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#tx_asset_info"},"children":[{"type":"text","value":"tx_asset_info"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#tx_status"},"children":[{"type":"text","value":"tx_status"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#tx_split"},"children":[{"type":"text","value":"tx_split"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#tx_cancel"},"children":[{"type":"text","value":"tx_cancel"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#tx_delete"},"children":[{"type":"text","value":"tx_delete"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#get_utxo"},"children":[{"type":"text","value":"get_utxo"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#tx_list"},"children":[{"type":"text","value":"tx_list"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#wallet_status"},"children":[{"type":"text","value":"wallet_status"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#generate_tx_id"},"children":[{"type":"text","value":"generate_tx_id"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#export_payment_proof"},"children":[{"type":"text","value":"export_payment_proof"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#verify_payment_proof"},"children":[{"type":"text","value":"verify_payment_proof"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#get_asset_info"},"children":[{"type":"text","value":"get_asset_info"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#set_confirmations_count"},"children":[{"type":"text","value":"set_confirmations_count"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#get_confirmations_count"},"children":[{"type":"text","value":"get_confirmations_count"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#invoke_contract"},"children":[{"type":"text","value":"invoke_contract"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-async-orange"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#process_invoke_data"},"children":[{"type":"text","value":"process_invoke_data"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-async-orange"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#block_details"},"children":[{"type":"text","value":"block_details"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-async-orange"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#calc_change"},"children":[{"type":"text","value":"calc_change"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#get_version"},"children":[{"type":"text","value":"get_version"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#ev_subunsub"},"children":[{"type":"text","value":"ev_subunsub"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#sign_message"},"children":[{"type":"text","value":"sign_message"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#verify_signature"},"children":[{"type":"text","value":"verify_signature"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#derive_id"},"children":[{"type":"text","value":"derive_id"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]}]},{"type":"element","tag":"h3","props":{"id":"ipfs-methods"},"children":[{"type":"text","value":"IPFS methods"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#ipfs_add"},"children":[{"type":"text","value":"ipfs_add"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-async-orange"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#ipfs_hash"},"children":[{"type":"text","value":"ipfs_hash"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-async-orange"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#ipfs_get"},"children":[{"type":"text","value":"ipfs_get"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-async-orange"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#ipfs_pin"},"children":[{"type":"text","value":"ipfs_pin"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-async-orange"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#ipfs_unpin"},"children":[{"type":"text","value":"ipfs_unpin"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-async-orange"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#ipfs_gc"},"children":[{"type":"text","value":"ipfs_gc"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-async-orange"},"children":[]}]}]},{"type":"element","tag":"h3","props":{"id":"atomic-swap-methods"},"children":[{"type":"text","value":"ATOMIC SWAP methods"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"If you build "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"wallet-api"}]},{"type":"text","value":" with "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"BEAM_ATOMIC_SWAP_SUPPORT"}]},{"type":"text","value":" then you can use additional "},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/wiki/Beam-wallet-protocol-SWAP-API-(BETA)","rel":["nofollow"]},"children":[{"type":"text","value":"SWAP API methods"}]},{"type":"text","value":"."}]},{"type":"element","tag":"h3","props":{"id":"asset-swap-methods"},"children":[{"type":"text","value":"ASSET SWAP methods"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"wallet-api"}]},{"type":"text","value":" must be started with "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--enable_assets"}]},{"type":"text","value":" key"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#assets_swap_offers_list"},"children":[{"type":"text","value":"assets_swap_offers_list"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#assets_swap_create"},"children":[{"type":"text","value":"assets_swap_create"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#assets_swap_cancel"},"children":[{"type":"text","value":"assets_swap_cancel"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#assets_swap_accept"},"children":[{"type":"text","value":"assets_swap_accept"}]}]}]},{"type":"element","tag":"h2","props":{"id":"api-events"},"children":[{"type":"text","value":"API events"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Client should subscribe to events via "},{"type":"element","tag":"a","props":{"href":"#ev_subunsub"},"children":[{"type":"text","value":"ev_subunsub"}]},{"type":"text","value":" method. Events are generated by API when some entity/set of entities is changed. Every "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"changed"}]},{"type":"text","value":" event includes the following mandatory fields"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"change"}]},{"type":"text","value":" - numerical change type, possible values are\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"0"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"added"}]},{"type":"text","value":" - newly added entities are in the array"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"1"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"removed"}]},{"type":"text","value":" - removed entities are in the array"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"2"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"updated"}]},{"type":"text","value":" - updated entities are in the array"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"3"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"reset"}]},{"type":"text","value":" - discard all the previously stored entities, new ones are in the array"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"changestr"}]},{"type":"text","value":" - string representation of the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"change"}]},{"type":"text","value":" field, values are listed above"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"array of changed entities (name differs based on the entity type)"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#ev_sync_progress"},"children":[{"type":"text","value":"ev_sync_progress"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-async-orange"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#ev_system_state"},"children":[{"type":"text","value":"ev_system_state"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-async-orange"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#ev_addrs_changed"},"children":[{"type":"text","value":"ev_addrs_changed"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-async-orange"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#ev_assets_changed"},"children":[{"type":"text","value":"ev_assets_changed"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-async-orange"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#ev_utxos_changed"},"children":[{"type":"text","value":"ev_utxos_changed"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-async-orange"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#ev_txs_changed"},"children":[{"type":"text","value":"ev_txs_changed"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-async-orange"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#ev_connection_changed"},"children":[{"type":"text","value":"ev_connection_changed"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-async-orange"},"children":[]}]}]},{"type":"element","tag":"h2","props":{"id":"async-notice"},"children":[{"type":"text","value":"Async Notice"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Async method are asynchronous in nature. Please setup your API connection correspondingly (use keep alive HTTP or raw sockets)."}]},{"type":"element","tag":"h2","props":{"id":"create_address"},"children":[{"type":"text","value":"create_address"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Creates new receiver address."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\": \"2.0\", \n    \"id\": 1,\n    \"method\": \"create_address\", \n    \"params\":\n    {\n        \"type\": \"regular\",\n        \"expiration\": \"auto\",\n        \"comment\": \"John Smith\",\n        \"new_style_regular\" : true\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\": \"2.0\", \n    \"id\": 1,\n    \"method\": \"create_address\", \n    \"params\":\n    {\n        \"type\": \"regular\",\n        \"expiration\": \"auto\",\n        \"comment\": \"John Smith\",\n        \"new_style_regular\" : true\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"type"}]},{"type":"text","value":" the type of address, possible values are"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"regular"}]},{"type":"text","value":" - regular old-style address, default"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"offline"}]},{"type":"text","value":" - address offline transaction using Lelantus MW shielded pool, could be used more than once, there are no guaranties for extended privacy"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"max_privacy"}]},{"type":"text","value":" - address for guarantied maximum privacy transaction. Could be used only once."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"public_offline"}]},{"type":"text","value":" - address for donation, could be used as many times as you wish"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"regular_new"}]},{"type":"text","value":" - since v6.0, regular new-style address (base58), this address has SBBS internally"}]}]},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"Details of some address types are described "},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/wiki/Lelantus-CLI","rel":["nofollow"]},"children":[{"type":"text","value":"in this document"}]},{"type":"text","value":". Since v6.0, UI gives the sender an opportunity to choose between regular and offline send operation and the default address type provided via the \"receive\" UI dialog is an "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"offline"}]},{"type":"text","value":" address with "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"offline_payments=1"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"expiration"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"before v6.0 can be "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"expired/never/24h"}]},{"type":"text","value":"."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"since  v6.0 can be "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"expired/never/24h/auto"}]},{"type":"text","value":"."}]}]},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"Optional, by default address expires in 24 hours. "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"auto"}]},{"type":"text","value":" expiration means that address expires in 61 days (roughly 2 months). "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"auto"}]},{"type":"text","value":" addresses are renewed for another 2 months when any transaction is received with this address."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"comment"}]},{"type":"text","value":" - any string, optional."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"new_style_regular"}]},{"type":"text","value":" - if this flag is "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"true"}]},{"type":"text","value":" new style base58 address will be returned otherwise hexadecimal string will be returned, this option is ignored for the types different "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"regular"}]},{"type":"text","value":". "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"type=regular"}]},{"type":"text","value":" + "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"new_style_regular=true"}]},{"type":"text","value":" = "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"type=regular_new"}]},{"type":"text","value":"."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"offline_payments"}]},{"type":"text","value":" - number of offline payments embedded into an "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"offline"}]},{"type":"text","value":" address, default value is "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"1"}]},{"type":"text","value":". Valid only for the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"type=offline"}]},{"type":"text","value":"."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"All these address types could be passed as "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"address"}]},{"type":"text","value":" parameter of the "},{"type":"element","tag":"a","props":{"href":"#tx_send"},"children":[{"type":"text","value":"send"}]},{"type":"text","value":" method and/or used with the cli/UI. "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--enable_lelantus"}]},{"type":"text","value":" should be used in the command line of the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"wallet-api"}]},{"type":"text","value":" to enable sending/receiving using "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"offline"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"max_privacy"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"public_offline"}]},{"type":"text","value":" transactions. To generate "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"offline"}]},{"type":"text","value":"/"},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"max_privacy"}]},{"type":"text","value":"/"},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"public_offline"}]},{"type":"text","value":" addresses API must be connected to the own node (node with the wallet's viewer key)."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\" : \"2.0\", \n    \"id\" : 1,\n    \"result\" : \"472e17b0419055ffee3b3813b98ae671579b0ac0dcd6f1a23b11a75ab148cc67\"\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\" : \"2.0\", \n    \"id\" : 1,\n    \"result\" : \"472e17b0419055ffee3b3813b98ae671579b0ac0dcd6f1a23b11a75ab148cc67\"\n}\n"}]}]},{"type":"element","tag":"h2","props":{"id":"validate_address"},"children":[{"type":"text","value":"validate_address"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Just a simple validations, checks if the address isn't garbage and belongs to our elliptic curve. Also returns "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"is_mine == true"}]},{"type":"text","value":" if address is found in the local wallet DB."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"method\": \"validate_address\", \n    \"params\":\n    {\n        \"address\" : \"472e17b0419055ffee3b3813b98ae671579b0ac0dcd6f1a23b11a75ab148cc67\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"method\": \"validate_address\", \n    \"params\":\n    {\n        \"address\" : \"472e17b0419055ffee3b3813b98ae671579b0ac0dcd6f1a23b11a75ab148cc67\"\n    }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"result\" : \n    {\n        \"is_valid\" : true,\n        \"is_mine\" : false,\n        \"type\": \"offline\", \n        \"payments\": 3\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"result\" : \n    {\n        \"is_valid\" : true,\n        \"is_mine\" : false,\n        \"type\": \"offline\", \n        \"payments\": 3\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"type"}]},{"type":"text","value":" type of address. Check "},{"type":"element","tag":"a","props":{"href":"#create_address"},"children":[{"type":"text","value":"create_address"}]},{"type":"text","value":" for details"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"payments"}]},{"type":"text","value":" number of offline payments left for the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"offline"}]},{"type":"text","value":" address"}]}]},{"type":"element","tag":"h2","props":{"id":"addr_list"},"children":[{"type":"text","value":"addr_list"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Get addresses stored in the wallet database."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 8,\n    \"method\":\"addr_list\",\n    \"params\":\n    {\n        \"own\" : true\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 8,\n    \"method\":\"addr_list\",\n    \"params\":\n    {\n        \"own\" : true\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"own"}]},{"type":"text","value":", optional bool. If "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"true"}]},{"type":"text","value":" returns only own addresses, if "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"false"}]},{"type":"text","value":" returns only peer addresses. By default is false."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"id\": 8,\n    \"jsonrpc\": \"2.0\",\n    \"result\":\n    [{\n        \"address\": \"29510b33fac0cb20695fd3b836d835451e600c4224d8fb335dc1a68271deb9b6b5b\",\n        \"category\": \"\",\n        \"create_time\": 1553174321,\n        \"duration\": 1520,\n        \"expired\": true,\n        \"comment\": \"\",\n        \"own\": true,\n        \"own_id\": 16730903,\n        \"own_id_str\": \"16730903\",\n        \"identity\": \"2d8738b0424ad50631e902fab655e7e1795fbb8d92d47c4c8df7336870fcadf5\",\n        \"type\": \"regular\",\n        \"wallet_id\": \"29510b33fac0cb20695fd3b836d835451e600c4224d8fb335dc1a68271deb9b6b5b\"\n    }] \n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"id\": 8,\n    \"jsonrpc\": \"2.0\",\n    \"result\":\n    [{\n        \"address\": \"29510b33fac0cb20695fd3b836d835451e600c4224d8fb335dc1a68271deb9b6b5b\",\n        \"category\": \"\",\n        \"create_time\": 1553174321,\n        \"duration\": 1520,\n        \"expired\": true,\n        \"comment\": \"\",\n        \"own\": true,\n        \"own_id\": 16730903,\n        \"own_id_str\": \"16730903\",\n        \"identity\": \"2d8738b0424ad50631e902fab655e7e1795fbb8d92d47c4c8df7336870fcadf5\",\n        \"type\": \"regular\",\n        \"wallet_id\": \"29510b33fac0cb20695fd3b836d835451e600c4224d8fb335dc1a68271deb9b6b5b\"\n    }] \n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"address"}]},{"type":"text","value":" address that should be distributed among users and used to send funds to"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"own_id"}]},{"type":"text","value":" unsigned 64 bit index used to generate given address"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"own_id_str"}]},{"type":"text","value":" string representation of index used to generate given address (for JavaScript)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"identity"}]},{"type":"text","value":" identity linked to the given address. In UI and CLI called as \"wallet's signature\"."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"type"}]},{"type":"text","value":" address type. Consult "},{"type":"element","tag":"a","props":{"href":"#create_address"},"children":[{"type":"text","value":"create_address"}]},{"type":"text","value":" method for detailed description"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"wallet_id"}]},{"type":"text","value":" - Wallet ID (SBBS address) associated with the given address. This is the same as an SBBS address in CLI/UI. Note that not all address types have an associated SBBS address. For example non-own "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"max_privacy"}]},{"type":"text","value":" addresses do not have "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"wallet_id"}]},{"type":"text","value":". While own "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"max_privacy"}]},{"type":"text","value":" ones do it is recommended not to publish it. SBBS address can be safely published for "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"regular"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"regular_new"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"offline"}]},{"type":"text","value":" addresses."}]}]},{"type":"element","tag":"h3","props":{"id":"identity"},"children":[{"type":"text","value":"Identity"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Starting from version 4.2 we introduce an additional entity in order to make transfer more reliable. It is called "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"identity"}]},{"type":"text","value":". From version 6.1 in UI and CLI it  called as \"wallet's signature\". The main goal of "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"identity"}]},{"type":"text","value":" is to proof and ensure that transaction performs between claimed participants also it could be done using untrusted 3rd parties. The main scenario is "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"hardware wallet"}]},{"type":"text","value":" when host machine could be compromised, since it has ability to generate SBBS addresses, it can sign payment proof or accept transaction without need to ask hardware wallet about any secret, but if we give our identity to the other side (in addition to SBBS address), and this identity can be generated using hardware wallet only, then only hardware wallet can sign or approve transaction."}]},{"type":"element","tag":"h2","props":{"id":"delete_address"},"children":[{"type":"text","value":"delete_address"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Delete specific address from the wallet."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 8,\n    \"method\":\"delete_address\",\n    \"params\":\n    {\n        \"address\" : \"29510b33fac0cb20695fd3b836d835451e600c4224d8fb335dc1a68271deb9b6b5b\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 8,\n    \"method\":\"delete_address\",\n    \"params\":\n    {\n        \"address\" : \"29510b33fac0cb20695fd3b836d835451e600c4224d8fb335dc1a68271deb9b6b5b\"\n    }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"id\": 8,\n    \"jsonrpc\": \"2.0\",\n    \"result\": \"done\"\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"id\": 8,\n    \"jsonrpc\": \"2.0\",\n    \"result\": \"done\"\n}\n"}]}]},{"type":"element","tag":"h2","props":{"id":"edit_address"},"children":[{"type":"text","value":"edit_address"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Edit specific address. You can change the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"comment"}]},{"type":"text","value":" and/or "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"expiration"}]},{"type":"text","value":". Consult "},{"type":"element","tag":"a","props":{"href":"#create_address"},"children":[{"type":"text","value":"create_address"}]},{"type":"text","value":" for more details on acceptable values."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 8,\n    \"method\":\"edit_address\",\n    \"params\":\n    {\n        \"address\" : \"29510b33fac0cb20695fd3b836d835451e600c4224d8fb335dc1a68271deb9b6b5b\",\n        \"comment\" : \"John Smith\",\n        \"expiration\" : \"expired\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 8,\n    \"method\":\"edit_address\",\n    \"params\":\n    {\n        \"address\" : \"29510b33fac0cb20695fd3b836d835451e600c4224d8fb335dc1a68271deb9b6b5b\",\n        \"comment\" : \"John Smith\",\n        \"expiration\" : \"expired\"\n    }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"id\": 8,\n    \"jsonrpc\": \"2.0\",\n    \"result\": \"done\"\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"id\": 8,\n    \"jsonrpc\": \"2.0\",\n    \"result\": \"done\"\n}\n"}]}]},{"type":"element","tag":"h2","props":{"id":"tx_send"},"children":[{"type":"text","value":"tx_send"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Send BEAM or asset to a given address."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 2,\n    \"method\":\"tx_send\", \n    \"params\":\n    {\n        \"value\": 12342342,\n        \"fee\": 2,\n        \"from\": \"472e17b0419055ffee3b3813b98ae671579b0ac0dcd6f1a23b11a75ab148cc67\",\n        \"address\": \"472e17b0419055ffee3b3813b98ae671579b0ac0dcd6f1a23b11a75ab148cc67\",\n        \"comment\": \"thank you!\",\n        \"asset_id\": 1,\n        \"offline\": false\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 2,\n    \"method\":\"tx_send\", \n    \"params\":\n    {\n        \"value\": 12342342,\n        \"fee\": 2,\n        \"from\": \"472e17b0419055ffee3b3813b98ae671579b0ac0dcd6f1a23b11a75ab148cc67\",\n        \"address\": \"472e17b0419055ffee3b3813b98ae671579b0ac0dcd6f1a23b11a75ab148cc67\",\n        \"comment\": \"thank you!\",\n        \"asset_id\": 1,\n        \"offline\": false\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"value"}]},{"type":"text","value":" how much BEAM or asset to send in groth or asset groth."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"fee"}]},{"type":"text","value":" always in BEAM groth, optional. Omit for default fee."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"from"}]},{"type":"text","value":" own address, optional. If omitted new own address is generated and registered."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"address"}]},{"type":"text","value":" receiver's SBBS address or token. Token is an extension of SBBS address. It is a "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"base58"}]},{"type":"text","value":" encoded byte buffer which contains serialized parameters of a transaction. At least it contains SBBS "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"address"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"identity"}]},{"type":"text","value":"."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"comment"}]},{"type":"text","value":" transaction comment, optional."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"txId"}]},{"type":"text","value":" optional, you can provide your own transaction ID."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_id"}]},{"type":"text","value":" asset id to send, optional. Present starting from v5.0 and can be used only after Fork 2. Omit or set to 0 for BEAM transaction. If "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_id"}]},{"type":"text","value":" is non-zero assets must be enabled ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--enable_assets"}]},{"type":"text","value":") or method would fail."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"offline"}]},{"type":"text","value":" - since v6.0 offline addresses by default start the regular online transaction. Specify "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"\"offline\":true\""}]},{"type":"text","value":" to start an offline transaction. Applied only for "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"offline"}]},{"type":"text","value":" addresses and ignored for all other address types."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"You can preselect specific UTXOs for a transaction and fee via optional "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"coins"}]},{"type":"text","value":" array parameter like "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"\"coins\" : [\"00057e8eca5673476e6f726d000000000000015d3ef79800\", \"00057e8eca1233476e6f726d000000000000015d3ef79800\"]"}]},{"type":"text","value":". In case of asset transaction you can specify both asset coins (to send) and non-asset coins (to pay fee)."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 2,\n    \"result\":\n    {\n        \"txId\" : \"10c4b760c842433cb58339a0fafef3db\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 2,\n    \"result\":\n    {\n        \"txId\" : \"10c4b760c842433cb58339a0fafef3db\"\n    }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Returns transaction id or "},{"type":"element","tag":"a","props":{"href":"#api-error-codes"},"children":[{"type":"text","value":"error code"}]},{"type":"text","value":"."}]},{"type":"element","tag":"h2","props":{"id":"tx_split"},"children":[{"type":"text","value":"tx_split"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Creates a specific set of outputs with given values."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"NOTE: The "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"session"}]},{"type":"text","value":" parameter is not IMPLEMENTED and was removed!"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 5,\n    \"method\":\"tx_split\", \n    \"params\":\n    {\n        \"coins\" : [11, 12, 13, 50000000],\n        \"fee\" : 100,\n        \"asset_id\": 1\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 5,\n    \"method\":\"tx_split\", \n    \"params\":\n    {\n        \"coins\" : [11, 12, 13, 50000000],\n        \"fee\" : 100,\n        \"asset_id\": 1\n    }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 5,\n    \"result\":\n    {\n        \"txId\" : \"10c4b760c842433cb58339a0fafef3db\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 5,\n    \"result\":\n    {\n        \"txId\" : \"10c4b760c842433cb58339a0fafef3db\"\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"fee"}]},{"type":"text","value":" is always in BEAM groth. Omit for default fee."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"coins"}]},{"type":"text","value":" amounts of coins your want to have after split."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"txId"}]},{"type":"text","value":" optional, provide your own transaction ID."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_id"}]},{"type":"text","value":" asset id to split, optional. Omit or set to 0 to split BEAM coins. Present starting from v5.0 and can be used only after Fork 2. If "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_id"}]},{"type":"text","value":" is non-zero assets must be enabled ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--enable_assets"}]},{"type":"text","value":") or method would fail."}]}]},{"type":"element","tag":"h2","props":{"id":"tx_asset_issue"},"children":[{"type":"text","value":"tx_asset_issue"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Available from v5.0, can be used after Fork2. Assets must be enabled ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--enable_assets"}]},{"type":"text","value":") or method would fail."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Mints new asset coins. You must own the asset and info about the asset should be in a local database. Use "},{"type":"element","tag":"a","props":{"href":"#tx_asset_info"},"children":[{"type":"text","value":"tx_asset_info"}]},{"type":"text","value":" to retrieve the latest asset info if necessary. Asset minting is free. You need to pay only regular transaction fee."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\": \"2.0\", \n    \"id\": 2,\n    \"method\": \"tx_asset_issue\", \n    \"params\":\n    {\n        \"value\": 6,\n        \"asset_id\": 1\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\": \"2.0\", \n    \"id\": 2,\n    \"method\": \"tx_asset_issue\", \n    \"params\":\n    {\n        \"value\": 6,\n        \"asset_id\": 1\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"value"}]},{"type":"text","value":" how much asset to mint, in asset groth."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"fee"}]},{"type":"text","value":" transaction fee in BEAM groth. Omit to use default fee."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_id"}]},{"type":"text","value":" asset id of the asset to mint."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"txId"}]},{"type":"text","value":" optional,  provide your own transaction ID."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_meta"}]},{"type":"text","value":" obsolete and removed in v6.0."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"You can preselect specific BEAM UTXOs for a transaction fee by adding "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"coins"}]},{"type":"text","value":" array parameter, like "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"\"coins\" : [\"00057e8eca5673476e6f726d000000000000015d3ef79800\", \"00057e8eca1233476e6f726d000000000000015d3ef79800\"]"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\": \"2.0\", \n    \"id\": 2,\n    \"result\":\n    {\n        \"txId\" : \"10c4b760c842433cb58339a0fafef3db\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\": \"2.0\", \n    \"id\": 2,\n    \"result\":\n    {\n        \"txId\" : \"10c4b760c842433cb58339a0fafef3db\"\n    }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Returns transaction id or "},{"type":"element","tag":"a","props":{"href":"#api-error-codes"},"children":[{"type":"text","value":"error code"}]},{"type":"text","value":"."}]},{"type":"element","tag":"h2","props":{"id":"tx_asset_consume"},"children":[{"type":"text","value":"tx_asset_consume"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Available from v5.0, can be used after Fork2. Assets must be enabled ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--enable_assets"}]},{"type":"text","value":") or method would fail."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Burns existing asset coins. You must own the asset itself as well as asset coins to burn them. You cannot burn asset coins that belong to another wallet. Info about the asset should be in a local database. Use "},{"type":"element","tag":"a","props":{"href":"#tx_asset_info"},"children":[{"type":"text","value":"tx_asset_info"}]},{"type":"text","value":" to retrieve the latest asset info if necessary. Asset coins burning is absolutely free. You need to pay only regular transaction fee."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 2,\n    \"method\":\"tx_asset_consume\", \n    \"params\":\n    {\n        \"value\": 6,\n        \"asset_id\": 1\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 2,\n    \"method\":\"tx_asset_consume\", \n    \"params\":\n    {\n        \"value\": 6,\n        \"asset_id\": 1\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"value"}]},{"type":"text","value":" how much asset to burn, in asset groth."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"fee"}]},{"type":"text","value":" transaction fee in BEAM groth, omit for a default fee."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_id"}]},{"type":"text","value":" id of the asset to consume."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"txId"}]},{"type":"text","value":" optional, provide your own transaction ID"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_meta"}]},{"type":"text","value":" obsolete and removed since v6.0"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"You can preselect specific UTXOs to burn and to pay fee by adding "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"coins"}]},{"type":"text","value":" array parameter, like "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"\"coins\" : [\"00057e8eca5673476e6f726d000000000000015d3ef79800\", \"00057e8eca1233476e6f726d000000000000015d3ef79800\"]"}]},{"type":"text","value":". Both asset coins (to burn) and BEAM coins (to pay fee) can be in this array."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 2,\n    \"result\":\n    {\n        \"txId\" : \"10c4b760c842433cb58339a0fafef3db\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 2,\n    \"result\":\n    {\n        \"txId\" : \"10c4b760c842433cb58339a0fafef3db\"\n    }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Returns transaction id or "},{"type":"element","tag":"a","props":{"href":"#api-error-codes"},"children":[{"type":"text","value":"error code"}]},{"type":"text","value":"."}]},{"type":"element","tag":"h2","props":{"id":"tx_asset_info"},"children":[{"type":"text","value":"tx_asset_info"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Available from v5.0, can be used after Fork2. Assets must be enabled ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--enable_assets"}]},{"type":"text","value":") or method would fail."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Retrieve full info about any registered asset and save in a local database. If asset has been unregistered or has been never registered transaction would fail. After transaction is completed you can use "},{"type":"element","tag":"a","props":{"href":"#get_asset_info"},"children":[{"type":"text","value":"get_asset_info"}]},{"type":"text","value":" to read/get asset info from the local database."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 2,\n    \"method\": \"tx_asset_info\",\n    \"params\": \n    {\n        \"asset_id\": 1\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 2,\n    \"method\": \"tx_asset_info\",\n    \"params\": \n    {\n        \"asset_id\": 1\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_id"}]},{"type":"text","value":" asset id to retrieve info about. Can be used for any asset even if you don't own it."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"txId"}]},{"type":"text","value":" optional, provide your own transaction ID"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_meta"}]},{"type":"text","value":" obsolete and removed since v6.0"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Asset info transaction is free, i.e. doesn't incur any fees."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 2,\n    \"result\":\n    {\n        \"txId\" : \"10c4b760c842433cb58339a0fafef3db\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 2,\n    \"result\":\n    {\n        \"txId\" : \"10c4b760c842433cb58339a0fafef3db\"\n    }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Returns transaction id or "},{"type":"element","tag":"a","props":{"href":"#api-error-codes"},"children":[{"type":"text","value":"error code"}]},{"type":"text","value":"."}]},{"type":"element","tag":"h2","props":{"id":"tx_cancel"},"children":[{"type":"text","value":"tx_cancel"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Cancels running transaction"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"method\":\"tx_cancel\", \n    \"params\":\n    {\n        \"txId\" : \"a13525181c0d45b0a4c5c1a697c8a7b8\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"method\":\"tx_cancel\", \n    \"params\":\n    {\n        \"txId\" : \"a13525181c0d45b0a4c5c1a697c8a7b8\"\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"txId"}]},{"type":"text","value":" transaction id to cancel."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"result\": true\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"result\": true\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Returns "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"true"}]},{"type":"text","value":" if successfully canceled or "},{"type":"element","tag":"a","props":{"href":"#api-error-codes"},"children":[{"type":"text","value":"error code"}]},{"type":"text","value":" with the reason."}]},{"type":"element","tag":"h2","props":{"id":"tx_delete"},"children":[{"type":"text","value":"tx_delete"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Removes transaction from the local history. Cannot remove running transaction"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"method\":\"tx_delete\", \n    \"params\":\n    {\n        \"txId\" : \"a13525181c0d45b0a4c5c1a697c8a7b8\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"method\":\"tx_delete\", \n    \"params\":\n    {\n        \"txId\" : \"a13525181c0d45b0a4c5c1a697c8a7b8\"\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"txId"}]},{"type":"text","value":" transaction id to be deleted."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"result\": true\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"result\": true\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Returns "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"true"}]},{"type":"text","value":" if the transaction was successfully deleted or "},{"type":"element","tag":"a","props":{"href":"#api-error-codes"},"children":[{"type":"text","value":"error code"}]},{"type":"text","value":" with the reason."}]},{"type":"element","tag":"h2","props":{"id":"tx_status"},"children":[{"type":"text","value":"tx_status"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Get status & extended information about a single transaction by its transaction id. The example below is given for a simple transaction. Different transaction types have different status records. Consult "},{"type":"element","tag":"a","props":{"href":"#tx_list"},"children":[{"type":"text","value":"tx_list"}]},{"type":"text","value":" method description for details. This method can be called for previously started asset-involving transactions even if assets are not enabled in the current session."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"method\":\"tx_status\", \n    \"params\":\n    {\n        \"txId\" : \"10c4b760c842433cb58339a0fafef3db\",\n        \"rates\": false\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"method\":\"tx_status\", \n    \"params\":\n    {\n        \"txId\" : \"10c4b760c842433cb58339a0fafef3db\",\n        \"rates\": false\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"txId"}]},{"type":"text","value":" - transaction id to return status for"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"rates"}]},{"type":"text","value":" - returns currency rates array at the moment of transaction if set to "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"true"}]},{"type":"text","value":". By default is "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"false"}]},{"type":"text","value":"."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"result\":\n    { \n        \"txId\" : \"10c4b760c842433cb58339a0fafef3db\",\n        \"asset_id\": 0,\n        \"comment\": \"\",\n        \"fee\": 100,\n        \"kernel\": \"0000000000000000000000000000000000000000000000000000000000000000\",\n        \"receiver\": \"472e17b0419055ffee3b3813b98ae671579b0ac0dcd6f1a23b11a75ab148cc67\",\n        \"sender\": \"f287176bdd517e9c277778e4c012bf6a3e687dd614fc552a1ed22a3fee7d94f2\",\n        \"status\": 4,\n        \"status_string\" : \"Failed\",\n        \"tx_type\": 0,\n        \"tx_type_string\": \"simple\",\n        \"failure_reason\" : \"No inputs\",\n        \"value\": 12342342,\n        \"create_time\" : 1551100217,\n        \"income\" : false,\n        \"sender_identity\": \"a0a1ebbfeed5c312b309e32715c159e6b4548a6c6c3af25d0dbc16f37a1e9dd6\",\n        \"receiver_identity\": \"2d8738b0424ad50631e902fab655e7e1795fbb8d92d47c4c8df7336870fcadf5\",\n        \"token\": \"44pE7ySjZYjbLqwnTJANvr4BudMk1RdvWvaZnBvoCTwFnigfaTSza75bvw7x2GCa377Z4CSRRYZon44Ss9G9joSicNRAgts4u3pL6yV6jDQ6gAVJD9Scyr\"\n    } \n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"result\":\n    { \n        \"txId\" : \"10c4b760c842433cb58339a0fafef3db\",\n        \"asset_id\": 0,\n        \"comment\": \"\",\n        \"fee\": 100,\n        \"kernel\": \"0000000000000000000000000000000000000000000000000000000000000000\",\n        \"receiver\": \"472e17b0419055ffee3b3813b98ae671579b0ac0dcd6f1a23b11a75ab148cc67\",\n        \"sender\": \"f287176bdd517e9c277778e4c012bf6a3e687dd614fc552a1ed22a3fee7d94f2\",\n        \"status\": 4,\n        \"status_string\" : \"Failed\",\n        \"tx_type\": 0,\n        \"tx_type_string\": \"simple\",\n        \"failure_reason\" : \"No inputs\",\n        \"value\": 12342342,\n        \"create_time\" : 1551100217,\n        \"income\" : false,\n        \"sender_identity\": \"a0a1ebbfeed5c312b309e32715c159e6b4548a6c6c3af25d0dbc16f37a1e9dd6\",\n        \"receiver_identity\": \"2d8738b0424ad50631e902fab655e7e1795fbb8d92d47c4c8df7336870fcadf5\",\n        \"token\": \"44pE7ySjZYjbLqwnTJANvr4BudMk1RdvWvaZnBvoCTwFnigfaTSza75bvw7x2GCa377Z4CSRRYZon44Ss9G9joSicNRAgts4u3pL6yV6jDQ6gAVJD9Scyr\"\n    } \n}\n"}]}]},{"type":"element","tag":"h2","props":{"id":"tx_list"},"children":[{"type":"text","value":"tx_list"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Get the transactions list."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 8,\n    \"method\":\"tx_list\",\n    \"params\":\n    {\n        \"filter\" : \n        {\n            \"status\":4,\n            \"height\":1055,\n        },\n        \"rates\": true,\n        \"skip\" : 0,\n        \"count\" : 10\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 8,\n    \"method\":\"tx_list\",\n    \"params\":\n    {\n        \"filter\" : \n        {\n            \"status\":4,\n            \"height\":1055,\n        },\n        \"rates\": true,\n        \"skip\" : 0,\n        \"count\" : 10\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"filter.status"}]},{"type":"text","value":" optional, filter transactions by status"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"filter.height"}]},{"type":"text","value":" optional, filter transactions by height. For simple, asset issue and asset consume transactions denotes height when the transaction was registered in the chain. For asset info transaction means height at which asset confirmation was received. Works only for transactions with status Completed(3)."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"count"}]},{"type":"text","value":" optional, number of transactions to get. By default, all transactions are returned."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"skip"}]},{"type":"text","value":" number of transactions to skip, 0 by default."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"rates"}]},{"type":"text","value":" return currency rates at the moment of transaction if "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"true"}]},{"type":"text","value":". By default is "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"false"}]},{"type":"text","value":"."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"If assets are not enabled, the method returns only BEAM transactions. To get asset transactions you should enable assets ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--enable_assets"}]},{"type":"text","value":")."}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"filter.asset_id"}]},{"type":"text","value":" return only asset transactions with given asset id. Present starting from v5.0. If assets are not enabled and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"filter.asset_id"}]},{"type":"text","value":" is non-zero nothing would be returned."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 8,\n    \"result\":\n    [{ \n        \"asset_id\": 0,\n        \"txId\" : \"10c4b760c842433cb58339a0fafef3db\",\n        \"comment\": \"\",\n        \"fee\": 0,\n        \"kernel\": \"0000000000000000000000000000000000000000000000000000000000000000\",\n        \"receiver\": \"472e17b0419055ffee3b3813b98ae671579b0ac0dcd6f1a23b11a75ab148cc67\",\n        \"sender\": \"f287176bdd517e9c277778e4c012bf6a3e687dd614fc552a1ed22a3fee7d94f2\",\n        \"status\": 4,\n        \"status_string\" : \"Failed\",\n        \"failure_reason\" : \"No inputs\",\n        \"value\": 12342342,\n        \"create_time\" : 1551100217,\n        \"income\" : false,\n        \"token\": \"44pE7ySjZYjbLqwnTJANvr4BudMk1RdvWvaZnBvoCTwFnigfaTSza75bvw7x2GCa377Z4CSRRYZon44Ss9G9joSicNRAgts4u3pL6yV6jDQ6gAVJD9Scyr\",\n        \"rates\": [\n            {\n                \"from\": 3,\n                \"rate\": 200000000,\n                \"rate_str\": \"200000000\",\n                \"to\": \"btc\"\n            },\n            {\n                \"from\": 0,\n                \"rate\": 50000000,\n                \"rate_str\": \"50000000\",\n                \"to\": \"usd\"\n            }\n        ]\n    },\n    {\n      \"asset_id\": 1,\n      \"asset_meta\": \"STD:N=Coin;SN=CN;UN=Cgro;NTHUN=Cgroth\",\n      \"comment\": \"\",\n      \"confirmations\": 102,\n      \"create_time\": 1586995332,\n      \"fee\": 0,\n      \"height\": 1908,\n      \"income\": false,\n      \"receiver\": \"0\",\n      \"sender\": \"0\",\n      \"status\": 3,\n      \"status_string\": \"asset confirmed\",\n      \"txId\": \"d9f94306127a4ef894733f984b5512cf\",\n      \"tx_type\": 6,\n      \"tx_type_string\": \"asset info\",\n      \"value\": 0,\n      \"rates\": []\n    },\n    {\n        \"asset_id\": 1,\n        \"asset_meta\": \"STD:N=Coin;SN=CN;UN=Cgro;NTHUN=Cgroth\",\n        \"comment\": \"\",\n        \"confirmations\": 1985,\n        \"height\": 25,\n        \"create_time\": 1586966478,\n        \"fee\": 100,\n        \"income\": false,\n        \"kernel\": \"1c9e4a9a61df1dda00db10ab4477f88355e13d4ed06c0db36c39b22a2a66f642\",\n        \"receiver\": \"0\",\n        \"sender\": \"0\",\n        \"status\": 3,\n        \"status_string\": \"asset issued\",\n        \"txId\": \"77008a76aa4b4da697587040b2d21f1e\",\n        \"tx_type\": 2,\n        \"tx_type_string\": \"asset issue\",\n        \"value\": 500000000,\n        \"rates\": []\n    }]\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 8,\n    \"result\":\n    [{ \n        \"asset_id\": 0,\n        \"txId\" : \"10c4b760c842433cb58339a0fafef3db\",\n        \"comment\": \"\",\n        \"fee\": 0,\n        \"kernel\": \"0000000000000000000000000000000000000000000000000000000000000000\",\n        \"receiver\": \"472e17b0419055ffee3b3813b98ae671579b0ac0dcd6f1a23b11a75ab148cc67\",\n        \"sender\": \"f287176bdd517e9c277778e4c012bf6a3e687dd614fc552a1ed22a3fee7d94f2\",\n        \"status\": 4,\n        \"status_string\" : \"Failed\",\n        \"failure_reason\" : \"No inputs\",\n        \"value\": 12342342,\n        \"create_time\" : 1551100217,\n        \"income\" : false,\n        \"token\": \"44pE7ySjZYjbLqwnTJANvr4BudMk1RdvWvaZnBvoCTwFnigfaTSza75bvw7x2GCa377Z4CSRRYZon44Ss9G9joSicNRAgts4u3pL6yV6jDQ6gAVJD9Scyr\",\n        \"rates\": [\n            {\n                \"from\": 3,\n                \"rate\": 200000000,\n                \"rate_str\": \"200000000\",\n                \"to\": \"btc\"\n            },\n            {\n                \"from\": 0,\n                \"rate\": 50000000,\n                \"rate_str\": \"50000000\",\n                \"to\": \"usd\"\n            }\n        ]\n    },\n    {\n      \"asset_id\": 1,\n      \"asset_meta\": \"STD:N=Coin;SN=CN;UN=Cgro;NTHUN=Cgroth\",\n      \"comment\": \"\",\n      \"confirmations\": 102,\n      \"create_time\": 1586995332,\n      \"fee\": 0,\n      \"height\": 1908,\n      \"income\": false,\n      \"receiver\": \"0\",\n      \"sender\": \"0\",\n      \"status\": 3,\n      \"status_string\": \"asset confirmed\",\n      \"txId\": \"d9f94306127a4ef894733f984b5512cf\",\n      \"tx_type\": 6,\n      \"tx_type_string\": \"asset info\",\n      \"value\": 0,\n      \"rates\": []\n    },\n    {\n        \"asset_id\": 1,\n        \"asset_meta\": \"STD:N=Coin;SN=CN;UN=Cgro;NTHUN=Cgroth\",\n        \"comment\": \"\",\n        \"confirmations\": 1985,\n        \"height\": 25,\n        \"create_time\": 1586966478,\n        \"fee\": 100,\n        \"income\": false,\n        \"kernel\": \"1c9e4a9a61df1dda00db10ab4477f88355e13d4ed06c0db36c39b22a2a66f642\",\n        \"receiver\": \"0\",\n        \"sender\": \"0\",\n        \"status\": 3,\n        \"status_string\": \"asset issued\",\n        \"txId\": \"77008a76aa4b4da697587040b2d21f1e\",\n        \"tx_type\": 2,\n        \"tx_type_string\": \"asset issue\",\n        \"value\": 500000000,\n        \"rates\": []\n    }]\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"token"}]},{"type":"text","value":" retuned only in case if the transaction was started with a token."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"height"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"confirmations"}]},{"type":"text","value":" will be absent if the transaction isn't in the chain for simple, asset issue & asset consume transactions, or if asset confirmation is not received for asset info transaction."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"confirmations"}]},{"type":"text","value":" the number of blocks which confirm the presence of the transaction."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"sender_identity"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"receiver_identity"}]},{"type":"text","value":" are present if both participants provided these. In UI and CLI called as \"sender wallet's signature\" and \"receiver wallet's signature\"."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"status_string"}]},{"type":"text","value":" is a string representation of "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"status"}]},{"type":"text","value":" parameter."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_meta"}]},{"type":"text","value":" is an asset metadata string. Present from v5.0."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"tx_type"}]},{"type":"text","value":" is present starting from v5.0."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"tx_type_string"}]},{"type":"text","value":" is a string representation of tx_type parameter. Present starting from v5.0."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_id"}]},{"type":"text","value":" is returned starting from v5.0. For BEAM transactions it is always 0, for transactions that involve assets (including send/receive) it is an asset id. Can be 0 for asset info transaction if the transaction was started with asset_meta and the asset has been not found."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_meta"}]},{"type":"text","value":" is an asset metadata string. Returned starting from v5.0. Always present for asset issue &  consume transactions. Can be empty for asset info transaction if it was started with asset_id and the asset has been not found."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"kernel"}]},{"type":"text","value":" is not returned for asset info transactions. These transactions do not have any kernel and only query node for information."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"appname"}]},{"type":"text","value":" returned for transactions initiated by DApps. DApp Name"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"appid"}]},{"type":"text","value":" returned for transactions initiated by DApps. DApp ID (apppid)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"rates"}]},{"type":"text","value":" currency rates at the moment of transaction. Empty array if rates were not available at the moment of transaction or transaction does not store rates (asset issue/consume for example)."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"rates.from"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"rates.to"}]},{"type":"text","value":" from and to currencies. "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Number"}]},{"type":"text","value":" denotes asset id (0 for BEAM), "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"string"}]},{"type":"text","value":" - third-party currencies such as "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"eth"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"btc"}]},{"type":"text","value":" &c."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"rates.rate"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"rates.rate_str"}]},{"type":"text","value":" is a conversion rate."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"address_type"}]},{"type":"text","value":" type off address used for pust transaction (7), see "},{"type":"element","tag":"a","props":{"href":"#create_address"},"children":[{"type":"text","value":"create_address"}]},{"type":"text","value":" and "},{"type":"element","tag":"a","props":{"href":"#tx-types"},"children":[{"type":"text","value":"TX types"}]},{"type":"text","value":". Possible values are\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"offline"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"public_offline"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"max_privacy"}]}]}]}]}]},{"type":"element","tag":"h3","props":{"id":"important-the-recommended-number-of-confirmations-for-beam-transfers-is-80-blocks"},"children":[{"type":"text","value":"IMPORTANT: The recommended number of confirmations for Beam transfers is 80 blocks."}]},{"type":"element","tag":"h3","props":{"id":"tx-statuses"},"children":[{"type":"text","value":"TX statuses"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"pending (0)     - "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"pending"}]},{"type":"text","value":" initial state, the transaction is created, but not sent yet"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"in progress (1) - "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"self sending"}]},{"type":"text","value":"/"},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"waiting for sender"}]},{"type":"text","value":"/"},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"waiting for receiver"}]},{"type":"text","value":"/"},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"in progress"}]},{"type":"text","value":". For simple transactions indicates that the sender or receiver should come online to initiate the transaction. For asset issue/consume/info transactions indicates that transaction is being assembled. For asset info transaction means waiting for node response."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"canceled (2)    - "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"cancelled"}]},{"type":"text","value":" by sender or due to rollback"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"completed (3)   - transaction is "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"completed"}]},{"type":"text","value":"/"},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"received"}]},{"type":"text","value":"/"},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"sent"}]},{"type":"text","value":"/"},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset issued"}]},{"type":"text","value":"/"},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset consumed"}]},{"type":"text","value":"/"},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset confirmed"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"failed (4)      - "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"failed"}]},{"type":"text","value":" for some reason or "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"expired"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"registering (5) - "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"self sending"}]},{"type":"text","value":"/"},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"receiving"}]},{"type":"text","value":"/"},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"sending"}]},{"type":"text","value":"/"},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"in progress"}]},{"type":"text","value":" transaction is taken care by the blockchain, miners needs to PoW and to add it to a block, then block should be added to the blockchain."}]}]},{"type":"element","tag":"h3","props":{"id":"tx-types"},"children":[{"type":"text","value":"TX types"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"simple (0) - simple transaction, send/receive BEAM or asset"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"reserved (1) - currently not returned"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"asset issue (2) - issue new asset units"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"asset consume (3) - consume asset units"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"reserved (4) - currently not returned"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"reserved (5) - currently not returned"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"asset info (6) - asset info transaction, receive full asset information from blockchain"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"push transaction (7) - lelantus push transaction, is used for offline/max privacy payments"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"contract (12) - starting with v6.0, transaction created by contract request, or to fund or execute node-base contract invocation"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"N.B."}]},{"type":"text","value":" tx_list does not return swap, asset register & asset unregister transactions. Transactions are sorted by height in a descending order."}]},{"type":"element","tag":"h2","props":{"id":"wallet_status"},"children":[{"type":"text","value":"wallet_status"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Get current wallet status."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 6,\n    \"method\":\"wallet_status\"\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 6,\n    \"method\":\"wallet_status\"\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 6,\n    \"result\":\n    {\n        \"current_height\" : 1055,\n        \"current_state_hash\" : \"f287176bdd517e9c277778e4c012bf6a3e687dd614fc552a1ed22a3fee7d94f2\",\n            \"current_state_timestamp\": 1625060769,\n        \"prev_state_hash\" : \"bd39333a66a8b7cb3804b5978d42312c841dbfa03a1c31fc2f0627eeed6e43f2\",\n            \"is_in_sync\": true,\n        \"available\": 100500,\n        \"receiving\": 123,\n        \"sending\": 0,\n        \"maturing\": 50,\n        \"difficulty\": 2.93914,\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 6,\n    \"result\":\n    {\n        \"current_height\" : 1055,\n        \"current_state_hash\" : \"f287176bdd517e9c277778e4c012bf6a3e687dd614fc552a1ed22a3fee7d94f2\",\n            \"current_state_timestamp\": 1625060769,\n        \"prev_state_hash\" : \"bd39333a66a8b7cb3804b5978d42312c841dbfa03a1c31fc2f0627eeed6e43f2\",\n            \"is_in_sync\": true,\n        \"available\": 100500,\n        \"receiving\": 123,\n        \"sending\": 0,\n        \"maturing\": 50,\n        \"difficulty\": 2.93914,\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"available"}]},{"type":"text","value":" sum of available UTXOs you can spend"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"sending/receiving"}]},{"type":"text","value":" sum of UTXOs currently sending/receiving"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"maturing"}]},{"type":"text","value":" sum of UTXOs currently maturing"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"locked"}]},{"type":"text","value":" not used at the moment, ignore"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"difficulty"}]},{"type":"text","value":" the latest blockchain PoW difficulty"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"current_state_timestamp"}]},{"type":"text","value":" is a UNIX timestamp in seconds"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"is_in_sync"}]},{"type":"text","value":" true is wallet is in sync with blockchain"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Starting from v5.0 assets support has been added. This slightly changes API response: totals array is added which provides amounts for each asset int the wallet. To get the totals array assets should be enabled ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--enable_assets"}]},{"type":"text","value":")."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 6,\n    \"method\":\"wallet_status\",\n        \"params\": {\n            \"nz_totals\": false\n        }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 6,\n    \"method\":\"wallet_status\",\n        \"params\": {\n            \"nz_totals\": false\n        }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"nz_totals"}]},{"type":"text","value":"optional bool. If true do not return totals for assets with zero balance. By default is false."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n  \"id\": 1236,\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"current_height\" : 1055,\n    \"current_state_hash\" : \"f287176bdd517e9c277778e4c012bf6a3e687dd614fc552a1ed22a3fee7d94f2\",\n    \"current_state_timestamp\": 1625060769,\n    \"prev_state_hash\" : \"bd39333a66a8b7cb3804b5978d42312c841dbfa03a1c31fc2f0627eeed6e43f2\",\n    \"is_in_sync\": true,\n    \"available\": 100500,\n    \"receiving\": 123,\n    \"sending\": 0,\n    \"maturing\": 50,\n    \"difficulty\": 2.93914,\n    \"totals\": [\n      {\n        \"asset_id\": 0,\n        \"available\": 117065840575291,\n        \"available_mp\": 0,\n        \"available_mp_str\": \"0\",\n        \"available_regular\": 117065840575291,\n        \"available_regular_str\": \"117065840575291\",\n        \"available_str\": \"117065840575291\",\n        \"change\": 0,\n        \"change_str\": \"0\",\n        \"locked\": 183629687500000,\n        \"locked_str\": \"183629687500000\",\n        \"maturing\": 183629687500000,\n        \"maturing_mp\": 0,\n        \"maturing_mp_str\": \"0\",\n        \"maturing_regular\": 183629687500000,\n        \"maturing_regular_str\": \"183629687500000\",\n        \"maturing_str\": \"183629687500000\",\n        \"receiving\": 0,\n        \"receiving_mp\": 0,\n        \"receiving_mp_str\": \"0\",\n        \"receiving_regular\": 0,\n        \"receiving_regular_str\": \"0\",\n        \"receiving_str\": \"0\",\n        \"sending\": 0,\n        \"sending_mp\": 0,\n        \"sending_mp_str\": \"0\",\n        \"sending_regular\": 0,\n        \"sending_regular_str\": \"0\",\n        \"sending_str\": \"0\"\n      },\n      {\n        \"asset_id\": 3,\n        \"available\": 4262500000,\n        \"available_mp\": 0,\n        \"available_mp_str\": \"0\",\n        \"available_regular\": 4262500000,\n        \"available_regular_str\": \"4262500000\",\n        \"available_str\": \"4262500000\",\n        \"change\": 0,\n        \"change_str\": \"0\",\n        \"locked\": 0,\n        \"locked_str\": \"0\",\n        \"maturing\": 0,\n        \"maturing_mp\": 0,\n        \"maturing_mp_str\": \"0\",\n        \"maturing_regular\": 0,\n        \"maturing_regular_str\": \"0\",\n        \"maturing_str\": \"0\",\n        \"receiving\": 0,\n        \"receiving_mp\": 0,\n        \"receiving_mp_str\": \"0\",\n        \"receiving_regular\": 0,\n        \"receiving_regular_str\": \"0\",\n        \"receiving_str\": \"0\",\n        \"sending\": 0,\n        \"sending_mp\": 0,\n        \"sending_mp_str\": \"0\",\n        \"sending_regular\": 0,\n        \"sending_regular_str\": \"0\",\n        \"sending_str\": \"0\"\n      }\n    ]\n  }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n  \"id\": 1236,\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"current_height\" : 1055,\n    \"current_state_hash\" : \"f287176bdd517e9c277778e4c012bf6a3e687dd614fc552a1ed22a3fee7d94f2\",\n    \"current_state_timestamp\": 1625060769,\n    \"prev_state_hash\" : \"bd39333a66a8b7cb3804b5978d42312c841dbfa03a1c31fc2f0627eeed6e43f2\",\n    \"is_in_sync\": true,\n    \"available\": 100500,\n    \"receiving\": 123,\n    \"sending\": 0,\n    \"maturing\": 50,\n    \"difficulty\": 2.93914,\n    \"totals\": [\n      {\n        \"asset_id\": 0,\n        \"available\": 117065840575291,\n        \"available_mp\": 0,\n        \"available_mp_str\": \"0\",\n        \"available_regular\": 117065840575291,\n        \"available_regular_str\": \"117065840575291\",\n        \"available_str\": \"117065840575291\",\n        \"change\": 0,\n        \"change_str\": \"0\",\n        \"locked\": 183629687500000,\n        \"locked_str\": \"183629687500000\",\n        \"maturing\": 183629687500000,\n        \"maturing_mp\": 0,\n        \"maturing_mp_str\": \"0\",\n        \"maturing_regular\": 183629687500000,\n        \"maturing_regular_str\": \"183629687500000\",\n        \"maturing_str\": \"183629687500000\",\n        \"receiving\": 0,\n        \"receiving_mp\": 0,\n        \"receiving_mp_str\": \"0\",\n        \"receiving_regular\": 0,\n        \"receiving_regular_str\": \"0\",\n        \"receiving_str\": \"0\",\n        \"sending\": 0,\n        \"sending_mp\": 0,\n        \"sending_mp_str\": \"0\",\n        \"sending_regular\": 0,\n        \"sending_regular_str\": \"0\",\n        \"sending_str\": \"0\"\n      },\n      {\n        \"asset_id\": 3,\n        \"available\": 4262500000,\n        \"available_mp\": 0,\n        \"available_mp_str\": \"0\",\n        \"available_regular\": 4262500000,\n        \"available_regular_str\": \"4262500000\",\n        \"available_str\": \"4262500000\",\n        \"change\": 0,\n        \"change_str\": \"0\",\n        \"locked\": 0,\n        \"locked_str\": \"0\",\n        \"maturing\": 0,\n        \"maturing_mp\": 0,\n        \"maturing_mp_str\": \"0\",\n        \"maturing_regular\": 0,\n        \"maturing_regular_str\": \"0\",\n        \"maturing_str\": \"0\",\n        \"receiving\": 0,\n        \"receiving_mp\": 0,\n        \"receiving_mp_str\": \"0\",\n        \"receiving_regular\": 0,\n        \"receiving_regular_str\": \"0\",\n        \"receiving_str\": \"0\",\n        \"sending\": 0,\n        \"sending_mp\": 0,\n        \"sending_mp_str\": \"0\",\n        \"sending_regular\": 0,\n        \"sending_regular_str\": \"0\",\n        \"sending_str\": \"0\"\n      }\n    ]\n  }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"totals"}]},{"type":"text","value":" is an array of totals per asset. Assets that are included in this array by default:"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"BEAM (asset id 0)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"All assets which have UTXOs."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"All owned assets, even if there is no UTXOs for the given asset."}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"available_regular"}]},{"type":"text","value":" available regular UTXOs wallet can spend"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"available_mp"}]},{"type":"text","value":" available max privacy (shielded) UTXOs wallet can spend"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"available"}]},{"type":"text","value":" sum of "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"available_regular"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"available_mp"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"receiving_regular"}]},{"type":"text","value":" regular UTXOs wallet is currently receiving"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"receiving_mp"}]},{"type":"text","value":" max privacy (shielded) UTXOs wallet is currently receiving"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"receiving"}]},{"type":"text","value":" sum of "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"receiving_regular"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"receiving_mp"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"sending_regular"}]},{"type":"text","value":" regular UTXOs wallet is currently sending"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"sending_mp"}]},{"type":"text","value":" max privacy (shielded) UTXOs wallet is currently sending"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"sending"}]},{"type":"text","value":" sum of "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"sending_regular"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"sending_mp"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"maturing_regular"}]},{"type":"text","value":" regular UTXOs currently maturing"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"maturing_mp"}]},{"type":"text","value":" max privacy (shielded) UTXOs currently maturing"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"maturing"}]},{"type":"text","value":" sum of "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"maturing_regular"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"maturing_mp"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"change"}]},{"type":"text","value":" change that is currently incoming to wallet"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"locked"}]},{"type":"text","value":" locked UTXOs, sum of "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"maturing_regular"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"maturing_mp"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"change"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Asset is included in the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"totals"}]},{"type":"text","value":" array even if all UTXOs are spent or if there are no UTXOs but asset is owned (issued by the wallet). In case when all the UTXOs are spent totals' fields except "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_id"}]},{"type":"text","value":" would be 0 (zero balance). To avoid getting assets with zero balance specify "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"\"params\": {\"nz_totals\": true}"}]},{"type":"text","value":". BEAM is always included, even if balance is 0 and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"nz_totals"}]},{"type":"text","value":" is true."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Maximum asset emission is 2"},{"type":"element","tag":"sup","props":{},"children":[{"type":"text","value":"128"}]},{"type":"text","value":"-1. To ensure compatibility with JavaScript raw number ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"available"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"maturing"}]},{"type":"text","value":" &c.) returned only if it is less than or equal to "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Number.MAX_SAFE_INTEGER"}]},{"type":"text","value":" (2"},{"type":"element","tag":"sup","props":{},"children":[{"type":"text","value":"53"}]},{"type":"text","value":"-1). If total's value is greater than "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Number.MAX_SAFE_INTEGER"}]},{"type":"text","value":" only corresponding string representation ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"xxxx_str"}]},{"type":"text","value":") is returned."}]},{"type":"element","tag":"h2","props":{"id":"get_utxo"},"children":[{"type":"text","value":"get_utxo"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Get list of all unlocked UTXOs."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 6,\n    \"method\":\"get_utxo\",\n    \"params\" :\n    {\n        \"count\": 10,\n        \"skip\": 0,\n        \"sort\": {\n            \"field\": \"amount\",\n            \"direction\": \"asc\"\n        }\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 6,\n    \"method\":\"get_utxo\",\n    \"params\" :\n    {\n        \"count\": 10,\n        \"skip\": 0,\n        \"sort\": {\n            \"field\": \"amount\",\n            \"direction\": \"asc\"\n        }\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"count"}]},{"type":"text","value":" number of UTXO to get, by default all the UTXOs are returned."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"skip"}]},{"type":"text","value":" number of UTXO to skip, default is "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"0"}]},{"type":"text","value":"."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"sort.field"}]},{"type":"text","value":" name of field to sort. Available values are \"id|asset_id|amount|type|maturity|createTxId|spentTxId|status|status_string\""}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"sort.direction"}]},{"type":"text","value":" sorting directions \"asc\" or \"desc\""}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\": \"2.0\", \n    \"id\": 6,\n    \"result\":\n    [{\n        \"id\": 123,\n        \"asset_id\": 0,\n        \"amount\": 12345,\n        \"maturity\": 60,\n        \"type\": \"mine\",\n        \"createTxId\": \"10c4b760c842433cb58339a0fafef3db\",\n        \"spentTxId\": \"\",\n        \"status\": 2,\n        \"status_string\": \"maturing\"\n    }]\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\": \"2.0\", \n    \"id\": 6,\n    \"result\":\n    [{\n        \"id\": 123,\n        \"asset_id\": 0,\n        \"amount\": 12345,\n        \"maturity\": 60,\n        \"type\": \"mine\",\n        \"createTxId\": \"10c4b760c842433cb58339a0fafef3db\",\n        \"spentTxId\": \"\",\n        \"status\": 2,\n        \"status_string\": \"maturing\"\n    }]\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_id"}]},{"type":"text","value":" asset id if coin belongs to an asset and 0 for BEAM coins. By default method returns only BEAM coins. To get asset coins assets should be enabled ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--enable_assets"}]},{"type":"text","value":")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"filter.asset_id"}]},{"type":"text","value":" return only asset coins with given asset id, 0 for BEAM coins. Present starting from v5.0. Assets should be enabled."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1236,\n    \"method\": \"get_utxo\",\n    \"params\": {\n        \"assets\": true,\n        \"filter\": {\n            \"asset_id\": 1\n        }\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1236,\n    \"method\": \"get_utxo\",\n    \"params\": {\n        \"assets\": true,\n        \"filter\": {\n            \"asset_id\": 1\n        }\n    }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n  \"id\": 1236,\n  \"jsonrpc\": \"2.0\",\n  \"result\": [\n    {\n      \"amount\": 500000000,\n      \"asset_id\": 1,\n      \"createTxId\": \"fd705ce6f8c345309c865dc93de9fec5\",\n      \"id\": \"0000000183ed2de4d94e6bd56e6f726d01000000000000001dcd6500\",\n      \"maturity\": 19,\n      \"spentTxId\": \"\",\n      \"status\": 1,\n      \"status_string\": \"available\",\n      \"type\": \"norm\"\n    }\n  ]\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n  \"id\": 1236,\n  \"jsonrpc\": \"2.0\",\n  \"result\": [\n    {\n      \"amount\": 500000000,\n      \"asset_id\": 1,\n      \"createTxId\": \"fd705ce6f8c345309c865dc93de9fec5\",\n      \"id\": \"0000000183ed2de4d94e6bd56e6f726d01000000000000001dcd6500\",\n      \"maturity\": 19,\n      \"spentTxId\": \"\",\n      \"status\": 1,\n      \"status_string\": \"available\",\n      \"type\": \"norm\"\n    }\n  ]\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"type"}]},{"type":"text","value":" can be "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"fees"}]},{"type":"text","value":" (comission), "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"mine"}]},{"type":"text","value":" (coinbase), "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"norm"}]},{"type":"text","value":" (usual coin, for example received via transaction), "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"chng"}]},{"type":"text","value":" (change), "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"shld"}]},{"type":"text","value":" (shielded)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"status"}]},{"type":"text","value":" can be "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"unavailable (0)"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"available (1)"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"maturing (2)"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"outgoing (3)"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"incoming (4)"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"spent (6)"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"consumed (7)"}]},{"type":"text","value":". "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"consumed"}]},{"type":"text","value":" status is returned only for asset coins starting from v5.0. It means that the coin has been burned (consumed)."}]}]},{"type":"element","tag":"h2","props":{"id":"get_asset_info"},"children":[{"type":"text","value":"get_asset_info"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Read asset info from local database. Asset info can be refreshed using "},{"type":"element","tag":"a","props":{"href":"#tx_asset_info"},"children":[{"type":"text","value":"tx_asset_info"}]},{"type":"text","value":". It is also automatically refreshed during asset transactions (but not always) to ensure that asset operations are safe. This method can be called even if assets are not enabled."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 6,\n    \"method\": \"get_asset_info\",\n    \"params\" :\n    {\n        \"asset_id\": 1\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 6,\n    \"method\": \"get_asset_info\",\n    \"params\" :\n    {\n        \"asset_id\": 1\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_id"}]},{"type":"text","value":" asset id to retrieve info about. Can be used for any asset even if you don't own it."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_meta"}]},{"type":"text","value":" obsolete and removed since v6.0"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"id\": 1236,\n    \"jsonrpc\": \"2.0\",\n    \"result\": \n    {\n        \"asset_id\": 1,\n        \"emission\": 2000000000,\n        \"emission_str\": \"2000000000\",\n        \"isOwned\": 1,\n        \"lockHeight\": 39,\n        \"metadata\": \"STD:SCH_VER=1;N=YAN Coin;SN=YAN;UN=Yan;NTHUN=Yanik\",\n        \"metadata_kv\": true,\n        \"metadata_pairs\": {\n            \"N\": \"YAN Coin\",\n            \"NTHUN\": \"Yanik\",\n            \"SCH_VER\": \"1\",\n            \"SN\": \"YAN\",\n            \"UN\": \"Yan\"\n        },\n        \"metadata_std_min\": true,\n        \"metadata_std\": true,\n        \"ownerId\": \"0ae08a49e018e98177774294107dc033790b87538e54a20e99c6b98f1dbd39ce\",\n        \"refreshHeight\": 927\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"id\": 1236,\n    \"jsonrpc\": \"2.0\",\n    \"result\": \n    {\n        \"asset_id\": 1,\n        \"emission\": 2000000000,\n        \"emission_str\": \"2000000000\",\n        \"isOwned\": 1,\n        \"lockHeight\": 39,\n        \"metadata\": \"STD:SCH_VER=1;N=YAN Coin;SN=YAN;UN=Yan;NTHUN=Yanik\",\n        \"metadata_kv\": true,\n        \"metadata_pairs\": {\n            \"N\": \"YAN Coin\",\n            \"NTHUN\": \"Yanik\",\n            \"SCH_VER\": \"1\",\n            \"SN\": \"YAN\",\n            \"UN\": \"Yan\"\n        },\n        \"metadata_std_min\": true,\n        \"metadata_std\": true,\n        \"ownerId\": \"0ae08a49e018e98177774294107dc033790b87538e54a20e99c6b98f1dbd39ce\",\n        \"refreshHeight\": 927\n    }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Returns full asset info or "},{"type":"element","tag":"a","props":{"href":"#api-error-codes"},"children":[{"type":"text","value":"error code"}]},{"type":"text","value":"."}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_id"}]},{"type":"text","value":" asset id"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"metadata"}]},{"type":"text","value":" asset metadata"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"emission"}]},{"type":"text","value":" & "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"emission_str"}]},{"type":"text","value":" total asset emission. Maximum asset emission is 2"},{"type":"element","tag":"sup","props":{},"children":[{"type":"text","value":"128"}]},{"type":"text","value":"-1. To ensure compatibility with JavaScript raw number returned only if it is less than or equal to "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Number.MAX_SAFE_INTEGER"}]},{"type":"text","value":" (2"},{"type":"element","tag":"sup","props":{},"children":[{"type":"text","value":"53"}]},{"type":"text","value":"-1). If asset emission is greater than "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Number.MAX_SAFE_INTEGER"}]},{"type":"text","value":" only corresponding string representation is returned."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"isOwned"}]},{"type":"text","value":" is 1 if you own this asset"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"lockHeight"}]},{"type":"text","value":" last block when asset emission turned to/from 0."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"refreshHeight"}]},{"type":"text","value":" block at which asset information has been received. Please note, that all returned fields are valid only for this and previous blocks. In next blocks emission might change, asset become unregistered &c. Use "},{"type":"element","tag":"a","props":{"href":"#tx_asset_info"},"children":[{"type":"text","value":"tx_asset_info"}]},{"type":"text","value":" to retrieve the most recent info."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"metadata_kv"}]},{"type":"text","value":" true if metadata was parsed successfully as key=value pairs"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"metadata_pairs"}]},{"type":"text","value":" present only if "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"metadata_kv"}]},{"type":"text","value":" is true, provides actual parsed key=value pairs"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"metadata_std_min"}]},{"type":"text","value":" true if metadata is k=v pairs and minimal necessary pairs are present, i.e. N(Name), UN(Unit Name), SN(Short Name), NTHUN (Smallest Unit Name)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"metadata_std"}]},{"type":"text","value":" true if metadata is k=v pairs and fully adheres to the "},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/wiki/Asset-Descriptor-v1.0","rel":["nofollow"]},"children":[{"type":"text","value":"Asset Descriptor Specification"}]}]}]},{"type":"element","tag":"h2","props":{"id":"generate_tx_id"},"children":[{"type":"text","value":"generate_tx_id"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Generates ID for a transaction."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 2,\n    \"method\":\"generate_tx_id\"\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 2,\n    \"method\":\"generate_tx_id\"\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 2,\n    \"result\":\"10c4b760c842433cb58339a0fafef3db\"\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 2,\n    \"result\":\"10c4b760c842433cb58339a0fafef3db\"\n}\n"}]}]},{"type":"element","tag":"h2","props":{"id":"export_payment_proof"},"children":[{"type":"text","value":"export_payment_proof"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Exports payment proof for given "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"txId"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"method\": \"export_payment_proof\", \n    \"params\":\n    {\n        \"txId\" : \"a13525181c0d45b0a4c5c1a697c8a7b8\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"method\": \"export_payment_proof\", \n    \"params\":\n    {\n        \"txId\" : \"a13525181c0d45b0a4c5c1a697c8a7b8\"\n    }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"result\": \n    {\n        \"payment_proof\": \"8009f28991ef543253c8b6a2caf15cf99e23fb9c2b4ca30dc463c8ceb354d7979e80ef7d4255dd5e885200648abe5826d8e0ba0157d3e8cf9c42dcc8258b036986e50400371789ee82afc25ee29c9c57bcb1018b725a3a94c0ceb1fa7984ea13de4982553e0d78d925a362982182a971e654857b8e407e7ad2e9cb72b2b8228812f8ec50435351000c94e2c85996e9527d9b0c90a1843205a7ec8f99fa534083e5f1d055d9f53894\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"result\": \n    {\n        \"payment_proof\": \"8009f28991ef543253c8b6a2caf15cf99e23fb9c2b4ca30dc463c8ceb354d7979e80ef7d4255dd5e885200648abe5826d8e0ba0157d3e8cf9c42dcc8258b036986e50400371789ee82afc25ee29c9c57bcb1018b725a3a94c0ceb1fa7984ea13de4982553e0d78d925a362982182a971e654857b8e407e7ad2e9cb72b2b8228812f8ec50435351000c94e2c85996e9527d9b0c90a1843205a7ec8f99fa534083e5f1d055d9f53894\"\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"payment_proof"}]},{"type":"text","value":" is a hex-encoded byte buffer which contains information about sender, receiver, amount and kernel, signed with receiver's private key. This info could be unpacked and verified using "},{"type":"element","tag":"a","props":{"href":"#verify_payment_proof"},"children":[{"type":"text","value":"verify_payment_proof"}]},{"type":"text","value":" method by the third party. Receiver creates a payment proof in order give receiver an ability to proof that actual payment was made. Sender does not sign transaction if receiver does not provide him this evidence."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"N.B."}]},{"type":"text","value":" Payment proofs for asset transaction are supported starting from v5.0. These proofs cannot be verified by earlier clients/APIs versions. Regular BEAM payment proofs generated by the latest clients/APIs still would be accepted by earlier versions of clients/APIs."}]},{"type":"element","tag":"h2","props":{"id":"verify_payment_proof"},"children":[{"type":"text","value":"verify_payment_proof"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Verifies "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"payment_proof"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"method\":\"verify_payment_proof\", \n    \"params\":\n    {\n        \"payment_proof\" : \"8009f28991ef543253c8b6a2caf15cf99e23fb9c2b4ca30dc463c8ceb354d7979e80ef7d4255dd5e885200648abe5826d8e0ba0157d3e8cf9c42dcc8258b036986e50400371789ee82afc25ee29c9c57bcb1018b725a3a94c0ceb1fa7984ea13de4982553e0d78d925a362982182a971e654857b8e407e7ad2e9cb72b2b8228812f8ec50435351000c94e2c85996e9527d9b0c90a1843205a7ec8f99fa534083e5f1d055d9f53894\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"method\":\"verify_payment_proof\", \n    \"params\":\n    {\n        \"payment_proof\" : \"8009f28991ef543253c8b6a2caf15cf99e23fb9c2b4ca30dc463c8ceb354d7979e80ef7d4255dd5e885200648abe5826d8e0ba0157d3e8cf9c42dcc8258b036986e50400371789ee82afc25ee29c9c57bcb1018b725a3a94c0ceb1fa7984ea13de4982553e0d78d925a362982182a971e654857b8e407e7ad2e9cb72b2b8228812f8ec50435351000c94e2c85996e9527d9b0c90a1843205a7ec8f99fa534083e5f1d055d9f53894\"\n    }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"result\": \n    {\n        \"is_valid\": true,\n        \"asset_id\": 0,\n        \"sender\":   \"9f28991ef543253c8b6a2caf15cf99e23fb9c2b4ca30dc463c8ceb354d7979e\",\n        \"receiver\": \"ef7d4255dd5e885200648abe5826d8e0ba0157d3e8cf9c42dcc8258b036986e5\",\n        \"amount\":   2300000000,\n        \"kernel\":   \"ee82afc25ee29c9c57bcb1018b725a3a94c0ceb1fa7984ea13de4982553e0d78\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"result\": \n    {\n        \"is_valid\": true,\n        \"asset_id\": 0,\n        \"sender\":   \"9f28991ef543253c8b6a2caf15cf99e23fb9c2b4ca30dc463c8ceb354d7979e\",\n        \"receiver\": \"ef7d4255dd5e885200648abe5826d8e0ba0157d3e8cf9c42dcc8258b036986e5\",\n        \"amount\":   2300000000,\n        \"kernel\":   \"ee82afc25ee29c9c57bcb1018b725a3a94c0ceb1fa7984ea13de4982553e0d78\"\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"is_valid"}]},{"type":"text","value":" true if signature is valid,"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"sender"}]},{"type":"text","value":" sender's SBBS address"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"receiver"}]},{"type":"text","value":" is a receiver's SBBS address, is it is used to verify the signature"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"amount"}]},{"type":"text","value":" amount sent by the transaction in groth"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_id"}]},{"type":"text","value":" asset id of the transaction, 0 for BEAM. Returned starting from v5.0"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"kernel"}]},{"type":"text","value":" id of the kernel of this transaction"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"N.B."}]},{"type":"text","value":" v5.0+ APIs accept proofs generated by older versions."}]},{"type":"element","tag":"h2","props":{"id":"invoke_contract"},"children":[{"type":"text","value":"invoke_contract"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Available from v6.0, can be used after Fork3."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Invokes application shader. Only application/wallet side shaders are accepted. Use CLI to call a contract shader."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\": \"2.0\", \n    \"id\": 2,\n    \"method\": \"invoke_contract\", \n    \"params\":\n    {\n        \"contract\": [123, 123, 123],\n        \"args\": \"role=manager,action=view\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\": \"2.0\", \n    \"id\": 2,\n    \"method\": \"invoke_contract\", \n    \"params\":\n    {\n        \"contract\": [123, 123, 123],\n        \"args\": \"role=manager,action=view\"\n    }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"OR"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\": \"2.0\", \n    \"id\": 2,\n    \"method\": \"invoke_contract\", \n    \"params\":\n    {\n        \"contract_file\": \"....\",\n        \"args\": \"role=manager,action=view\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\": \"2.0\", \n    \"id\": 2,\n    \"method\": \"invoke_contract\", \n    \"params\":\n    {\n        \"contract_file\": \"....\",\n        \"args\": \"role=manager,action=view\"\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"contract"}]},{"type":"text","value":" contract code as raw bytes array, optional."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"contract_file"}]},{"type":"text","value":" file name to read contract code from, optional. Absolute or relative to the executable CWD."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"args"}]},{"type":"text","value":" contract arguments, optional. Depends on the called shader. Consult shader-specific docs for details."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"create_tx"}]},{"type":"text","value":" bool, pass "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"true"}]},{"type":"text","value":" create transaction automatically if contract wants it and return "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"txid"}]},{"type":"text","value":". Pass false to avoid transaction creation, get raw tx data that can be passed to "},{"type":"element","tag":"a","props":{"href":"#process_invoke_data"},"children":[{"type":"text","value":"process_invoke_data"}]},{"type":"text","value":" later. By default is "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"true"}]},{"type":"text","value":"."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"contract"}]},{"type":"text","value":" parameter always takes precedence over the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"contract_file"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n  \"id\": 1236,\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"output\": \"{\\\"contracts\\\": [{\\\"cid\\\": \\\"2b105519ee7e170d92abffbc1eb5426d4e20910af2f54bcee43eb84c74dcfa4b\\\",\\\"Height\\\": 27004},{\\\"cid\\\": \n               \\\"55df189ac5c1f9b982fa34fb8050f005c331203023816ddbb2d641a96a3fcb2a\\\",\\\"Height\\\": 27001},{\\\"cid\\\": \n               \\\"6add645863c29d9dc43ab9987af870cb91fd0dfb4e26ae09ca97ac8ff5372f6e\\\",\\\"Height\\\": 532}]}\"\n  }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n  \"id\": 1236,\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"output\": \"{\\\"contracts\\\": [{\\\"cid\\\": \\\"2b105519ee7e170d92abffbc1eb5426d4e20910af2f54bcee43eb84c74dcfa4b\\\",\\\"Height\\\": 27004},{\\\"cid\\\": \n               \\\"55df189ac5c1f9b982fa34fb8050f005c331203023816ddbb2d641a96a3fcb2a\\\",\\\"Height\\\": 27001},{\\\"cid\\\": \n               \\\"6add645863c29d9dc43ab9987af870cb91fd0dfb4e26ae09ca97ac8ff5372f6e\\\",\\\"Height\\\": 532}]}\"\n  }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"output"}]},{"type":"text","value":" contract output. Depends on the called shader. Can be empty"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"txid"}]},{"type":"text","value":" transaction created by contract (if any)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"raw_data"}]},{"type":"text","value":" raw data returned by the contract based on which transaction can be created using "},{"type":"element","tag":"a","props":{"href":"#process_invoke_data"},"children":[{"type":"text","value":"process_invoke_data"}]}]}]},{"type":"element","tag":"h3","props":{"id":"shader-errors"},"children":[{"type":"text","value":"Shader Errors"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Please notice that API returns errors only if there is an API error (no shader code, parse error &c.). If there was an error inside the shader itself API call would be successful and shader output should be checked. For example:"}]},{"type":"element","tag":"h3","props":{"id":"code-caching"},"children":[{"type":"text","value":"Code caching"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"If there was an invoke_shader before "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"contract"}]},{"type":"text","value":"/"},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"contract_file"}]},{"type":"text","value":" can be omitted. In this case contract code from previous call would be used. In case of wallet_api code caching works on per-connection level. In case of applications caching works on per-application level."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1236,\n    \"method\": \"invoke_contract\",\n    \"params\": {\n        \"contract_file\": \"./faucetManager.wasm\",\n        \"args\": \"role=manager\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1236,\n    \"method\": \"invoke_contract\",\n    \"params\": {\n        \"contract_file\": \"./faucetManager.wasm\",\n        \"args\": \"role=manager\"\n    }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n  \"id\": 1236,\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"output\": \"{\\\"error\\\": \\\"Action not specified\\\"}\"\n  }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n  \"id\": 1236,\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"output\": \"{\\\"error\\\": \\\"Action not specified\\\"}\"\n  }\n}\n"}]}]},{"type":"element","tag":"h3","props":{"id":"requests-queue"},"children":[{"type":"text","value":"Requests queue"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Before v6.1 it was not allowed to make the next contract call before the previous one is completed. As per v6.1 priority queue is added for "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"invoke_contract"}]},{"type":"text","value":" requests. If previous call is not completed new "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"invoke_shader"}]},{"type":"text","value":" call would be added to the queue and executed later. New parameters were added to control the queue:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"priority"}]},{"type":"text","value":" - integer, 0 by default. Calls with higher priority would be placed on top of the queue"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"unique"}]},{"type":"text","value":" - integer, 0 by default. If there is already an "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"invoke_contract"}]},{"type":"text","value":" call with the same "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"unique"}]},{"type":"text","value":" queued or being executed the new call will not be added to the queue. This might be necessary to avoid queue congestion with multiple status while previous requests are still pending. Value of 0 is ignored and doesn't trigger call omission."}]}]},{"type":"element","tag":"h2","props":{"id":"process_invoke_data"},"children":[{"type":"text","value":"process_invoke_data"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Creates transaction requested by a contract"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1236,\n    \"method\": \"process_invoke_data\",\n    \"params\": {\n        \"data\": [123, 123, 123]\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1236,\n    \"method\": \"process_invoke_data\",\n    \"params\": {\n        \"data\": [123, 123, 123]\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"data"}]},{"type":"text","value":" raw invoke data bytes array returned by "},{"type":"element","tag":"a","props":{"href":"#invoke_contract"},"children":[{"type":"text","value":"invoke_contract"}]},{"type":"text","value":", mandatory"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n  \"id\": 1236,\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"txid\": \"...\"\n  }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n  \"id\": 1236,\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"txid\": \"...\"\n  }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"txid"}]},{"type":"text","value":" contract transaction id created as a result of the call"}]}]},{"type":"element","tag":"h2","props":{"id":"calc_change"},"children":[{"type":"text","value":"calc_change"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Calculates change for given "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"amount"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"method\":\"calc_change\", \n    \"params\":\n    {\n        \"amount\" : 1234,\n        \"asset_id\": 2,\n        \"fee\": 10000,\n        \"is_push_transaction\": true\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"method\":\"calc_change\", \n    \"params\":\n    {\n        \"amount\" : 1234,\n        \"asset_id\": 2,\n        \"fee\": 10000,\n        \"is_push_transaction\": true\n    }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"result\":\n    {\n        \"asset_change\": 12,\n        \"asset_change_str\": \"12\",\n        \"change\": 12,\n        \"change_str\": \"12\",\n        \"explicit_fee\": 1100000,\n        \"explicit_fee_str\": \"1100000\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"result\":\n    {\n        \"asset_change\": 12,\n        \"asset_change_str\": \"12\",\n        \"change\": 12,\n        \"change_str\": \"12\",\n        \"explicit_fee\": 1100000,\n        \"explicit_fee_str\": \"1100000\"\n    }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"where"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"amount"}]},{"type":"text","value":" is a requested amount we are going to send"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_id"}]},{"type":"text","value":" optional asset id of the requested amount. Default is 0 (BEAM). This method can be used for non-BEAM coins even if assets are not enabled."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"fee"}]},{"type":"text","value":" explicit fee in GROTHs chosen by the user"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_change"}]},{"type":"text","value":" change amount for requested "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_id"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"change"}]},{"type":"text","value":" change in for BEAM. "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_change"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"change"}]},{"type":"text","value":" are equal if "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_id == 0"}]},{"type":"text","value":", i.e. BEAM"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"explicit_fee"}]},{"type":"text","value":" the fee which should be used"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"is_push_transaction"}]},{"type":"text","value":" "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"true"}]},{"type":"text","value":" if we are going to push transaction output into the shielded pool."}]}]},{"type":"element","tag":"h2","props":{"id":"block_details"},"children":[{"type":"text","value":"block_details"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Returns block header from blockchain"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\": \"2.0\", \n    \"id\": 2,\n    \"method\": \"block_details\", \n    \"params\":\n    {\n        \"height\": 200\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\": \"2.0\", \n    \"id\": 2,\n    \"method\": \"block_details\", \n    \"params\":\n    {\n        \"height\": 200\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"height"}]},{"type":"text","value":" height of block."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"result\":\n    {\n        \"block_hash\": \"7aec20e5b56706d57a4dca1df4a4d3104dbdbf8d6005499845558b7a32694d02\",\n        \"chainwork\": \"000000000000000000000000000000000000000000000000000000c503b09ac0\",\n        \"definition\": \"0d3f4e63743760c6397d76086e1cc0ebe749c121206c8150738dc84edcd30092\",\n        \"difficulty\": 118.4594497680664,\n        \"height\": 200,\n        \"kernels\": \"705cdfa154eec35e4b4b0e2163ff9c81f8f035641ee4b0b95c3f3c5b0f170ffe\",\n        \"packed_difficulty\": 114939514,\n        \"pow\": \"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004f04638c1f4cee1b7ad6d906\",\n        \"previous_block\": \"d195cc69fbd2b402cc33ecb303f5391f0010f34ee059f30b908ed10f0fe5a255\",\n        \"rules_hash\": \"340bbeabc390f481df1f84aedf0b679c1c7ed1f0e28d4340c9c49b4c41611f85\",\n        \"timestamp\": 1619598150\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"result\":\n    {\n        \"block_hash\": \"7aec20e5b56706d57a4dca1df4a4d3104dbdbf8d6005499845558b7a32694d02\",\n        \"chainwork\": \"000000000000000000000000000000000000000000000000000000c503b09ac0\",\n        \"definition\": \"0d3f4e63743760c6397d76086e1cc0ebe749c121206c8150738dc84edcd30092\",\n        \"difficulty\": 118.4594497680664,\n        \"height\": 200,\n        \"kernels\": \"705cdfa154eec35e4b4b0e2163ff9c81f8f035641ee4b0b95c3f3c5b0f170ffe\",\n        \"packed_difficulty\": 114939514,\n        \"pow\": \"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004f04638c1f4cee1b7ad6d906\",\n        \"previous_block\": \"d195cc69fbd2b402cc33ecb303f5391f0010f34ee059f30b908ed10f0fe5a255\",\n        \"rules_hash\": \"340bbeabc390f481df1f84aedf0b679c1c7ed1f0e28d4340c9c49b4c41611f85\",\n        \"timestamp\": 1619598150\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"block_hash"}]},{"type":"text","value":" is a block hash"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"chainwork"}]},{"type":"text","value":" is a chainwork"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"definition"}]},{"type":"text","value":" is a definition"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"difficulty"}]},{"type":"text","value":" is a difficulty"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"height"}]},{"type":"text","value":" is a block height"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"kernels"}]},{"type":"text","value":" is a kernels"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"packed_difficulty"}]},{"type":"text","value":" is a packed difficulty"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"pow"}]},{"type":"text","value":" is a pow"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"previous_block"}]},{"type":"text","value":" is hash of previous block"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"rules_hash"}]},{"type":"text","value":" is a rules hash"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"timestamp"}]},{"type":"text","value":" is a timestamp"}]}]},{"type":"element","tag":"h2","props":{"id":"get_version"},"children":[{"type":"text","value":"get_version"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Returns version info"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\": \"2.0\", \n    \"id\": 1,\n    \"method\": \"get_version\"\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\": \"2.0\", \n    \"id\": 1,\n    \"method\": \"get_version\"\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n  \"id\": 1,\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"api_version\": \"6.1\",\n    \"api_version_major\": 6,\n    \"api_version_minor\": 1,\n    \"beam_branch_name\": \"master\",\n    \"beam_commit_hash\": \"f7dcfab5341e84a58918f2fde0fc2be9c09264eb\",\n    \"beam_version\": \"6.1.11462\",\n    \"beam_version_major\": 6,\n    \"beam_version_minor\": 1,\n    \"beam_version_rev\": 11462\n  }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n  \"id\": 1,\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"api_version\": \"6.1\",\n    \"api_version_major\": 6,\n    \"api_version_minor\": 1,\n    \"beam_branch_name\": \"master\",\n    \"beam_commit_hash\": \"f7dcfab5341e84a58918f2fde0fc2be9c09264eb\",\n    \"beam_version\": \"6.1.11462\",\n    \"beam_version_major\": 6,\n    \"beam_version_minor\": 1,\n    \"beam_version_rev\": 11462\n  }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"api_xxx"}]},{"type":"text","value":" API version info"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"beam_xxx"}]},{"type":"text","value":" BEAM version info on top of which API is built ("},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam","rel":["nofollow"]},"children":[{"type":"text","value":"https://github.com/BeamMW/beam"}]},{"type":"text","value":")"}]}]},{"type":"element","tag":"h2","props":{"id":"ipfs_add"},"children":[{"type":"text","value":"ipfs_add"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Add data to IPFS local node and pin it. Action is automatically cancelled on API restart."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"method\": \"ipfs_add\", \n    \"params\":\n    {\n        \"data\" : [1, 2, 3],\n        \"pin\"  : true,\n        \"timeout\": 5000\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"method\": \"ipfs_add\", \n    \"params\":\n    {\n        \"data\" : [1, 2, 3],\n        \"pin\"  : true,\n        \"timeout\": 5000\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"data"}]},{"type":"text","value":" raw uint8 bytes array to store in IPFS"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"pin"}]},{"type":"text","value":" optional bool, if "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"true"}]},{"type":"text","value":" data would also be pinned to the local IPFS node. Default is "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"true"}]},{"type":"text","value":"."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"timeout"}]},{"type":"text","value":" timeout in milliseconds. By default method doesn't timeout"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"result\" : \n    {\n        \"hash\" : \"QmWWQSuPMS6aXCbZKpEjPHPUZN2NjB3YrhJTHsV4X3vb2t\",\n        \"pinned\": true\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"result\" : \n    {\n        \"hash\" : \"QmWWQSuPMS6aXCbZKpEjPHPUZN2NjB3YrhJTHsV4X3vb2t\",\n        \"pinned\": true\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"hash"}]},{"type":"text","value":" IPFS hash of the added data"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"pinned"}]},{"type":"text","value":" bool flag that indicates if data has been pinned or just added"}]}]},{"type":"element","tag":"h2","props":{"id":"ipfs_hash"},"children":[{"type":"text","value":"ipfs_hash"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Calculate IPFS hash (CID) of the data"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"method\": \"ipfs_hash\", \n    \"params\":\n    {\n        \"data\" : [1, 2, 3],\n        \"timeout\": 5000\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"method\": \"ipfs_hash\", \n    \"params\":\n    {\n        \"data\" : [1, 2, 3],\n        \"timeout\": 5000\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"data"}]},{"type":"text","value":" raw uint8 bytes to calculate hash of"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"timeout"}]},{"type":"text","value":" timeout in milliseconds. By default method doesn't timeout"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"result\" : \n    {\n        \"hash\" : \"QmWWQSuPMS6aXCbZKpEjPHPUZN2NjB3YrhJTHsV4X3vb2t\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"result\" : \n    {\n        \"hash\" : \"QmWWQSuPMS6aXCbZKpEjPHPUZN2NjB3YrhJTHsV4X3vb2t\"\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"hash"}]},{"type":"text","value":" IPFS hash of the data"}]}]},{"type":"element","tag":"h2","props":{"id":"ipfs_get"},"children":[{"type":"text","value":"ipfs_get"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Get data from IPFS by hash. Action is automatically cancelled on API restart. May take a lot of time if data is not present on the local node."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"method\": \"ipfs_get\", \n    \"params\":\n    {\n        \"hash\" : \"QmWWQSuPMS6aXCbZKpEjPHPUZN2NjB3YrhJTHsV4X3vb2t\",\n        \"timeout\": 5000\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"method\": \"ipfs_get\", \n    \"params\":\n    {\n        \"hash\" : \"QmWWQSuPMS6aXCbZKpEjPHPUZN2NjB3YrhJTHsV4X3vb2t\",\n        \"timeout\": 5000\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"hash"}]},{"type":"text","value":" IPFS has of the data to get"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"timeout"}]},{"type":"text","value":" timeout in milliseconds. By default method doesn't timeout"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"result\" : \n    {\n        \"hash\" : \"QmWWQSuPMS6aXCbZKpEjPHPUZN2NjB3YrhJTHsV4X3vb2t\",\n        \"data\" : [1, 2, 3]\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"result\" : \n    {\n        \"hash\" : \"QmWWQSuPMS6aXCbZKpEjPHPUZN2NjB3YrhJTHsV4X3vb2t\",\n        \"data\" : [1, 2, 3]\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"hash"}]},{"type":"text","value":" IPFS hash of the data"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"data"}]},{"type":"text","value":" actual data as uint8 bytes array"}]}]},{"type":"element","tag":"h2","props":{"id":"ipfs_pin"},"children":[{"type":"text","value":"ipfs_pin"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Pin data to the local node. If data is not stored in the local node it is discovered and downloaded ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"ipfs_get"}]},{"type":"text","value":"). Action is automatically cancelled at API restart. May take a lot of time."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"method\": \"ipfs_pin\", \n    \"params\":\n    {\n        \"hash\" : \"QmWWQSuPMS6aXCbZKpEjPHPUZN2NjB3YrhJTHsV4X3vb2t\",\n        \"timeout\": 5000\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"method\": \"ipfs_pin\", \n    \"params\":\n    {\n        \"hash\" : \"QmWWQSuPMS6aXCbZKpEjPHPUZN2NjB3YrhJTHsV4X3vb2t\",\n        \"timeout\": 5000\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"hash"}]},{"type":"text","value":" IPFS has of the data to pin"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"timeout"}]},{"type":"text","value":" timeout in milliseconds. By default method doesn't timeout"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"result\" : \n    {\n        \"hash\" : \"QmWWQSuPMS6aXCbZKpEjPHPUZN2NjB3YrhJTHsV4X3vb2t\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"result\" : \n    {\n        \"hash\" : \"QmWWQSuPMS6aXCbZKpEjPHPUZN2NjB3YrhJTHsV4X3vb2t\"\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"hash"}]},{"type":"text","value":" IPFS hash of the pinned data"}]}]},{"type":"element","tag":"h2","props":{"id":"ipfs_unpin"},"children":[{"type":"text","value":"ipfs_unpin"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Unpin data from the local node. Data is not deleted and will be available via "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"ipfs_get"}]},{"type":"text","value":" until garbage collected."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"method\": \"ipfs_unpin\", \n    \"params\":\n    {\n        \"hash\" : \"QmWWQSuPMS6aXCbZKpEjPHPUZN2NjB3YrhJTHsV4X3vb2t\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"method\": \"ipfs_unpin\", \n    \"params\":\n    {\n        \"hash\" : \"QmWWQSuPMS6aXCbZKpEjPHPUZN2NjB3YrhJTHsV4X3vb2t\"\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"hash"}]},{"type":"text","value":" IPFS has of the data to unpin"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"result\" : \n    {\n        \"hash\" : \"QmWWQSuPMS6aXCbZKpEjPHPUZN2NjB3YrhJTHsV4X3vb2t\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"result\" : \n    {\n        \"hash\" : \"QmWWQSuPMS6aXCbZKpEjPHPUZN2NjB3YrhJTHsV4X3vb2t\"\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"hash"}]},{"type":"text","value":" IPFS hash of the unpinned data"}]}]},{"type":"element","tag":"h2","props":{"id":"ipfs_gc"},"children":[{"type":"text","value":"ipfs_gc"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Garbage collect IPFS storage, i.e. delete unpinned data until storage has at least 10% of free space (default settings). May take a lot of time. In desktop client gc is run automatically every hour."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"method\": \"ipfs_gc\", \n    \"params\":\n    {\n        \"timeout\" : 60000\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"method\": \"ipfs_gc\", \n    \"params\":\n    {\n        \"timeout\" : 60000\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"timeout"}]},{"type":"text","value":" timeout in milliseconds. By default method doesn't timeout"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"result\" : \n    {\n        \"result\" : true\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"result\" : \n    {\n        \"result\" : true\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"result"}]},{"type":"text","value":" success flag"}]}]},{"type":"element","tag":"h2","props":{"id":"ev_subunsub"},"children":[{"type":"text","value":"ev_subunsub"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Subscribe/unsubscribe to API events."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\": \"2.0\", \n    \"id\": 1,\n    \"method\": \"ev_subunsub\",\n    \"params\": {\n        \"ev_sync_progress\": true,\n        \"ev_system_state\": true,\n        \"ev_assets_changed\": true,\n        \"ev_addrs_changed\": true,\n        \"ev_utxos_changed\": true,\n        \"ev_txs_changed\": true\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\": \"2.0\", \n    \"id\": 1,\n    \"method\": \"ev_subunsub\",\n    \"params\": {\n        \"ev_sync_progress\": true,\n        \"ev_system_state\": true,\n        \"ev_assets_changed\": true,\n        \"ev_addrs_changed\": true,\n        \"ev_utxos_changed\": true,\n        \"ev_txs_changed\": true\n    }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n  \"id\": 1,\n  \"jsonrpc\": \"2.0\",\n  \"result\": true\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n  \"id\": 1,\n  \"jsonrpc\": \"2.0\",\n  \"result\": true\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"ev_xxxx"}]},{"type":"text","value":" corresponding event name, optional, bool. True subscribes to the event, false unsubscribes. All "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"ev_xxxx"}]},{"type":"text","value":" paramaters are optional. If event is not specified its subscription state remains unchanged. Immediately after subscription corresponding event is generated providing the latest state."}]}]},{"type":"element","tag":"h2","props":{"id":"ev_sync_progress"},"children":[{"type":"text","value":"ev_sync_progress"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Event is generated while wallet is being synced with the blockchain. Let's consider the following situation:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"current wallet height is 105"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"block 106 has been just mined"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In this case the following sequence of events would be generated:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"1. <--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n  \"id\": \"ev_sync_progress\",\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"current_height\": 105,\n    \"current_state_hash\": \"76de9b9bcbc1b1a4775d54f2b98c3edc222f5a86698209200e459043fe218a29\",\n    \"current_state_timestamp\": 1625146903,\n    \"sync_requests_done\": 0,\n    \"sync_requests_total\": 2,\n    \"is_in_sync\": true,\n    \"prev_state_hash\": \"3a2a3bd55615d3de86b86c920f715ad47973be7dbc2fde2d4c39b937e96177e1\",\n    \"tip_height\": 106,\n    \"tip_prev_state_hash\": \"76de9b9bcbc1b1a4775d54f2b98c3edc222f5a86698209200e459043fe218a29\",\n    \"tip_state_hash\": \"7bb40b96ee4606c3e8f085aa633b66c14f041178142eb1077521621cde47e3b1\",\n    \"tip_state_timestamp\": 1625146951\n  }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n  \"id\": \"ev_sync_progress\",\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"current_height\": 105,\n    \"current_state_hash\": \"76de9b9bcbc1b1a4775d54f2b98c3edc222f5a86698209200e459043fe218a29\",\n    \"current_state_timestamp\": 1625146903,\n    \"sync_requests_done\": 0,\n    \"sync_requests_total\": 2,\n    \"is_in_sync\": true,\n    \"prev_state_hash\": \"3a2a3bd55615d3de86b86c920f715ad47973be7dbc2fde2d4c39b937e96177e1\",\n    \"tip_height\": 106,\n    \"tip_prev_state_hash\": \"76de9b9bcbc1b1a4775d54f2b98c3edc222f5a86698209200e459043fe218a29\",\n    \"tip_state_hash\": \"7bb40b96ee4606c3e8f085aa633b66c14f041178142eb1077521621cde47e3b1\",\n    \"tip_state_timestamp\": 1625146951\n  }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In event 1 API tells that there is 1 new block to sync ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"tip_height"}]},{"type":"text","value":" - "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"current_height"}]},{"type":"text","value":" is 1) and nothing has been yet done ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"sync_requests_done"}]},{"type":"text","value":" is 0). Current height is 105 ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"current_height"}]},{"type":"text","value":"), target height is 106 ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"tip_height"}]},{"type":"text","value":") and our wallet is still in a 'synce tolerance range' ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"is_in_sync"}]},{"type":"text","value":" is true). If "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"is_in_sync"}]},{"type":"text","value":" is false all the requested/pending transaction would be delayed until the wallet is synced."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"2. <--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n  \"id\": \"ev_sync_progress\",\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"current_height\": 105,\n    \"current_state_hash\": \"76de9b9bcbc1b1a4775d54f2b98c3edc222f5a86698209200e459043fe218a29\",\n    \"current_state_timestamp\": 1625146903,\n    \"sync_requests_done\": 1,\n    \"sync_requests_total\": 2,\n    \"is_in_sync\": true,\n    \"prev_state_hash\": \"3a2a3bd55615d3de86b86c920f715ad47973be7dbc2fde2d4c39b937e96177e1\",\n    \"tip_height\": 106,\n    \"tip_prev_state_hash\": \"76de9b9bcbc1b1a4775d54f2b98c3edc222f5a86698209200e459043fe218a29\",\n    \"tip_state_hash\": \"7bb40b96ee4606c3e8f085aa633b66c14f041178142eb1077521621cde47e3b1\",\n    \"tip_state_timestamp\": 1625146951\n  }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n  \"id\": \"ev_sync_progress\",\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"current_height\": 105,\n    \"current_state_hash\": \"76de9b9bcbc1b1a4775d54f2b98c3edc222f5a86698209200e459043fe218a29\",\n    \"current_state_timestamp\": 1625146903,\n    \"sync_requests_done\": 1,\n    \"sync_requests_total\": 2,\n    \"is_in_sync\": true,\n    \"prev_state_hash\": \"3a2a3bd55615d3de86b86c920f715ad47973be7dbc2fde2d4c39b937e96177e1\",\n    \"tip_height\": 106,\n    \"tip_prev_state_hash\": \"76de9b9bcbc1b1a4775d54f2b98c3edc222f5a86698209200e459043fe218a29\",\n    \"tip_state_hash\": \"7bb40b96ee4606c3e8f085aa633b66c14f041178142eb1077521621cde47e3b1\",\n    \"tip_state_timestamp\": 1625146951\n  }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In event 2 API tells that 1 sync request has been processed ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"sync_requests_done"}]},{"type":"text","value":" is 1). It can be block body downloaded, utxo received &c. Since "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"sync_requests_total"}]},{"type":"text","value":" is 2 not everything is received, some requests are still pending."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"3. <--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n  \"id\": \"ev_sync_progress\",\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"current_height\": 105,\n    \"current_state_hash\": \"76de9b9bcbc1b1a4775d54f2b98c3edc222f5a86698209200e459043fe218a29\",\n    \"current_state_timestamp\": 1625146903,\n    \"sync_requests_done\": 2,\n    \"sync_requests_total\": 2,\n    \"is_in_sync\": true,\n    \"prev_state_hash\": \"3a2a3bd55615d3de86b86c920f715ad47973be7dbc2fde2d4c39b937e96177e1\",\n    \"tip_height\": 106,\n    \"tip_prev_state_hash\": \"76de9b9bcbc1b1a4775d54f2b98c3edc222f5a86698209200e459043fe218a29\",\n    \"tip_state_hash\": \"7bb40b96ee4606c3e8f085aa633b66c14f041178142eb1077521621cde47e3b1\",\n    \"tip_state_timestamp\": 1625146951\n  }\n}\n\nIn event 3 API tells that 2 sync events have been receive (`sync_requests_done` is 2) and since `sync_requests_total` is 2 too we can conclude that everything is downloaded now though not yet processed and wallet state has not yet moved to the next block (current_height is still not changed and is 105).\n\n`4. <--`\n```json\n{\n  \"id\": \"ev_sync_progress\",\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"current_height\": 106,\n    \"current_state_hash\": \"7bb40b96ee4606c3e8f085aa633b66c14f041178142eb1077521621cde47e3b1\",\n    \"current_state_timestamp\": 1625146903,\n    \"sync_requests_done\": 2,\n    \"sync_requests_total\": 2,\n    \"is_in_sync\": true,\n    \"prev_state_hash\": \"76de9b9bcbc1b1a4775d54f2b98c3edc222f5a86698209200e459043fe218a29\",\n    \"tip_height\": 106,\n    \"tip_prev_state_hash\": \"76de9b9bcbc1b1a4775d54f2b98c3edc222f5a86698209200e459043fe218a29\",\n    \"tip_state_hash\": \"7bb40b96ee4606c3e8f085aa633b66c14f041178142eb1077521621cde47e3b1\",\n    \"tip_state_timestamp\": 1625146951\n  }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n  \"id\": \"ev_sync_progress\",\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"current_height\": 105,\n    \"current_state_hash\": \"76de9b9bcbc1b1a4775d54f2b98c3edc222f5a86698209200e459043fe218a29\",\n    \"current_state_timestamp\": 1625146903,\n    \"sync_requests_done\": 2,\n    \"sync_requests_total\": 2,\n    \"is_in_sync\": true,\n    \"prev_state_hash\": \"3a2a3bd55615d3de86b86c920f715ad47973be7dbc2fde2d4c39b937e96177e1\",\n    \"tip_height\": 106,\n    \"tip_prev_state_hash\": \"76de9b9bcbc1b1a4775d54f2b98c3edc222f5a86698209200e459043fe218a29\",\n    \"tip_state_hash\": \"7bb40b96ee4606c3e8f085aa633b66c14f041178142eb1077521621cde47e3b1\",\n    \"tip_state_timestamp\": 1625146951\n  }\n}\n\nIn event 3 API tells that 2 sync events have been receive (`sync_requests_done` is 2) and since `sync_requests_total` is 2 too we can conclude that everything is downloaded now though not yet processed and wallet state has not yet moved to the next block (current_height is still not changed and is 105).\n\n`4. <--`\n```json\n{\n  \"id\": \"ev_sync_progress\",\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"current_height\": 106,\n    \"current_state_hash\": \"7bb40b96ee4606c3e8f085aa633b66c14f041178142eb1077521621cde47e3b1\",\n    \"current_state_timestamp\": 1625146903,\n    \"sync_requests_done\": 2,\n    \"sync_requests_total\": 2,\n    \"is_in_sync\": true,\n    \"prev_state_hash\": \"76de9b9bcbc1b1a4775d54f2b98c3edc222f5a86698209200e459043fe218a29\",\n    \"tip_height\": 106,\n    \"tip_prev_state_hash\": \"76de9b9bcbc1b1a4775d54f2b98c3edc222f5a86698209200e459043fe218a29\",\n    \"tip_state_hash\": \"7bb40b96ee4606c3e8f085aa633b66c14f041178142eb1077521621cde47e3b1\",\n    \"tip_state_timestamp\": 1625146951\n  }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In event 4 API tells that the wallet state is moved to the last tip ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"sync_requests_total"}]},{"type":"text","value":" == "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"sync_requests_done"}]},{"type":"text","value":" == 0 AND "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"tip_state_hash"}]},{"type":"text","value":" == "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"current_state_hash"}]},{"type":"text","value":" AND "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"tip_height"}]},{"type":"text","value":" == "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"current_height"}]},{"type":"text","value":")."}]},{"type":"element","tag":"h2","props":{"id":"ev_system_state"},"children":[{"type":"text","value":"ev_system_state"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Generated when wallet moves to the next state, for example when new block is mined and wallet has acknowledged and processed this fact or when new block is delivered during the sync."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n  \"id\": \"ev_system_state\",\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"current_height\": 113738,\n    \"current_state_hash\": \"4bbf9eb9cc409ce17c49cc7952edfed7583e8636e3e5d84b2034779034cb439c\",\n    \"current_state_timestamp\": 1625663362,\n    \"is_in_sync\": true,\n    \"prev_state_hash\": \"4995999f065eb5f04687fe9a43b93d7e344e99d17f2e2703260904f70aabfbd0\",\n    \"tip_height\": 113738,\n    \"tip_prev_state_hash\": \"4995999f065eb5f04687fe9a43b93d7e344e99d17f2e2703260904f70aabfbd0\",\n    \"tip_state_hash\": \"4bbf9eb9cc409ce17c49cc7952edfed7583e8636e3e5d84b2034779034cb439c\",\n    \"tip_state_timestamp\": 1625663362\n  }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n  \"id\": \"ev_system_state\",\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"current_height\": 113738,\n    \"current_state_hash\": \"4bbf9eb9cc409ce17c49cc7952edfed7583e8636e3e5d84b2034779034cb439c\",\n    \"current_state_timestamp\": 1625663362,\n    \"is_in_sync\": true,\n    \"prev_state_hash\": \"4995999f065eb5f04687fe9a43b93d7e344e99d17f2e2703260904f70aabfbd0\",\n    \"tip_height\": 113738,\n    \"tip_prev_state_hash\": \"4995999f065eb5f04687fe9a43b93d7e344e99d17f2e2703260904f70aabfbd0\",\n    \"tip_state_hash\": \"4bbf9eb9cc409ce17c49cc7952edfed7583e8636e3e5d84b2034779034cb439c\",\n    \"tip_state_timestamp\": 1625663362\n  }\n}\n"}]}]},{"type":"element","tag":"h2","props":{"id":"ev_addrs_changed"},"children":[{"type":"text","value":"ev_addrs_changed"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Event is generated when any address is changed/removed/updated &c."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n  \"id\": \"ev_addrs_changed\",\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n      \"change\": 3,\n      \"change_str\": \"reset\",\n      \"addrs\": [\n          {\n              \"address\": \"8xQnvWwS78RsbXmvV1wm2Spkye76z5FfiZH2zB3Jdw2BgWqUf4MC2StLVYrM4LvrWsMdY24b5hok4XvEoTBmHoaWBcEvr8nWTY259M4DnRJnRBgdNJEqRxenxRZox8DKnSoGiScV31dXLcxoRH2vFPcrxDsMGDAsyekVGz2NBPCwKFwCwTQwJpbhszCzxM843UMWQMxxoHADsTXnQnVW1Uc3quXgJdEr6tQ5dbgGWwYhNHU3f6mLFxNyxvrM7RfFY6LatPxJaC5M9o7Gg6TnpVc82GzVrKGNQoERJ9pFc7f6VM8w9dcn9CaC8yQvGevAnZqNTDEVpxAK81mJ3VFPUjbePWYQBdPQPm8AprTU1p4xhGHpbVaaTH967CJ86jAUXQEUrVq1wn4uPGLivhdnoWCdGujiZfwrfdPeQ698vm7Mh2HpooextAt4nzmSbEbPNtM5aCbeRyVv8BiEZ394WJCQaDRwHx2R3tfsHNCvTctCUy6NsonhmnSwvucY5KN71AtBGmxq8i\",\n              \"category\": \"\",\n              \"comment\": \"\",\n              \"create_time\": 1553174321,\n              \"duration\": 1520,\n              \"expired\": true,\n              \"own\": true,\n              \"own_id\": 16730903,\n              \"own_id_str\": \"16730903\",\n              \"identity\": \"2d8738b0424ad50631e902fab655e7e1795fbb8d92d47c4c8df7336870fcadf5\",\n              \"type\": \"offline\",\n              \"wallet_id\": \"22813f28ae198b1aa28aed3d0dc69a7c75f0a3c8b72c5950c997d0a569e74f90b61\"\n          },\n          {\n              \"address\": \"19e6ce53a137a1aa59ef19538c181acc5cd06cbfc7b985901345328786f8ae300a7\",\n              \"category\": \"\",\n              \"create_time\": 1553174321,\n              \"duration\": 1520,\n              \"expired\": true,\n              \"comment\": \"\",\n              \"own\": true,\n              \"own_id\": 16730903,\n              \"own_id_str\": \"16730903\",\n              \"identity\": \"9d99a7e3d1a6a73fbfa01efe63020135654f7b1561d65c74266fe9db6e80b096\",\n              \"type\": \"regular\",\n              \"wallet_id\": \"19e6ce53a137a1aa59ef19538c181acc5cd06cbfc7b985901345328786f8ae300a7\"\n          }\n      ]\n  }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n  \"id\": \"ev_addrs_changed\",\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n      \"change\": 3,\n      \"change_str\": \"reset\",\n      \"addrs\": [\n          {\n              \"address\": \"8xQnvWwS78RsbXmvV1wm2Spkye76z5FfiZH2zB3Jdw2BgWqUf4MC2StLVYrM4LvrWsMdY24b5hok4XvEoTBmHoaWBcEvr8nWTY259M4DnRJnRBgdNJEqRxenxRZox8DKnSoGiScV31dXLcxoRH2vFPcrxDsMGDAsyekVGz2NBPCwKFwCwTQwJpbhszCzxM843UMWQMxxoHADsTXnQnVW1Uc3quXgJdEr6tQ5dbgGWwYhNHU3f6mLFxNyxvrM7RfFY6LatPxJaC5M9o7Gg6TnpVc82GzVrKGNQoERJ9pFc7f6VM8w9dcn9CaC8yQvGevAnZqNTDEVpxAK81mJ3VFPUjbePWYQBdPQPm8AprTU1p4xhGHpbVaaTH967CJ86jAUXQEUrVq1wn4uPGLivhdnoWCdGujiZfwrfdPeQ698vm7Mh2HpooextAt4nzmSbEbPNtM5aCbeRyVv8BiEZ394WJCQaDRwHx2R3tfsHNCvTctCUy6NsonhmnSwvucY5KN71AtBGmxq8i\",\n              \"category\": \"\",\n              \"comment\": \"\",\n              \"create_time\": 1553174321,\n              \"duration\": 1520,\n              \"expired\": true,\n              \"own\": true,\n              \"own_id\": 16730903,\n              \"own_id_str\": \"16730903\",\n              \"identity\": \"2d8738b0424ad50631e902fab655e7e1795fbb8d92d47c4c8df7336870fcadf5\",\n              \"type\": \"offline\",\n              \"wallet_id\": \"22813f28ae198b1aa28aed3d0dc69a7c75f0a3c8b72c5950c997d0a569e74f90b61\"\n          },\n          {\n              \"address\": \"19e6ce53a137a1aa59ef19538c181acc5cd06cbfc7b985901345328786f8ae300a7\",\n              \"category\": \"\",\n              \"create_time\": 1553174321,\n              \"duration\": 1520,\n              \"expired\": true,\n              \"comment\": \"\",\n              \"own\": true,\n              \"own_id\": 16730903,\n              \"own_id_str\": \"16730903\",\n              \"identity\": \"9d99a7e3d1a6a73fbfa01efe63020135654f7b1561d65c74266fe9db6e80b096\",\n              \"type\": \"regular\",\n              \"wallet_id\": \"19e6ce53a137a1aa59ef19538c181acc5cd06cbfc7b985901345328786f8ae300a7\"\n          }\n      ]\n  }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"change"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"change_str"}]},{"type":"text","value":" - check "},{"type":"element","tag":"a","props":{"href":"#ev_xxx_changed-events"},"children":[{"type":"text","value":"ev_XXX_changed Events"}]},{"type":"text","value":" section for details"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"addrs"}]},{"type":"text","value":" - array of changed addresses"}]}]},{"type":"element","tag":"h2","props":{"id":"ev_assets_changed"},"children":[{"type":"text","value":"ev_assets_changed"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Event is generated when an asset is changed, i.e. metadata refreshed or metadata dropped due to the asset delisting or internal metadata processing error. Note that metadata can be dropped while an asset is still on chain but local metadata becomes invalid, for example in certain situations during rollback. If you have any asset coins in wallet but no valid metadata for a given asset id refresh it using "},{"type":"element","tag":"a","props":{"href":"#tx_asset_info"},"children":[{"type":"text","value":"tx_asset_info"}]},{"type":"text","value":". Metadata is also automatically refreshed during the send/receive/issue/consume operations if necessary."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Metadata dropped:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<-"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n  \"id\": \"ev_assets_changed\",\n  \"jsonrpc\": \"2.0\",\n  \"result\": { \n      \"change\": 1,\n      \"change_str\": \"removed\",\n      \"assets\": [\n         {\"asset_id\": 121}, \n         {\"asset_id\": 122} \n      ]\n  }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n  \"id\": \"ev_assets_changed\",\n  \"jsonrpc\": \"2.0\",\n  \"result\": { \n      \"change\": 1,\n      \"change_str\": \"removed\",\n      \"assets\": [\n         {\"asset_id\": 121}, \n         {\"asset_id\": 122} \n      ]\n  }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"change"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"change_str"}]},{"type":"text","value":" - check "},{"type":"element","tag":"a","props":{"href":"#ev_xxx_changed-events"},"children":[{"type":"text","value":"ev_XXX_changed Events"}]},{"type":"text","value":" section for details"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"assets"}]},{"type":"text","value":" - array of changed assets. In case of the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"removed"}]},{"type":"text","value":" event only asset ids are provided"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Metadata updated:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<-"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"id\": \"ev_assets_changed\",\n    \"jsonrpc\": \"2.0\",\n    \"result\": {\n        \"change\": 3,\n        \"change_str\": \"reset\",\n        \"assets\": [\n           {\n              \"asset_id\": 1,\n              \"emission\": 2000000000,\n              \"emission_str\": \"2000000000\",\n              \"isOwned\": 1,\n              \"lockHeight\": 39,\n              \"metadata\": \"STD:SCH_VER=1;N=YAN Coin;SN=YAN;UN=Yan;NTHUN=Yanik\",\n              \"metadata_kv\": true,\n              \"metadata_pairs\": {\n                 \"N\": \"YAN Coin\",\n                 \"NTHUN\": \"Yanik\",\n                 \"SCH_VER\": \"1\",\n                 \"SN\": \"YAN\",\n                 \"UN\": \"Yan\"\n              },\n              \"metadata_std_min\": true,\n              \"metadata_std\": true,\n              \"ownerId\": \"0ae08a49e018e98177774294107dc033790b87538e54a20e99c6b98f1dbd39ce\",\n              \"refreshHeight\": 927\n          }\n       ]\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"id\": \"ev_assets_changed\",\n    \"jsonrpc\": \"2.0\",\n    \"result\": {\n        \"change\": 3,\n        \"change_str\": \"reset\",\n        \"assets\": [\n           {\n              \"asset_id\": 1,\n              \"emission\": 2000000000,\n              \"emission_str\": \"2000000000\",\n              \"isOwned\": 1,\n              \"lockHeight\": 39,\n              \"metadata\": \"STD:SCH_VER=1;N=YAN Coin;SN=YAN;UN=Yan;NTHUN=Yanik\",\n              \"metadata_kv\": true,\n              \"metadata_pairs\": {\n                 \"N\": \"YAN Coin\",\n                 \"NTHUN\": \"Yanik\",\n                 \"SCH_VER\": \"1\",\n                 \"SN\": \"YAN\",\n                 \"UN\": \"Yan\"\n              },\n              \"metadata_std_min\": true,\n              \"metadata_std\": true,\n              \"ownerId\": \"0ae08a49e018e98177774294107dc033790b87538e54a20e99c6b98f1dbd39ce\",\n              \"refreshHeight\": 927\n          }\n       ]\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"change"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"change_str"}]},{"type":"text","value":" - check "},{"type":"element","tag":"a","props":{"href":"#ev_xxx_changed-events"},"children":[{"type":"text","value":"ev_XXX_changed Events"}]},{"type":"text","value":" section for details"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"assets"}]},{"type":"text","value":" array of changed assets, most up to date meta. Check "},{"type":"element","tag":"a","props":{"href":"#get_asset_info"},"children":[{"type":"text","value":"get_asset_info"}]},{"type":"text","value":" for more details"}]}]},{"type":"element","tag":"h2","props":{"id":"ev_utxos_changed"},"children":[{"type":"text","value":"ev_utxos_changed"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Event is generated when UTXOs/Coins are changed. If assets are not enabled event is generated only for BEAM UTXOs. To get asset UTXOs notifications assets should be enabled ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--enable_assets"}]},{"type":"text","value":")."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<-"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"id\": \"ev_utxos_changed\",\n    \"jsonrpc\": \"2.0\",\n    \"result\": {\n        \"change\": 3,\n        \"change_str\": \"reset\",\n        \"utxos\": [\n            {\n                \"id\": 123,\n                \"asset_id\": 0,\n                \"amount\": 12345,\n                \"maturity\": 60,\n                \"type\": \"mine\",\n                \"createTxId\": \"10c4b760c842433cb58339a0fafef3db\",\n                \"spentTxId\": \"\",\n                \"status\": 2,\n                \"status_string\": \"maturing\"\n            } \n        ]\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"id\": \"ev_utxos_changed\",\n    \"jsonrpc\": \"2.0\",\n    \"result\": {\n        \"change\": 3,\n        \"change_str\": \"reset\",\n        \"utxos\": [\n            {\n                \"id\": 123,\n                \"asset_id\": 0,\n                \"amount\": 12345,\n                \"maturity\": 60,\n                \"type\": \"mine\",\n                \"createTxId\": \"10c4b760c842433cb58339a0fafef3db\",\n                \"spentTxId\": \"\",\n                \"status\": 2,\n                \"status_string\": \"maturing\"\n            } \n        ]\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"change"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"change_str"}]},{"type":"text","value":" - check "},{"type":"element","tag":"a","props":{"href":"#ev_xxx_changed-events"},"children":[{"type":"text","value":"ev_XXX_changed Events"}]},{"type":"text","value":" section for details"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"coins"}]},{"type":"text","value":" array of changed utxos, most up to date meta. Check "},{"type":"element","tag":"a","props":{"href":"#get_utxo"},"children":[{"type":"text","value":"get_utxo"}]},{"type":"text","value":" for more details"}]}]},{"type":"element","tag":"h2","props":{"id":"ev_txs_changed"},"children":[{"type":"text","value":"ev_txs_changed"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Event is generated when transactions are changed."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<-"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"id\": \"ev_txs_changed\",\n    \"jsonrpc\": \"2.0\",\n    \"result\": {\n        \"change\": 3,\n        \"change_str\": \"reset\",\n        \"txs\": [\n            {\n                \"txId\" : \"10c4b760c842433cb58339a0fafef3db\",\n                \"asset_id\": 0,\n                \"comment\": \"\",\n                \"fee\": 100,\n                \"kernel\": \"0000000000000000000000000000000000000000000000000000000000000000\",\n                \"receiver\": \"472e17b0419055ffee3b3813b98ae671579b0ac0dcd6f1a23b11a75ab148cc67\",\n                \"sender\": \"f287176bdd517e9c277778e4c012bf6a3e687dd614fc552a1ed22a3fee7d94f2\",\n                \"status\": 4,\n                \"status_string\" : \"Failed\",\n                \"tx_type\": 0,\n                \"tx_type_string\": \"simple\",\n                \"failure_reason\" : \"No inputs\",\n                \"value\": 12342342,\n                \"create_time\" : 1551100217,\n                \"income\" : false,\n                \"rates\": [],\n                \"sender_identity\": \"a0a1ebbfeed5c312b309e32715c159e6b4548a6c6c3af25d0dbc16f37a1e9dd6\",\n                \"receiver_identity\": \"2d8738b0424ad50631e902fab655e7e1795fbb8d92d47c4c8df7336870fcadf5\",\n                \"token\": \"44pE7ySjZYjbLqwnTJANvr4BudMk1RdvWvaZnBvoCTwFnigfaTSza75bvw7x2GCa377Z4CSRRYZon44Ss9G9joSicNRAgts4u3pL6yV6jDQ6gAVJD9Scyr\"\n            } \n        ]\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"id\": \"ev_txs_changed\",\n    \"jsonrpc\": \"2.0\",\n    \"result\": {\n        \"change\": 3,\n        \"change_str\": \"reset\",\n        \"txs\": [\n            {\n                \"txId\" : \"10c4b760c842433cb58339a0fafef3db\",\n                \"asset_id\": 0,\n                \"comment\": \"\",\n                \"fee\": 100,\n                \"kernel\": \"0000000000000000000000000000000000000000000000000000000000000000\",\n                \"receiver\": \"472e17b0419055ffee3b3813b98ae671579b0ac0dcd6f1a23b11a75ab148cc67\",\n                \"sender\": \"f287176bdd517e9c277778e4c012bf6a3e687dd614fc552a1ed22a3fee7d94f2\",\n                \"status\": 4,\n                \"status_string\" : \"Failed\",\n                \"tx_type\": 0,\n                \"tx_type_string\": \"simple\",\n                \"failure_reason\" : \"No inputs\",\n                \"value\": 12342342,\n                \"create_time\" : 1551100217,\n                \"income\" : false,\n                \"rates\": [],\n                \"sender_identity\": \"a0a1ebbfeed5c312b309e32715c159e6b4548a6c6c3af25d0dbc16f37a1e9dd6\",\n                \"receiver_identity\": \"2d8738b0424ad50631e902fab655e7e1795fbb8d92d47c4c8df7336870fcadf5\",\n                \"token\": \"44pE7ySjZYjbLqwnTJANvr4BudMk1RdvWvaZnBvoCTwFnigfaTSza75bvw7x2GCa377Z4CSRRYZon44Ss9G9joSicNRAgts4u3pL6yV6jDQ6gAVJD9Scyr\"\n            } \n        ]\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"change"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"change_str"}]},{"type":"text","value":" - check "},{"type":"element","tag":"a","props":{"href":"#ev_xxx_changed-events"},"children":[{"type":"text","value":"ev_XXX_changed Events"}]},{"type":"text","value":" section for details"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"txs"}]},{"type":"text","value":" array of changed transactions. Check "},{"type":"element","tag":"a","props":{"href":"#tx_status"},"children":[{"type":"text","value":"tx_status"}]},{"type":"text","value":" for more details"}]}]},{"type":"element","tag":"h1","props":{"id":"ev_connection_changed"},"children":[{"type":"text","value":"ev_connection_changed"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Event is generated when wallet connection status is changed. For example, connected/disconnected to node, detected own node, etc."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n  \"id\": \"ev_connection_changed\",\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"node_connected\": true,\n    \"own_node\": false,\n  }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n  \"id\": \"ev_connection_changed\",\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"node_connected\": true,\n    \"own_node\": false,\n  }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"node_connected"}]},{"type":"text","value":" - if "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"true"}]},{"type":"text","value":" this means that wallet successfully connected at least to one node"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"own_node"}]},{"type":"text","value":" - "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"true"}]},{"type":"text","value":" if one of connected beam nodes has owner key"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"last_connect_error"}]},{"type":"text","value":" - this field contains a string with last connection error explanation"}]}]},{"type":"element","tag":"h2","props":{"id":"sign_message"},"children":[{"type":"text","value":"sign_message"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Generates Schnorr signature for a custom message with public key generated from the given key material."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"method\": \"sign_message\", \n    \"params\":\n    {\n        \"message\" : \"my message\",\n        \"key_material\": \"b51efe78d3e7c83c8dbc3d59d5e06b2bd770139e645bc19e50652632cbdd47d10000000047616c6c6572792d6b65792d6f776e6572\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"method\": \"sign_message\", \n    \"params\":\n    {\n        \"message\" : \"my message\",\n        \"key_material\": \"b51efe78d3e7c83c8dbc3d59d5e06b2bd770139e645bc19e50652632cbdd47d10000000047616c6c6572792d6b65792d6f776e6572\"\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"message"}]},{"type":"text","value":" user message to sign"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"key_material"}]},{"type":"text","value":" hex encoded key material for key generation. It could be retrieved from application shader"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"result\" : \n    {\n        \"signature\" : \"bb025df14a3f0539c4b89d5eeacb8510de5de49456cff3d4027323697469021b0022262fc2457523a28524e696ec3b2825e9c4558d78da2db165cd93b8710eb7b3\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"result\" : \n    {\n        \"signature\" : \"bb025df14a3f0539c4b89d5eeacb8510de5de49456cff3d4027323697469021b0022262fc2457523a28524e696ec3b2825e9c4558d78da2db165cd93b8710eb7b3\"\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"signature"}]},{"type":"text","value":" 65-byte hex encoded Schnorr signature. It signes SHA256(\"beam.signed.message\"+len(message)+message)"}]}]},{"type":"element","tag":"h2","props":{"id":"verify_signature"},"children":[{"type":"text","value":"verify_signature"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Verifies Schnorr signature for a custom message."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"method\": \"verify_signature\", \n    \"params\":\n    {\n        \"message\" : \"my message\",\n        \"public_key\": \"37b20c87f7b70c133e3c99e54e97b1febc51b61c0310a3a5ba6856748a67e9e601\",\n        \"signature\": \"bb025df14a3f0539c4b89d5eeacb8510de5de49456cff3d4027323697469021b0022262fc2457523a28524e696ec3b2825e9c4558d78da2db165cd93b8710eb7b3\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"method\": \"verify_signature\", \n    \"params\":\n    {\n        \"message\" : \"my message\",\n        \"public_key\": \"37b20c87f7b70c133e3c99e54e97b1febc51b61c0310a3a5ba6856748a67e9e601\",\n        \"signature\": \"bb025df14a3f0539c4b89d5eeacb8510de5de49456cff3d4027323697469021b0022262fc2457523a28524e696ec3b2825e9c4558d78da2db165cd93b8710eb7b3\"\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"message"}]},{"type":"text","value":" user message to sign"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"public_key"}]},{"type":"text","value":" 33 byte hex encoded public key"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"signature"}]},{"type":"text","value":" 65 byte hex encode signature"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"result\" : true\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"result\" : true\n}\n"}]}]},{"type":"element","tag":"h2","props":{"id":"derive_id"},"children":[{"type":"text","value":"derive_id"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Derives per-seed, per-app (if called from DApp), per-tag unique ID for DApps use."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"method\": \"derive_id\", \n    \"params\":\n    {\n        \"tag\" : \"anything\",\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"method\": \"derive_id\", \n    \"params\":\n    {\n        \"tag\" : \"anything\",\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"tag"}]},{"type":"text","value":" arbitrary string, cannot be empty. Every dapp would have different ID even with the same tag."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"result\" : {\n       \"hash\": \"bd1109eb4499d4c420c66d7b827f10ec3b6171a58f22c6c2f6168fdc58db595c01\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"result\" : {\n       \"hash\": \"bd1109eb4499d4c420c66d7b827f10ec3b6171a58f22c6c2f6168fdc58db595c01\"\n    }\n}\n"}]}]},{"type":"element","tag":"h2","props":{"id":"assets_swap_offers_list"},"children":[{"type":"text","value":"assets_swap_offers_list"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Get all asset swap offers"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\" : \"2.0\",\n    \"id\" : 1,\n    \"method\" : \"assets_swap_offers_list\"\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\" : \"2.0\",\n    \"id\" : 1,\n    \"method\" : \"assets_swap_offers_list\"\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n  \"id\": 1,\n  \"jsonrpc\": \"2.0\",\n  \"offers\": [\n    {\n      \"create_time\": 1667219066,\n      \"expire_time\": 1667240666,\n      \"id\": \"1ae40a6c80d54cc4b3653ab2c478c328\",\n      \"isMy\": false,\n      \"receiveAmount\": 200000000,\n      \"receiveAssetId\": 0,\n      \"receiveCurrencyName\": \"BEAM\",\n      \"sendAmount\": 200000000,\n      \"sendAssetId\": 2,\n      \"sendCurrencyName\": \"SHEKELb\"\n    },\n    {\n      \"create_time\": 1667219060,\n      \"expire_time\": 1667240660,\n      \"id\": \"bf98b6e8a9fa49de939facfe5faad899\",\n      \"isMy\": false,\n      \"receiveAmount\": 100000000,\n      \"receiveAssetId\": 0,\n      \"receiveCurrencyName\": \"BEAM\",\n      \"sendAmount\": 100000000,\n      \"sendAssetId\": 2,\n      \"sendCurrencyName\": \"SHEKELb\"\n    }\n  ]\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n  \"id\": 1,\n  \"jsonrpc\": \"2.0\",\n  \"offers\": [\n    {\n      \"create_time\": 1667219066,\n      \"expire_time\": 1667240666,\n      \"id\": \"1ae40a6c80d54cc4b3653ab2c478c328\",\n      \"isMy\": false,\n      \"receiveAmount\": 200000000,\n      \"receiveAssetId\": 0,\n      \"receiveCurrencyName\": \"BEAM\",\n      \"sendAmount\": 200000000,\n      \"sendAssetId\": 2,\n      \"sendCurrencyName\": \"SHEKELb\"\n    },\n    {\n      \"create_time\": 1667219060,\n      \"expire_time\": 1667240660,\n      \"id\": \"bf98b6e8a9fa49de939facfe5faad899\",\n      \"isMy\": false,\n      \"receiveAmount\": 100000000,\n      \"receiveAssetId\": 0,\n      \"receiveCurrencyName\": \"BEAM\",\n      \"sendAmount\": 100000000,\n      \"sendAssetId\": 2,\n      \"sendCurrencyName\": \"SHEKELb\"\n    }\n  ]\n}\n"}]}]},{"type":"element","tag":"h2","props":{"id":"assets_swap_create"},"children":[{"type":"text","value":"assets_swap_create"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Create asset swap offer"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\" : \"2.0\",\n    \"id\" : 1,\n    \"method\" : \"assets_swap_create\",\n    \"params\": {\n        \"send_amount\": 100000000,\n        \"send_asset_id\": 5,\n        \"receive_amount\": 100000000,\n        \"receive_asset_id\": 0,\n        \"minutes_before_expire\": 30,\n        \"comment\": \"api1\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\" : \"2.0\",\n    \"id\" : 1,\n    \"method\" : \"assets_swap_create\",\n    \"params\": {\n        \"send_amount\": 100000000,\n        \"send_asset_id\": 5,\n        \"receive_amount\": 100000000,\n        \"receive_asset_id\": 0,\n        \"minutes_before_expire\": 30,\n        \"comment\": \"api1\"\n    }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n  \"id\": 1,\n  \"jsonrpc\": \"2.0\",\n  \"offer\": {\n    \"create_time\": 1667219348,\n    \"expire_time\": 1667221148,\n    \"id\": \"dce8c04152e14e71a13d81242158a94e\",\n    \"isMy\": true,\n    \"receiveAmount\": 100000000,\n    \"receiveAssetId\": 0,\n    \"receiveCurrencyName\": \"BEAM\",\n    \"sendAmount\": 100000000,\n    \"sendAssetId\": 5,\n    \"sendCurrencyName\": \"DEMOX\"\n  }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n  \"id\": 1,\n  \"jsonrpc\": \"2.0\",\n  \"offer\": {\n    \"create_time\": 1667219348,\n    \"expire_time\": 1667221148,\n    \"id\": \"dce8c04152e14e71a13d81242158a94e\",\n    \"isMy\": true,\n    \"receiveAmount\": 100000000,\n    \"receiveAssetId\": 0,\n    \"receiveCurrencyName\": \"BEAM\",\n    \"sendAmount\": 100000000,\n    \"sendAssetId\": 5,\n    \"sendCurrencyName\": \"DEMOX\"\n  }\n}\n"}]}]},{"type":"element","tag":"h2","props":{"id":"assets_swap_cancel"},"children":[{"type":"text","value":"assets_swap_cancel"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Cancel own asset swap offer"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\" : \"2.0\",\n    \"id\" : 1,\n    \"method\" : \"assets_swap_cancel\",\n    \"params\": {\n        \"offer_id\": \"dce8c04152e14e71a13d81242158a94e\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\" : \"2.0\",\n    \"id\" : 1,\n    \"method\" : \"assets_swap_cancel\",\n    \"params\": {\n        \"offer_id\": \"dce8c04152e14e71a13d81242158a94e\"\n    }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n  \"id\": 1,\n  \"jsonrpc\": \"2.0\",\n  \"offer\": \"dce8c04152e14e71a13d81242158a94e\"\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n  \"id\": 1,\n  \"jsonrpc\": \"2.0\",\n  \"offer\": \"dce8c04152e14e71a13d81242158a94e\"\n}\n"}]}]},{"type":"element","tag":"h2","props":{"id":"assets_swap_accept"},"children":[{"type":"text","value":"assets_swap_accept"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Accept asset swap offer"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\" : \"2.0\",\n    \"id\" : 1,\n    \"method\" : \"assets_swap_accept\",\n    \"params\": {\n        \"offer_id\": \"1ae40a6c80d54cc4b3653ab2c478c328\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\" : \"2.0\",\n    \"id\" : 1,\n    \"method\" : \"assets_swap_accept\",\n    \"params\": {\n        \"offer_id\": \"1ae40a6c80d54cc4b3653ab2c478c328\"\n    }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n  \"id\": 1,\n  \"jsonrpc\": \"2.0\",\n  \"offer\": {\n    \"create_time\": 1667219066,\n    \"expire_time\": 1667240666,\n    \"id\": \"1ae40a6c80d54cc4b3653ab2c478c328\",\n    \"isMy\": false,\n    \"receiveAmount\": 200000000,\n    \"receiveAssetId\": 0,\n    \"receiveCurrencyName\": \"BEAM\",\n    \"sendAmount\": 200000000,\n    \"sendAssetId\": 2,\n    \"sendCurrencyName\": \"SHEKELb\"\n  },\n  \"tx_id\": \"71552f2092e64665a7b8dbdcdf9f3ca2\"\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n  \"id\": 1,\n  \"jsonrpc\": \"2.0\",\n  \"offer\": {\n    \"create_time\": 1667219066,\n    \"expire_time\": 1667240666,\n    \"id\": \"1ae40a6c80d54cc4b3653ab2c478c328\",\n    \"isMy\": false,\n    \"receiveAmount\": 200000000,\n    \"receiveAssetId\": 0,\n    \"receiveCurrencyName\": \"BEAM\",\n    \"sendAmount\": 200000000,\n    \"sendAssetId\": 2,\n    \"sendCurrencyName\": \"SHEKELb\"\n  },\n  \"tx_id\": \"71552f2092e64665a7b8dbdcdf9f3ca2\"\n}\n"}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"whats-new-in-v72","depth":2,"text":"What's new in v7.2","children":[{"id":"new-methods","depth":3,"text":"New methods"}]},{"id":"api-error-codes","depth":2,"text":"API Error codes"},{"id":"api-methods","depth":2,"text":"API Methods","children":[{"id":"general-methods","depth":3,"text":"General methods"},{"id":"ipfs-methods","depth":3,"text":"IPFS methods"},{"id":"atomic-swap-methods","depth":3,"text":"ATOMIC SWAP methods"},{"id":"asset-swap-methods","depth":3,"text":"ASSET SWAP methods"}]},{"id":"api-events","depth":2,"text":"API events"},{"id":"async-notice","depth":2,"text":"Async Notice"},{"id":"create_address","depth":2,"text":"create_address"},{"id":"validate_address","depth":2,"text":"validate_address"},{"id":"addr_list","depth":2,"text":"addr_list","children":[{"id":"identity","depth":3,"text":"Identity"}]},{"id":"delete_address","depth":2,"text":"delete_address"},{"id":"edit_address","depth":2,"text":"edit_address"},{"id":"tx_send","depth":2,"text":"tx_send"},{"id":"tx_split","depth":2,"text":"tx_split"},{"id":"tx_asset_issue","depth":2,"text":"tx_asset_issue"},{"id":"tx_asset_consume","depth":2,"text":"tx_asset_consume"},{"id":"tx_asset_info","depth":2,"text":"tx_asset_info"},{"id":"tx_cancel","depth":2,"text":"tx_cancel"},{"id":"tx_delete","depth":2,"text":"tx_delete"},{"id":"tx_status","depth":2,"text":"tx_status"},{"id":"tx_list","depth":2,"text":"tx_list","children":[{"id":"important-the-recommended-number-of-confirmations-for-beam-transfers-is-80-blocks","depth":3,"text":"IMPORTANT: The recommended number of confirmations for Beam transfers is 80 blocks."},{"id":"tx-statuses","depth":3,"text":"TX statuses"},{"id":"tx-types","depth":3,"text":"TX types"}]},{"id":"wallet_status","depth":2,"text":"wallet_status"},{"id":"get_utxo","depth":2,"text":"get_utxo"},{"id":"get_asset_info","depth":2,"text":"get_asset_info"},{"id":"generate_tx_id","depth":2,"text":"generate_tx_id"},{"id":"export_payment_proof","depth":2,"text":"export_payment_proof"},{"id":"verify_payment_proof","depth":2,"text":"verify_payment_proof"},{"id":"invoke_contract","depth":2,"text":"invoke_contract","children":[{"id":"shader-errors","depth":3,"text":"Shader Errors"},{"id":"code-caching","depth":3,"text":"Code caching"},{"id":"requests-queue","depth":3,"text":"Requests queue"}]},{"id":"process_invoke_data","depth":2,"text":"process_invoke_data"},{"id":"calc_change","depth":2,"text":"calc_change"},{"id":"block_details","depth":2,"text":"block_details"},{"id":"get_version","depth":2,"text":"get_version"},{"id":"ipfs_add","depth":2,"text":"ipfs_add"},{"id":"ipfs_hash","depth":2,"text":"ipfs_hash"},{"id":"ipfs_get","depth":2,"text":"ipfs_get"},{"id":"ipfs_pin","depth":2,"text":"ipfs_pin"},{"id":"ipfs_unpin","depth":2,"text":"ipfs_unpin"},{"id":"ipfs_gc","depth":2,"text":"ipfs_gc"},{"id":"ev_subunsub","depth":2,"text":"ev_subunsub"},{"id":"ev_sync_progress","depth":2,"text":"ev_sync_progress"},{"id":"ev_system_state","depth":2,"text":"ev_system_state"},{"id":"ev_addrs_changed","depth":2,"text":"ev_addrs_changed"},{"id":"ev_assets_changed","depth":2,"text":"ev_assets_changed"},{"id":"ev_utxos_changed","depth":2,"text":"ev_utxos_changed"},{"id":"ev_txs_changed","depth":2,"text":"ev_txs_changed"},{"id":"sign_message","depth":2,"text":"sign_message"},{"id":"verify_signature","depth":2,"text":"verify_signature"},{"id":"derive_id","depth":2,"text":"derive_id"},{"id":"assets_swap_offers_list","depth":2,"text":"assets_swap_offers_list"},{"id":"assets_swap_create","depth":2,"text":"assets_swap_create"},{"id":"assets_swap_cancel","depth":2,"text":"assets_swap_cancel"},{"id":"assets_swap_accept","depth":2,"text":"assets_swap_accept"}]}},"_type":"markdown","_id":"content:docs:core-tech:Beam-wallet-protocol-API-v7.2.md","_source":"content","_file":"docs/core-tech/Beam-wallet-protocol-API-v7.2.md","_extension":"md"},{"_path":"/docs/core-tech/beam-wallet-protocol-api-v7.3","_dir":"core-tech","_draft":false,"_partial":false,"_locale":"","title":"Beam Wallet Protocol API V73","description":"","body":{"type":"root","children":[{"type":"element","tag":"h2","props":{"id":"whats-new-in-v73"},"children":[{"type":"text","value":"What's new in v7.3"}]},{"type":"element","tag":"h3","props":{"id":"changed-methods"},"children":[{"type":"text","value":"Changed methods"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#create_address"},"children":[{"type":"text","value":"create_address"}]},{"type":"text","value":" added new parameter "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"use_default_signature"}]}]}]},{"type":"element","tag":"h2","props":{"id":"api-error-codes"},"children":[{"type":"text","value":"API Error codes"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"List of the possible error codes (with messages):"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32600 InvalidJsonRpc (\"Invalid JSON-RPC.\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32601 NotFoundJsonRpc (\"Procedure not found.\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32602 InvalidParamsJsonRpc (\"Invalid parameters.\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32603 InternalErrorJsonRpc (\"Internal JSON-RPC error.\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32001 InvalidTxStatus (\"Invalid TX status.\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32002 UnknownApiKey (\"Unknown API key.\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32003 InvalidAddress (\"Invalid address.\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32004 InvalidTxId (\"Invalid transaction ID.\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32005 NotSupported (\"Feature is not supported\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32006 InvalidPaymentProof (\"Invalid payment proof provided\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32007 PaymentProofExportError (\"Cannot export payment proof\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32008 SwapFailToParseToken (\"Invalid swap token.\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32009 SwapFailToAcceptOwn (\"Can't accept own swap offer.\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32010 SwapNotEnoughtBeams (\"Not enought beams.\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32011 SwapFailToConnect (\"Doesn't have active connection.\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32012 DatabaseError (\"Database error\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32013 DatabaseNotFound (\"Database not found\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32014 ThrottleError (\"Requests limit exceeded\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32015 NotOpenedError (\"Wallet not opened\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32016 NoSwapsError (\"Swaps are not enabled\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32017 UnexpectedError (\"Unexpected call\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32018 ContractCompileError (\"Failed to compile contract\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32019 ContractError (\"Contract call failed\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32020 NotAllowedError (\"Call is not allowed\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-32021 UserRejected (\"Call is rejected by user\")"}]}]},{"type":"element","tag":"h2","props":{"id":"api-methods"},"children":[{"type":"text","value":"API Methods"}]},{"type":"element","tag":"h3","props":{"id":"general-methods"},"children":[{"type":"text","value":"General methods"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#create_address"},"children":[{"type":"text","value":"create_address"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#delete_address"},"children":[{"type":"text","value":"delete_address"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#edit_address"},"children":[{"type":"text","value":"edit_address"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#addr_list"},"children":[{"type":"text","value":"addr_list"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#validate_address"},"children":[{"type":"text","value":"validate_address"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#tx_send"},"children":[{"type":"text","value":"tx_send"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#tx_asset_issue"},"children":[{"type":"text","value":"tx_asset_issue"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#tx_asset_consume"},"children":[{"type":"text","value":"tx_asset_consume"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#tx_asset_info"},"children":[{"type":"text","value":"tx_asset_info"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#tx_status"},"children":[{"type":"text","value":"tx_status"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#tx_split"},"children":[{"type":"text","value":"tx_split"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#tx_cancel"},"children":[{"type":"text","value":"tx_cancel"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#tx_delete"},"children":[{"type":"text","value":"tx_delete"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#get_utxo"},"children":[{"type":"text","value":"get_utxo"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#tx_list"},"children":[{"type":"text","value":"tx_list"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#wallet_status"},"children":[{"type":"text","value":"wallet_status"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#generate_tx_id"},"children":[{"type":"text","value":"generate_tx_id"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#export_payment_proof"},"children":[{"type":"text","value":"export_payment_proof"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#verify_payment_proof"},"children":[{"type":"text","value":"verify_payment_proof"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#get_asset_info"},"children":[{"type":"text","value":"get_asset_info"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#set_confirmations_count"},"children":[{"type":"text","value":"set_confirmations_count"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#get_confirmations_count"},"children":[{"type":"text","value":"get_confirmations_count"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#invoke_contract"},"children":[{"type":"text","value":"invoke_contract"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-async-orange"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#process_invoke_data"},"children":[{"type":"text","value":"process_invoke_data"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-async-orange"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#block_details"},"children":[{"type":"text","value":"block_details"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-async-orange"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#calc_change"},"children":[{"type":"text","value":"calc_change"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#get_version"},"children":[{"type":"text","value":"get_version"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#ev_subunsub"},"children":[{"type":"text","value":"ev_subunsub"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#sign_message"},"children":[{"type":"text","value":"sign_message"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#verify_signature"},"children":[{"type":"text","value":"verify_signature"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#derive_id"},"children":[{"type":"text","value":"derive_id"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]}]}]},{"type":"element","tag":"h3","props":{"id":"ipfs-methods"},"children":[{"type":"text","value":"IPFS methods"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#ipfs_add"},"children":[{"type":"text","value":"ipfs_add"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-async-orange"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#ipfs_hash"},"children":[{"type":"text","value":"ipfs_hash"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-async-orange"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#ipfs_get"},"children":[{"type":"text","value":"ipfs_get"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-async-orange"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#ipfs_pin"},"children":[{"type":"text","value":"ipfs_pin"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-async-orange"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#ipfs_unpin"},"children":[{"type":"text","value":"ipfs_unpin"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-async-orange"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#ipfs_gc"},"children":[{"type":"text","value":"ipfs_gc"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-async-orange"},"children":[]}]}]},{"type":"element","tag":"h3","props":{"id":"atomic-swap-methods"},"children":[{"type":"text","value":"ATOMIC SWAP methods"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"If you build "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"wallet-api"}]},{"type":"text","value":" with "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"BEAM_ATOMIC_SWAP_SUPPORT"}]},{"type":"text","value":" then you can use additional "},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/wiki/Beam-wallet-protocol-SWAP-API-(BETA)","rel":["nofollow"]},"children":[{"type":"text","value":"SWAP API methods"}]},{"type":"text","value":"."}]},{"type":"element","tag":"h3","props":{"id":"asset-swap-methods"},"children":[{"type":"text","value":"ASSET SWAP methods"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"wallet-api"}]},{"type":"text","value":" must be started with "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--enable_assets"}]},{"type":"text","value":" key"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#assets_swap_offers_list"},"children":[{"type":"text","value":"assets_swap_offers_list"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#assets_swap_create"},"children":[{"type":"text","value":"assets_swap_create"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#assets_swap_cancel"},"children":[{"type":"text","value":"assets_swap_cancel"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#assets_swap_accept"},"children":[{"type":"text","value":"assets_swap_accept"}]}]}]},{"type":"element","tag":"h2","props":{"id":"api-events"},"children":[{"type":"text","value":"API events"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Client should subscribe to events via "},{"type":"element","tag":"a","props":{"href":"#ev_subunsub"},"children":[{"type":"text","value":"ev_subunsub"}]},{"type":"text","value":" method. Events are generated by API when some entity/set of entities is changed. Every "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"changed"}]},{"type":"text","value":" event includes the following mandatory fields"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"change"}]},{"type":"text","value":" - numerical change type, possible values are\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"0"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"added"}]},{"type":"text","value":" - newly added entities are in the array"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"1"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"removed"}]},{"type":"text","value":" - removed entities are in the array"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"2"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"updated"}]},{"type":"text","value":" - updated entities are in the array"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"3"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"reset"}]},{"type":"text","value":" - discard all the previously stored entities, new ones are in the array"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"changestr"}]},{"type":"text","value":" - string representation of the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"change"}]},{"type":"text","value":" field, values are listed above"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"array of changed entities (name differs based on the entity type)"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#ev_sync_progress"},"children":[{"type":"text","value":"ev_sync_progress"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-async-orange"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#ev_system_state"},"children":[{"type":"text","value":"ev_system_state"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-async-orange"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#ev_addrs_changed"},"children":[{"type":"text","value":"ev_addrs_changed"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-async-orange"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#ev_assets_changed"},"children":[{"type":"text","value":"ev_assets_changed"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-async-orange"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#ev_utxos_changed"},"children":[{"type":"text","value":"ev_utxos_changed"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-async-orange"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#ev_txs_changed"},"children":[{"type":"text","value":"ev_txs_changed"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-async-orange"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#ev_connection_changed"},"children":[{"type":"text","value":"ev_connection_changed"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-DAPPs%20allowed-green"},"children":[]},{"type":"element","tag":"img","props":{"alt":"","src":"https://img.shields.io/badge/-async-orange"},"children":[]}]}]},{"type":"element","tag":"h2","props":{"id":"async-notice"},"children":[{"type":"text","value":"Async Notice"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Async method are asynchronous in nature. Please setup your API connection correspondingly (use keep alive HTTP or raw sockets)."}]},{"type":"element","tag":"h2","props":{"id":"create_address"},"children":[{"type":"text","value":"create_address"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Creates new receiver address."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\": \"2.0\", \n    \"id\": 1,\n    \"method\": \"create_address\", \n    \"params\":\n    {\n        \"type\": \"regular\",\n        \"expiration\": \"auto\",\n        \"comment\": \"John Smith\",\n        \"new_style_regular\" : true\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\": \"2.0\", \n    \"id\": 1,\n    \"method\": \"create_address\", \n    \"params\":\n    {\n        \"type\": \"regular\",\n        \"expiration\": \"auto\",\n        \"comment\": \"John Smith\",\n        \"new_style_regular\" : true\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"type"}]},{"type":"text","value":" the type of address, possible values are"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"regular"}]},{"type":"text","value":" - regular old-style address, default"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"offline"}]},{"type":"text","value":" - address offline transaction using Lelantus MW shielded pool, could be used more than once, there are no guaranties for extended privacy"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"max_privacy"}]},{"type":"text","value":" - address for guarantied maximum privacy transaction. Could be used only once."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"public_offline"}]},{"type":"text","value":" - address for donation, could be used as many times as you wish"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"regular_new"}]},{"type":"text","value":" - since v6.0, regular new-style address (base58), this address has SBBS internally"}]}]},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"Details of some address types are described "},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/wiki/Lelantus-CLI","rel":["nofollow"]},"children":[{"type":"text","value":"in this document"}]},{"type":"text","value":". Since v6.0, UI gives the sender an opportunity to choose between regular and offline send operation and the default address type provided via the \"receive\" UI dialog is an "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"offline"}]},{"type":"text","value":" address with "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"offline_payments=1"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"expiration"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"before v6.0 can be "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"expired/never/24h"}]},{"type":"text","value":"."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"since  v6.0 can be "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"expired/never/24h/auto"}]},{"type":"text","value":"."}]}]},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"Optional, by default address expires in 24 hours. "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"auto"}]},{"type":"text","value":" expiration means that address expires in 61 days (roughly 2 months). "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"auto"}]},{"type":"text","value":" addresses are renewed for another 2 months when any transaction is received with this address."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"comment"}]},{"type":"text","value":" - any string, optional."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"new_style_regular"}]},{"type":"text","value":" - if this flag is "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"true"}]},{"type":"text","value":" new style base58 address will be returned otherwise hexadecimal string will be returned, this option is ignored for the types different "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"regular"}]},{"type":"text","value":". "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"type=regular"}]},{"type":"text","value":" + "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"new_style_regular=true"}]},{"type":"text","value":" = "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"type=regular_new"}]},{"type":"text","value":"."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"offline_payments"}]},{"type":"text","value":" - number of offline payments embedded into an "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"offline"}]},{"type":"text","value":" address, default value is "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"1"}]},{"type":"text","value":". Valid only for the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"type=offline"}]},{"type":"text","value":"."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"use_default_signature"}]},{"type":"text","value":" - if it's "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"true"}]},{"type":"text","value":" then generated address will use default wallet signature. By default it's "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"false"}]},{"type":"text","value":"."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"All these address types could be passed as "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"address"}]},{"type":"text","value":" parameter of the "},{"type":"element","tag":"a","props":{"href":"#tx_send"},"children":[{"type":"text","value":"send"}]},{"type":"text","value":" method and/or used with the cli/UI. "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--enable_lelantus"}]},{"type":"text","value":" should be used in the command line of the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"wallet-api"}]},{"type":"text","value":" to enable sending/receiving using "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"offline"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"max_privacy"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"public_offline"}]},{"type":"text","value":" transactions. To generate "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"offline"}]},{"type":"text","value":"/"},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"max_privacy"}]},{"type":"text","value":"/"},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"public_offline"}]},{"type":"text","value":" addresses API must be connected to the own node (node with the wallet's viewer key)."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\" : \"2.0\", \n    \"id\" : 1,\n    \"result\" : \"472e17b0419055ffee3b3813b98ae671579b0ac0dcd6f1a23b11a75ab148cc67\"\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\" : \"2.0\", \n    \"id\" : 1,\n    \"result\" : \"472e17b0419055ffee3b3813b98ae671579b0ac0dcd6f1a23b11a75ab148cc67\"\n}\n"}]}]},{"type":"element","tag":"h2","props":{"id":"validate_address"},"children":[{"type":"text","value":"validate_address"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Just a simple validations, checks if the address isn't garbage and belongs to our elliptic curve. Also returns "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"is_mine == true"}]},{"type":"text","value":" if address is found in the local wallet DB."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"method\": \"validate_address\", \n    \"params\":\n    {\n        \"address\" : \"472e17b0419055ffee3b3813b98ae671579b0ac0dcd6f1a23b11a75ab148cc67\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"method\": \"validate_address\", \n    \"params\":\n    {\n        \"address\" : \"472e17b0419055ffee3b3813b98ae671579b0ac0dcd6f1a23b11a75ab148cc67\"\n    }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"result\" : \n    {\n        \"is_valid\" : true,\n        \"is_mine\" : false,\n        \"type\": \"offline\", \n        \"payments\": 3\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"result\" : \n    {\n        \"is_valid\" : true,\n        \"is_mine\" : false,\n        \"type\": \"offline\", \n        \"payments\": 3\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"type"}]},{"type":"text","value":" type of address. Check "},{"type":"element","tag":"a","props":{"href":"#create_address"},"children":[{"type":"text","value":"create_address"}]},{"type":"text","value":" for details"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"payments"}]},{"type":"text","value":" number of offline payments left for the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"offline"}]},{"type":"text","value":" address"}]}]},{"type":"element","tag":"h2","props":{"id":"addr_list"},"children":[{"type":"text","value":"addr_list"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Get addresses stored in the wallet database."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 8,\n    \"method\":\"addr_list\",\n    \"params\":\n    {\n        \"own\" : true\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 8,\n    \"method\":\"addr_list\",\n    \"params\":\n    {\n        \"own\" : true\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"own"}]},{"type":"text","value":", optional bool. If "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"true"}]},{"type":"text","value":" returns only own addresses, if "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"false"}]},{"type":"text","value":" returns only peer addresses. By default is false."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"id\": 8,\n    \"jsonrpc\": \"2.0\",\n    \"result\":\n    [{\n        \"address\": \"29510b33fac0cb20695fd3b836d835451e600c4224d8fb335dc1a68271deb9b6b5b\",\n        \"category\": \"\",\n        \"create_time\": 1553174321,\n        \"duration\": 1520,\n        \"expired\": true,\n        \"comment\": \"\",\n        \"own\": true,\n        \"own_id\": 16730903,\n        \"own_id_str\": \"16730903\",\n        \"identity\": \"2d8738b0424ad50631e902fab655e7e1795fbb8d92d47c4c8df7336870fcadf5\",\n        \"type\": \"regular\",\n        \"wallet_id\": \"29510b33fac0cb20695fd3b836d835451e600c4224d8fb335dc1a68271deb9b6b5b\"\n    }] \n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"id\": 8,\n    \"jsonrpc\": \"2.0\",\n    \"result\":\n    [{\n        \"address\": \"29510b33fac0cb20695fd3b836d835451e600c4224d8fb335dc1a68271deb9b6b5b\",\n        \"category\": \"\",\n        \"create_time\": 1553174321,\n        \"duration\": 1520,\n        \"expired\": true,\n        \"comment\": \"\",\n        \"own\": true,\n        \"own_id\": 16730903,\n        \"own_id_str\": \"16730903\",\n        \"identity\": \"2d8738b0424ad50631e902fab655e7e1795fbb8d92d47c4c8df7336870fcadf5\",\n        \"type\": \"regular\",\n        \"wallet_id\": \"29510b33fac0cb20695fd3b836d835451e600c4224d8fb335dc1a68271deb9b6b5b\"\n    }] \n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"address"}]},{"type":"text","value":" address that should be distributed among users and used to send funds to"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"own_id"}]},{"type":"text","value":" unsigned 64 bit index used to generate given address"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"own_id_str"}]},{"type":"text","value":" string representation of index used to generate given address (for JavaScript)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"identity"}]},{"type":"text","value":" identity linked to the given address. In UI and CLI called as \"wallet's signature\"."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"type"}]},{"type":"text","value":" address type. Consult "},{"type":"element","tag":"a","props":{"href":"#create_address"},"children":[{"type":"text","value":"create_address"}]},{"type":"text","value":" method for detailed description"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"wallet_id"}]},{"type":"text","value":" - Wallet ID (SBBS address) associated with the given address. This is the same as an SBBS address in CLI/UI. Note that not all address types have an associated SBBS address. For example non-own "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"max_privacy"}]},{"type":"text","value":" addresses do not have "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"wallet_id"}]},{"type":"text","value":". While own "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"max_privacy"}]},{"type":"text","value":" ones do it is recommended not to publish it. SBBS address can be safely published for "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"regular"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"regular_new"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"offline"}]},{"type":"text","value":" addresses."}]}]},{"type":"element","tag":"h3","props":{"id":"identity"},"children":[{"type":"text","value":"Identity"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Starting from version 4.2 we introduce an additional entity in order to make transfer more reliable. It is called "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"identity"}]},{"type":"text","value":". From version 6.1 in UI and CLI it  called as \"wallet's signature\". The main goal of "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"identity"}]},{"type":"text","value":" is to proof and ensure that transaction performs between claimed participants also it could be done using untrusted 3rd parties. The main scenario is "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"hardware wallet"}]},{"type":"text","value":" when host machine could be compromised, since it has ability to generate SBBS addresses, it can sign payment proof or accept transaction without need to ask hardware wallet about any secret, but if we give our identity to the other side (in addition to SBBS address), and this identity can be generated using hardware wallet only, then only hardware wallet can sign or approve transaction."}]},{"type":"element","tag":"h2","props":{"id":"delete_address"},"children":[{"type":"text","value":"delete_address"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Delete specific address from the wallet."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 8,\n    \"method\":\"delete_address\",\n    \"params\":\n    {\n        \"address\" : \"29510b33fac0cb20695fd3b836d835451e600c4224d8fb335dc1a68271deb9b6b5b\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 8,\n    \"method\":\"delete_address\",\n    \"params\":\n    {\n        \"address\" : \"29510b33fac0cb20695fd3b836d835451e600c4224d8fb335dc1a68271deb9b6b5b\"\n    }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"id\": 8,\n    \"jsonrpc\": \"2.0\",\n    \"result\": \"done\"\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"id\": 8,\n    \"jsonrpc\": \"2.0\",\n    \"result\": \"done\"\n}\n"}]}]},{"type":"element","tag":"h2","props":{"id":"edit_address"},"children":[{"type":"text","value":"edit_address"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Edit specific address. You can change the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"comment"}]},{"type":"text","value":" and/or "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"expiration"}]},{"type":"text","value":". Consult "},{"type":"element","tag":"a","props":{"href":"#create_address"},"children":[{"type":"text","value":"create_address"}]},{"type":"text","value":" for more details on acceptable values."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 8,\n    \"method\":\"edit_address\",\n    \"params\":\n    {\n        \"address\" : \"29510b33fac0cb20695fd3b836d835451e600c4224d8fb335dc1a68271deb9b6b5b\",\n        \"comment\" : \"John Smith\",\n        \"expiration\" : \"expired\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 8,\n    \"method\":\"edit_address\",\n    \"params\":\n    {\n        \"address\" : \"29510b33fac0cb20695fd3b836d835451e600c4224d8fb335dc1a68271deb9b6b5b\",\n        \"comment\" : \"John Smith\",\n        \"expiration\" : \"expired\"\n    }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"id\": 8,\n    \"jsonrpc\": \"2.0\",\n    \"result\": \"done\"\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"id\": 8,\n    \"jsonrpc\": \"2.0\",\n    \"result\": \"done\"\n}\n"}]}]},{"type":"element","tag":"h2","props":{"id":"tx_send"},"children":[{"type":"text","value":"tx_send"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Send BEAM or asset to a given address."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 2,\n    \"method\":\"tx_send\", \n    \"params\":\n    {\n        \"value\": 12342342,\n        \"fee\": 2,\n        \"from\": \"472e17b0419055ffee3b3813b98ae671579b0ac0dcd6f1a23b11a75ab148cc67\",\n        \"address\": \"472e17b0419055ffee3b3813b98ae671579b0ac0dcd6f1a23b11a75ab148cc67\",\n        \"comment\": \"thank you!\",\n        \"asset_id\": 1,\n        \"offline\": false\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 2,\n    \"method\":\"tx_send\", \n    \"params\":\n    {\n        \"value\": 12342342,\n        \"fee\": 2,\n        \"from\": \"472e17b0419055ffee3b3813b98ae671579b0ac0dcd6f1a23b11a75ab148cc67\",\n        \"address\": \"472e17b0419055ffee3b3813b98ae671579b0ac0dcd6f1a23b11a75ab148cc67\",\n        \"comment\": \"thank you!\",\n        \"asset_id\": 1,\n        \"offline\": false\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"value"}]},{"type":"text","value":" how much BEAM or asset to send in groth or asset groth."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"fee"}]},{"type":"text","value":" always in BEAM groth, optional. Omit for default fee."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"from"}]},{"type":"text","value":" own address, optional. If omitted new own address is generated and registered."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"address"}]},{"type":"text","value":" receiver's SBBS address or token. Token is an extension of SBBS address. It is a "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"base58"}]},{"type":"text","value":" encoded byte buffer which contains serialized parameters of a transaction. At least it contains SBBS "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"address"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"identity"}]},{"type":"text","value":"."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"comment"}]},{"type":"text","value":" transaction comment, optional."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"txId"}]},{"type":"text","value":" optional, you can provide your own transaction ID."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_id"}]},{"type":"text","value":" asset id to send, optional. Present starting from v5.0 and can be used only after Fork 2. Omit or set to 0 for BEAM transaction. If "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_id"}]},{"type":"text","value":" is non-zero assets must be enabled ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--enable_assets"}]},{"type":"text","value":") or method would fail."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"offline"}]},{"type":"text","value":" - since v6.0 offline addresses by default start the regular online transaction. Specify "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"\"offline\":true\""}]},{"type":"text","value":" to start an offline transaction. Applied only for "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"offline"}]},{"type":"text","value":" addresses and ignored for all other address types."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"You can preselect specific UTXOs for a transaction and fee via optional "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"coins"}]},{"type":"text","value":" array parameter like "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"\"coins\" : [\"00057e8eca5673476e6f726d000000000000015d3ef79800\", \"00057e8eca1233476e6f726d000000000000015d3ef79800\"]"}]},{"type":"text","value":". In case of asset transaction you can specify both asset coins (to send) and non-asset coins (to pay fee)."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 2,\n    \"result\":\n    {\n        \"txId\" : \"10c4b760c842433cb58339a0fafef3db\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 2,\n    \"result\":\n    {\n        \"txId\" : \"10c4b760c842433cb58339a0fafef3db\"\n    }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Returns transaction id or "},{"type":"element","tag":"a","props":{"href":"#api-error-codes"},"children":[{"type":"text","value":"error code"}]},{"type":"text","value":"."}]},{"type":"element","tag":"h2","props":{"id":"tx_split"},"children":[{"type":"text","value":"tx_split"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Creates a specific set of outputs with given values."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"NOTE: The "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"session"}]},{"type":"text","value":" parameter is not IMPLEMENTED and was removed!"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 5,\n    \"method\":\"tx_split\", \n    \"params\":\n    {\n        \"coins\" : [11, 12, 13, 50000000],\n        \"fee\" : 100,\n        \"asset_id\": 1\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 5,\n    \"method\":\"tx_split\", \n    \"params\":\n    {\n        \"coins\" : [11, 12, 13, 50000000],\n        \"fee\" : 100,\n        \"asset_id\": 1\n    }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 5,\n    \"result\":\n    {\n        \"txId\" : \"10c4b760c842433cb58339a0fafef3db\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 5,\n    \"result\":\n    {\n        \"txId\" : \"10c4b760c842433cb58339a0fafef3db\"\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"fee"}]},{"type":"text","value":" is always in BEAM groth. Omit for default fee."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"coins"}]},{"type":"text","value":" amounts of coins your want to have after split."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"txId"}]},{"type":"text","value":" optional, provide your own transaction ID."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_id"}]},{"type":"text","value":" asset id to split, optional. Omit or set to 0 to split BEAM coins. Present starting from v5.0 and can be used only after Fork 2. If "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_id"}]},{"type":"text","value":" is non-zero assets must be enabled ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--enable_assets"}]},{"type":"text","value":") or method would fail."}]}]},{"type":"element","tag":"h2","props":{"id":"tx_asset_issue"},"children":[{"type":"text","value":"tx_asset_issue"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Available from v5.0, can be used after Fork2. Assets must be enabled ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--enable_assets"}]},{"type":"text","value":") or method would fail."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Mints new asset coins. You must own the asset and info about the asset should be in a local database. Use "},{"type":"element","tag":"a","props":{"href":"#tx_asset_info"},"children":[{"type":"text","value":"tx_asset_info"}]},{"type":"text","value":" to retrieve the latest asset info if necessary. Asset minting is free. You need to pay only regular transaction fee."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\": \"2.0\", \n    \"id\": 2,\n    \"method\": \"tx_asset_issue\", \n    \"params\":\n    {\n        \"value\": 6,\n        \"asset_id\": 1\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\": \"2.0\", \n    \"id\": 2,\n    \"method\": \"tx_asset_issue\", \n    \"params\":\n    {\n        \"value\": 6,\n        \"asset_id\": 1\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"value"}]},{"type":"text","value":" how much asset to mint, in asset groth."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"fee"}]},{"type":"text","value":" transaction fee in BEAM groth. Omit to use default fee."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_id"}]},{"type":"text","value":" asset id of the asset to mint."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"txId"}]},{"type":"text","value":" optional,  provide your own transaction ID."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_meta"}]},{"type":"text","value":" obsolete and removed in v6.0."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"You can preselect specific BEAM UTXOs for a transaction fee by adding "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"coins"}]},{"type":"text","value":" array parameter, like "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"\"coins\" : [\"00057e8eca5673476e6f726d000000000000015d3ef79800\", \"00057e8eca1233476e6f726d000000000000015d3ef79800\"]"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\": \"2.0\", \n    \"id\": 2,\n    \"result\":\n    {\n        \"txId\" : \"10c4b760c842433cb58339a0fafef3db\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\": \"2.0\", \n    \"id\": 2,\n    \"result\":\n    {\n        \"txId\" : \"10c4b760c842433cb58339a0fafef3db\"\n    }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Returns transaction id or "},{"type":"element","tag":"a","props":{"href":"#api-error-codes"},"children":[{"type":"text","value":"error code"}]},{"type":"text","value":"."}]},{"type":"element","tag":"h2","props":{"id":"tx_asset_consume"},"children":[{"type":"text","value":"tx_asset_consume"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Available from v5.0, can be used after Fork2. Assets must be enabled ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--enable_assets"}]},{"type":"text","value":") or method would fail."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Burns existing asset coins. You must own the asset itself as well as asset coins to burn them. You cannot burn asset coins that belong to another wallet. Info about the asset should be in a local database. Use "},{"type":"element","tag":"a","props":{"href":"#tx_asset_info"},"children":[{"type":"text","value":"tx_asset_info"}]},{"type":"text","value":" to retrieve the latest asset info if necessary. Asset coins burning is absolutely free. You need to pay only regular transaction fee."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 2,\n    \"method\":\"tx_asset_consume\", \n    \"params\":\n    {\n        \"value\": 6,\n        \"asset_id\": 1\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 2,\n    \"method\":\"tx_asset_consume\", \n    \"params\":\n    {\n        \"value\": 6,\n        \"asset_id\": 1\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"value"}]},{"type":"text","value":" how much asset to burn, in asset groth."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"fee"}]},{"type":"text","value":" transaction fee in BEAM groth, omit for a default fee."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_id"}]},{"type":"text","value":" id of the asset to consume."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"txId"}]},{"type":"text","value":" optional, provide your own transaction ID"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_meta"}]},{"type":"text","value":" obsolete and removed since v6.0"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"You can preselect specific UTXOs to burn and to pay fee by adding "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"coins"}]},{"type":"text","value":" array parameter, like "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"\"coins\" : [\"00057e8eca5673476e6f726d000000000000015d3ef79800\", \"00057e8eca1233476e6f726d000000000000015d3ef79800\"]"}]},{"type":"text","value":". Both asset coins (to burn) and BEAM coins (to pay fee) can be in this array."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 2,\n    \"result\":\n    {\n        \"txId\" : \"10c4b760c842433cb58339a0fafef3db\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 2,\n    \"result\":\n    {\n        \"txId\" : \"10c4b760c842433cb58339a0fafef3db\"\n    }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Returns transaction id or "},{"type":"element","tag":"a","props":{"href":"#api-error-codes"},"children":[{"type":"text","value":"error code"}]},{"type":"text","value":"."}]},{"type":"element","tag":"h2","props":{"id":"tx_asset_info"},"children":[{"type":"text","value":"tx_asset_info"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Available from v5.0, can be used after Fork2. Assets must be enabled ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--enable_assets"}]},{"type":"text","value":") or method would fail."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Retrieve full info about any registered asset and save in a local database. If asset has been unregistered or has been never registered transaction would fail. After transaction is completed you can use "},{"type":"element","tag":"a","props":{"href":"#get_asset_info"},"children":[{"type":"text","value":"get_asset_info"}]},{"type":"text","value":" to read/get asset info from the local database."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 2,\n    \"method\": \"tx_asset_info\",\n    \"params\": \n    {\n        \"asset_id\": 1\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 2,\n    \"method\": \"tx_asset_info\",\n    \"params\": \n    {\n        \"asset_id\": 1\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_id"}]},{"type":"text","value":" asset id to retrieve info about. Can be used for any asset even if you don't own it."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"txId"}]},{"type":"text","value":" optional, provide your own transaction ID"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_meta"}]},{"type":"text","value":" obsolete and removed since v6.0"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Asset info transaction is free, i.e. doesn't incur any fees."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 2,\n    \"result\":\n    {\n        \"txId\" : \"10c4b760c842433cb58339a0fafef3db\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 2,\n    \"result\":\n    {\n        \"txId\" : \"10c4b760c842433cb58339a0fafef3db\"\n    }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Returns transaction id or "},{"type":"element","tag":"a","props":{"href":"#api-error-codes"},"children":[{"type":"text","value":"error code"}]},{"type":"text","value":"."}]},{"type":"element","tag":"h2","props":{"id":"tx_cancel"},"children":[{"type":"text","value":"tx_cancel"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Cancels running transaction"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"method\":\"tx_cancel\", \n    \"params\":\n    {\n        \"txId\" : \"a13525181c0d45b0a4c5c1a697c8a7b8\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"method\":\"tx_cancel\", \n    \"params\":\n    {\n        \"txId\" : \"a13525181c0d45b0a4c5c1a697c8a7b8\"\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"txId"}]},{"type":"text","value":" transaction id to cancel."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"result\": true\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"result\": true\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Returns "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"true"}]},{"type":"text","value":" if successfully canceled or "},{"type":"element","tag":"a","props":{"href":"#api-error-codes"},"children":[{"type":"text","value":"error code"}]},{"type":"text","value":" with the reason."}]},{"type":"element","tag":"h2","props":{"id":"tx_delete"},"children":[{"type":"text","value":"tx_delete"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Removes transaction from the local history. Cannot remove running transaction"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"method\":\"tx_delete\", \n    \"params\":\n    {\n        \"txId\" : \"a13525181c0d45b0a4c5c1a697c8a7b8\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"method\":\"tx_delete\", \n    \"params\":\n    {\n        \"txId\" : \"a13525181c0d45b0a4c5c1a697c8a7b8\"\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"txId"}]},{"type":"text","value":" transaction id to be deleted."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"result\": true\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"result\": true\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Returns "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"true"}]},{"type":"text","value":" if the transaction was successfully deleted or "},{"type":"element","tag":"a","props":{"href":"#api-error-codes"},"children":[{"type":"text","value":"error code"}]},{"type":"text","value":" with the reason."}]},{"type":"element","tag":"h2","props":{"id":"tx_status"},"children":[{"type":"text","value":"tx_status"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Get status & extended information about a single transaction by its transaction id. The example below is given for a simple transaction. Different transaction types have different status records. Consult "},{"type":"element","tag":"a","props":{"href":"#tx_list"},"children":[{"type":"text","value":"tx_list"}]},{"type":"text","value":" method description for details. This method can be called for previously started asset-involving transactions even if assets are not enabled in the current session."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"method\":\"tx_status\", \n    \"params\":\n    {\n        \"txId\" : \"10c4b760c842433cb58339a0fafef3db\",\n        \"rates\": false\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"method\":\"tx_status\", \n    \"params\":\n    {\n        \"txId\" : \"10c4b760c842433cb58339a0fafef3db\",\n        \"rates\": false\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"txId"}]},{"type":"text","value":" - transaction id to return status for"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"rates"}]},{"type":"text","value":" - returns currency rates array at the moment of transaction if set to "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"true"}]},{"type":"text","value":". By default is "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"false"}]},{"type":"text","value":"."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"result\":\n    { \n        \"txId\" : \"10c4b760c842433cb58339a0fafef3db\",\n        \"asset_id\": 0,\n        \"comment\": \"\",\n        \"fee\": 100,\n        \"kernel\": \"0000000000000000000000000000000000000000000000000000000000000000\",\n        \"receiver\": \"472e17b0419055ffee3b3813b98ae671579b0ac0dcd6f1a23b11a75ab148cc67\",\n        \"sender\": \"f287176bdd517e9c277778e4c012bf6a3e687dd614fc552a1ed22a3fee7d94f2\",\n        \"status\": 4,\n        \"status_string\" : \"Failed\",\n        \"tx_type\": 0,\n        \"tx_type_string\": \"simple\",\n        \"failure_reason\" : \"No inputs\",\n        \"value\": 12342342,\n        \"create_time\" : 1551100217,\n        \"income\" : false,\n        \"sender_identity\": \"a0a1ebbfeed5c312b309e32715c159e6b4548a6c6c3af25d0dbc16f37a1e9dd6\",\n        \"receiver_identity\": \"2d8738b0424ad50631e902fab655e7e1795fbb8d92d47c4c8df7336870fcadf5\",\n        \"token\": \"44pE7ySjZYjbLqwnTJANvr4BudMk1RdvWvaZnBvoCTwFnigfaTSza75bvw7x2GCa377Z4CSRRYZon44Ss9G9joSicNRAgts4u3pL6yV6jDQ6gAVJD9Scyr\"\n    } \n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"result\":\n    { \n        \"txId\" : \"10c4b760c842433cb58339a0fafef3db\",\n        \"asset_id\": 0,\n        \"comment\": \"\",\n        \"fee\": 100,\n        \"kernel\": \"0000000000000000000000000000000000000000000000000000000000000000\",\n        \"receiver\": \"472e17b0419055ffee3b3813b98ae671579b0ac0dcd6f1a23b11a75ab148cc67\",\n        \"sender\": \"f287176bdd517e9c277778e4c012bf6a3e687dd614fc552a1ed22a3fee7d94f2\",\n        \"status\": 4,\n        \"status_string\" : \"Failed\",\n        \"tx_type\": 0,\n        \"tx_type_string\": \"simple\",\n        \"failure_reason\" : \"No inputs\",\n        \"value\": 12342342,\n        \"create_time\" : 1551100217,\n        \"income\" : false,\n        \"sender_identity\": \"a0a1ebbfeed5c312b309e32715c159e6b4548a6c6c3af25d0dbc16f37a1e9dd6\",\n        \"receiver_identity\": \"2d8738b0424ad50631e902fab655e7e1795fbb8d92d47c4c8df7336870fcadf5\",\n        \"token\": \"44pE7ySjZYjbLqwnTJANvr4BudMk1RdvWvaZnBvoCTwFnigfaTSza75bvw7x2GCa377Z4CSRRYZon44Ss9G9joSicNRAgts4u3pL6yV6jDQ6gAVJD9Scyr\"\n    } \n}\n"}]}]},{"type":"element","tag":"h2","props":{"id":"tx_list"},"children":[{"type":"text","value":"tx_list"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Get the transactions list."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 8,\n    \"method\":\"tx_list\",\n    \"params\":\n    {\n        \"filter\" : \n        {\n            \"status\":4,\n            \"height\":1055,\n        },\n        \"rates\": true,\n        \"skip\" : 0,\n        \"count\" : 10\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 8,\n    \"method\":\"tx_list\",\n    \"params\":\n    {\n        \"filter\" : \n        {\n            \"status\":4,\n            \"height\":1055,\n        },\n        \"rates\": true,\n        \"skip\" : 0,\n        \"count\" : 10\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"filter.status"}]},{"type":"text","value":" optional, filter transactions by status"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"filter.height"}]},{"type":"text","value":" optional, filter transactions by height. For simple, asset issue and asset consume transactions denotes height when the transaction was registered in the chain. For asset info transaction means height at which asset confirmation was received. Works only for transactions with status Completed(3)."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"count"}]},{"type":"text","value":" optional, number of transactions to get. By default, all transactions are returned."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"skip"}]},{"type":"text","value":" number of transactions to skip, 0 by default."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"rates"}]},{"type":"text","value":" return currency rates at the moment of transaction if "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"true"}]},{"type":"text","value":". By default is "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"false"}]},{"type":"text","value":"."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"If assets are not enabled, the method returns only BEAM transactions. To get asset transactions you should enable assets ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--enable_assets"}]},{"type":"text","value":")."}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"filter.asset_id"}]},{"type":"text","value":" return only asset transactions with given asset id. Present starting from v5.0. If assets are not enabled and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"filter.asset_id"}]},{"type":"text","value":" is non-zero nothing would be returned."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 8,\n    \"result\":\n    [{ \n        \"asset_id\": 0,\n        \"txId\" : \"10c4b760c842433cb58339a0fafef3db\",\n        \"comment\": \"\",\n        \"fee\": 0,\n        \"kernel\": \"0000000000000000000000000000000000000000000000000000000000000000\",\n        \"receiver\": \"472e17b0419055ffee3b3813b98ae671579b0ac0dcd6f1a23b11a75ab148cc67\",\n        \"sender\": \"f287176bdd517e9c277778e4c012bf6a3e687dd614fc552a1ed22a3fee7d94f2\",\n        \"status\": 4,\n        \"status_string\" : \"Failed\",\n        \"failure_reason\" : \"No inputs\",\n        \"value\": 12342342,\n        \"create_time\" : 1551100217,\n        \"income\" : false,\n        \"token\": \"44pE7ySjZYjbLqwnTJANvr4BudMk1RdvWvaZnBvoCTwFnigfaTSza75bvw7x2GCa377Z4CSRRYZon44Ss9G9joSicNRAgts4u3pL6yV6jDQ6gAVJD9Scyr\",\n        \"rates\": [\n            {\n                \"from\": 3,\n                \"rate\": 200000000,\n                \"rate_str\": \"200000000\",\n                \"to\": \"btc\"\n            },\n            {\n                \"from\": 0,\n                \"rate\": 50000000,\n                \"rate_str\": \"50000000\",\n                \"to\": \"usd\"\n            }\n        ]\n    },\n    {\n      \"asset_id\": 1,\n      \"asset_meta\": \"STD:N=Coin;SN=CN;UN=Cgro;NTHUN=Cgroth\",\n      \"comment\": \"\",\n      \"confirmations\": 102,\n      \"create_time\": 1586995332,\n      \"fee\": 0,\n      \"height\": 1908,\n      \"income\": false,\n      \"receiver\": \"0\",\n      \"sender\": \"0\",\n      \"status\": 3,\n      \"status_string\": \"asset confirmed\",\n      \"txId\": \"d9f94306127a4ef894733f984b5512cf\",\n      \"tx_type\": 6,\n      \"tx_type_string\": \"asset info\",\n      \"value\": 0,\n      \"rates\": []\n    },\n    {\n        \"asset_id\": 1,\n        \"asset_meta\": \"STD:N=Coin;SN=CN;UN=Cgro;NTHUN=Cgroth\",\n        \"comment\": \"\",\n        \"confirmations\": 1985,\n        \"height\": 25,\n        \"create_time\": 1586966478,\n        \"fee\": 100,\n        \"income\": false,\n        \"kernel\": \"1c9e4a9a61df1dda00db10ab4477f88355e13d4ed06c0db36c39b22a2a66f642\",\n        \"receiver\": \"0\",\n        \"sender\": \"0\",\n        \"status\": 3,\n        \"status_string\": \"asset issued\",\n        \"txId\": \"77008a76aa4b4da697587040b2d21f1e\",\n        \"tx_type\": 2,\n        \"tx_type_string\": \"asset issue\",\n        \"value\": 500000000,\n        \"rates\": []\n    }]\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 8,\n    \"result\":\n    [{ \n        \"asset_id\": 0,\n        \"txId\" : \"10c4b760c842433cb58339a0fafef3db\",\n        \"comment\": \"\",\n        \"fee\": 0,\n        \"kernel\": \"0000000000000000000000000000000000000000000000000000000000000000\",\n        \"receiver\": \"472e17b0419055ffee3b3813b98ae671579b0ac0dcd6f1a23b11a75ab148cc67\",\n        \"sender\": \"f287176bdd517e9c277778e4c012bf6a3e687dd614fc552a1ed22a3fee7d94f2\",\n        \"status\": 4,\n        \"status_string\" : \"Failed\",\n        \"failure_reason\" : \"No inputs\",\n        \"value\": 12342342,\n        \"create_time\" : 1551100217,\n        \"income\" : false,\n        \"token\": \"44pE7ySjZYjbLqwnTJANvr4BudMk1RdvWvaZnBvoCTwFnigfaTSza75bvw7x2GCa377Z4CSRRYZon44Ss9G9joSicNRAgts4u3pL6yV6jDQ6gAVJD9Scyr\",\n        \"rates\": [\n            {\n                \"from\": 3,\n                \"rate\": 200000000,\n                \"rate_str\": \"200000000\",\n                \"to\": \"btc\"\n            },\n            {\n                \"from\": 0,\n                \"rate\": 50000000,\n                \"rate_str\": \"50000000\",\n                \"to\": \"usd\"\n            }\n        ]\n    },\n    {\n      \"asset_id\": 1,\n      \"asset_meta\": \"STD:N=Coin;SN=CN;UN=Cgro;NTHUN=Cgroth\",\n      \"comment\": \"\",\n      \"confirmations\": 102,\n      \"create_time\": 1586995332,\n      \"fee\": 0,\n      \"height\": 1908,\n      \"income\": false,\n      \"receiver\": \"0\",\n      \"sender\": \"0\",\n      \"status\": 3,\n      \"status_string\": \"asset confirmed\",\n      \"txId\": \"d9f94306127a4ef894733f984b5512cf\",\n      \"tx_type\": 6,\n      \"tx_type_string\": \"asset info\",\n      \"value\": 0,\n      \"rates\": []\n    },\n    {\n        \"asset_id\": 1,\n        \"asset_meta\": \"STD:N=Coin;SN=CN;UN=Cgro;NTHUN=Cgroth\",\n        \"comment\": \"\",\n        \"confirmations\": 1985,\n        \"height\": 25,\n        \"create_time\": 1586966478,\n        \"fee\": 100,\n        \"income\": false,\n        \"kernel\": \"1c9e4a9a61df1dda00db10ab4477f88355e13d4ed06c0db36c39b22a2a66f642\",\n        \"receiver\": \"0\",\n        \"sender\": \"0\",\n        \"status\": 3,\n        \"status_string\": \"asset issued\",\n        \"txId\": \"77008a76aa4b4da697587040b2d21f1e\",\n        \"tx_type\": 2,\n        \"tx_type_string\": \"asset issue\",\n        \"value\": 500000000,\n        \"rates\": []\n    }]\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"token"}]},{"type":"text","value":" retuned only in case if the transaction was started with a token."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"height"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"confirmations"}]},{"type":"text","value":" will be absent if the transaction isn't in the chain for simple, asset issue & asset consume transactions, or if asset confirmation is not received for asset info transaction."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"confirmations"}]},{"type":"text","value":" the number of blocks which confirm the presence of the transaction."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"sender_identity"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"receiver_identity"}]},{"type":"text","value":" are present if both participants provided these. In UI and CLI called as \"sender wallet's signature\" and \"receiver wallet's signature\"."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"status_string"}]},{"type":"text","value":" is a string representation of "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"status"}]},{"type":"text","value":" parameter."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_meta"}]},{"type":"text","value":" is an asset metadata string. Present from v5.0."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"tx_type"}]},{"type":"text","value":" is present starting from v5.0."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"tx_type_string"}]},{"type":"text","value":" is a string representation of tx_type parameter. Present starting from v5.0."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_id"}]},{"type":"text","value":" is returned starting from v5.0. For BEAM transactions it is always 0, for transactions that involve assets (including send/receive) it is an asset id. Can be 0 for asset info transaction if the transaction was started with asset_meta and the asset has been not found."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_meta"}]},{"type":"text","value":" is an asset metadata string. Returned starting from v5.0. Always present for asset issue &  consume transactions. Can be empty for asset info transaction if it was started with asset_id and the asset has been not found."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"kernel"}]},{"type":"text","value":" is not returned for asset info transactions. These transactions do not have any kernel and only query node for information."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"appname"}]},{"type":"text","value":" returned for transactions initiated by DApps. DApp Name"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"appid"}]},{"type":"text","value":" returned for transactions initiated by DApps. DApp ID (apppid)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"rates"}]},{"type":"text","value":" currency rates at the moment of transaction. Empty array if rates were not available at the moment of transaction or transaction does not store rates (asset issue/consume for example)."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"rates.from"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"rates.to"}]},{"type":"text","value":" from and to currencies. "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Number"}]},{"type":"text","value":" denotes asset id (0 for BEAM), "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"string"}]},{"type":"text","value":" - third-party currencies such as "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"eth"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"btc"}]},{"type":"text","value":" &c."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"rates.rate"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"rates.rate_str"}]},{"type":"text","value":" is a conversion rate."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"address_type"}]},{"type":"text","value":" type off address used for pust transaction (7), see "},{"type":"element","tag":"a","props":{"href":"#create_address"},"children":[{"type":"text","value":"create_address"}]},{"type":"text","value":" and "},{"type":"element","tag":"a","props":{"href":"#tx-types"},"children":[{"type":"text","value":"TX types"}]},{"type":"text","value":". Possible values are\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"offline"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"public_offline"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"max_privacy"}]}]}]}]}]},{"type":"element","tag":"h3","props":{"id":"important-the-recommended-number-of-confirmations-for-beam-transfers-is-80-blocks"},"children":[{"type":"text","value":"IMPORTANT: The recommended number of confirmations for Beam transfers is 80 blocks."}]},{"type":"element","tag":"h3","props":{"id":"tx-statuses"},"children":[{"type":"text","value":"TX statuses"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"pending (0)     - "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"pending"}]},{"type":"text","value":" initial state, the transaction is created, but not sent yet"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"in progress (1) - "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"self sending"}]},{"type":"text","value":"/"},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"waiting for sender"}]},{"type":"text","value":"/"},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"waiting for receiver"}]},{"type":"text","value":"/"},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"in progress"}]},{"type":"text","value":". For simple transactions indicates that the sender or receiver should come online to initiate the transaction. For asset issue/consume/info transactions indicates that transaction is being assembled. For asset info transaction means waiting for node response."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"canceled (2)    - "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"cancelled"}]},{"type":"text","value":" by sender or due to rollback"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"completed (3)   - transaction is "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"completed"}]},{"type":"text","value":"/"},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"received"}]},{"type":"text","value":"/"},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"sent"}]},{"type":"text","value":"/"},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset issued"}]},{"type":"text","value":"/"},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset consumed"}]},{"type":"text","value":"/"},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset confirmed"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"failed (4)      - "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"failed"}]},{"type":"text","value":" for some reason or "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"expired"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"registering (5) - "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"self sending"}]},{"type":"text","value":"/"},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"receiving"}]},{"type":"text","value":"/"},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"sending"}]},{"type":"text","value":"/"},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"in progress"}]},{"type":"text","value":" transaction is taken care by the blockchain, miners needs to PoW and to add it to a block, then block should be added to the blockchain."}]}]},{"type":"element","tag":"h3","props":{"id":"tx-types"},"children":[{"type":"text","value":"TX types"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"simple (0) - simple transaction, send/receive BEAM or asset"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"reserved (1) - currently not returned"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"asset issue (2) - issue new asset units"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"asset consume (3) - consume asset units"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"reserved (4) - currently not returned"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"reserved (5) - currently not returned"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"asset info (6) - asset info transaction, receive full asset information from blockchain"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"push transaction (7) - lelantus push transaction, is used for offline/max privacy payments"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"contract (12) - starting with v6.0, transaction created by contract request, or to fund or execute node-base contract invocation"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"N.B."}]},{"type":"text","value":" tx_list does not return swap, asset register & asset unregister transactions. Transactions are sorted by height in a descending order."}]},{"type":"element","tag":"h2","props":{"id":"wallet_status"},"children":[{"type":"text","value":"wallet_status"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Get current wallet status."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 6,\n    \"method\":\"wallet_status\"\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 6,\n    \"method\":\"wallet_status\"\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 6,\n    \"result\":\n    {\n        \"current_height\" : 1055,\n        \"current_state_hash\" : \"f287176bdd517e9c277778e4c012bf6a3e687dd614fc552a1ed22a3fee7d94f2\",\n            \"current_state_timestamp\": 1625060769,\n        \"prev_state_hash\" : \"bd39333a66a8b7cb3804b5978d42312c841dbfa03a1c31fc2f0627eeed6e43f2\",\n            \"is_in_sync\": true,\n        \"available\": 100500,\n        \"receiving\": 123,\n        \"sending\": 0,\n        \"maturing\": 50,\n        \"difficulty\": 2.93914,\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 6,\n    \"result\":\n    {\n        \"current_height\" : 1055,\n        \"current_state_hash\" : \"f287176bdd517e9c277778e4c012bf6a3e687dd614fc552a1ed22a3fee7d94f2\",\n            \"current_state_timestamp\": 1625060769,\n        \"prev_state_hash\" : \"bd39333a66a8b7cb3804b5978d42312c841dbfa03a1c31fc2f0627eeed6e43f2\",\n            \"is_in_sync\": true,\n        \"available\": 100500,\n        \"receiving\": 123,\n        \"sending\": 0,\n        \"maturing\": 50,\n        \"difficulty\": 2.93914,\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"available"}]},{"type":"text","value":" sum of available UTXOs you can spend"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"sending/receiving"}]},{"type":"text","value":" sum of UTXOs currently sending/receiving"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"maturing"}]},{"type":"text","value":" sum of UTXOs currently maturing"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"locked"}]},{"type":"text","value":" not used at the moment, ignore"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"difficulty"}]},{"type":"text","value":" the latest blockchain PoW difficulty"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"current_state_timestamp"}]},{"type":"text","value":" is a UNIX timestamp in seconds"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"is_in_sync"}]},{"type":"text","value":" true is wallet is in sync with blockchain"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Starting from v5.0 assets support has been added. This slightly changes API response: totals array is added which provides amounts for each asset int the wallet. To get the totals array assets should be enabled ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--enable_assets"}]},{"type":"text","value":")."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 6,\n    \"method\":\"wallet_status\",\n        \"params\": {\n            \"nz_totals\": false\n        }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 6,\n    \"method\":\"wallet_status\",\n        \"params\": {\n            \"nz_totals\": false\n        }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"nz_totals"}]},{"type":"text","value":"optional bool. If true do not return totals for assets with zero balance. By default is false."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n  \"id\": 1236,\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"current_height\" : 1055,\n    \"current_state_hash\" : \"f287176bdd517e9c277778e4c012bf6a3e687dd614fc552a1ed22a3fee7d94f2\",\n    \"current_state_timestamp\": 1625060769,\n    \"prev_state_hash\" : \"bd39333a66a8b7cb3804b5978d42312c841dbfa03a1c31fc2f0627eeed6e43f2\",\n    \"is_in_sync\": true,\n    \"available\": 100500,\n    \"receiving\": 123,\n    \"sending\": 0,\n    \"maturing\": 50,\n    \"difficulty\": 2.93914,\n    \"totals\": [\n      {\n        \"asset_id\": 0,\n        \"available\": 117065840575291,\n        \"available_mp\": 0,\n        \"available_mp_str\": \"0\",\n        \"available_regular\": 117065840575291,\n        \"available_regular_str\": \"117065840575291\",\n        \"available_str\": \"117065840575291\",\n        \"change\": 0,\n        \"change_str\": \"0\",\n        \"locked\": 183629687500000,\n        \"locked_str\": \"183629687500000\",\n        \"maturing\": 183629687500000,\n        \"maturing_mp\": 0,\n        \"maturing_mp_str\": \"0\",\n        \"maturing_regular\": 183629687500000,\n        \"maturing_regular_str\": \"183629687500000\",\n        \"maturing_str\": \"183629687500000\",\n        \"receiving\": 0,\n        \"receiving_mp\": 0,\n        \"receiving_mp_str\": \"0\",\n        \"receiving_regular\": 0,\n        \"receiving_regular_str\": \"0\",\n        \"receiving_str\": \"0\",\n        \"sending\": 0,\n        \"sending_mp\": 0,\n        \"sending_mp_str\": \"0\",\n        \"sending_regular\": 0,\n        \"sending_regular_str\": \"0\",\n        \"sending_str\": \"0\"\n      },\n      {\n        \"asset_id\": 3,\n        \"available\": 4262500000,\n        \"available_mp\": 0,\n        \"available_mp_str\": \"0\",\n        \"available_regular\": 4262500000,\n        \"available_regular_str\": \"4262500000\",\n        \"available_str\": \"4262500000\",\n        \"change\": 0,\n        \"change_str\": \"0\",\n        \"locked\": 0,\n        \"locked_str\": \"0\",\n        \"maturing\": 0,\n        \"maturing_mp\": 0,\n        \"maturing_mp_str\": \"0\",\n        \"maturing_regular\": 0,\n        \"maturing_regular_str\": \"0\",\n        \"maturing_str\": \"0\",\n        \"receiving\": 0,\n        \"receiving_mp\": 0,\n        \"receiving_mp_str\": \"0\",\n        \"receiving_regular\": 0,\n        \"receiving_regular_str\": \"0\",\n        \"receiving_str\": \"0\",\n        \"sending\": 0,\n        \"sending_mp\": 0,\n        \"sending_mp_str\": \"0\",\n        \"sending_regular\": 0,\n        \"sending_regular_str\": \"0\",\n        \"sending_str\": \"0\"\n      }\n    ]\n  }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n  \"id\": 1236,\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"current_height\" : 1055,\n    \"current_state_hash\" : \"f287176bdd517e9c277778e4c012bf6a3e687dd614fc552a1ed22a3fee7d94f2\",\n    \"current_state_timestamp\": 1625060769,\n    \"prev_state_hash\" : \"bd39333a66a8b7cb3804b5978d42312c841dbfa03a1c31fc2f0627eeed6e43f2\",\n    \"is_in_sync\": true,\n    \"available\": 100500,\n    \"receiving\": 123,\n    \"sending\": 0,\n    \"maturing\": 50,\n    \"difficulty\": 2.93914,\n    \"totals\": [\n      {\n        \"asset_id\": 0,\n        \"available\": 117065840575291,\n        \"available_mp\": 0,\n        \"available_mp_str\": \"0\",\n        \"available_regular\": 117065840575291,\n        \"available_regular_str\": \"117065840575291\",\n        \"available_str\": \"117065840575291\",\n        \"change\": 0,\n        \"change_str\": \"0\",\n        \"locked\": 183629687500000,\n        \"locked_str\": \"183629687500000\",\n        \"maturing\": 183629687500000,\n        \"maturing_mp\": 0,\n        \"maturing_mp_str\": \"0\",\n        \"maturing_regular\": 183629687500000,\n        \"maturing_regular_str\": \"183629687500000\",\n        \"maturing_str\": \"183629687500000\",\n        \"receiving\": 0,\n        \"receiving_mp\": 0,\n        \"receiving_mp_str\": \"0\",\n        \"receiving_regular\": 0,\n        \"receiving_regular_str\": \"0\",\n        \"receiving_str\": \"0\",\n        \"sending\": 0,\n        \"sending_mp\": 0,\n        \"sending_mp_str\": \"0\",\n        \"sending_regular\": 0,\n        \"sending_regular_str\": \"0\",\n        \"sending_str\": \"0\"\n      },\n      {\n        \"asset_id\": 3,\n        \"available\": 4262500000,\n        \"available_mp\": 0,\n        \"available_mp_str\": \"0\",\n        \"available_regular\": 4262500000,\n        \"available_regular_str\": \"4262500000\",\n        \"available_str\": \"4262500000\",\n        \"change\": 0,\n        \"change_str\": \"0\",\n        \"locked\": 0,\n        \"locked_str\": \"0\",\n        \"maturing\": 0,\n        \"maturing_mp\": 0,\n        \"maturing_mp_str\": \"0\",\n        \"maturing_regular\": 0,\n        \"maturing_regular_str\": \"0\",\n        \"maturing_str\": \"0\",\n        \"receiving\": 0,\n        \"receiving_mp\": 0,\n        \"receiving_mp_str\": \"0\",\n        \"receiving_regular\": 0,\n        \"receiving_regular_str\": \"0\",\n        \"receiving_str\": \"0\",\n        \"sending\": 0,\n        \"sending_mp\": 0,\n        \"sending_mp_str\": \"0\",\n        \"sending_regular\": 0,\n        \"sending_regular_str\": \"0\",\n        \"sending_str\": \"0\"\n      }\n    ]\n  }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"totals"}]},{"type":"text","value":" is an array of totals per asset. Assets that are included in this array by default:"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"BEAM (asset id 0)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"All assets which have UTXOs."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"All owned assets, even if there is no UTXOs for the given asset."}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"available_regular"}]},{"type":"text","value":" available regular UTXOs wallet can spend"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"available_mp"}]},{"type":"text","value":" available max privacy (shielded) UTXOs wallet can spend"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"available"}]},{"type":"text","value":" sum of "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"available_regular"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"available_mp"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"receiving_regular"}]},{"type":"text","value":" regular UTXOs wallet is currently receiving"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"receiving_mp"}]},{"type":"text","value":" max privacy (shielded) UTXOs wallet is currently receiving"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"receiving"}]},{"type":"text","value":" sum of "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"receiving_regular"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"receiving_mp"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"sending_regular"}]},{"type":"text","value":" regular UTXOs wallet is currently sending"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"sending_mp"}]},{"type":"text","value":" max privacy (shielded) UTXOs wallet is currently sending"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"sending"}]},{"type":"text","value":" sum of "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"sending_regular"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"sending_mp"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"maturing_regular"}]},{"type":"text","value":" regular UTXOs currently maturing"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"maturing_mp"}]},{"type":"text","value":" max privacy (shielded) UTXOs currently maturing"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"maturing"}]},{"type":"text","value":" sum of "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"maturing_regular"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"maturing_mp"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"change"}]},{"type":"text","value":" change that is currently incoming to wallet"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"locked"}]},{"type":"text","value":" locked UTXOs, sum of "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"maturing_regular"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"maturing_mp"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"change"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Asset is included in the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"totals"}]},{"type":"text","value":" array even if all UTXOs are spent or if there are no UTXOs but asset is owned (issued by the wallet). In case when all the UTXOs are spent totals' fields except "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_id"}]},{"type":"text","value":" would be 0 (zero balance). To avoid getting assets with zero balance specify "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"\"params\": {\"nz_totals\": true}"}]},{"type":"text","value":". BEAM is always included, even if balance is 0 and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"nz_totals"}]},{"type":"text","value":" is true."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Maximum asset emission is 2"},{"type":"element","tag":"sup","props":{},"children":[{"type":"text","value":"128"}]},{"type":"text","value":"-1. To ensure compatibility with JavaScript raw number ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"available"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"maturing"}]},{"type":"text","value":" &c.) returned only if it is less than or equal to "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Number.MAX_SAFE_INTEGER"}]},{"type":"text","value":" (2"},{"type":"element","tag":"sup","props":{},"children":[{"type":"text","value":"53"}]},{"type":"text","value":"-1). If total's value is greater than "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Number.MAX_SAFE_INTEGER"}]},{"type":"text","value":" only corresponding string representation ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"xxxx_str"}]},{"type":"text","value":") is returned."}]},{"type":"element","tag":"h2","props":{"id":"get_utxo"},"children":[{"type":"text","value":"get_utxo"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Get list of all unlocked UTXOs."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 6,\n    \"method\":\"get_utxo\",\n    \"params\" :\n    {\n        \"count\": 10,\n        \"skip\": 0,\n        \"sort\": {\n            \"field\": \"amount\",\n            \"direction\": \"asc\"\n        }\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 6,\n    \"method\":\"get_utxo\",\n    \"params\" :\n    {\n        \"count\": 10,\n        \"skip\": 0,\n        \"sort\": {\n            \"field\": \"amount\",\n            \"direction\": \"asc\"\n        }\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"count"}]},{"type":"text","value":" number of UTXO to get, by default all the UTXOs are returned."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"skip"}]},{"type":"text","value":" number of UTXO to skip, default is "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"0"}]},{"type":"text","value":"."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"sort.field"}]},{"type":"text","value":" name of field to sort. Available values are \"id|asset_id|amount|type|maturity|createTxId|spentTxId|status|status_string\""}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"sort.direction"}]},{"type":"text","value":" sorting directions \"asc\" or \"desc\""}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\": \"2.0\", \n    \"id\": 6,\n    \"result\":\n    [{\n        \"id\": 123,\n        \"asset_id\": 0,\n        \"amount\": 12345,\n        \"maturity\": 60,\n        \"type\": \"mine\",\n        \"createTxId\": \"10c4b760c842433cb58339a0fafef3db\",\n        \"spentTxId\": \"\",\n        \"status\": 2,\n        \"status_string\": \"maturing\"\n    }]\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\": \"2.0\", \n    \"id\": 6,\n    \"result\":\n    [{\n        \"id\": 123,\n        \"asset_id\": 0,\n        \"amount\": 12345,\n        \"maturity\": 60,\n        \"type\": \"mine\",\n        \"createTxId\": \"10c4b760c842433cb58339a0fafef3db\",\n        \"spentTxId\": \"\",\n        \"status\": 2,\n        \"status_string\": \"maturing\"\n    }]\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_id"}]},{"type":"text","value":" asset id if coin belongs to an asset and 0 for BEAM coins. By default method returns only BEAM coins. To get asset coins assets should be enabled ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--enable_assets"}]},{"type":"text","value":")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"filter.asset_id"}]},{"type":"text","value":" return only asset coins with given asset id, 0 for BEAM coins. Present starting from v5.0. Assets should be enabled."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1236,\n    \"method\": \"get_utxo\",\n    \"params\": {\n        \"assets\": true,\n        \"filter\": {\n            \"asset_id\": 1\n        }\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1236,\n    \"method\": \"get_utxo\",\n    \"params\": {\n        \"assets\": true,\n        \"filter\": {\n            \"asset_id\": 1\n        }\n    }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n  \"id\": 1236,\n  \"jsonrpc\": \"2.0\",\n  \"result\": [\n    {\n      \"amount\": 500000000,\n      \"asset_id\": 1,\n      \"createTxId\": \"fd705ce6f8c345309c865dc93de9fec5\",\n      \"id\": \"0000000183ed2de4d94e6bd56e6f726d01000000000000001dcd6500\",\n      \"maturity\": 19,\n      \"spentTxId\": \"\",\n      \"status\": 1,\n      \"status_string\": \"available\",\n      \"type\": \"norm\"\n    }\n  ]\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n  \"id\": 1236,\n  \"jsonrpc\": \"2.0\",\n  \"result\": [\n    {\n      \"amount\": 500000000,\n      \"asset_id\": 1,\n      \"createTxId\": \"fd705ce6f8c345309c865dc93de9fec5\",\n      \"id\": \"0000000183ed2de4d94e6bd56e6f726d01000000000000001dcd6500\",\n      \"maturity\": 19,\n      \"spentTxId\": \"\",\n      \"status\": 1,\n      \"status_string\": \"available\",\n      \"type\": \"norm\"\n    }\n  ]\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"type"}]},{"type":"text","value":" can be "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"fees"}]},{"type":"text","value":" (comission), "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"mine"}]},{"type":"text","value":" (coinbase), "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"norm"}]},{"type":"text","value":" (usual coin, for example received via transaction), "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"chng"}]},{"type":"text","value":" (change), "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"shld"}]},{"type":"text","value":" (shielded)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"status"}]},{"type":"text","value":" can be "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"unavailable (0)"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"available (1)"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"maturing (2)"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"outgoing (3)"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"incoming (4)"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"spent (6)"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"consumed (7)"}]},{"type":"text","value":". "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"consumed"}]},{"type":"text","value":" status is returned only for asset coins starting from v5.0. It means that the coin has been burned (consumed)."}]}]},{"type":"element","tag":"h2","props":{"id":"get_asset_info"},"children":[{"type":"text","value":"get_asset_info"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Read asset info from local database. Asset info can be refreshed using "},{"type":"element","tag":"a","props":{"href":"#tx_asset_info"},"children":[{"type":"text","value":"tx_asset_info"}]},{"type":"text","value":". It is also automatically refreshed during asset transactions (but not always) to ensure that asset operations are safe. This method can be called even if assets are not enabled."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 6,\n    \"method\": \"get_asset_info\",\n    \"params\" :\n    {\n        \"asset_id\": 1\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 6,\n    \"method\": \"get_asset_info\",\n    \"params\" :\n    {\n        \"asset_id\": 1\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_id"}]},{"type":"text","value":" asset id to retrieve info about. Can be used for any asset even if you don't own it."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_meta"}]},{"type":"text","value":" obsolete and removed since v6.0"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"id\": 1236,\n    \"jsonrpc\": \"2.0\",\n    \"result\": \n    {\n        \"asset_id\": 1,\n        \"emission\": 2000000000,\n        \"emission_str\": \"2000000000\",\n        \"isOwned\": 1,\n        \"lockHeight\": 39,\n        \"metadata\": \"STD:SCH_VER=1;N=YAN Coin;SN=YAN;UN=Yan;NTHUN=Yanik\",\n        \"metadata_kv\": true,\n        \"metadata_pairs\": {\n            \"N\": \"YAN Coin\",\n            \"NTHUN\": \"Yanik\",\n            \"SCH_VER\": \"1\",\n            \"SN\": \"YAN\",\n            \"UN\": \"Yan\"\n        },\n        \"metadata_std_min\": true,\n        \"metadata_std\": true,\n        \"ownerId\": \"0ae08a49e018e98177774294107dc033790b87538e54a20e99c6b98f1dbd39ce\",\n        \"refreshHeight\": 927\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"id\": 1236,\n    \"jsonrpc\": \"2.0\",\n    \"result\": \n    {\n        \"asset_id\": 1,\n        \"emission\": 2000000000,\n        \"emission_str\": \"2000000000\",\n        \"isOwned\": 1,\n        \"lockHeight\": 39,\n        \"metadata\": \"STD:SCH_VER=1;N=YAN Coin;SN=YAN;UN=Yan;NTHUN=Yanik\",\n        \"metadata_kv\": true,\n        \"metadata_pairs\": {\n            \"N\": \"YAN Coin\",\n            \"NTHUN\": \"Yanik\",\n            \"SCH_VER\": \"1\",\n            \"SN\": \"YAN\",\n            \"UN\": \"Yan\"\n        },\n        \"metadata_std_min\": true,\n        \"metadata_std\": true,\n        \"ownerId\": \"0ae08a49e018e98177774294107dc033790b87538e54a20e99c6b98f1dbd39ce\",\n        \"refreshHeight\": 927\n    }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Returns full asset info or "},{"type":"element","tag":"a","props":{"href":"#api-error-codes"},"children":[{"type":"text","value":"error code"}]},{"type":"text","value":"."}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_id"}]},{"type":"text","value":" asset id"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"metadata"}]},{"type":"text","value":" asset metadata"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"emission"}]},{"type":"text","value":" & "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"emission_str"}]},{"type":"text","value":" total asset emission. Maximum asset emission is 2"},{"type":"element","tag":"sup","props":{},"children":[{"type":"text","value":"128"}]},{"type":"text","value":"-1. To ensure compatibility with JavaScript raw number returned only if it is less than or equal to "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Number.MAX_SAFE_INTEGER"}]},{"type":"text","value":" (2"},{"type":"element","tag":"sup","props":{},"children":[{"type":"text","value":"53"}]},{"type":"text","value":"-1). If asset emission is greater than "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Number.MAX_SAFE_INTEGER"}]},{"type":"text","value":" only corresponding string representation is returned."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"isOwned"}]},{"type":"text","value":" is 1 if you own this asset"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"lockHeight"}]},{"type":"text","value":" last block when asset emission turned to/from 0."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"refreshHeight"}]},{"type":"text","value":" block at which asset information has been received. Please note, that all returned fields are valid only for this and previous blocks. In next blocks emission might change, asset become unregistered &c. Use "},{"type":"element","tag":"a","props":{"href":"#tx_asset_info"},"children":[{"type":"text","value":"tx_asset_info"}]},{"type":"text","value":" to retrieve the most recent info."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"metadata_kv"}]},{"type":"text","value":" true if metadata was parsed successfully as key=value pairs"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"metadata_pairs"}]},{"type":"text","value":" present only if "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"metadata_kv"}]},{"type":"text","value":" is true, provides actual parsed key=value pairs"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"metadata_std_min"}]},{"type":"text","value":" true if metadata is k=v pairs and minimal necessary pairs are present, i.e. N(Name), UN(Unit Name), SN(Short Name), NTHUN (Smallest Unit Name)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"metadata_std"}]},{"type":"text","value":" true if metadata is k=v pairs and fully adheres to the "},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/wiki/Asset-Descriptor-v1.0","rel":["nofollow"]},"children":[{"type":"text","value":"Asset Descriptor Specification"}]}]}]},{"type":"element","tag":"h2","props":{"id":"generate_tx_id"},"children":[{"type":"text","value":"generate_tx_id"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Generates ID for a transaction."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 2,\n    \"method\":\"generate_tx_id\"\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 2,\n    \"method\":\"generate_tx_id\"\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 2,\n    \"result\":\"10c4b760c842433cb58339a0fafef3db\"\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 2,\n    \"result\":\"10c4b760c842433cb58339a0fafef3db\"\n}\n"}]}]},{"type":"element","tag":"h2","props":{"id":"export_payment_proof"},"children":[{"type":"text","value":"export_payment_proof"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Exports payment proof for given "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"txId"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"method\": \"export_payment_proof\", \n    \"params\":\n    {\n        \"txId\" : \"a13525181c0d45b0a4c5c1a697c8a7b8\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"method\": \"export_payment_proof\", \n    \"params\":\n    {\n        \"txId\" : \"a13525181c0d45b0a4c5c1a697c8a7b8\"\n    }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"result\": \n    {\n        \"payment_proof\": \"8009f28991ef543253c8b6a2caf15cf99e23fb9c2b4ca30dc463c8ceb354d7979e80ef7d4255dd5e885200648abe5826d8e0ba0157d3e8cf9c42dcc8258b036986e50400371789ee82afc25ee29c9c57bcb1018b725a3a94c0ceb1fa7984ea13de4982553e0d78d925a362982182a971e654857b8e407e7ad2e9cb72b2b8228812f8ec50435351000c94e2c85996e9527d9b0c90a1843205a7ec8f99fa534083e5f1d055d9f53894\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"result\": \n    {\n        \"payment_proof\": \"8009f28991ef543253c8b6a2caf15cf99e23fb9c2b4ca30dc463c8ceb354d7979e80ef7d4255dd5e885200648abe5826d8e0ba0157d3e8cf9c42dcc8258b036986e50400371789ee82afc25ee29c9c57bcb1018b725a3a94c0ceb1fa7984ea13de4982553e0d78d925a362982182a971e654857b8e407e7ad2e9cb72b2b8228812f8ec50435351000c94e2c85996e9527d9b0c90a1843205a7ec8f99fa534083e5f1d055d9f53894\"\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"payment_proof"}]},{"type":"text","value":" is a hex-encoded byte buffer which contains information about sender, receiver, amount and kernel, signed with receiver's private key. This info could be unpacked and verified using "},{"type":"element","tag":"a","props":{"href":"#verify_payment_proof"},"children":[{"type":"text","value":"verify_payment_proof"}]},{"type":"text","value":" method by the third party. Receiver creates a payment proof in order give receiver an ability to proof that actual payment was made. Sender does not sign transaction if receiver does not provide him this evidence."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"N.B."}]},{"type":"text","value":" Payment proofs for asset transaction are supported starting from v5.0. These proofs cannot be verified by earlier clients/APIs versions. Regular BEAM payment proofs generated by the latest clients/APIs still would be accepted by earlier versions of clients/APIs."}]},{"type":"element","tag":"h2","props":{"id":"verify_payment_proof"},"children":[{"type":"text","value":"verify_payment_proof"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Verifies "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"payment_proof"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"method\":\"verify_payment_proof\", \n    \"params\":\n    {\n        \"payment_proof\" : \"8009f28991ef543253c8b6a2caf15cf99e23fb9c2b4ca30dc463c8ceb354d7979e80ef7d4255dd5e885200648abe5826d8e0ba0157d3e8cf9c42dcc8258b036986e50400371789ee82afc25ee29c9c57bcb1018b725a3a94c0ceb1fa7984ea13de4982553e0d78d925a362982182a971e654857b8e407e7ad2e9cb72b2b8228812f8ec50435351000c94e2c85996e9527d9b0c90a1843205a7ec8f99fa534083e5f1d055d9f53894\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"method\":\"verify_payment_proof\", \n    \"params\":\n    {\n        \"payment_proof\" : \"8009f28991ef543253c8b6a2caf15cf99e23fb9c2b4ca30dc463c8ceb354d7979e80ef7d4255dd5e885200648abe5826d8e0ba0157d3e8cf9c42dcc8258b036986e50400371789ee82afc25ee29c9c57bcb1018b725a3a94c0ceb1fa7984ea13de4982553e0d78d925a362982182a971e654857b8e407e7ad2e9cb72b2b8228812f8ec50435351000c94e2c85996e9527d9b0c90a1843205a7ec8f99fa534083e5f1d055d9f53894\"\n    }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"result\": \n    {\n        \"is_valid\": true,\n        \"asset_id\": 0,\n        \"sender\":   \"9f28991ef543253c8b6a2caf15cf99e23fb9c2b4ca30dc463c8ceb354d7979e\",\n        \"receiver\": \"ef7d4255dd5e885200648abe5826d8e0ba0157d3e8cf9c42dcc8258b036986e5\",\n        \"amount\":   2300000000,\n        \"kernel\":   \"ee82afc25ee29c9c57bcb1018b725a3a94c0ceb1fa7984ea13de4982553e0d78\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"result\": \n    {\n        \"is_valid\": true,\n        \"asset_id\": 0,\n        \"sender\":   \"9f28991ef543253c8b6a2caf15cf99e23fb9c2b4ca30dc463c8ceb354d7979e\",\n        \"receiver\": \"ef7d4255dd5e885200648abe5826d8e0ba0157d3e8cf9c42dcc8258b036986e5\",\n        \"amount\":   2300000000,\n        \"kernel\":   \"ee82afc25ee29c9c57bcb1018b725a3a94c0ceb1fa7984ea13de4982553e0d78\"\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"is_valid"}]},{"type":"text","value":" true if signature is valid,"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"sender"}]},{"type":"text","value":" sender's SBBS address"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"receiver"}]},{"type":"text","value":" is a receiver's SBBS address, is it is used to verify the signature"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"amount"}]},{"type":"text","value":" amount sent by the transaction in groth"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_id"}]},{"type":"text","value":" asset id of the transaction, 0 for BEAM. Returned starting from v5.0"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"kernel"}]},{"type":"text","value":" id of the kernel of this transaction"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"N.B."}]},{"type":"text","value":" v5.0+ APIs accept proofs generated by older versions."}]},{"type":"element","tag":"h2","props":{"id":"invoke_contract"},"children":[{"type":"text","value":"invoke_contract"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Available from v6.0, can be used after Fork3."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Invokes application shader. Only application/wallet side shaders are accepted. Use CLI to call a contract shader."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\": \"2.0\", \n    \"id\": 2,\n    \"method\": \"invoke_contract\", \n    \"params\":\n    {\n        \"contract\": [123, 123, 123],\n        \"args\": \"role=manager,action=view\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\": \"2.0\", \n    \"id\": 2,\n    \"method\": \"invoke_contract\", \n    \"params\":\n    {\n        \"contract\": [123, 123, 123],\n        \"args\": \"role=manager,action=view\"\n    }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"OR"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\": \"2.0\", \n    \"id\": 2,\n    \"method\": \"invoke_contract\", \n    \"params\":\n    {\n        \"contract_file\": \"....\",\n        \"args\": \"role=manager,action=view\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\": \"2.0\", \n    \"id\": 2,\n    \"method\": \"invoke_contract\", \n    \"params\":\n    {\n        \"contract_file\": \"....\",\n        \"args\": \"role=manager,action=view\"\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"contract"}]},{"type":"text","value":" contract code as raw bytes array, optional."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"contract_file"}]},{"type":"text","value":" file name to read contract code from, optional. Absolute or relative to the executable CWD."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"args"}]},{"type":"text","value":" contract arguments, optional. Depends on the called shader. Consult shader-specific docs for details."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"create_tx"}]},{"type":"text","value":" bool, pass "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"true"}]},{"type":"text","value":" create transaction automatically if contract wants it and return "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"txid"}]},{"type":"text","value":". Pass false to avoid transaction creation, get raw tx data that can be passed to "},{"type":"element","tag":"a","props":{"href":"#process_invoke_data"},"children":[{"type":"text","value":"process_invoke_data"}]},{"type":"text","value":" later. By default is "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"true"}]},{"type":"text","value":"."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"contract"}]},{"type":"text","value":" parameter always takes precedence over the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"contract_file"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n  \"id\": 1236,\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"output\": \"{\\\"contracts\\\": [{\\\"cid\\\": \\\"2b105519ee7e170d92abffbc1eb5426d4e20910af2f54bcee43eb84c74dcfa4b\\\",\\\"Height\\\": 27004},{\\\"cid\\\": \n               \\\"55df189ac5c1f9b982fa34fb8050f005c331203023816ddbb2d641a96a3fcb2a\\\",\\\"Height\\\": 27001},{\\\"cid\\\": \n               \\\"6add645863c29d9dc43ab9987af870cb91fd0dfb4e26ae09ca97ac8ff5372f6e\\\",\\\"Height\\\": 532}]}\"\n  }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n  \"id\": 1236,\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"output\": \"{\\\"contracts\\\": [{\\\"cid\\\": \\\"2b105519ee7e170d92abffbc1eb5426d4e20910af2f54bcee43eb84c74dcfa4b\\\",\\\"Height\\\": 27004},{\\\"cid\\\": \n               \\\"55df189ac5c1f9b982fa34fb8050f005c331203023816ddbb2d641a96a3fcb2a\\\",\\\"Height\\\": 27001},{\\\"cid\\\": \n               \\\"6add645863c29d9dc43ab9987af870cb91fd0dfb4e26ae09ca97ac8ff5372f6e\\\",\\\"Height\\\": 532}]}\"\n  }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"output"}]},{"type":"text","value":" contract output. Depends on the called shader. Can be empty"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"txid"}]},{"type":"text","value":" transaction created by contract (if any)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"raw_data"}]},{"type":"text","value":" raw data returned by the contract based on which transaction can be created using "},{"type":"element","tag":"a","props":{"href":"#process_invoke_data"},"children":[{"type":"text","value":"process_invoke_data"}]}]}]},{"type":"element","tag":"h3","props":{"id":"shader-errors"},"children":[{"type":"text","value":"Shader Errors"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Please notice that API returns errors only if there is an API error (no shader code, parse error &c.). If there was an error inside the shader itself API call would be successful and shader output should be checked. For example:"}]},{"type":"element","tag":"h3","props":{"id":"code-caching"},"children":[{"type":"text","value":"Code caching"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"If there was an invoke_shader before "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"contract"}]},{"type":"text","value":"/"},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"contract_file"}]},{"type":"text","value":" can be omitted. In this case contract code from previous call would be used. In case of wallet_api code caching works on per-connection level. In case of applications caching works on per-application level."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1236,\n    \"method\": \"invoke_contract\",\n    \"params\": {\n        \"contract_file\": \"./faucetManager.wasm\",\n        \"args\": \"role=manager\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1236,\n    \"method\": \"invoke_contract\",\n    \"params\": {\n        \"contract_file\": \"./faucetManager.wasm\",\n        \"args\": \"role=manager\"\n    }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n  \"id\": 1236,\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"output\": \"{\\\"error\\\": \\\"Action not specified\\\"}\"\n  }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n  \"id\": 1236,\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"output\": \"{\\\"error\\\": \\\"Action not specified\\\"}\"\n  }\n}\n"}]}]},{"type":"element","tag":"h3","props":{"id":"requests-queue"},"children":[{"type":"text","value":"Requests queue"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Before v6.1 it was not allowed to make the next contract call before the previous one is completed. As per v6.1 priority queue is added for "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"invoke_contract"}]},{"type":"text","value":" requests. If previous call is not completed new "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"invoke_shader"}]},{"type":"text","value":" call would be added to the queue and executed later. New parameters were added to control the queue:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"priority"}]},{"type":"text","value":" - integer, 0 by default. Calls with higher priority would be placed on top of the queue"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"unique"}]},{"type":"text","value":" - integer, 0 by default. If there is already an "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"invoke_contract"}]},{"type":"text","value":" call with the same "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"unique"}]},{"type":"text","value":" queued or being executed the new call will not be added to the queue. This might be necessary to avoid queue congestion with multiple status while previous requests are still pending. Value of 0 is ignored and doesn't trigger call omission."}]}]},{"type":"element","tag":"h2","props":{"id":"process_invoke_data"},"children":[{"type":"text","value":"process_invoke_data"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Creates transaction requested by a contract"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1236,\n    \"method\": \"process_invoke_data\",\n    \"params\": {\n        \"data\": [123, 123, 123]\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1236,\n    \"method\": \"process_invoke_data\",\n    \"params\": {\n        \"data\": [123, 123, 123]\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"data"}]},{"type":"text","value":" raw invoke data bytes array returned by "},{"type":"element","tag":"a","props":{"href":"#invoke_contract"},"children":[{"type":"text","value":"invoke_contract"}]},{"type":"text","value":", mandatory"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n  \"id\": 1236,\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"txid\": \"...\"\n  }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n  \"id\": 1236,\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"txid\": \"...\"\n  }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"txid"}]},{"type":"text","value":" contract transaction id created as a result of the call"}]}]},{"type":"element","tag":"h2","props":{"id":"calc_change"},"children":[{"type":"text","value":"calc_change"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Calculates change for given "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"amount"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"method\":\"calc_change\", \n    \"params\":\n    {\n        \"amount\" : 1234,\n        \"asset_id\": 2,\n        \"fee\": 10000,\n        \"is_push_transaction\": true\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"method\":\"calc_change\", \n    \"params\":\n    {\n        \"amount\" : 1234,\n        \"asset_id\": 2,\n        \"fee\": 10000,\n        \"is_push_transaction\": true\n    }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"result\":\n    {\n        \"asset_change\": 12,\n        \"asset_change_str\": \"12\",\n        \"change\": 12,\n        \"change_str\": \"12\",\n        \"explicit_fee\": 1100000,\n        \"explicit_fee_str\": \"1100000\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"result\":\n    {\n        \"asset_change\": 12,\n        \"asset_change_str\": \"12\",\n        \"change\": 12,\n        \"change_str\": \"12\",\n        \"explicit_fee\": 1100000,\n        \"explicit_fee_str\": \"1100000\"\n    }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"where"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"amount"}]},{"type":"text","value":" is a requested amount we are going to send"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_id"}]},{"type":"text","value":" optional asset id of the requested amount. Default is 0 (BEAM). This method can be used for non-BEAM coins even if assets are not enabled."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"fee"}]},{"type":"text","value":" explicit fee in GROTHs chosen by the user"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_change"}]},{"type":"text","value":" change amount for requested "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_id"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"change"}]},{"type":"text","value":" change in for BEAM. "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_change"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"change"}]},{"type":"text","value":" are equal if "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_id == 0"}]},{"type":"text","value":", i.e. BEAM"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"explicit_fee"}]},{"type":"text","value":" the fee which should be used"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"is_push_transaction"}]},{"type":"text","value":" "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"true"}]},{"type":"text","value":" if we are going to push transaction output into the shielded pool."}]}]},{"type":"element","tag":"h2","props":{"id":"block_details"},"children":[{"type":"text","value":"block_details"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Returns block header from blockchain"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\": \"2.0\", \n    \"id\": 2,\n    \"method\": \"block_details\", \n    \"params\":\n    {\n        \"height\": 200\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\": \"2.0\", \n    \"id\": 2,\n    \"method\": \"block_details\", \n    \"params\":\n    {\n        \"height\": 200\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"height"}]},{"type":"text","value":" height of block."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"result\":\n    {\n        \"block_hash\": \"7aec20e5b56706d57a4dca1df4a4d3104dbdbf8d6005499845558b7a32694d02\",\n        \"chainwork\": \"000000000000000000000000000000000000000000000000000000c503b09ac0\",\n        \"definition\": \"0d3f4e63743760c6397d76086e1cc0ebe749c121206c8150738dc84edcd30092\",\n        \"difficulty\": 118.4594497680664,\n        \"height\": 200,\n        \"kernels\": \"705cdfa154eec35e4b4b0e2163ff9c81f8f035641ee4b0b95c3f3c5b0f170ffe\",\n        \"packed_difficulty\": 114939514,\n        \"pow\": \"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004f04638c1f4cee1b7ad6d906\",\n        \"previous_block\": \"d195cc69fbd2b402cc33ecb303f5391f0010f34ee059f30b908ed10f0fe5a255\",\n        \"rules_hash\": \"340bbeabc390f481df1f84aedf0b679c1c7ed1f0e28d4340c9c49b4c41611f85\",\n        \"timestamp\": 1619598150\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 4,\n    \"result\":\n    {\n        \"block_hash\": \"7aec20e5b56706d57a4dca1df4a4d3104dbdbf8d6005499845558b7a32694d02\",\n        \"chainwork\": \"000000000000000000000000000000000000000000000000000000c503b09ac0\",\n        \"definition\": \"0d3f4e63743760c6397d76086e1cc0ebe749c121206c8150738dc84edcd30092\",\n        \"difficulty\": 118.4594497680664,\n        \"height\": 200,\n        \"kernels\": \"705cdfa154eec35e4b4b0e2163ff9c81f8f035641ee4b0b95c3f3c5b0f170ffe\",\n        \"packed_difficulty\": 114939514,\n        \"pow\": \"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004f04638c1f4cee1b7ad6d906\",\n        \"previous_block\": \"d195cc69fbd2b402cc33ecb303f5391f0010f34ee059f30b908ed10f0fe5a255\",\n        \"rules_hash\": \"340bbeabc390f481df1f84aedf0b679c1c7ed1f0e28d4340c9c49b4c41611f85\",\n        \"timestamp\": 1619598150\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"block_hash"}]},{"type":"text","value":" is a block hash"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"chainwork"}]},{"type":"text","value":" is a chainwork"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"definition"}]},{"type":"text","value":" is a definition"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"difficulty"}]},{"type":"text","value":" is a difficulty"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"height"}]},{"type":"text","value":" is a block height"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"kernels"}]},{"type":"text","value":" is a kernels"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"packed_difficulty"}]},{"type":"text","value":" is a packed difficulty"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"pow"}]},{"type":"text","value":" is a pow"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"previous_block"}]},{"type":"text","value":" is hash of previous block"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"rules_hash"}]},{"type":"text","value":" is a rules hash"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"timestamp"}]},{"type":"text","value":" is a timestamp"}]}]},{"type":"element","tag":"h2","props":{"id":"get_version"},"children":[{"type":"text","value":"get_version"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Returns version info"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\": \"2.0\", \n    \"id\": 1,\n    \"method\": \"get_version\"\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\": \"2.0\", \n    \"id\": 1,\n    \"method\": \"get_version\"\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n  \"id\": 1,\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"api_version\": \"6.1\",\n    \"api_version_major\": 6,\n    \"api_version_minor\": 1,\n    \"beam_branch_name\": \"master\",\n    \"beam_commit_hash\": \"f7dcfab5341e84a58918f2fde0fc2be9c09264eb\",\n    \"beam_version\": \"6.1.11462\",\n    \"beam_version_major\": 6,\n    \"beam_version_minor\": 1,\n    \"beam_version_rev\": 11462\n  }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n  \"id\": 1,\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"api_version\": \"6.1\",\n    \"api_version_major\": 6,\n    \"api_version_minor\": 1,\n    \"beam_branch_name\": \"master\",\n    \"beam_commit_hash\": \"f7dcfab5341e84a58918f2fde0fc2be9c09264eb\",\n    \"beam_version\": \"6.1.11462\",\n    \"beam_version_major\": 6,\n    \"beam_version_minor\": 1,\n    \"beam_version_rev\": 11462\n  }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"api_xxx"}]},{"type":"text","value":" API version info"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"beam_xxx"}]},{"type":"text","value":" BEAM version info on top of which API is built ("},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam","rel":["nofollow"]},"children":[{"type":"text","value":"https://github.com/BeamMW/beam"}]},{"type":"text","value":")"}]}]},{"type":"element","tag":"h2","props":{"id":"ipfs_add"},"children":[{"type":"text","value":"ipfs_add"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Add data to IPFS local node and pin it. Action is automatically cancelled on API restart."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"method\": \"ipfs_add\", \n    \"params\":\n    {\n        \"data\" : [1, 2, 3],\n        \"pin\"  : true,\n        \"timeout\": 5000\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"method\": \"ipfs_add\", \n    \"params\":\n    {\n        \"data\" : [1, 2, 3],\n        \"pin\"  : true,\n        \"timeout\": 5000\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"data"}]},{"type":"text","value":" raw uint8 bytes array to store in IPFS"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"pin"}]},{"type":"text","value":" optional bool, if "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"true"}]},{"type":"text","value":" data would also be pinned to the local IPFS node. Default is "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"true"}]},{"type":"text","value":"."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"timeout"}]},{"type":"text","value":" timeout in milliseconds. By default method doesn't timeout"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"result\" : \n    {\n        \"hash\" : \"QmWWQSuPMS6aXCbZKpEjPHPUZN2NjB3YrhJTHsV4X3vb2t\",\n        \"pinned\": true\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"result\" : \n    {\n        \"hash\" : \"QmWWQSuPMS6aXCbZKpEjPHPUZN2NjB3YrhJTHsV4X3vb2t\",\n        \"pinned\": true\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"hash"}]},{"type":"text","value":" IPFS hash of the added data"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"pinned"}]},{"type":"text","value":" bool flag that indicates if data has been pinned or just added"}]}]},{"type":"element","tag":"h2","props":{"id":"ipfs_hash"},"children":[{"type":"text","value":"ipfs_hash"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Calculate IPFS hash (CID) of the data"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"method\": \"ipfs_hash\", \n    \"params\":\n    {\n        \"data\" : [1, 2, 3],\n        \"timeout\": 5000\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"method\": \"ipfs_hash\", \n    \"params\":\n    {\n        \"data\" : [1, 2, 3],\n        \"timeout\": 5000\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"data"}]},{"type":"text","value":" raw uint8 bytes to calculate hash of"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"timeout"}]},{"type":"text","value":" timeout in milliseconds. By default method doesn't timeout"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"result\" : \n    {\n        \"hash\" : \"QmWWQSuPMS6aXCbZKpEjPHPUZN2NjB3YrhJTHsV4X3vb2t\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"result\" : \n    {\n        \"hash\" : \"QmWWQSuPMS6aXCbZKpEjPHPUZN2NjB3YrhJTHsV4X3vb2t\"\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"hash"}]},{"type":"text","value":" IPFS hash of the data"}]}]},{"type":"element","tag":"h2","props":{"id":"ipfs_get"},"children":[{"type":"text","value":"ipfs_get"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Get data from IPFS by hash. Action is automatically cancelled on API restart. May take a lot of time if data is not present on the local node."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"method\": \"ipfs_get\", \n    \"params\":\n    {\n        \"hash\" : \"QmWWQSuPMS6aXCbZKpEjPHPUZN2NjB3YrhJTHsV4X3vb2t\",\n        \"timeout\": 5000\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"method\": \"ipfs_get\", \n    \"params\":\n    {\n        \"hash\" : \"QmWWQSuPMS6aXCbZKpEjPHPUZN2NjB3YrhJTHsV4X3vb2t\",\n        \"timeout\": 5000\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"hash"}]},{"type":"text","value":" IPFS has of the data to get"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"timeout"}]},{"type":"text","value":" timeout in milliseconds. By default method doesn't timeout"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"result\" : \n    {\n        \"hash\" : \"QmWWQSuPMS6aXCbZKpEjPHPUZN2NjB3YrhJTHsV4X3vb2t\",\n        \"data\" : [1, 2, 3]\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"result\" : \n    {\n        \"hash\" : \"QmWWQSuPMS6aXCbZKpEjPHPUZN2NjB3YrhJTHsV4X3vb2t\",\n        \"data\" : [1, 2, 3]\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"hash"}]},{"type":"text","value":" IPFS hash of the data"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"data"}]},{"type":"text","value":" actual data as uint8 bytes array"}]}]},{"type":"element","tag":"h2","props":{"id":"ipfs_pin"},"children":[{"type":"text","value":"ipfs_pin"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Pin data to the local node. If data is not stored in the local node it is discovered and downloaded ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"ipfs_get"}]},{"type":"text","value":"). Action is automatically cancelled at API restart. May take a lot of time."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"method\": \"ipfs_pin\", \n    \"params\":\n    {\n        \"hash\" : \"QmWWQSuPMS6aXCbZKpEjPHPUZN2NjB3YrhJTHsV4X3vb2t\",\n        \"timeout\": 5000\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"method\": \"ipfs_pin\", \n    \"params\":\n    {\n        \"hash\" : \"QmWWQSuPMS6aXCbZKpEjPHPUZN2NjB3YrhJTHsV4X3vb2t\",\n        \"timeout\": 5000\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"hash"}]},{"type":"text","value":" IPFS has of the data to pin"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"timeout"}]},{"type":"text","value":" timeout in milliseconds. By default method doesn't timeout"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"result\" : \n    {\n        \"hash\" : \"QmWWQSuPMS6aXCbZKpEjPHPUZN2NjB3YrhJTHsV4X3vb2t\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"result\" : \n    {\n        \"hash\" : \"QmWWQSuPMS6aXCbZKpEjPHPUZN2NjB3YrhJTHsV4X3vb2t\"\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"hash"}]},{"type":"text","value":" IPFS hash of the pinned data"}]}]},{"type":"element","tag":"h2","props":{"id":"ipfs_unpin"},"children":[{"type":"text","value":"ipfs_unpin"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Unpin data from the local node. Data is not deleted and will be available via "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"ipfs_get"}]},{"type":"text","value":" until garbage collected."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"method\": \"ipfs_unpin\", \n    \"params\":\n    {\n        \"hash\" : \"QmWWQSuPMS6aXCbZKpEjPHPUZN2NjB3YrhJTHsV4X3vb2t\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"method\": \"ipfs_unpin\", \n    \"params\":\n    {\n        \"hash\" : \"QmWWQSuPMS6aXCbZKpEjPHPUZN2NjB3YrhJTHsV4X3vb2t\"\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"hash"}]},{"type":"text","value":" IPFS has of the data to unpin"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"result\" : \n    {\n        \"hash\" : \"QmWWQSuPMS6aXCbZKpEjPHPUZN2NjB3YrhJTHsV4X3vb2t\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"result\" : \n    {\n        \"hash\" : \"QmWWQSuPMS6aXCbZKpEjPHPUZN2NjB3YrhJTHsV4X3vb2t\"\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"hash"}]},{"type":"text","value":" IPFS hash of the unpinned data"}]}]},{"type":"element","tag":"h2","props":{"id":"ipfs_gc"},"children":[{"type":"text","value":"ipfs_gc"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Garbage collect IPFS storage, i.e. delete unpinned data until storage has at least 10% of free space (default settings). May take a lot of time. In desktop client gc is run automatically every hour."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"method\": \"ipfs_gc\", \n    \"params\":\n    {\n        \"timeout\" : 60000\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"method\": \"ipfs_gc\", \n    \"params\":\n    {\n        \"timeout\" : 60000\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"timeout"}]},{"type":"text","value":" timeout in milliseconds. By default method doesn't timeout"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"result\" : \n    {\n        \"result\" : true\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"result\" : \n    {\n        \"result\" : true\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"result"}]},{"type":"text","value":" success flag"}]}]},{"type":"element","tag":"h2","props":{"id":"ev_subunsub"},"children":[{"type":"text","value":"ev_subunsub"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Subscribe/unsubscribe to API events."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\": \"2.0\", \n    \"id\": 1,\n    \"method\": \"ev_subunsub\",\n    \"params\": {\n        \"ev_sync_progress\": true,\n        \"ev_system_state\": true,\n        \"ev_assets_changed\": true,\n        \"ev_addrs_changed\": true,\n        \"ev_utxos_changed\": true,\n        \"ev_txs_changed\": true\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\": \"2.0\", \n    \"id\": 1,\n    \"method\": \"ev_subunsub\",\n    \"params\": {\n        \"ev_sync_progress\": true,\n        \"ev_system_state\": true,\n        \"ev_assets_changed\": true,\n        \"ev_addrs_changed\": true,\n        \"ev_utxos_changed\": true,\n        \"ev_txs_changed\": true\n    }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n  \"id\": 1,\n  \"jsonrpc\": \"2.0\",\n  \"result\": true\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n  \"id\": 1,\n  \"jsonrpc\": \"2.0\",\n  \"result\": true\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"ev_xxxx"}]},{"type":"text","value":" corresponding event name, optional, bool. True subscribes to the event, false unsubscribes. All "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"ev_xxxx"}]},{"type":"text","value":" paramaters are optional. If event is not specified its subscription state remains unchanged. Immediately after subscription corresponding event is generated providing the latest state."}]}]},{"type":"element","tag":"h2","props":{"id":"ev_sync_progress"},"children":[{"type":"text","value":"ev_sync_progress"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Event is generated while wallet is being synced with the blockchain. Let's consider the following situation:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"current wallet height is 105"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"block 106 has been just mined"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In this case the following sequence of events would be generated:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"1. <--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n  \"id\": \"ev_sync_progress\",\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"current_height\": 105,\n    \"current_state_hash\": \"76de9b9bcbc1b1a4775d54f2b98c3edc222f5a86698209200e459043fe218a29\",\n    \"current_state_timestamp\": 1625146903,\n    \"sync_requests_done\": 0,\n    \"sync_requests_total\": 2,\n    \"is_in_sync\": true,\n    \"prev_state_hash\": \"3a2a3bd55615d3de86b86c920f715ad47973be7dbc2fde2d4c39b937e96177e1\",\n    \"tip_height\": 106,\n    \"tip_prev_state_hash\": \"76de9b9bcbc1b1a4775d54f2b98c3edc222f5a86698209200e459043fe218a29\",\n    \"tip_state_hash\": \"7bb40b96ee4606c3e8f085aa633b66c14f041178142eb1077521621cde47e3b1\",\n    \"tip_state_timestamp\": 1625146951\n  }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n  \"id\": \"ev_sync_progress\",\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"current_height\": 105,\n    \"current_state_hash\": \"76de9b9bcbc1b1a4775d54f2b98c3edc222f5a86698209200e459043fe218a29\",\n    \"current_state_timestamp\": 1625146903,\n    \"sync_requests_done\": 0,\n    \"sync_requests_total\": 2,\n    \"is_in_sync\": true,\n    \"prev_state_hash\": \"3a2a3bd55615d3de86b86c920f715ad47973be7dbc2fde2d4c39b937e96177e1\",\n    \"tip_height\": 106,\n    \"tip_prev_state_hash\": \"76de9b9bcbc1b1a4775d54f2b98c3edc222f5a86698209200e459043fe218a29\",\n    \"tip_state_hash\": \"7bb40b96ee4606c3e8f085aa633b66c14f041178142eb1077521621cde47e3b1\",\n    \"tip_state_timestamp\": 1625146951\n  }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In event 1 API tells that there is 1 new block to sync ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"tip_height"}]},{"type":"text","value":" - "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"current_height"}]},{"type":"text","value":" is 1) and nothing has been yet done ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"sync_requests_done"}]},{"type":"text","value":" is 0). Current height is 105 ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"current_height"}]},{"type":"text","value":"), target height is 106 ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"tip_height"}]},{"type":"text","value":") and our wallet is still in a 'synce tolerance range' ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"is_in_sync"}]},{"type":"text","value":" is true). If "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"is_in_sync"}]},{"type":"text","value":" is false all the requested/pending transaction would be delayed until the wallet is synced."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"2. <--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n  \"id\": \"ev_sync_progress\",\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"current_height\": 105,\n    \"current_state_hash\": \"76de9b9bcbc1b1a4775d54f2b98c3edc222f5a86698209200e459043fe218a29\",\n    \"current_state_timestamp\": 1625146903,\n    \"sync_requests_done\": 1,\n    \"sync_requests_total\": 2,\n    \"is_in_sync\": true,\n    \"prev_state_hash\": \"3a2a3bd55615d3de86b86c920f715ad47973be7dbc2fde2d4c39b937e96177e1\",\n    \"tip_height\": 106,\n    \"tip_prev_state_hash\": \"76de9b9bcbc1b1a4775d54f2b98c3edc222f5a86698209200e459043fe218a29\",\n    \"tip_state_hash\": \"7bb40b96ee4606c3e8f085aa633b66c14f041178142eb1077521621cde47e3b1\",\n    \"tip_state_timestamp\": 1625146951\n  }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n  \"id\": \"ev_sync_progress\",\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"current_height\": 105,\n    \"current_state_hash\": \"76de9b9bcbc1b1a4775d54f2b98c3edc222f5a86698209200e459043fe218a29\",\n    \"current_state_timestamp\": 1625146903,\n    \"sync_requests_done\": 1,\n    \"sync_requests_total\": 2,\n    \"is_in_sync\": true,\n    \"prev_state_hash\": \"3a2a3bd55615d3de86b86c920f715ad47973be7dbc2fde2d4c39b937e96177e1\",\n    \"tip_height\": 106,\n    \"tip_prev_state_hash\": \"76de9b9bcbc1b1a4775d54f2b98c3edc222f5a86698209200e459043fe218a29\",\n    \"tip_state_hash\": \"7bb40b96ee4606c3e8f085aa633b66c14f041178142eb1077521621cde47e3b1\",\n    \"tip_state_timestamp\": 1625146951\n  }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In event 2 API tells that 1 sync request has been processed ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"sync_requests_done"}]},{"type":"text","value":" is 1). It can be block body downloaded, utxo received &c. Since "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"sync_requests_total"}]},{"type":"text","value":" is 2 not everything is received, some requests are still pending."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"3. <--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n  \"id\": \"ev_sync_progress\",\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"current_height\": 105,\n    \"current_state_hash\": \"76de9b9bcbc1b1a4775d54f2b98c3edc222f5a86698209200e459043fe218a29\",\n    \"current_state_timestamp\": 1625146903,\n    \"sync_requests_done\": 2,\n    \"sync_requests_total\": 2,\n    \"is_in_sync\": true,\n    \"prev_state_hash\": \"3a2a3bd55615d3de86b86c920f715ad47973be7dbc2fde2d4c39b937e96177e1\",\n    \"tip_height\": 106,\n    \"tip_prev_state_hash\": \"76de9b9bcbc1b1a4775d54f2b98c3edc222f5a86698209200e459043fe218a29\",\n    \"tip_state_hash\": \"7bb40b96ee4606c3e8f085aa633b66c14f041178142eb1077521621cde47e3b1\",\n    \"tip_state_timestamp\": 1625146951\n  }\n}\n\nIn event 3 API tells that 2 sync events have been receive (`sync_requests_done` is 2) and since `sync_requests_total` is 2 too we can conclude that everything is downloaded now though not yet processed and wallet state has not yet moved to the next block (current_height is still not changed and is 105).\n\n`4. <--`\n```json\n{\n  \"id\": \"ev_sync_progress\",\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"current_height\": 106,\n    \"current_state_hash\": \"7bb40b96ee4606c3e8f085aa633b66c14f041178142eb1077521621cde47e3b1\",\n    \"current_state_timestamp\": 1625146903,\n    \"sync_requests_done\": 2,\n    \"sync_requests_total\": 2,\n    \"is_in_sync\": true,\n    \"prev_state_hash\": \"76de9b9bcbc1b1a4775d54f2b98c3edc222f5a86698209200e459043fe218a29\",\n    \"tip_height\": 106,\n    \"tip_prev_state_hash\": \"76de9b9bcbc1b1a4775d54f2b98c3edc222f5a86698209200e459043fe218a29\",\n    \"tip_state_hash\": \"7bb40b96ee4606c3e8f085aa633b66c14f041178142eb1077521621cde47e3b1\",\n    \"tip_state_timestamp\": 1625146951\n  }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n  \"id\": \"ev_sync_progress\",\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"current_height\": 105,\n    \"current_state_hash\": \"76de9b9bcbc1b1a4775d54f2b98c3edc222f5a86698209200e459043fe218a29\",\n    \"current_state_timestamp\": 1625146903,\n    \"sync_requests_done\": 2,\n    \"sync_requests_total\": 2,\n    \"is_in_sync\": true,\n    \"prev_state_hash\": \"3a2a3bd55615d3de86b86c920f715ad47973be7dbc2fde2d4c39b937e96177e1\",\n    \"tip_height\": 106,\n    \"tip_prev_state_hash\": \"76de9b9bcbc1b1a4775d54f2b98c3edc222f5a86698209200e459043fe218a29\",\n    \"tip_state_hash\": \"7bb40b96ee4606c3e8f085aa633b66c14f041178142eb1077521621cde47e3b1\",\n    \"tip_state_timestamp\": 1625146951\n  }\n}\n\nIn event 3 API tells that 2 sync events have been receive (`sync_requests_done` is 2) and since `sync_requests_total` is 2 too we can conclude that everything is downloaded now though not yet processed and wallet state has not yet moved to the next block (current_height is still not changed and is 105).\n\n`4. <--`\n```json\n{\n  \"id\": \"ev_sync_progress\",\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"current_height\": 106,\n    \"current_state_hash\": \"7bb40b96ee4606c3e8f085aa633b66c14f041178142eb1077521621cde47e3b1\",\n    \"current_state_timestamp\": 1625146903,\n    \"sync_requests_done\": 2,\n    \"sync_requests_total\": 2,\n    \"is_in_sync\": true,\n    \"prev_state_hash\": \"76de9b9bcbc1b1a4775d54f2b98c3edc222f5a86698209200e459043fe218a29\",\n    \"tip_height\": 106,\n    \"tip_prev_state_hash\": \"76de9b9bcbc1b1a4775d54f2b98c3edc222f5a86698209200e459043fe218a29\",\n    \"tip_state_hash\": \"7bb40b96ee4606c3e8f085aa633b66c14f041178142eb1077521621cde47e3b1\",\n    \"tip_state_timestamp\": 1625146951\n  }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In event 4 API tells that the wallet state is moved to the last tip ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"sync_requests_total"}]},{"type":"text","value":" == "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"sync_requests_done"}]},{"type":"text","value":" == 0 AND "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"tip_state_hash"}]},{"type":"text","value":" == "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"current_state_hash"}]},{"type":"text","value":" AND "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"tip_height"}]},{"type":"text","value":" == "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"current_height"}]},{"type":"text","value":")."}]},{"type":"element","tag":"h2","props":{"id":"ev_system_state"},"children":[{"type":"text","value":"ev_system_state"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Generated when wallet moves to the next state, for example when new block is mined and wallet has acknowledged and processed this fact or when new block is delivered during the sync."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n  \"id\": \"ev_system_state\",\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"current_height\": 113738,\n    \"current_state_hash\": \"4bbf9eb9cc409ce17c49cc7952edfed7583e8636e3e5d84b2034779034cb439c\",\n    \"current_state_timestamp\": 1625663362,\n    \"is_in_sync\": true,\n    \"prev_state_hash\": \"4995999f065eb5f04687fe9a43b93d7e344e99d17f2e2703260904f70aabfbd0\",\n    \"tip_height\": 113738,\n    \"tip_prev_state_hash\": \"4995999f065eb5f04687fe9a43b93d7e344e99d17f2e2703260904f70aabfbd0\",\n    \"tip_state_hash\": \"4bbf9eb9cc409ce17c49cc7952edfed7583e8636e3e5d84b2034779034cb439c\",\n    \"tip_state_timestamp\": 1625663362\n  }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n  \"id\": \"ev_system_state\",\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"current_height\": 113738,\n    \"current_state_hash\": \"4bbf9eb9cc409ce17c49cc7952edfed7583e8636e3e5d84b2034779034cb439c\",\n    \"current_state_timestamp\": 1625663362,\n    \"is_in_sync\": true,\n    \"prev_state_hash\": \"4995999f065eb5f04687fe9a43b93d7e344e99d17f2e2703260904f70aabfbd0\",\n    \"tip_height\": 113738,\n    \"tip_prev_state_hash\": \"4995999f065eb5f04687fe9a43b93d7e344e99d17f2e2703260904f70aabfbd0\",\n    \"tip_state_hash\": \"4bbf9eb9cc409ce17c49cc7952edfed7583e8636e3e5d84b2034779034cb439c\",\n    \"tip_state_timestamp\": 1625663362\n  }\n}\n"}]}]},{"type":"element","tag":"h2","props":{"id":"ev_addrs_changed"},"children":[{"type":"text","value":"ev_addrs_changed"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Event is generated when any address is changed/removed/updated &c."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n  \"id\": \"ev_addrs_changed\",\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n      \"change\": 3,\n      \"change_str\": \"reset\",\n      \"addrs\": [\n          {\n              \"address\": \"8xQnvWwS78RsbXmvV1wm2Spkye76z5FfiZH2zB3Jdw2BgWqUf4MC2StLVYrM4LvrWsMdY24b5hok4XvEoTBmHoaWBcEvr8nWTY259M4DnRJnRBgdNJEqRxenxRZox8DKnSoGiScV31dXLcxoRH2vFPcrxDsMGDAsyekVGz2NBPCwKFwCwTQwJpbhszCzxM843UMWQMxxoHADsTXnQnVW1Uc3quXgJdEr6tQ5dbgGWwYhNHU3f6mLFxNyxvrM7RfFY6LatPxJaC5M9o7Gg6TnpVc82GzVrKGNQoERJ9pFc7f6VM8w9dcn9CaC8yQvGevAnZqNTDEVpxAK81mJ3VFPUjbePWYQBdPQPm8AprTU1p4xhGHpbVaaTH967CJ86jAUXQEUrVq1wn4uPGLivhdnoWCdGujiZfwrfdPeQ698vm7Mh2HpooextAt4nzmSbEbPNtM5aCbeRyVv8BiEZ394WJCQaDRwHx2R3tfsHNCvTctCUy6NsonhmnSwvucY5KN71AtBGmxq8i\",\n              \"category\": \"\",\n              \"comment\": \"\",\n              \"create_time\": 1553174321,\n              \"duration\": 1520,\n              \"expired\": true,\n              \"own\": true,\n              \"own_id\": 16730903,\n              \"own_id_str\": \"16730903\",\n              \"identity\": \"2d8738b0424ad50631e902fab655e7e1795fbb8d92d47c4c8df7336870fcadf5\",\n              \"type\": \"offline\",\n              \"wallet_id\": \"22813f28ae198b1aa28aed3d0dc69a7c75f0a3c8b72c5950c997d0a569e74f90b61\"\n          },\n          {\n              \"address\": \"19e6ce53a137a1aa59ef19538c181acc5cd06cbfc7b985901345328786f8ae300a7\",\n              \"category\": \"\",\n              \"create_time\": 1553174321,\n              \"duration\": 1520,\n              \"expired\": true,\n              \"comment\": \"\",\n              \"own\": true,\n              \"own_id\": 16730903,\n              \"own_id_str\": \"16730903\",\n              \"identity\": \"9d99a7e3d1a6a73fbfa01efe63020135654f7b1561d65c74266fe9db6e80b096\",\n              \"type\": \"regular\",\n              \"wallet_id\": \"19e6ce53a137a1aa59ef19538c181acc5cd06cbfc7b985901345328786f8ae300a7\"\n          }\n      ]\n  }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n  \"id\": \"ev_addrs_changed\",\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n      \"change\": 3,\n      \"change_str\": \"reset\",\n      \"addrs\": [\n          {\n              \"address\": \"8xQnvWwS78RsbXmvV1wm2Spkye76z5FfiZH2zB3Jdw2BgWqUf4MC2StLVYrM4LvrWsMdY24b5hok4XvEoTBmHoaWBcEvr8nWTY259M4DnRJnRBgdNJEqRxenxRZox8DKnSoGiScV31dXLcxoRH2vFPcrxDsMGDAsyekVGz2NBPCwKFwCwTQwJpbhszCzxM843UMWQMxxoHADsTXnQnVW1Uc3quXgJdEr6tQ5dbgGWwYhNHU3f6mLFxNyxvrM7RfFY6LatPxJaC5M9o7Gg6TnpVc82GzVrKGNQoERJ9pFc7f6VM8w9dcn9CaC8yQvGevAnZqNTDEVpxAK81mJ3VFPUjbePWYQBdPQPm8AprTU1p4xhGHpbVaaTH967CJ86jAUXQEUrVq1wn4uPGLivhdnoWCdGujiZfwrfdPeQ698vm7Mh2HpooextAt4nzmSbEbPNtM5aCbeRyVv8BiEZ394WJCQaDRwHx2R3tfsHNCvTctCUy6NsonhmnSwvucY5KN71AtBGmxq8i\",\n              \"category\": \"\",\n              \"comment\": \"\",\n              \"create_time\": 1553174321,\n              \"duration\": 1520,\n              \"expired\": true,\n              \"own\": true,\n              \"own_id\": 16730903,\n              \"own_id_str\": \"16730903\",\n              \"identity\": \"2d8738b0424ad50631e902fab655e7e1795fbb8d92d47c4c8df7336870fcadf5\",\n              \"type\": \"offline\",\n              \"wallet_id\": \"22813f28ae198b1aa28aed3d0dc69a7c75f0a3c8b72c5950c997d0a569e74f90b61\"\n          },\n          {\n              \"address\": \"19e6ce53a137a1aa59ef19538c181acc5cd06cbfc7b985901345328786f8ae300a7\",\n              \"category\": \"\",\n              \"create_time\": 1553174321,\n              \"duration\": 1520,\n              \"expired\": true,\n              \"comment\": \"\",\n              \"own\": true,\n              \"own_id\": 16730903,\n              \"own_id_str\": \"16730903\",\n              \"identity\": \"9d99a7e3d1a6a73fbfa01efe63020135654f7b1561d65c74266fe9db6e80b096\",\n              \"type\": \"regular\",\n              \"wallet_id\": \"19e6ce53a137a1aa59ef19538c181acc5cd06cbfc7b985901345328786f8ae300a7\"\n          }\n      ]\n  }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"change"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"change_str"}]},{"type":"text","value":" - check "},{"type":"element","tag":"a","props":{"href":"#ev_xxx_changed-events"},"children":[{"type":"text","value":"ev_XXX_changed Events"}]},{"type":"text","value":" section for details"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"addrs"}]},{"type":"text","value":" - array of changed addresses"}]}]},{"type":"element","tag":"h2","props":{"id":"ev_assets_changed"},"children":[{"type":"text","value":"ev_assets_changed"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Event is generated when an asset is changed, i.e. metadata refreshed or metadata dropped due to the asset delisting or internal metadata processing error. Note that metadata can be dropped while an asset is still on chain but local metadata becomes invalid, for example in certain situations during rollback. If you have any asset coins in wallet but no valid metadata for a given asset id refresh it using "},{"type":"element","tag":"a","props":{"href":"#tx_asset_info"},"children":[{"type":"text","value":"tx_asset_info"}]},{"type":"text","value":". Metadata is also automatically refreshed during the send/receive/issue/consume operations if necessary."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Metadata dropped:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<-"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n  \"id\": \"ev_assets_changed\",\n  \"jsonrpc\": \"2.0\",\n  \"result\": { \n      \"change\": 1,\n      \"change_str\": \"removed\",\n      \"assets\": [\n         {\"asset_id\": 121}, \n         {\"asset_id\": 122} \n      ]\n  }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n  \"id\": \"ev_assets_changed\",\n  \"jsonrpc\": \"2.0\",\n  \"result\": { \n      \"change\": 1,\n      \"change_str\": \"removed\",\n      \"assets\": [\n         {\"asset_id\": 121}, \n         {\"asset_id\": 122} \n      ]\n  }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"change"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"change_str"}]},{"type":"text","value":" - check "},{"type":"element","tag":"a","props":{"href":"#ev_xxx_changed-events"},"children":[{"type":"text","value":"ev_XXX_changed Events"}]},{"type":"text","value":" section for details"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"assets"}]},{"type":"text","value":" - array of changed assets. In case of the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"removed"}]},{"type":"text","value":" event only asset ids are provided"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Metadata updated:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<-"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"id\": \"ev_assets_changed\",\n    \"jsonrpc\": \"2.0\",\n    \"result\": {\n        \"change\": 3,\n        \"change_str\": \"reset\",\n        \"assets\": [\n           {\n              \"asset_id\": 1,\n              \"emission\": 2000000000,\n              \"emission_str\": \"2000000000\",\n              \"isOwned\": 1,\n              \"lockHeight\": 39,\n              \"metadata\": \"STD:SCH_VER=1;N=YAN Coin;SN=YAN;UN=Yan;NTHUN=Yanik\",\n              \"metadata_kv\": true,\n              \"metadata_pairs\": {\n                 \"N\": \"YAN Coin\",\n                 \"NTHUN\": \"Yanik\",\n                 \"SCH_VER\": \"1\",\n                 \"SN\": \"YAN\",\n                 \"UN\": \"Yan\"\n              },\n              \"metadata_std_min\": true,\n              \"metadata_std\": true,\n              \"ownerId\": \"0ae08a49e018e98177774294107dc033790b87538e54a20e99c6b98f1dbd39ce\",\n              \"refreshHeight\": 927\n          }\n       ]\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"id\": \"ev_assets_changed\",\n    \"jsonrpc\": \"2.0\",\n    \"result\": {\n        \"change\": 3,\n        \"change_str\": \"reset\",\n        \"assets\": [\n           {\n              \"asset_id\": 1,\n              \"emission\": 2000000000,\n              \"emission_str\": \"2000000000\",\n              \"isOwned\": 1,\n              \"lockHeight\": 39,\n              \"metadata\": \"STD:SCH_VER=1;N=YAN Coin;SN=YAN;UN=Yan;NTHUN=Yanik\",\n              \"metadata_kv\": true,\n              \"metadata_pairs\": {\n                 \"N\": \"YAN Coin\",\n                 \"NTHUN\": \"Yanik\",\n                 \"SCH_VER\": \"1\",\n                 \"SN\": \"YAN\",\n                 \"UN\": \"Yan\"\n              },\n              \"metadata_std_min\": true,\n              \"metadata_std\": true,\n              \"ownerId\": \"0ae08a49e018e98177774294107dc033790b87538e54a20e99c6b98f1dbd39ce\",\n              \"refreshHeight\": 927\n          }\n       ]\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"change"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"change_str"}]},{"type":"text","value":" - check "},{"type":"element","tag":"a","props":{"href":"#ev_xxx_changed-events"},"children":[{"type":"text","value":"ev_XXX_changed Events"}]},{"type":"text","value":" section for details"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"assets"}]},{"type":"text","value":" array of changed assets, most up to date meta. Check "},{"type":"element","tag":"a","props":{"href":"#get_asset_info"},"children":[{"type":"text","value":"get_asset_info"}]},{"type":"text","value":" for more details"}]}]},{"type":"element","tag":"h2","props":{"id":"ev_utxos_changed"},"children":[{"type":"text","value":"ev_utxos_changed"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Event is generated when UTXOs/Coins are changed. If assets are not enabled event is generated only for BEAM UTXOs. To get asset UTXOs notifications assets should be enabled ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--enable_assets"}]},{"type":"text","value":")."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<-"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"id\": \"ev_utxos_changed\",\n    \"jsonrpc\": \"2.0\",\n    \"result\": {\n        \"change\": 3,\n        \"change_str\": \"reset\",\n        \"utxos\": [\n            {\n                \"id\": 123,\n                \"asset_id\": 0,\n                \"amount\": 12345,\n                \"maturity\": 60,\n                \"type\": \"mine\",\n                \"createTxId\": \"10c4b760c842433cb58339a0fafef3db\",\n                \"spentTxId\": \"\",\n                \"status\": 2,\n                \"status_string\": \"maturing\"\n            } \n        ]\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"id\": \"ev_utxos_changed\",\n    \"jsonrpc\": \"2.0\",\n    \"result\": {\n        \"change\": 3,\n        \"change_str\": \"reset\",\n        \"utxos\": [\n            {\n                \"id\": 123,\n                \"asset_id\": 0,\n                \"amount\": 12345,\n                \"maturity\": 60,\n                \"type\": \"mine\",\n                \"createTxId\": \"10c4b760c842433cb58339a0fafef3db\",\n                \"spentTxId\": \"\",\n                \"status\": 2,\n                \"status_string\": \"maturing\"\n            } \n        ]\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"change"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"change_str"}]},{"type":"text","value":" - check "},{"type":"element","tag":"a","props":{"href":"#ev_xxx_changed-events"},"children":[{"type":"text","value":"ev_XXX_changed Events"}]},{"type":"text","value":" section for details"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"coins"}]},{"type":"text","value":" array of changed utxos, most up to date meta. Check "},{"type":"element","tag":"a","props":{"href":"#get_utxo"},"children":[{"type":"text","value":"get_utxo"}]},{"type":"text","value":" for more details"}]}]},{"type":"element","tag":"h2","props":{"id":"ev_txs_changed"},"children":[{"type":"text","value":"ev_txs_changed"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Event is generated when transactions are changed."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<-"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"id\": \"ev_txs_changed\",\n    \"jsonrpc\": \"2.0\",\n    \"result\": {\n        \"change\": 3,\n        \"change_str\": \"reset\",\n        \"txs\": [\n            {\n                \"txId\" : \"10c4b760c842433cb58339a0fafef3db\",\n                \"asset_id\": 0,\n                \"comment\": \"\",\n                \"fee\": 100,\n                \"kernel\": \"0000000000000000000000000000000000000000000000000000000000000000\",\n                \"receiver\": \"472e17b0419055ffee3b3813b98ae671579b0ac0dcd6f1a23b11a75ab148cc67\",\n                \"sender\": \"f287176bdd517e9c277778e4c012bf6a3e687dd614fc552a1ed22a3fee7d94f2\",\n                \"status\": 4,\n                \"status_string\" : \"Failed\",\n                \"tx_type\": 0,\n                \"tx_type_string\": \"simple\",\n                \"failure_reason\" : \"No inputs\",\n                \"value\": 12342342,\n                \"create_time\" : 1551100217,\n                \"income\" : false,\n                \"rates\": [],\n                \"sender_identity\": \"a0a1ebbfeed5c312b309e32715c159e6b4548a6c6c3af25d0dbc16f37a1e9dd6\",\n                \"receiver_identity\": \"2d8738b0424ad50631e902fab655e7e1795fbb8d92d47c4c8df7336870fcadf5\",\n                \"token\": \"44pE7ySjZYjbLqwnTJANvr4BudMk1RdvWvaZnBvoCTwFnigfaTSza75bvw7x2GCa377Z4CSRRYZon44Ss9G9joSicNRAgts4u3pL6yV6jDQ6gAVJD9Scyr\"\n            } \n        ]\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"id\": \"ev_txs_changed\",\n    \"jsonrpc\": \"2.0\",\n    \"result\": {\n        \"change\": 3,\n        \"change_str\": \"reset\",\n        \"txs\": [\n            {\n                \"txId\" : \"10c4b760c842433cb58339a0fafef3db\",\n                \"asset_id\": 0,\n                \"comment\": \"\",\n                \"fee\": 100,\n                \"kernel\": \"0000000000000000000000000000000000000000000000000000000000000000\",\n                \"receiver\": \"472e17b0419055ffee3b3813b98ae671579b0ac0dcd6f1a23b11a75ab148cc67\",\n                \"sender\": \"f287176bdd517e9c277778e4c012bf6a3e687dd614fc552a1ed22a3fee7d94f2\",\n                \"status\": 4,\n                \"status_string\" : \"Failed\",\n                \"tx_type\": 0,\n                \"tx_type_string\": \"simple\",\n                \"failure_reason\" : \"No inputs\",\n                \"value\": 12342342,\n                \"create_time\" : 1551100217,\n                \"income\" : false,\n                \"rates\": [],\n                \"sender_identity\": \"a0a1ebbfeed5c312b309e32715c159e6b4548a6c6c3af25d0dbc16f37a1e9dd6\",\n                \"receiver_identity\": \"2d8738b0424ad50631e902fab655e7e1795fbb8d92d47c4c8df7336870fcadf5\",\n                \"token\": \"44pE7ySjZYjbLqwnTJANvr4BudMk1RdvWvaZnBvoCTwFnigfaTSza75bvw7x2GCa377Z4CSRRYZon44Ss9G9joSicNRAgts4u3pL6yV6jDQ6gAVJD9Scyr\"\n            } \n        ]\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"change"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"change_str"}]},{"type":"text","value":" - check "},{"type":"element","tag":"a","props":{"href":"#ev_xxx_changed-events"},"children":[{"type":"text","value":"ev_XXX_changed Events"}]},{"type":"text","value":" section for details"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"txs"}]},{"type":"text","value":" array of changed transactions. Check "},{"type":"element","tag":"a","props":{"href":"#tx_status"},"children":[{"type":"text","value":"tx_status"}]},{"type":"text","value":" for more details"}]}]},{"type":"element","tag":"h1","props":{"id":"ev_connection_changed"},"children":[{"type":"text","value":"ev_connection_changed"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Event is generated when wallet connection status is changed. For example, connected/disconnected to node, detected own node, etc."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n  \"id\": \"ev_connection_changed\",\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"node_connected\": true,\n    \"own_node\": false,\n  }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n  \"id\": \"ev_connection_changed\",\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"node_connected\": true,\n    \"own_node\": false,\n  }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"node_connected"}]},{"type":"text","value":" - if "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"true"}]},{"type":"text","value":" this means that wallet successfully connected at least to one node"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"own_node"}]},{"type":"text","value":" - "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"true"}]},{"type":"text","value":" if one of connected beam nodes has owner key"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"last_connect_error"}]},{"type":"text","value":" - this field contains a string with last connection error explanation"}]}]},{"type":"element","tag":"h2","props":{"id":"sign_message"},"children":[{"type":"text","value":"sign_message"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Generates Schnorr signature for a custom message with public key generated from the given key material."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"method\": \"sign_message\", \n    \"params\":\n    {\n        \"message\" : \"my message\",\n        \"key_material\": \"b51efe78d3e7c83c8dbc3d59d5e06b2bd770139e645bc19e50652632cbdd47d10000000047616c6c6572792d6b65792d6f776e6572\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"method\": \"sign_message\", \n    \"params\":\n    {\n        \"message\" : \"my message\",\n        \"key_material\": \"b51efe78d3e7c83c8dbc3d59d5e06b2bd770139e645bc19e50652632cbdd47d10000000047616c6c6572792d6b65792d6f776e6572\"\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"message"}]},{"type":"text","value":" user message to sign"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"key_material"}]},{"type":"text","value":" hex encoded key material for key generation. It could be retrieved from application shader"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"result\" : \n    {\n        \"signature\" : \"bb025df14a3f0539c4b89d5eeacb8510de5de49456cff3d4027323697469021b0022262fc2457523a28524e696ec3b2825e9c4558d78da2db165cd93b8710eb7b3\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"result\" : \n    {\n        \"signature\" : \"bb025df14a3f0539c4b89d5eeacb8510de5de49456cff3d4027323697469021b0022262fc2457523a28524e696ec3b2825e9c4558d78da2db165cd93b8710eb7b3\"\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"signature"}]},{"type":"text","value":" 65-byte hex encoded Schnorr signature. It signes SHA256(\"beam.signed.message\"+len(message)+message)"}]}]},{"type":"element","tag":"h2","props":{"id":"verify_signature"},"children":[{"type":"text","value":"verify_signature"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Verifies Schnorr signature for a custom message."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"method\": \"verify_signature\", \n    \"params\":\n    {\n        \"message\" : \"my message\",\n        \"public_key\": \"37b20c87f7b70c133e3c99e54e97b1febc51b61c0310a3a5ba6856748a67e9e601\",\n        \"signature\": \"bb025df14a3f0539c4b89d5eeacb8510de5de49456cff3d4027323697469021b0022262fc2457523a28524e696ec3b2825e9c4558d78da2db165cd93b8710eb7b3\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"method\": \"verify_signature\", \n    \"params\":\n    {\n        \"message\" : \"my message\",\n        \"public_key\": \"37b20c87f7b70c133e3c99e54e97b1febc51b61c0310a3a5ba6856748a67e9e601\",\n        \"signature\": \"bb025df14a3f0539c4b89d5eeacb8510de5de49456cff3d4027323697469021b0022262fc2457523a28524e696ec3b2825e9c4558d78da2db165cd93b8710eb7b3\"\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"message"}]},{"type":"text","value":" user message to sign"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"public_key"}]},{"type":"text","value":" 33 byte hex encoded public key"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"signature"}]},{"type":"text","value":" 65 byte hex encode signature"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"result\" : true\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"result\" : true\n}\n"}]}]},{"type":"element","tag":"h2","props":{"id":"derive_id"},"children":[{"type":"text","value":"derive_id"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Derives per-seed, per-app (if called from DApp), per-tag unique ID for DApps use."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"method\": \"derive_id\", \n    \"params\":\n    {\n        \"tag\" : \"anything\",\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"method\": \"derive_id\", \n    \"params\":\n    {\n        \"tag\" : \"anything\",\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"tag"}]},{"type":"text","value":" arbitrary string, cannot be empty. Every dapp would have different ID even with the same tag."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"result\" : {\n       \"hash\": \"bd1109eb4499d4c420c66d7b827f10ec3b6171a58f22c6c2f6168fdc58db595c01\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"result\" : {\n       \"hash\": \"bd1109eb4499d4c420c66d7b827f10ec3b6171a58f22c6c2f6168fdc58db595c01\"\n    }\n}\n"}]}]},{"type":"element","tag":"h2","props":{"id":"assets_swap_offers_list"},"children":[{"type":"text","value":"assets_swap_offers_list"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Get all asset swap offers"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\" : \"2.0\",\n    \"id\" : 1,\n    \"method\" : \"assets_swap_offers_list\"\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\" : \"2.0\",\n    \"id\" : 1,\n    \"method\" : \"assets_swap_offers_list\"\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n  \"id\": 1,\n  \"jsonrpc\": \"2.0\",\n  \"offers\": [\n    {\n      \"create_time\": 1667219066,\n      \"expire_time\": 1667240666,\n      \"id\": \"1ae40a6c80d54cc4b3653ab2c478c328\",\n      \"isMy\": false,\n      \"receiveAmount\": 200000000,\n      \"receiveAssetId\": 0,\n      \"receiveCurrencyName\": \"BEAM\",\n      \"sendAmount\": 200000000,\n      \"sendAssetId\": 2,\n      \"sendCurrencyName\": \"SHEKELb\"\n    },\n    {\n      \"create_time\": 1667219060,\n      \"expire_time\": 1667240660,\n      \"id\": \"bf98b6e8a9fa49de939facfe5faad899\",\n      \"isMy\": false,\n      \"receiveAmount\": 100000000,\n      \"receiveAssetId\": 0,\n      \"receiveCurrencyName\": \"BEAM\",\n      \"sendAmount\": 100000000,\n      \"sendAssetId\": 2,\n      \"sendCurrencyName\": \"SHEKELb\"\n    }\n  ]\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n  \"id\": 1,\n  \"jsonrpc\": \"2.0\",\n  \"offers\": [\n    {\n      \"create_time\": 1667219066,\n      \"expire_time\": 1667240666,\n      \"id\": \"1ae40a6c80d54cc4b3653ab2c478c328\",\n      \"isMy\": false,\n      \"receiveAmount\": 200000000,\n      \"receiveAssetId\": 0,\n      \"receiveCurrencyName\": \"BEAM\",\n      \"sendAmount\": 200000000,\n      \"sendAssetId\": 2,\n      \"sendCurrencyName\": \"SHEKELb\"\n    },\n    {\n      \"create_time\": 1667219060,\n      \"expire_time\": 1667240660,\n      \"id\": \"bf98b6e8a9fa49de939facfe5faad899\",\n      \"isMy\": false,\n      \"receiveAmount\": 100000000,\n      \"receiveAssetId\": 0,\n      \"receiveCurrencyName\": \"BEAM\",\n      \"sendAmount\": 100000000,\n      \"sendAssetId\": 2,\n      \"sendCurrencyName\": \"SHEKELb\"\n    }\n  ]\n}\n"}]}]},{"type":"element","tag":"h2","props":{"id":"assets_swap_create"},"children":[{"type":"text","value":"assets_swap_create"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Create asset swap offer"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\" : \"2.0\",\n    \"id\" : 1,\n    \"method\" : \"assets_swap_create\",\n    \"params\": {\n        \"send_amount\": 100000000,\n        \"send_asset_id\": 5,\n        \"receive_amount\": 100000000,\n        \"receive_asset_id\": 0,\n        \"minutes_before_expire\": 30,\n        \"comment\": \"api1\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\" : \"2.0\",\n    \"id\" : 1,\n    \"method\" : \"assets_swap_create\",\n    \"params\": {\n        \"send_amount\": 100000000,\n        \"send_asset_id\": 5,\n        \"receive_amount\": 100000000,\n        \"receive_asset_id\": 0,\n        \"minutes_before_expire\": 30,\n        \"comment\": \"api1\"\n    }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n  \"id\": 1,\n  \"jsonrpc\": \"2.0\",\n  \"offer\": {\n    \"create_time\": 1667219348,\n    \"expire_time\": 1667221148,\n    \"id\": \"dce8c04152e14e71a13d81242158a94e\",\n    \"isMy\": true,\n    \"receiveAmount\": 100000000,\n    \"receiveAssetId\": 0,\n    \"receiveCurrencyName\": \"BEAM\",\n    \"sendAmount\": 100000000,\n    \"sendAssetId\": 5,\n    \"sendCurrencyName\": \"DEMOX\"\n  }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n  \"id\": 1,\n  \"jsonrpc\": \"2.0\",\n  \"offer\": {\n    \"create_time\": 1667219348,\n    \"expire_time\": 1667221148,\n    \"id\": \"dce8c04152e14e71a13d81242158a94e\",\n    \"isMy\": true,\n    \"receiveAmount\": 100000000,\n    \"receiveAssetId\": 0,\n    \"receiveCurrencyName\": \"BEAM\",\n    \"sendAmount\": 100000000,\n    \"sendAssetId\": 5,\n    \"sendCurrencyName\": \"DEMOX\"\n  }\n}\n"}]}]},{"type":"element","tag":"h2","props":{"id":"assets_swap_cancel"},"children":[{"type":"text","value":"assets_swap_cancel"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Cancel own asset swap offer"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\" : \"2.0\",\n    \"id\" : 1,\n    \"method\" : \"assets_swap_cancel\",\n    \"params\": {\n        \"offer_id\": \"dce8c04152e14e71a13d81242158a94e\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\" : \"2.0\",\n    \"id\" : 1,\n    \"method\" : \"assets_swap_cancel\",\n    \"params\": {\n        \"offer_id\": \"dce8c04152e14e71a13d81242158a94e\"\n    }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n  \"id\": 1,\n  \"jsonrpc\": \"2.0\",\n  \"offer\": \"dce8c04152e14e71a13d81242158a94e\"\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n  \"id\": 1,\n  \"jsonrpc\": \"2.0\",\n  \"offer\": \"dce8c04152e14e71a13d81242158a94e\"\n}\n"}]}]},{"type":"element","tag":"h2","props":{"id":"assets_swap_accept"},"children":[{"type":"text","value":"assets_swap_accept"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Accept asset swap offer"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"jsonrpc\" : \"2.0\",\n    \"id\" : 1,\n    \"method\" : \"assets_swap_accept\",\n    \"params\": {\n        \"offer_id\": \"1ae40a6c80d54cc4b3653ab2c478c328\"\n    }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\" : \"2.0\",\n    \"id\" : 1,\n    \"method\" : \"assets_swap_accept\",\n    \"params\": {\n        \"offer_id\": \"1ae40a6c80d54cc4b3653ab2c478c328\"\n    }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n  \"id\": 1,\n  \"jsonrpc\": \"2.0\",\n  \"offer\": {\n    \"create_time\": 1667219066,\n    \"expire_time\": 1667240666,\n    \"id\": \"1ae40a6c80d54cc4b3653ab2c478c328\",\n    \"isMy\": false,\n    \"receiveAmount\": 200000000,\n    \"receiveAssetId\": 0,\n    \"receiveCurrencyName\": \"BEAM\",\n    \"sendAmount\": 200000000,\n    \"sendAssetId\": 2,\n    \"sendCurrencyName\": \"SHEKELb\"\n  },\n  \"tx_id\": \"71552f2092e64665a7b8dbdcdf9f3ca2\"\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n  \"id\": 1,\n  \"jsonrpc\": \"2.0\",\n  \"offer\": {\n    \"create_time\": 1667219066,\n    \"expire_time\": 1667240666,\n    \"id\": \"1ae40a6c80d54cc4b3653ab2c478c328\",\n    \"isMy\": false,\n    \"receiveAmount\": 200000000,\n    \"receiveAssetId\": 0,\n    \"receiveCurrencyName\": \"BEAM\",\n    \"sendAmount\": 200000000,\n    \"sendAssetId\": 2,\n    \"sendCurrencyName\": \"SHEKELb\"\n  },\n  \"tx_id\": \"71552f2092e64665a7b8dbdcdf9f3ca2\"\n}\n"}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"whats-new-in-v73","depth":2,"text":"What's new in v7.3","children":[{"id":"changed-methods","depth":3,"text":"Changed methods"}]},{"id":"api-error-codes","depth":2,"text":"API Error codes"},{"id":"api-methods","depth":2,"text":"API Methods","children":[{"id":"general-methods","depth":3,"text":"General methods"},{"id":"ipfs-methods","depth":3,"text":"IPFS methods"},{"id":"atomic-swap-methods","depth":3,"text":"ATOMIC SWAP methods"},{"id":"asset-swap-methods","depth":3,"text":"ASSET SWAP methods"}]},{"id":"api-events","depth":2,"text":"API events"},{"id":"async-notice","depth":2,"text":"Async Notice"},{"id":"create_address","depth":2,"text":"create_address"},{"id":"validate_address","depth":2,"text":"validate_address"},{"id":"addr_list","depth":2,"text":"addr_list","children":[{"id":"identity","depth":3,"text":"Identity"}]},{"id":"delete_address","depth":2,"text":"delete_address"},{"id":"edit_address","depth":2,"text":"edit_address"},{"id":"tx_send","depth":2,"text":"tx_send"},{"id":"tx_split","depth":2,"text":"tx_split"},{"id":"tx_asset_issue","depth":2,"text":"tx_asset_issue"},{"id":"tx_asset_consume","depth":2,"text":"tx_asset_consume"},{"id":"tx_asset_info","depth":2,"text":"tx_asset_info"},{"id":"tx_cancel","depth":2,"text":"tx_cancel"},{"id":"tx_delete","depth":2,"text":"tx_delete"},{"id":"tx_status","depth":2,"text":"tx_status"},{"id":"tx_list","depth":2,"text":"tx_list","children":[{"id":"important-the-recommended-number-of-confirmations-for-beam-transfers-is-80-blocks","depth":3,"text":"IMPORTANT: The recommended number of confirmations for Beam transfers is 80 blocks."},{"id":"tx-statuses","depth":3,"text":"TX statuses"},{"id":"tx-types","depth":3,"text":"TX types"}]},{"id":"wallet_status","depth":2,"text":"wallet_status"},{"id":"get_utxo","depth":2,"text":"get_utxo"},{"id":"get_asset_info","depth":2,"text":"get_asset_info"},{"id":"generate_tx_id","depth":2,"text":"generate_tx_id"},{"id":"export_payment_proof","depth":2,"text":"export_payment_proof"},{"id":"verify_payment_proof","depth":2,"text":"verify_payment_proof"},{"id":"invoke_contract","depth":2,"text":"invoke_contract","children":[{"id":"shader-errors","depth":3,"text":"Shader Errors"},{"id":"code-caching","depth":3,"text":"Code caching"},{"id":"requests-queue","depth":3,"text":"Requests queue"}]},{"id":"process_invoke_data","depth":2,"text":"process_invoke_data"},{"id":"calc_change","depth":2,"text":"calc_change"},{"id":"block_details","depth":2,"text":"block_details"},{"id":"get_version","depth":2,"text":"get_version"},{"id":"ipfs_add","depth":2,"text":"ipfs_add"},{"id":"ipfs_hash","depth":2,"text":"ipfs_hash"},{"id":"ipfs_get","depth":2,"text":"ipfs_get"},{"id":"ipfs_pin","depth":2,"text":"ipfs_pin"},{"id":"ipfs_unpin","depth":2,"text":"ipfs_unpin"},{"id":"ipfs_gc","depth":2,"text":"ipfs_gc"},{"id":"ev_subunsub","depth":2,"text":"ev_subunsub"},{"id":"ev_sync_progress","depth":2,"text":"ev_sync_progress"},{"id":"ev_system_state","depth":2,"text":"ev_system_state"},{"id":"ev_addrs_changed","depth":2,"text":"ev_addrs_changed"},{"id":"ev_assets_changed","depth":2,"text":"ev_assets_changed"},{"id":"ev_utxos_changed","depth":2,"text":"ev_utxos_changed"},{"id":"ev_txs_changed","depth":2,"text":"ev_txs_changed"},{"id":"sign_message","depth":2,"text":"sign_message"},{"id":"verify_signature","depth":2,"text":"verify_signature"},{"id":"derive_id","depth":2,"text":"derive_id"},{"id":"assets_swap_offers_list","depth":2,"text":"assets_swap_offers_list"},{"id":"assets_swap_create","depth":2,"text":"assets_swap_create"},{"id":"assets_swap_cancel","depth":2,"text":"assets_swap_cancel"},{"id":"assets_swap_accept","depth":2,"text":"assets_swap_accept"}]}},"_type":"markdown","_id":"content:docs:core-tech:Beam-wallet-protocol-API-v7.3.md","_source":"content","_file":"docs/core-tech/Beam-wallet-protocol-API-v7.3.md","_extension":"md"},{"_path":"/docs/core-tech/beam-wallet-protocol-api","_dir":"core-tech","_draft":false,"_partial":false,"_locale":"","title":"Beam Wallet Protocol API","description":"Starting with v6.0 BEAM wallet supports API versioning using the --api_version option. Please choose the corresponding API version in the list below to get the description of the available methods.","body":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Starting with v6.0 BEAM wallet supports API versioning using the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--api_version"}]},{"type":"text","value":" option. Please choose the corresponding API version in the list below to get the description of the available methods."}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/wiki/Beam-wallet-protocol-API-v6.0","rel":["nofollow"]},"children":[{"type":"text","value":"version 6.0"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/wiki/Beam-wallet-protocol-API-v6.1","rel":["nofollow"]},"children":[{"type":"text","value":"version 6.1"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/wiki/Beam-wallet-protocol-API-v6.2","rel":["nofollow"]},"children":[{"type":"text","value":"version 6.2"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/wiki/Beam-wallet-protocol-API-v7.0","rel":["nofollow"]},"children":[{"type":"text","value":"version 7.0"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/wiki/Beam-wallet-protocol-API-v7.1","rel":["nofollow"]},"children":[{"type":"text","value":"version 7.1"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/wiki/Beam-wallet-protocol-API-v7.2","rel":["nofollow"]},"children":[{"type":"text","value":"version 7.2"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/wiki/Beam-wallet-protocol-API-v7.3","rel":["nofollow"]},"children":[{"type":"text","value":"version 7.3"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The sections below apply to the API versions starting with 6.0 if the other is not explicitly stated."}]},{"type":"element","tag":"h2","props":{"id":"general"},"children":[{"type":"text","value":"General"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Wallet API has the same structure as Node Stratum API protocol (JSON RPC 2.0 over TCP connection) and should have an online connection to the node. However, it can work over HTTP using the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--use_http=1"}]},{"type":"text","value":" option. Send POST requests to "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"http://x.x.x.x:port/api/wallet"}]},{"type":"text","value":" in this case."}]},{"type":"element","tag":"h2","props":{"id":"running-wallet-api"},"children":[{"type":"text","value":"Running Wallet API"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Place "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"wallet-api"}]},{"type":"text","value":" binary located in the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"wallet"}]},{"type":"text","value":" folder near your "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"wallet.db"}]},{"type":"text","value":" and run it. You can specify options in CLI or using "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"wallet-api.cfg"}]},{"type":"text","value":" file. Minimal options required are your "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"wallet.db"}]},{"type":"text","value":" password ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--pass"}]},{"type":"text","value":") and node ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-n="}]},{"type":"text","value":") to connect to. Please notice that "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"node.db"}]},{"type":"text","value":" by default is expected to be located in the current working directory ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"$PWD"}]},{"type":"text","value":"). You can change this using the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--wallet_path="}]},{"type":"text","value":" option."}]},{"type":"element","tag":"h3","props":{"id":"wallet-api-general-options"},"children":[{"type":"text","value":"Wallet API general options"}]},{"type":"element","tag":"pre","props":{"code":"  -h [ --help ]                         list of all options\n  -p [ --port ] arg (=10000)            port to start server on\n  -n [ --node_addr ] arg                address of node\n  --wallet_path arg (=wallet.db)        path to the wallet file\n  --pass arg                            password for the wallet\n  --use_http arg (=0)                   use JSON RPC over HTTP\n  --ip_whitelist arg                    IP whitelist\n  --log_cleanup_days arg (=5)           old logfiles cleanup period(days)\n  --node_poll_period arg (=0)           Node poll period in milliseconds. Set\n                                        to 0 to keep a connection. Anyway poll\n                                        period would be no less than the\n                                        expected rate of blocks if it is less\n                                        then it will be rounded up to block\n                                        rate value.\n  --enable_assets                       enable confidential assets transactions\n  --enable_lelantus                     enable Lelantus MW transactions\n  --api_version                         specify API version. Available since v6.0. Acceptable values: current, 6.0, 6.1 &c.\n\nUser authorization options:\n  --use_acl arg (=0)                use Access Control List (ACL)\n  --acl_path arg (=wallet_api.acl)  path to ACL file\n\nTLS protocol options:\n  --use_tls arg (=0)                use TLS protocol\n  --tls_cert arg (=wallet_api.crt)  path to TLS certificate\n  --tls_key arg (=wallet_api.key)   path to TLS private key\n  --tls_request_cert (=false)       request client's certificate for verification for client authentication\n  --tls_reject_unauthorized (=true) server will reject any connection which is not authorized with the list of supplied CAs\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"  -h [ --help ]                         list of all options\n  -p [ --port ] arg (=10000)            port to start server on\n  -n [ --node_addr ] arg                address of node\n  --wallet_path arg (=wallet.db)        path to the wallet file\n  --pass arg                            password for the wallet\n  --use_http arg (=0)                   use JSON RPC over HTTP\n  --ip_whitelist arg                    IP whitelist\n  --log_cleanup_days arg (=5)           old logfiles cleanup period(days)\n  --node_poll_period arg (=0)           Node poll period in milliseconds. Set\n                                        to 0 to keep a connection. Anyway poll\n                                        period would be no less than the\n                                        expected rate of blocks if it is less\n                                        then it will be rounded up to block\n                                        rate value.\n  --enable_assets                       enable confidential assets transactions\n  --enable_lelantus                     enable Lelantus MW transactions\n  --api_version                         specify API version. Available since v6.0. Acceptable values: current, 6.0, 6.1 &c.\n\nUser authorization options:\n  --use_acl arg (=0)                use Access Control List (ACL)\n  --acl_path arg (=wallet_api.acl)  path to ACL file\n\nTLS protocol options:\n  --use_tls arg (=0)                use TLS protocol\n  --tls_cert arg (=wallet_api.crt)  path to TLS certificate\n  --tls_key arg (=wallet_api.key)   path to TLS private key\n  --tls_request_cert (=false)       request client's certificate for verification for client authentication\n  --tls_reject_unauthorized (=true) server will reject any connection which is not authorized with the list of supplied CAs\n"}]}]},{"type":"element","tag":"h3","props":{"id":"wallet-apicfg-file"},"children":[{"type":"text","value":"wallet-api.cfg file"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"wallet-api.cfg"}]},{"type":"text","value":" file is another way to supply options for the API server. All the options listed above are supported. The "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"wallet-api.cfg"}]},{"type":"text","value":" file is expected to be located in the current working directory ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"$PWD"}]},{"type":"text","value":"). Here is an example of the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"wallet-api.cfg"}]},{"type":"text","value":" file:"}]},{"type":"element","tag":"pre","props":{"code":"# password for the wallet\npass=1\n\n# address of node\nnode_addr=127.0.0.1:8888\n\n# port to start server on\nport=10000\n\n# path to wallet file\nwallet_path=/home/user/wallet.db\n\n# use JSON RPC over HTTP\nuse_http=1\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"# password for the wallet\npass=1\n\n# address of node\nnode_addr=127.0.0.1:8888\n\n# port to start server on\nport=10000\n\n# path to wallet file\nwallet_path=/home/user/wallet.db\n\n# use JSON RPC over HTTP\nuse_http=1\n"}]}]},{"type":"element","tag":"h2","props":{"id":"running-api-server-in-tcp-mode"},"children":[{"type":"text","value":"Running API Server in TCP mode"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"By default API launches in TCP mode. For example:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"./wallet-api --node_addr=172.104.249.212:8101 --pass=123"}]}]},{"type":"element","tag":"h2","props":{"id":"accessing-api-server-via-tcp"},"children":[{"type":"text","value":"Accessing API Server via TCP"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Here is an example NodeJS code to get all UTXOs from the Wallet API server that is running in TCP mode"}]},{"type":"element","tag":"pre","props":{"code":"var net = require('net');\n\nvar client = new net.Socket();\nclient.connect(10000, '127.0.0.1', function() {\n    console.log('Connected');\n    client.write(JSON.stringify(\n        {\n            jsonrpc: '2.0',\n            id: 123,\n            method: 'get_utxo',\n            params: {}\n        }) + '\\n');\n});\n\nvar acc = '';\n\nclient.on('data', function(data) {\n    acc += data;\n\n    // searching for \\n symbol to find end of response\n    if(data.indexOf('\\n') != -1)\n    {\n        var res = JSON.parse(acc);\n\n        console.log('Received:', res);\n\n        client.destroy(); // kill client after server's response\n    }\n});\n\nclient.on('close', function() {\n    console.log('Connection closed');\n});\n","language":"js","meta":"","className":["language-js"]},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"var net = require('net');\n\nvar client = new net.Socket();\nclient.connect(10000, '127.0.0.1', function() {\n    console.log('Connected');\n    client.write(JSON.stringify(\n        {\n            jsonrpc: '2.0',\n            id: 123,\n            method: 'get_utxo',\n            params: {}\n        }) + '\\n');\n});\n\nvar acc = '';\n\nclient.on('data', function(data) {\n    acc += data;\n\n    // searching for \\n symbol to find end of response\n    if(data.indexOf('\\n') != -1)\n    {\n        var res = JSON.parse(acc);\n\n        console.log('Received:', res);\n\n        client.destroy(); // kill client after server's response\n    }\n});\n\nclient.on('close', function() {\n    console.log('Connection closed');\n});\n"}]}]},{"type":"element","tag":"h2","props":{"id":"running-api-server-in-http-mode"},"children":[{"type":"text","value":"Running API Server in HTTP mode"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Run via cli with '--use_http=1':"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"./wallet-api --node_addr=172.104.249.212:8101 --pass=123 --use_http=1"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Or add 'use_http=1' to the wallet-api.cfg to enable HTTP mode."}]},{"type":"element","tag":"h2","props":{"id":"accessing-api-server-via-http"},"children":[{"type":"text","value":"Accessing API Server via HTTP"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"You can perform POST requests using CURL. Here is an example to get the current "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"wallet status"}]},{"type":"text","value":"."}]},{"type":"element","tag":"pre","props":{"code":"curl -d '{\"jsonrpc\":\"2.0\",\"id\":1,\"method\":\"wallet_status\"}' \n     -H \"Content-Type: application/json\" \n     -X POST http://x.x.x.x:port/api/wallet\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"curl -d '{\"jsonrpc\":\"2.0\",\"id\":1,\"method\":\"wallet_status\"}' \n     -H \"Content-Type: application/json\" \n     -X POST http://x.x.x.x:port/api/wallet\n"}]}]},{"type":"element","tag":"h2","props":{"id":"tls-encryption"},"children":[{"type":"text","value":"TLS encryption"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Add "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--use_tls=1"}]},{"type":"text","value":" to enable TLS encryption. You have supply the valid 3rd-party certificate or create a self signed certificate. Pass them to the API server using "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--tls_cert"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--tls_key"}]},{"type":"text","value":" options."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"For testing you can download the sample certificate and key files from "},{"type":"element","tag":"a","props":{"href":"https://beamx.gitbook.io/beam-node-user-guide/mining-mode/mining-using-external-miner#certificate-and-keys","rel":["nofollow"]},"children":[{"type":"text","value":"here"}]},{"type":"text","value":"  or clicking the links below:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://firebasestorage.googleapis.com/v0/b/gitbook-28427.appspot.com/o/assets%2F-MahNa0IaGxTr8GkB5rz%2F-Mb6iKWRWPQD7ljMB61A%2F-Mb6q79H8fH8zbfxJrei%2Fstratum.crt?alt=media&token=29cad8ec-2911-446e-b1d4-991401e19d0d","rel":["nofollow"]},"children":[{"type":"text","value":"Certificate  File"}]},{"type":"element","tag":"br","props":{},"children":[]},{"type":"element","tag":"a","props":{"href":"https://firebasestorage.googleapis.com/v0/b/gitbook-28427.appspot.com/o/assets%2F-MahNa0IaGxTr8GkB5rz%2F-Mb6iKWRWPQD7ljMB61A%2F-Mb6qjg8lMk1JOdjnnpG%2Fstratum.key?alt=media&token=4c1d1228-fa6d-4f50-a7d0-020966529204","rel":["nofollow"]},"children":[{"type":"text","value":"Certificate  Private Key  File"}]}]},{"type":"element","tag":"h2","props":{"id":"ip-whitelisting"},"children":[{"type":"text","value":"IP whitelisting"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Add "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--ip_whitelist=192.168.0.1,192.168.0.2"}]},{"type":"text","value":" parameter to restrict access to the API server to certain IP addresses. Connections from other IP address would be rejected."}]},{"type":"element","tag":"h2","props":{"id":"users-authorization"},"children":[{"type":"text","value":"Users authorization"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"API methods can have access rights control if you enable "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Access Control List"}]},{"type":"text","value":" (ACL) using "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--use_acl=1"}]},{"type":"text","value":" option. Below is the list of all API methods with the access rights required to call the respective method:"}]},{"type":"element","tag":"pre","props":{"code":"create_address       - write access\nvalidate_address     - read access\naddr_list            - read access\ndelete_address       - write access\nedit_address         - write access\ntx_send              - write access\ntx_status            - read access\ntx_split             - write access\ntx_asset_issue       - write access\ntx_asset_consume     - write access\ntx_asset_info        - write access\ntx_cancel            - write access\nget_utxo             - read access\ntx_list              - read access\nwallet_status        - read access\nget_asset_info       - read access\ngenerate_tx_id       - read access\nexport_payment_proof - read access\nverify_payment_proof - read access\ncalc_change          - read access\ninvoke_contract      - write access\nprocess_invoke_data  - write access\nblock_details        - read access\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"create_address       - write access\nvalidate_address     - read access\naddr_list            - read access\ndelete_address       - write access\nedit_address         - write access\ntx_send              - write access\ntx_status            - read access\ntx_split             - write access\ntx_asset_issue       - write access\ntx_asset_consume     - write access\ntx_asset_info        - write access\ntx_cancel            - write access\nget_utxo             - read access\ntx_list              - read access\nwallet_status        - read access\nget_asset_info       - read access\ngenerate_tx_id       - read access\nexport_payment_proof - read access\nverify_payment_proof - read access\ncalc_change          - read access\ninvoke_contract      - write access\nprocess_invoke_data  - write access\nblock_details        - read access\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"ACL file should look like a list with the access keys and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"read/write"}]},{"type":"text","value":" rights:"}]},{"type":"element","tag":"pre","props":{"code":"472e17b0419055ffee3b3813b98ae671579b0ac0dcd6f1a23b11a75ab148cc67 : write\nbd39333a66a8b7cb3804b5978d42312c841dbfa03a1c31fc2f0627eeed6e43f2 : read\nf287176bdd517e9c277778e4c012bf6a3e687dd614fc552a1ed22a3fee7d94f2 : read\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"472e17b0419055ffee3b3813b98ae671579b0ac0dcd6f1a23b11a75ab148cc67 : write\nbd39333a66a8b7cb3804b5978d42312c841dbfa03a1c31fc2f0627eeed6e43f2 : read\nf287176bdd517e9c277778e4c012bf6a3e687dd614fc552a1ed22a3fee7d94f2 : read\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Don't forget to send user "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"key"}]},{"type":"text","value":" in every JSONRPC request to the API if access control is enabled:"}]},{"type":"element","tag":"pre","props":{"code":"{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1,\n    \"method\": \"wallet_status\",\n    \"key\": \"bd39333a66a8b7cb3804b5978d42312c841dbfa03a1c31fc2f0627eeed6e43f2\"\n}\n","language":"json","meta":"","className":["language-json"]},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1,\n    \"method\": \"wallet_status\",\n    \"key\": \"bd39333a66a8b7cb3804b5978d42312c841dbfa03a1c31fc2f0627eeed6e43f2\"\n}\n"}]}]},{"type":"element","tag":"h2","props":{"id":"api-errors-handling"},"children":[{"type":"text","value":"API Errors Handling"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Errors are returned as:"}]},{"type":"element","tag":"pre","props":{"code":"  error: {\n    code: -32003,\n    data: \"It's not your own address.\",\n    message: 'Invalid address.'\n  }\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"  error: {\n    code: -32003,\n    data: \"It's not your own address.\",\n    message: 'Invalid address.'\n  }\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"where"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"code"}]},{"type":"text","value":" is a unique identifier of the error"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"message"}]},{"type":"text","value":" textual description of the error"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"data"}]},{"type":"text","value":" is the contextual data for the error, usually a more detailed description for general error codes"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"To get the list of the possible error codes check the respective API version."}]},{"type":"element","tag":"h2","props":{"id":"assets-support"},"children":[{"type":"text","value":"Assets Support"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"v6.0+ API implements confidential assets support. To ensure backward compatibility by default API does not return asset entities (coins, balances, txs &c). Asset operations (send, receive, issue, consume &c.) are disabled as well and if requested for an asset would fail. Also, all incoming transactions that involve assets would be rejected by the Wallet API as well. If you do not enable assets support your old code should be able to use the new API without any changes."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"To enable assets start your API server with the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--enable_assets"}]},{"type":"text","value":" option or set this flag to true in the config file."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Methods that can return asset entities (for example "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"wallet_status"}]},{"type":"text","value":" or "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"get_utxo"}]},{"type":"text","value":") might have different return formats if assets are enabled. Please check the respective methods' documentation for details."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In most method responses an additional "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_id"}]},{"type":"text","value":" field is returned by default even if assets support is not enabled. It is always 0 for BEAM and can be safely ignored."}]},{"type":"element","tag":"h2","props":{"id":"ipfs-support"},"children":[{"type":"text","value":"IPFS Support"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"String with v6.3 BEAM comes with built-in IPFS support. Please refer to the following pages for more details"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/wiki/BEAM-IPFS-Support","rel":["nofollow"]},"children":[{"type":"text","value":"BEAM IPFS Support"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/wiki/Beam-wallet-protocol-API-v6.3","rel":["nofollow"]},"children":[{"type":"text","value":"v6.3 API"}]}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"general","depth":2,"text":"General"},{"id":"running-wallet-api","depth":2,"text":"Running Wallet API","children":[{"id":"wallet-api-general-options","depth":3,"text":"Wallet API general options"},{"id":"wallet-apicfg-file","depth":3,"text":"wallet-api.cfg file"}]},{"id":"running-api-server-in-tcp-mode","depth":2,"text":"Running API Server in TCP mode"},{"id":"accessing-api-server-via-tcp","depth":2,"text":"Accessing API Server via TCP"},{"id":"running-api-server-in-http-mode","depth":2,"text":"Running API Server in HTTP mode"},{"id":"accessing-api-server-via-http","depth":2,"text":"Accessing API Server via HTTP"},{"id":"tls-encryption","depth":2,"text":"TLS encryption"},{"id":"ip-whitelisting","depth":2,"text":"IP whitelisting"},{"id":"users-authorization","depth":2,"text":"Users authorization"},{"id":"api-errors-handling","depth":2,"text":"API Errors Handling"},{"id":"assets-support","depth":2,"text":"Assets Support"},{"id":"ipfs-support","depth":2,"text":"IPFS Support"}]}},"_type":"markdown","_id":"content:docs:core-tech:Beam-wallet-protocol-API.md","_source":"content","_file":"docs/core-tech/Beam-wallet-protocol-API.md","_extension":"md"},{"_path":"/docs/core-tech/beam-wallet-protocol-swap-api-(beta)","_dir":"core-tech","_draft":false,"_partial":false,"_locale":"","title":"Beam Wallet Protocol SWAP API (BETA)","description":"Swap API extends Beam wallet protocol API","body":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Swap API extends "},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/wiki/Beam-wallet-protocol-API","rel":["nofollow"]},"children":[{"type":"text","value":"Beam wallet protocol API"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"requires: configured swap settings in "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"wallet.db"}]},{"type":"text","value":" (by CLI or UI)"}]},{"type":"element","tag":"h2","props":{"id":"api"},"children":[{"type":"text","value":"API"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"API will include the following methods:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#swap_offers_list"},"children":[{"type":"text","value":"swap_offers_list"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#swap_offers_board"},"children":[{"type":"text","value":"swap_offers_board"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#swap_create_offer"},"children":[{"type":"text","value":"swap_create_offer"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#swap_offer_status"},"children":[{"type":"text","value":"swap_offer_status"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#swap_decode_token"},"children":[{"type":"text","value":"swap_decode_token"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#swap_publish_offer"},"children":[{"type":"text","value":"swap_publish_offer"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#swap_accept_offer"},"children":[{"type":"text","value":"swap_accept_offer"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#swap_cancel_offer"},"children":[{"type":"text","value":"swap_cancel_offer"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#swap_get_balance"},"children":[{"type":"text","value":"swap_get_balance"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#swap_recommended_fee_rate"},"children":[{"type":"text","value":"swap_recommended_fee_rate"}]}]}]},{"type":"element","tag":"h2","props":{"id":"swap_offers_list"},"children":[{"type":"text","value":"swap_offers_list"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Get all own swap offers with specified "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"status"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"swapCoin"}]},{"type":"text","value":". if "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"filter"}]},{"type":"text","value":" not specified return all own swap offers."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"code":"{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1236,\n    \"method\": \"swap_offers_list\",\n    \"params\": {}\n}\n","language":"json","meta":"","className":["language-json"]},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1236,\n    \"method\": \"swap_offers_list\",\n    \"params\": {}\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"code":"{\n    \"id\": 1236,\n    \"jsonrpc\": \"2.0\",\n    \"result\": [\n        {\n            \"height_expired\": 140726,\n            \"min_height\": 140696,\n            \"receive_amount\": 2000000000,\n            \"receive_currency\": \"BEAM\",\n            \"send_amount\": 100000000,\n            \"send_currency\": \"BTC\",\n            \"status\": 4,\n            \"status_string\": \"expired\",\n            \"time_created\": \"2020.03.16 17:22:12\",\n            \"txId\": \"b35fd69030694009b8bf849140d9319e\"\n        },\n        {\n            \"height_expired\": 136300,\n            \"min_height\": 136270,\n            \"receive_amount\": 2000000000,\n            \"receive_currency\": \"BEAM\",\n            \"send_amount\": 100000000,\n            \"send_currency\": \"BTC\",\n            \"status\": 4,\n            \"status_string\": \"expired\",\n            \"time_created\": \"2020.03.13 15:16:07\",\n            \"txId\": \"0d36d9db06f14071b18e1fdf4c429a14\"\n        },\n        {\n            \"height_expired\": 133125,\n            \"min_height\": 133095,\n            \"receive_amount\": 2000000000,\n            \"receive_currency\": \"BEAM\",\n            \"send_amount\": 100000000,\n            \"send_currency\": \"BTC\",\n            \"status\": 4,\n            \"status_string\": \"expired\",\n            \"time_created\": \"2020.03.11 10:14:16\",\n            \"txId\": \"f859fe65bd434522af16cfc7d31c43db\"\n        },\n        {\n            \"height_expired\": 123428,\n            \"min_height\": 123398,\n            \"receive_amount\": 200000000,\n            \"receive_currency\": \"BEAM\",\n            \"send_amount\": 100000000,\n            \"send_currency\": \"BTC\",\n            \"status\": 2,\n            \"status_string\": \"completed\",\n            \"time_created\": \"2020.03.04 16:37:44\",\n            \"txId\": \"d218356770b34fe4aeab01fb12c6074c\"\n        }\n    ]\n}\n","language":"json","meta":"","className":["language-json"]},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"id\": 1236,\n    \"jsonrpc\": \"2.0\",\n    \"result\": [\n        {\n            \"height_expired\": 140726,\n            \"min_height\": 140696,\n            \"receive_amount\": 2000000000,\n            \"receive_currency\": \"BEAM\",\n            \"send_amount\": 100000000,\n            \"send_currency\": \"BTC\",\n            \"status\": 4,\n            \"status_string\": \"expired\",\n            \"time_created\": \"2020.03.16 17:22:12\",\n            \"txId\": \"b35fd69030694009b8bf849140d9319e\"\n        },\n        {\n            \"height_expired\": 136300,\n            \"min_height\": 136270,\n            \"receive_amount\": 2000000000,\n            \"receive_currency\": \"BEAM\",\n            \"send_amount\": 100000000,\n            \"send_currency\": \"BTC\",\n            \"status\": 4,\n            \"status_string\": \"expired\",\n            \"time_created\": \"2020.03.13 15:16:07\",\n            \"txId\": \"0d36d9db06f14071b18e1fdf4c429a14\"\n        },\n        {\n            \"height_expired\": 133125,\n            \"min_height\": 133095,\n            \"receive_amount\": 2000000000,\n            \"receive_currency\": \"BEAM\",\n            \"send_amount\": 100000000,\n            \"send_currency\": \"BTC\",\n            \"status\": 4,\n            \"status_string\": \"expired\",\n            \"time_created\": \"2020.03.11 10:14:16\",\n            \"txId\": \"f859fe65bd434522af16cfc7d31c43db\"\n        },\n        {\n            \"height_expired\": 123428,\n            \"min_height\": 123398,\n            \"receive_amount\": 200000000,\n            \"receive_currency\": \"BEAM\",\n            \"send_amount\": 100000000,\n            \"send_currency\": \"BTC\",\n            \"status\": 2,\n            \"status_string\": \"completed\",\n            \"time_created\": \"2020.03.04 16:37:44\",\n            \"txId\": \"d218356770b34fe4aeab01fb12c6074c\"\n        }\n    ]\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"code":"{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1236,\n    \"method\": \"swap_offers_list\",\n    \"params\": {\n        \"filter\" : {\n            \"status\" : 2\n        }\n    }\n}\n","language":"json","meta":"","className":["language-json"]},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1236,\n    \"method\": \"swap_offers_list\",\n    \"params\": {\n        \"filter\" : {\n            \"status\" : 2\n        }\n    }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"code":"{\n    \"id\": 1236,\n    \"jsonrpc\": \"2.0\",\n    \"result\": [\n        {\n            \"height_expired\": 123428,\n            \"min_height\": 123398,\n            \"receive_amount\": 200000000,\n            \"receive_currency\": \"BEAM\",\n            \"send_amount\": 100000000,\n            \"send_currency\": \"BTC\",\n            \"status\": 2,\n            \"status_string\": \"completed\",\n            \"time_created\": \"2020.03.04 16:37:44\",\n            \"txId\": \"d218356770b34fe4aeab01fb12c6074c\"\n        }\n    ]\n}\n","language":"json","meta":"","className":["language-json"]},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"id\": 1236,\n    \"jsonrpc\": \"2.0\",\n    \"result\": [\n        {\n            \"height_expired\": 123428,\n            \"min_height\": 123398,\n            \"receive_amount\": 200000000,\n            \"receive_currency\": \"BEAM\",\n            \"send_amount\": 100000000,\n            \"send_currency\": \"BTC\",\n            \"status\": 2,\n            \"status_string\": \"completed\",\n            \"time_created\": \"2020.03.04 16:37:44\",\n            \"txId\": \"d218356770b34fe4aeab01fb12c6074c\"\n        }\n    ]\n}\n"}]}]},{"type":"element","tag":"h2","props":{"id":"swap_offers_board"},"children":[{"type":"text","value":"swap_offers_board"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Get all swap offers from offers board with specified "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"swapCoin"}]},{"type":"text","value":". if "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"swapCoin"}]},{"type":"text","value":" not specified return all known swap offers."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"code":"{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1236,\n    \"method\": \"swap_offers_board\",\n    \"params\": {}\n}\n","language":"json","meta":"","className":["language-json"]},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1236,\n    \"method\": \"swap_offers_board\",\n    \"params\": {}\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"code":"{\n  \"id\": 1236,\n  \"jsonrpc\": \"2.0\",\n  \"result\": [\n    {\n      \"is_my_offer\": false,\n      \"is_public\": true,\n      \"height_expired\": 103173,\n      \"min_height\": 103143,\n      \"receive_amount\": 100000000,\n      \"receive_currency\": \"BTC\",\n      \"send_amount\": 1200000000,\n      \"send_currency\": \"BEAM\",\n      \"status\": 0,\n      \"status_string\": \"pending\",\n      \"time_created\": \"2020.03.04 16:37:44\",\n      \"token\": \"6xfTV5NF6JWbcZLupbhTHNEQqnGjHQEL5L5VsT4XhAkMw9GqTzMowAVQVhpUWSAvg8cqtfV1s6BKSa75zk8vCMK7mVP7xNjATJ2pPCNcu3U8UYz4rce4gRuTBuYNDbyY7zFEEzMZL2RKKjGCtEN2bpCif8GuGUekzRc8hiL\",\n      \"txId\": \"f87b06cf752040cdaefbf99831bc3e80\"\n    },\n\n  ]\n}\n","language":"json","meta":"","className":["language-json"]},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n  \"id\": 1236,\n  \"jsonrpc\": \"2.0\",\n  \"result\": [\n    {\n      \"is_my_offer\": false,\n      \"is_public\": true,\n      \"height_expired\": 103173,\n      \"min_height\": 103143,\n      \"receive_amount\": 100000000,\n      \"receive_currency\": \"BTC\",\n      \"send_amount\": 1200000000,\n      \"send_currency\": \"BEAM\",\n      \"status\": 0,\n      \"status_string\": \"pending\",\n      \"time_created\": \"2020.03.04 16:37:44\",\n      \"token\": \"6xfTV5NF6JWbcZLupbhTHNEQqnGjHQEL5L5VsT4XhAkMw9GqTzMowAVQVhpUWSAvg8cqtfV1s6BKSa75zk8vCMK7mVP7xNjATJ2pPCNcu3U8UYz4rce4gRuTBuYNDbyY7zFEEzMZL2RKKjGCtEN2bpCif8GuGUekzRc8hiL\",\n      \"txId\": \"f87b06cf752040cdaefbf99831bc3e80\"\n    },\n\n  ]\n}\n"}]}]},{"type":"element","tag":"h2","props":{"id":"swap_create_offer"},"children":[{"type":"text","value":"swap_create_offer"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Creates swap offer that can be published on a board or sent directly to other side"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"code":"{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1236,\n    \"method\": \"swap_create_offer\",\n    \"params\": {\n        \"send_amount\": 44000000000,\n        \"send_currency\": \"beam\",\n        \"receive_amount\": 2000000000,\n        \"receive_currency\": \"btc\",\n        \"beam_fee\": 100,\n        \"fee_rate\": 90000,\n        \"offer_expires\": 30,\n        \"comment\": \"API\"\n    }\n}\n","language":"json","meta":"","className":["language-json"]},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1236,\n    \"method\": \"swap_create_offer\",\n    \"params\": {\n        \"send_amount\": 44000000000,\n        \"send_currency\": \"beam\",\n        \"receive_amount\": 2000000000,\n        \"receive_currency\": \"btc\",\n        \"beam_fee\": 100,\n        \"fee_rate\": 90000,\n        \"offer_expires\": 30,\n        \"comment\": \"API\"\n    }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"code":"{\n  \"id\": 1236,\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"txId\": \"062757f5ea62448589d977aa05c5782f\",\n    \"token\": \"TJeBeBjF48BdyxTDJg8gjogn9eDKQUx1Nm18iHPw53YoFipxKKkutNUV5AkVnFyLohpSrWsrnFNLGyBakVGY4Y2URdSQ52cDACHGDuHjYVpjMz8KN7q6rJrWGEXah2wJXHxrARYbAh7dTizdtQxaNVj34dfr8wKkfPFC7vmk\"\n  }\n}\n","language":"json","meta":"","className":["language-json"]},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n  \"id\": 1236,\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"txId\": \"062757f5ea62448589d977aa05c5782f\",\n    \"token\": \"TJeBeBjF48BdyxTDJg8gjogn9eDKQUx1Nm18iHPw53YoFipxKKkutNUV5AkVnFyLohpSrWsrnFNLGyBakVGY4Y2URdSQ52cDACHGDuHjYVpjMz8KN7q6rJrWGEXah2wJXHxrARYbAh7dTizdtQxaNVj34dfr8wKkfPFC7vmk\"\n  }\n}\n"}]}]},{"type":"element","tag":"h2","props":{"id":"swap_offer_status"},"children":[{"type":"text","value":"swap_offer_status"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Shows your offer status or swap transaction in which you are participating"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"code":"{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 126,\n    \"method\": \"swap_offer_status\",\n    \"params\": {\n        \"tx_id\": \"b35fd69030694009b8bf849140d9319e\"\n    }\n}\n","language":"json","meta":"","className":["language-json"]},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 126,\n    \"method\": \"swap_offer_status\",\n    \"params\": {\n        \"tx_id\": \"b35fd69030694009b8bf849140d9319e\"\n    }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"code":"{\n    \"id\": 126,\n    \"jsonrpc\": \"2.0\",\n    \"result\": {\n        \"height_expired\": 140726,\n        \"min_height\": 140696,\n        \"status\": 4,\n        \"status_string\": \"expired\",\n        \"time_created\": \"2020.03.16 17:22:12\",\n        \"tx_id\": \"b35fd69030694009b8bf849140d9319e\"\n    }\n}\n","language":"json","meta":"","className":["language-json"]},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"id\": 126,\n    \"jsonrpc\": \"2.0\",\n    \"result\": {\n        \"height_expired\": 140726,\n        \"min_height\": 140696,\n        \"status\": 4,\n        \"status_string\": \"expired\",\n        \"time_created\": \"2020.03.16 17:22:12\",\n        \"tx_id\": \"b35fd69030694009b8bf849140d9319e\"\n    }\n}\n"}]}]},{"type":"element","tag":"h2","props":{"id":"swap_decode_token"},"children":[{"type":"text","value":"swap_decode_token"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Decode swap token"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"code":"{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1236,\n    \"method\": \"swap_decode_token\",\n    \"params\": {\n        \"token\" : \"6xfNAUemTbmp7KRCRydiGStMZe6oRh59LzS7uk1V4eTrUX1mKcCGY7jdtMtSs4XLt6Ug8jWnepMEZCrqSUw7PeKRDZ8yyVZu1WHXzootpybBjX3nVxxHRSdk4ncBGDh1cssmiJhswZC9PfsaJmRKqXJM3x9tcX7EZn5Vjg8\"\n    }\n}\n","language":"json","meta":"","className":["language-json"]},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1236,\n    \"method\": \"swap_decode_token\",\n    \"params\": {\n        \"token\" : \"6xfNAUemTbmp7KRCRydiGStMZe6oRh59LzS7uk1V4eTrUX1mKcCGY7jdtMtSs4XLt6Ug8jWnepMEZCrqSUw7PeKRDZ8yyVZu1WHXzootpybBjX3nVxxHRSdk4ncBGDh1cssmiJhswZC9PfsaJmRKqXJM3x9tcX7EZn5Vjg8\"\n    }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"code":"{\n    \"id\": 1236,\n    \"jsonrpc\": \"2.0\",\n    \"result\": {\n        \"height_expired\": 123428,\n        \"is_my_offer\": false,\n        \"is_public\": false,\n        \"min_height\": 123398,\n        \"receive_amount\": 200000000,\n        \"receive_currency\": \"BEAM\",\n        \"send_amount\": 100000000,\n        \"send_currency\": \"BTC\",\n        \"time_created\": \"2020.03.04 16:37:44\",\n        \"tx_id\": \"d218356770b34fe4aeab01fb12c6074c\"\n    }\n}\n","language":"json","meta":"","className":["language-json"]},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"id\": 1236,\n    \"jsonrpc\": \"2.0\",\n    \"result\": {\n        \"height_expired\": 123428,\n        \"is_my_offer\": false,\n        \"is_public\": false,\n        \"min_height\": 123398,\n        \"receive_amount\": 200000000,\n        \"receive_currency\": \"BEAM\",\n        \"send_amount\": 100000000,\n        \"send_currency\": \"BTC\",\n        \"time_created\": \"2020.03.04 16:37:44\",\n        \"tx_id\": \"d218356770b34fe4aeab01fb12c6074c\"\n    }\n}\n"}]}]},{"type":"element","tag":"h2","props":{"id":"swap_publish_offer"},"children":[{"type":"text","value":"swap_publish_offer"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Publicates offer on a board"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"code":"{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 126,\n    \"method\": \"swap_publish_offer\",\n    \"params\": {\n        \"token\": \"TJeBeBjF48BdyxTDJg8gjogn9eDKQUx1Nm18iHPw53YoFipxKKkutNUV5AkVnFyLohpSrWsrnFNLGyBakVGY4Y2URdSQ52cDACHGDuHjYVpjMz8KN7q6rJrWGEXah2wJXHxrARYbAh7dTizdtQxaNVj34dfr8wKkfPFC7vmk\"\n    }\n}\n","language":"json","meta":"","className":["language-json"]},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 126,\n    \"method\": \"swap_publish_offer\",\n    \"params\": {\n        \"token\": \"TJeBeBjF48BdyxTDJg8gjogn9eDKQUx1Nm18iHPw53YoFipxKKkutNUV5AkVnFyLohpSrWsrnFNLGyBakVGY4Y2URdSQ52cDACHGDuHjYVpjMz8KN7q6rJrWGEXah2wJXHxrARYbAh7dTizdtQxaNVj34dfr8wKkfPFC7vmk\"\n    }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"code":"{\n  \"id\": 126,\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"is_my_offer\": true,\n    \"is_public\": true,\n    \"height_expired\": 103173,\n    \"min_height\": 103143\n    \"receive_amount\": 2000000000,\n    \"receive_currency\": \"BTC\",\n    \"send_amount\": 44000000000,\n    \"send_currency\": \"BEAM\",\n    \"status\": 0,\n    \"status_string\": \"pending\",\n    \"time_created\": \"2020.02.19 11:29:19\",\n    \"token\": \"TJeBeBjF48BdyxTDJg8gjogn9eDKQUx1Nm18iHPw53YoFipxKKkutNUV5AkVnFyLohpSrWsrnFNLGyBakVGY4Y2URdSQ52cDACHGDuHjYVpjMz8KN7q6rJrWGEXah2wJXHxrARYbAh7dTizdtQxaNVj34dfr8wKkfPFC7vmk\",\n    \"txId\": \"062757f5ea62448589d977aa05c5782f\"\n  }\n}\n","language":"json","meta":"","className":["language-json"]},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n  \"id\": 126,\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"is_my_offer\": true,\n    \"is_public\": true,\n    \"height_expired\": 103173,\n    \"min_height\": 103143\n    \"receive_amount\": 2000000000,\n    \"receive_currency\": \"BTC\",\n    \"send_amount\": 44000000000,\n    \"send_currency\": \"BEAM\",\n    \"status\": 0,\n    \"status_string\": \"pending\",\n    \"time_created\": \"2020.02.19 11:29:19\",\n    \"token\": \"TJeBeBjF48BdyxTDJg8gjogn9eDKQUx1Nm18iHPw53YoFipxKKkutNUV5AkVnFyLohpSrWsrnFNLGyBakVGY4Y2URdSQ52cDACHGDuHjYVpjMz8KN7q6rJrWGEXah2wJXHxrARYbAh7dTizdtQxaNVj34dfr8wKkfPFC7vmk\",\n    \"txId\": \"062757f5ea62448589d977aa05c5782f\"\n  }\n}\n"}]}]},{"type":"element","tag":"h2","props":{"id":"swap_accept_offer"},"children":[{"type":"text","value":"swap_accept_offer"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Starts the swap offer published on a board or received directly from other side"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"code":"{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1236,\n    \"method\": \"swap_accept_offer\",\n    \"params\": {\n        \"beam_fee\": 100,\n        \"fee_rate\": 90000,\n        \"comment\": \"API-accept\",\n        \"token\" : \"6xfTV5NF6JWbcZLupbhTHNEQqnGjHQEL5L5VsT4XhAkMw9GqTzMowAVQVhpUWSAvg8cqtfV1s6BKSa75zk8vCMK7mVP7xNjATJ2pPCNcu3U8UYz4rce4gRuTBuYNDbyY7zFEEzMZL2RKKjGCtEN2bpCif8GuGUekzRc8hiL\"\n    }\n}\n","language":"json","meta":"","className":["language-json"]},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1236,\n    \"method\": \"swap_accept_offer\",\n    \"params\": {\n        \"beam_fee\": 100,\n        \"fee_rate\": 90000,\n        \"comment\": \"API-accept\",\n        \"token\" : \"6xfTV5NF6JWbcZLupbhTHNEQqnGjHQEL5L5VsT4XhAkMw9GqTzMowAVQVhpUWSAvg8cqtfV1s6BKSa75zk8vCMK7mVP7xNjATJ2pPCNcu3U8UYz4rce4gRuTBuYNDbyY7zFEEzMZL2RKKjGCtEN2bpCif8GuGUekzRc8hiL\"\n    }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"code":"{\n  \"id\": 1236,\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"height_expired\": 103173,\n    \"min_height\": 103143,\n    \"receive_amount\": 100000000,\n    \"receive_currency\": \"BTC\",\n    \"send_amount\": 1200000000,\n    \"send_currency\": \"BEAM\",\n    \"status\": 1,\n    \"status_string\": \"in progress\",\n    \"time_created\": \"2020.02.19 11:20:50\",\n    \"txId\": \"f87b06cf752040cdaefbf99831bc3e80\"\n  }\n}\n","language":"json","meta":"","className":["language-json"]},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n  \"id\": 1236,\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"height_expired\": 103173,\n    \"min_height\": 103143,\n    \"receive_amount\": 100000000,\n    \"receive_currency\": \"BTC\",\n    \"send_amount\": 1200000000,\n    \"send_currency\": \"BEAM\",\n    \"status\": 1,\n    \"status_string\": \"in progress\",\n    \"time_created\": \"2020.02.19 11:20:50\",\n    \"txId\": \"f87b06cf752040cdaefbf99831bc3e80\"\n  }\n}\n"}]}]},{"type":"element","tag":"h2","props":{"id":"swap_cancel_offer"},"children":[{"type":"text","value":"swap_cancel_offer"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Cancel swap offer (cancels running transaction, return true if successfully canceled or error with the reason)"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"code":"{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 126,\n    \"method\": \"swap_cancel_offer\",\n    \"params\": {\n        \"txId\" : \"a13525181c0d45b0a4c5c1a697c8a7b8\"\n    }\n}\n","language":"json","meta":"","className":["language-json"]},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 126,\n    \"method\": \"swap_cancel_offer\",\n    \"params\": {\n        \"txId\" : \"a13525181c0d45b0a4c5c1a697c8a7b8\"\n    }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"code":"{\n  \"id\": 126,\n  \"jsonrpc\": \"2.0\",\n  \"result\": true\n}\n","language":"json","meta":"","className":["language-json"]},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n  \"id\": 126,\n  \"jsonrpc\": \"2.0\",\n  \"result\": true\n}\n"}]}]},{"type":"element","tag":"h2","props":{"id":"swap_get_balance"},"children":[{"type":"text","value":"swap_get_balance"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"code":"{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 126,\n    \"method\": \"swap_get_balance\",\n    \"params\": {\n        \"coin\": \"btc\"\n    }\n}\n","language":"json","meta":"","className":["language-json"]},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 126,\n    \"method\": \"swap_get_balance\",\n    \"params\": {\n        \"coin\": \"btc\"\n    }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"code":"{\n    \"id\": 126,\n    \"jsonrpc\": \"2.0\",\n    \"result\": {\n        \"available\": 129899985060\n    }\n}\n","language":"json","meta":"","className":["language-json"]},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"id\": 126,\n    \"jsonrpc\": \"2.0\",\n    \"result\": {\n        \"available\": 129899985060\n    }\n}\n"}]}]},{"type":"element","tag":"h2","props":{"id":"swap_recommended_fee_rate"},"children":[{"type":"text","value":"swap_recommended_fee_rate"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"pre","props":{"code":"{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 127,\n    \"method\": \"swap_recommended_fee_rate\",\n    \"params\": {\n        \"coin\": \"btc\"\n    }\n}\n","language":"json","meta":"","className":["language-json"]},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 127,\n    \"method\": \"swap_recommended_fee_rate\",\n    \"params\": {\n        \"coin\": \"btc\"\n    }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]}]},{"type":"element","tag":"pre","props":{"code":"{\n    \"id\": 127,\n    \"jsonrpc\": \"2.0\",\n    \"result\": {\n        \"feerate\": 35123\n    }\n}\n","language":"json","meta":"","className":["language-json"]},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"id\": 127,\n    \"jsonrpc\": \"2.0\",\n    \"result\": {\n        \"feerate\": 35123\n    }\n}\n"}]}]},{"type":"element","tag":"h3","props":{"id":"swap-offers-statuses-description"},"children":[{"type":"text","value":"Swap offers statuses description"}]},{"type":"element","tag":"pre","props":{"code":"Pending (0)     - waiting for someone accept your offer, or waiting when you accept offer\nInProgress (1)  - to indicate that swap transaction in progress, you should stay online\nCompleted (2)   - a swap transaction is completed\nCanceled (3)    - \"Cancelled\" (by You)\nExpired(4)      - offer lifetime expired\nFailed (5)      - failed for some reason\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"Pending (0)     - waiting for someone accept your offer, or waiting when you accept offer\nInProgress (1)  - to indicate that swap transaction in progress, you should stay online\nCompleted (2)   - a swap transaction is completed\nCanceled (3)    - \"Cancelled\" (by You)\nExpired(4)      - offer lifetime expired\nFailed (5)      - failed for some reason\n"}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"api","depth":2,"text":"API"},{"id":"swap_offers_list","depth":2,"text":"swap_offers_list"},{"id":"swap_offers_board","depth":2,"text":"swap_offers_board"},{"id":"swap_create_offer","depth":2,"text":"swap_create_offer"},{"id":"swap_offer_status","depth":2,"text":"swap_offer_status"},{"id":"swap_decode_token","depth":2,"text":"swap_decode_token"},{"id":"swap_publish_offer","depth":2,"text":"swap_publish_offer"},{"id":"swap_accept_offer","depth":2,"text":"swap_accept_offer"},{"id":"swap_cancel_offer","depth":2,"text":"swap_cancel_offer"},{"id":"swap_get_balance","depth":2,"text":"swap_get_balance"},{"id":"swap_recommended_fee_rate","depth":2,"text":"swap_recommended_fee_rate","children":[{"id":"swap-offers-statuses-description","depth":3,"text":"Swap offers statuses description"}]}]}},"_type":"markdown","_id":"content:docs:core-tech:Beam-wallet-protocol-SWAP-API-(BETA).md","_source":"content","_file":"docs/core-tech/Beam-wallet-protocol-SWAP-API-(BETA).md","_extension":"md"},{"_path":"/docs/core-tech/beam-web-wallet-starter-kit","_dir":"core-tech","_draft":false,"_partial":false,"_locale":"","title":"Beam Web Wallet Starter Kit working draft","description":"Web wallet starter allows you easily integrate Beam with your service, create a bunch of wallets and manage them... (TODO)","body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"beam-web-wallet-starter-kit-working-draft"},"children":[{"type":"text","value":"Beam Web Wallet Starter Kit "},{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"working draft"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Web wallet starter allows you easily integrate Beam with your service, create a bunch of wallets and manage them... (TODO)"}]},{"type":"element","tag":"h2","props":{"id":"web-wallet-scheme"},"children":[{"type":"text","value":"Web wallet scheme"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Browser + Key Keeper <==> Web Service\n(TODO: here will be detailed scheme)."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Let's do a simple integration step by step with the examples."}]},{"type":"element","tag":"h2","props":{"id":"obtain-binaries"},"children":[{"type":"text","value":"Obtain binaries"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"You can download prebuild binaries from our server with nightly builds "},{"type":"element","tag":"a","props":{"href":"https://builds.beam-mw.com/master/","rel":["nofollow"]},"children":[{"type":"text","value":"https://builds.beam-mw.com/master/"}]},{"type":"text","value":" or you can build all the parts yourself, here are build instructions (TODO)"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"At the end, you need "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"wallet-service-masternet"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"wasm-key-keeper.js"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"wasm-key-keeper.wasm"}]}]},{"type":"element","tag":"h2","props":{"id":"load-key-keeper-to-the-client"},"children":[{"type":"text","value":"Load Key Keeper to the client"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Put the code near "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"wasm-key-keeper.js"}]},{"type":"text","value":" and start any static server."}]},{"type":"element","tag":"pre","props":{"className":["language-html"],"code":"<!DOCTYPE html>\n<html>\n<script src='wasm-key-keeper.js'></script>\n<script type=\"text/javascript\">\n    Module().then(() => console.log(`Key Keeper module successfully loaded.`))\n</script>\n</html>\n","language":"html","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"<!DOCTYPE html>\n<html>\n<script src='wasm-key-keeper.js'></script>\n<script type=\"text/javascript\">\n    Module().then(() => console.log(`Key Keeper module successfully loaded.`))\n</script>\n</html>\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"If all is OK you will see "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Key Keeper module successfully loaded."}]},{"type":"text","value":" message in the browser console."}]},{"type":"element","tag":"h2","props":{"id":"connect-to-the-wallet-service"},"children":[{"type":"text","value":"Connect to the Wallet Service"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Run the service with the following parameters "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"wallet-service-masternet -n eu-node04.masternet.beam.mw:8100 --port 8080"}]},{"type":"text","value":"."}]},{"type":"element","tag":"pre","props":{"className":["language-html"],"code":"<!DOCTYPE html>\n<html>\n<script src='wasm-key-keeper.js'></script>\n<script type=\"text/javascript\">\n    Module().then(() => \n    {\n        console.log(`Key Keeper module successfully loaded.`)\n        \n        let connection = new WebSocket('ws://127.0.0.1:8080')\n        connection.onopen = () => console.log(`Connected to the Wallet Servce.`)\n    })\n</script>\n</html>\n","language":"html","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"<!DOCTYPE html>\n<html>\n<script src='wasm-key-keeper.js'></script>\n<script type=\"text/javascript\">\n    Module().then(() => \n    {\n        console.log(`Key Keeper module successfully loaded.`)\n        \n        let connection = new WebSocket('ws://127.0.0.1:8080')\n        connection.onopen = () => console.log(`Connected to the Wallet Servce.`)\n    })\n</script>\n</html>\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"We are using WebSockets here, because we need two-way communication with the service and service can request any keykeeper method, to sign transaction for example."}]},{"type":"element","tag":"h2","props":{"id":"init-key-keeper-with-a-seed-phase"},"children":[{"type":"text","value":"Init Key Keeper with a seed phase"}]},{"type":"element","tag":"pre","props":{"className":["language-html"],"code":"<!DOCTYPE html>\n<html>\n<script src='wasm-key-keeper.js'></script>\n<script type=\"text/javascript\">\n    Module().then(Module => \n    {\n        console.log(`Key Keeper module successfully loaded.`)\n        \n        let connection = new WebSocket('ws://127.0.0.1:8080')\n        connection.onopen = () => \n        {\n            console.log(`Connected to the Wallet Service.`)\n\n            // generate seed phrase\n            let seed = Module.KeyKeeper.GeneratePhrase()\n            console.log(`New Seed: ${seed}`)\n\n            // init Key Keeper with the seed phrase\n            let keykeeper = new Module.KeyKeeper(seed)\n        }\n    })\n</script>\n</html>\n","language":"html","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"<!DOCTYPE html>\n<html>\n<script src='wasm-key-keeper.js'></script>\n<script type=\"text/javascript\">\n    Module().then(Module => \n    {\n        console.log(`Key Keeper module successfully loaded.`)\n        \n        let connection = new WebSocket('ws://127.0.0.1:8080')\n        connection.onopen = () => \n        {\n            console.log(`Connected to the Wallet Service.`)\n\n            // generate seed phrase\n            let seed = Module.KeyKeeper.GeneratePhrase()\n            console.log(`New Seed: ${seed}`)\n\n            // init Key Keeper with the seed phrase\n            let keykeeper = new Module.KeyKeeper(seed)\n        }\n    })\n</script>\n</html>\n"}]}]},{"type":"element","tag":"h2","props":{"id":"create-wallet"},"children":[{"type":"text","value":"Create wallet"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"To create wallet you have to call "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"create_wallet"}]},{"type":"text","value":" jsonrpc api method with "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"pass"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"ownerkey"}]},{"type":"text","value":" parameters."}]},{"type":"element","tag":"pre","props":{"className":["language-js"],"code":"{\n    jsonrpc:'2.0',\n    id:'<request ID>',\n    method:'create_wallet',\n    params:\n    {\n        pass:'<wallet password>'\n        ownerkey:'<owner key>',\n    }\n}\n","language":"js","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    jsonrpc:'2.0',\n    id:'<request ID>',\n    method:'create_wallet',\n    params:\n    {\n        pass:'<wallet password>'\n        ownerkey:'<owner key>',\n    }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Here is an example:"}]},{"type":"element","tag":"pre","props":{"className":["language-html"],"code":"<!DOCTYPE html>\n<html>\n<script src='wasm-key-keeper.js'></script>\n<script type=\"text/javascript\">\n    Module().then(Module => \n    {\n        console.log(`Key Keeper module successfully loaded.`)\n        \n        let connection = new WebSocket('ws://127.0.0.1:8080')\n        connection.onopen = () => \n        {\n            console.log(`Connected to the Wallet Service.`)\n\n            // generate seed phrase\n            let seed = Module.KeyKeeper.GeneratePhrase()\n            console.log(`New Seed: ${seed}`)\n\n            // init Key Keeper with the seed phrase\n            let keykeeper = new Module.KeyKeeper(seed)\n\n            connection.onmessage = e => \n            {\n\n                let data = JSON.parse(e.data)\n\n                if(data.result)     console.log(`Wallet is successfully created, your ID: ${data.result}`)\n                else if(data.error) console.log(`error occured, code:${data.error.code} text:${data.error.data}`)\n                else if(data.method) connection.send(keykeeper.invokeServiceMethod(e.data))\n            }\n\n            let walletPassword = '12345678'\n            let ownerKey = keykeeper.getOwnerKey(walletPassword)\n            console.log(`Owner Key: ${ownerKey}`)\n\n            // create a wallet request\n            connection.send(JSON.stringify({\n                jsonrpc: '2.0',\n                id: 0,\n                method: 'create_wallet',\n                params:\n                {\n                    pass: walletPassword,\n                    ownerkey: ownerKey\n                }\n            }))\n        }\n    })\n</script>\n</html>\n","language":"html","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"<!DOCTYPE html>\n<html>\n<script src='wasm-key-keeper.js'></script>\n<script type=\"text/javascript\">\n    Module().then(Module => \n    {\n        console.log(`Key Keeper module successfully loaded.`)\n        \n        let connection = new WebSocket('ws://127.0.0.1:8080')\n        connection.onopen = () => \n        {\n            console.log(`Connected to the Wallet Service.`)\n\n            // generate seed phrase\n            let seed = Module.KeyKeeper.GeneratePhrase()\n            console.log(`New Seed: ${seed}`)\n\n            // init Key Keeper with the seed phrase\n            let keykeeper = new Module.KeyKeeper(seed)\n\n            connection.onmessage = e => \n            {\n\n                let data = JSON.parse(e.data)\n\n                if(data.result)     console.log(`Wallet is successfully created, your ID: ${data.result}`)\n                else if(data.error) console.log(`error occured, code:${data.error.code} text:${data.error.data}`)\n                else if(data.method) connection.send(keykeeper.invokeServiceMethod(e.data))\n            }\n\n            let walletPassword = '12345678'\n            let ownerKey = keykeeper.getOwnerKey(walletPassword)\n            console.log(`Owner Key: ${ownerKey}`)\n\n            // create a wallet request\n            connection.send(JSON.stringify({\n                jsonrpc: '2.0',\n                id: 0,\n                method: 'create_wallet',\n                params:\n                {\n                    pass: walletPassword,\n                    ownerkey: ownerKey\n                }\n            }))\n        }\n    })\n</script>\n</html>\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Now, when you got your wallet ID, you can call any "},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/wiki/Beam-wallet-protocol-API#api","rel":["nofollow"]},"children":[{"type":"text","value":"Wallet API"}]},{"type":"text","value":" method, like check status, create an address or do a transaction."}]},{"type":"element","tag":"h2","props":{"id":"open-wallet"},"children":[{"type":"text","value":"Open wallet"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Open wallet with given ID and password."}]},{"type":"element","tag":"pre","props":{"className":["language-js"],"code":"{\n    jsonrpc:'2.0',\n    id:'<request ID>',\n    method:'open_wallet',\n    params:\n    {\n        id:'<wallet ID>',\n        pass:'<wallet password>'\n    }\n}\n","language":"js","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    jsonrpc:'2.0',\n    id:'<request ID>',\n    method:'open_wallet',\n    params:\n    {\n        id:'<wallet ID>',\n        pass:'<wallet password>'\n    }\n}\n"}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"web-wallet-scheme","depth":2,"text":"Web wallet scheme"},{"id":"obtain-binaries","depth":2,"text":"Obtain binaries"},{"id":"load-key-keeper-to-the-client","depth":2,"text":"Load Key Keeper to the client"},{"id":"connect-to-the-wallet-service","depth":2,"text":"Connect to the Wallet Service"},{"id":"init-key-keeper-with-a-seed-phase","depth":2,"text":"Init Key Keeper with a seed phase"},{"id":"create-wallet","depth":2,"text":"Create wallet"},{"id":"open-wallet","depth":2,"text":"Open wallet"}]}},"_type":"markdown","_id":"content:docs:core-tech:Beam-Web-Wallet-Starter-Kit.md","_source":"content","_file":"docs/core-tech/Beam-Web-Wallet-Starter-Kit.md","_extension":"md"},{"_path":"/docs/core-tech/beamx-getting-started","_dir":"core-tech","_draft":false,"_partial":false,"_locale":"","title":"Welcome to BeamX","description":"Hi and Welcome to BeamX, Confidential DeFi Experimental Platform based on Beam Confidential blockchain.","body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"welcome-to-beamx"},"children":[{"type":"text","value":"Welcome to BeamX"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Hi and Welcome to "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"BeamX"}]},{"type":"text","value":", Confidential DeFi Experimental Platform based on Beam Confidential blockchain."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"We invite you to build BeamX together with us and actively contribute both as a user and as developer.\nThis document contains everything you need to get started with BeamX"}]},{"type":"element","tag":"h2","props":{"id":"before-we-start"},"children":[{"type":"text","value":"Before we start"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"IMPORTANT"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"BeamX is very new and experimental project, it is currently in public testnet, so all the assets on it including Beam are for play only."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"You can expect a lot of things to be broken quite frequently"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Here are two Telegram groups for user and developer support:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://t.me/BeamXSupport","rel":["nofollow"]},"children":[{"type":"text","value":"https://t.me/BeamXSupport"}]},{"type":"text","value":" - for general issues related to BeamX"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://t.me/BeamXDev","rel":["nofollow"]},"children":[{"type":"text","value":"https://t.me/BeamXDev"}]},{"type":"text","value":"     - for developers building on BeamX"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"We recommend that you join these groups and ask any questions"}]},{"type":"element","tag":"h2","props":{"id":"getting-the-binaries"},"children":[{"type":"text","value":"Getting the binaries"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"You can download BeamX compatible binaries for your platform at "},{"type":"element","tag":"a","props":{"href":"https://beam.mw/downloads/beamx","rel":["nofollow"]},"children":[{"type":"text","value":"https://beam.mw/downloads/beamx"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"If you would like to build BeamX yourself from source code please refer to the "},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/wiki/How-to-build","rel":["nofollow"]},"children":[{"type":"text","value":"Building Instructions Guide"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"We strongly recommend that you get the node and the CLI wallet in addition to the Desktop wallet even if you only intend to use BeamX. The reason for that is that many interesting contracts you might want to run will take time to provide graphical applications. Having your own node and running CLI wallet will allow you to use the newest and coolest features. It is not complicated, as we will see in a minute."}]},{"type":"element","tag":"h2","props":{"id":"using-beamx-cli-wallet"},"children":[{"type":"text","value":"Using BeamX CLI wallet"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Once you download and unzip CLI binary, put it in a folder called 'beamx' anywhere on your machine. Once this is done, open your favorite Terminal or Command Prompt and change directory to the 'beamx' folder you have just created."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"TIP: Since BeamX CLI wallet is an extended version of Beam CLI wallet most of the documentation "},{"type":"element","tag":"a","props":{"href":"https://documentation.beam.mw/en/latest/rtd_pages/user_cli_wallet_guide.html","rel":["nofollow"]},"children":[{"type":"text","value":"here"}]},{"type":"text","value":" is applicable to BeamX CLI Wallet as well."}]},{"type":"element","tag":"h3","props":{"id":"initializing-the-wallet"},"children":[{"type":"text","value":"Initializing the wallet"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Assuming your wallet binary is called something like beam-wallet-beamx.exe (on Windows) or beam-wallet-beamx (on Linux or Mac) run:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"beam-wallet-beamx.exe init"}]},{"type":"text","value":" (for Windows)\n"},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"./beam-wallet-beamx init"}]},{"type":"text","value":" (for Linux or Mac)"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Running this command will:"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Create a new wallet database in the same folder"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Print out your seed phrase (which you should copy and keep somewhere, just in case)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Prompt you to setup wallet password, we recommend using something short like 123 since, remember, it's just play tokens"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Once you are done, move to the next step"}]},{"type":"element","tag":"h3","props":{"id":"running-your-own-node"},"children":[{"type":"text","value":"Running your own node"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"We highly recommend that you run your own node to play with BeamX. To do so, download the node binary and put it in the same location as BeamX CLI Wallet, namely in the 'beamx' folder you have created."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Before you run your own node, you will need to get your owner key by running the following command:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"beam-wallet-beamx.exe export_owner_key"}]},{"type":"text","value":" (for Windows)\n"},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"./beam-wallet-beamx export_owner_key"}]},{"type":"text","value":" (for Linux or Mac)"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Running this command will print out your owner key. You will need it in a second when running your node."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Run:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"beam-node-beamx --port=8501 --owner_key=<put here the owner key from the previous step without the brackets> --peer=us-node01.beamx.beam.mw:8100,us-node02.beamx.beam.mw:8100,us-node03.beamx.beam.mw:8100"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Wait for the node to synchronize to the current blockchain height which you can see here: "},{"type":"element","tag":"a","props":{"href":"http://beamx.explorer.beam.mw/","rel":["nofollow"]},"children":[{"type":"text","value":"http://beamx.explorer.beam.mw/"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"You are ready to start using your wallet. To make sure everything works you can start by running:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"beam-wallet-beamx.exe info"}]},{"type":"text","value":" (for Windows)\n"},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"./beam-wallet-beamx info"}]},{"type":"text","value":" (for Linux or Mac)"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Which should show that your balance is currently 0"}]},{"type":"element","tag":"h3","props":{"id":"getting-the-shaders"},"children":[{"type":"text","value":"Getting the Shaders"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"BeamX Smart Contracts are implemented with special programs called Beam Shaders. Shaders are small (or not so small) programs that can be written in several different programming languages but are eventually compiled to .wasm files (since Beam Virtual Machine runs on something called WebAssembly)"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"To get started you do not need to write or build Shaders yourself. Instead you can download the latest samples and examples from our repository here:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/tree/beamX/bvm/Shaders","rel":["nofollow"]},"children":[{"type":"text","value":"https://github.com/BeamMW/beam/tree/beamX/bvm/Shaders"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"As you can see, there are several folders there called 'faucet', 'vault' and 'roulette' and maybe others. In each of those folders are two files usually called 'contract.wasm' and 'app.wasm'."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The reason for that is that each application comes in two parts. One part is the contract that is deployed to the blockchain (contract.wasm) and the other one is used by the wallet to interact with the contract (app.wasm)"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"We suggest to create a folder called 'shaders' under the 'beamx' folder and put the subfolder with specific apps like 'faucet' and such there."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Now let's see how we can run some apps!"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Get some coins from "},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/wiki/Using-BeamX-Faucet-contract-with-CLI-Wallet","rel":["nofollow"]},"children":[{"type":"text","value":"Faucet contract"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Put some coins in a "},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/wiki/Using-BeamX-Vault-contract-with-CLI-Wallet","rel":["nofollow"]},"children":[{"type":"text","value":"Vault contract"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Play Roulette with "},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/wiki/Using-BeamX-Roulette-contract-with-CLI-Wallet","rel":["nofollow"]},"children":[{"type":"text","value":"Roulette contract"}]}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"before-we-start","depth":2,"text":"Before we start"},{"id":"getting-the-binaries","depth":2,"text":"Getting the binaries"},{"id":"using-beamx-cli-wallet","depth":2,"text":"Using BeamX CLI wallet","children":[{"id":"initializing-the-wallet","depth":3,"text":"Initializing the wallet"},{"id":"running-your-own-node","depth":3,"text":"Running your own node"},{"id":"getting-the-shaders","depth":3,"text":"Getting the Shaders"}]}]}},"_type":"markdown","_id":"content:docs:core-tech:BeamX-Getting-Started.md","_source":"content","_file":"docs/core-tech/BeamX-Getting-Started.md","_extension":"md"},{"_path":"/docs/core-tech/blocks-headers-system-states.-concept-relevant-structures-and-values","_dir":"core-tech","_draft":false,"_partial":false,"_locale":"","title":"Blocks, Headers, System States Concept, Relevant Structures And Values","description":"First let's define terminology.","body":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"First let's define terminology."}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"System state - is a "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"valid"}]},{"type":"text","value":" state of the system, which is fully defined by all the existing data (more about this later)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Block - is an information used to perform a "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"transition"}]},{"type":"text","value":" from one system state to another."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"To avoid ambiguity we refrain from saying \"block hash\" or \"block height\", because, strictly speaking, those are properties of the System state. OTOH blocks are just transactions, which may be combined."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Each state has a header, and there are several structures related to it."}]},{"type":"element","tag":"h3","props":{"id":"systemstateid"},"children":[{"type":"text","value":"SystemState::ID"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Consists of:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Merkle::Hash m_Hash"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Height m_Height"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Used to denote an existing known state. (Hash would be enough, but we decided to include the height as well)"}]},{"type":"element","tag":"h3","props":{"id":"systemstatefull"},"children":[{"type":"text","value":"SystemState::Full"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"A full header bound to the system state. Consists of:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Height m_Height"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Our convention: "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"m_Height = 0"}]},{"type":"text","value":" - is for initial system state, no data and nothing is interpreted yet. The next state, which is achieved after interpreting the genesis block, has "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"m_Height = 1"}]},{"type":"text","value":"."}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Merkle::Hash m_Prev"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"explicit reference to prev"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Difficulty::Raw m_ChainWork"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Cumulative chainwork (sum of difficulties) "},{"type":"element","tag":"u","props":{},"children":[{"type":"text","value":"including"}]},{"type":"text","value":" the difficulty of this state."}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Merkle::Hash m_Definition"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The Hash of the full system definition in this state (more about this later)"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Timestamp m_TimeStamp"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"PoW m_PoW"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Proof-of-Work. An equihash solution."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Contains the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Difficulty"}]},{"type":"text","value":" of this specific state."}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"System State Hash"}]},{"type":"text","value":" is calculated from all the header parameters, "},{"type":"element","tag":"u","props":{},"children":[{"type":"text","value":"including PoW"}]},{"type":"text","value":". Not to be confused with "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"m_Definition"}]},{"type":"text","value":", it's different."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Note that when many such headers should be presented for consecutive states - there are 3 redundant elements:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"m_Prev"}]},{"type":"text","value":" - obviously equals to the Hash of the previous state"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"m_Height"}]},{"type":"text","value":" - just increased by 1"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"m_ChainWork"}]},{"type":"text","value":" - can be calculated from previous header, after adding the difficulty of this one."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"So for those cases there are appropriate structures defined: "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"SystemState::Sequence::Prefix"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"SystemState::Sequence::Element"}]},{"type":"text","value":". And the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"SystemState::Full"}]},{"type":"text","value":" just inherits them both."}]},{"type":"element","tag":"h3","props":{"id":"pow"},"children":[{"type":"text","value":"PoW"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"BEAM uses equihash mining algorithm. It includes the following:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Difficulty m_Difficulty"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"m_Nonce"}]},{"type":"text","value":" - arbitrary 64-bit values"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"m_Indices"}]},{"type":"text","value":" - the solution, array of sorted indexes."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The input for the solver/verifier is constructed from all the Header fields, except the PoW solution itself. But it does include the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"m_Nonce"}]},{"type":"text","value":" and the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"m_Difficulty"}]},{"type":"text","value":". So that the difficulty must be selected before the mining, and can't be adjusted a-posteriori, if the solution eventually could reach higher difficulty (reached a smaller target)."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Note"}]},{"type":"text","value":": The whole PoW parameters, including the solution, are accounted for in calculating the System State Hash. This is an intentional design decision, which ensures it's not possible to construct the chain of the system state headers without actually mining them, and then be able to mine only some specific states on-demand. This assumption is essential for "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"FlyClient"}]},{"type":"text","value":" protocol."}]},{"type":"element","tag":"h1","props":{"id":"system-definition-hash"},"children":[{"type":"text","value":"System Definition Hash"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"One of the most important parameters. The complete system state is constructed from the following data:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"All the existing non-spent UTXOs, stored with the relevant parameters in an "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"UtxoTree"}]},{"type":"text","value":", which is a variant of the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"RadixTree"}]},{"type":"text","value":"."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"All the existing Kernels, stored in the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"RadixTree"}]},{"type":"text","value":"."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"MMR of all the inherited system states."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The System Definition Hash is defined as:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"System-Definition-Hash = Hash [ InheritedStates.Root | Hash (UTXOs.Root | Kernels.Root) ]"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"After interpreting the appropriate block, the Full Node evaluates the actual System-Definition-Hash, and compares it with value in the State Header."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Note also that it's actually a root hash of the Merkle tree, whose elements are another Merkle trees. Using this property it's possible to generate and verify Merkle proofs for:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Existing UTXO in the current system state"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Existing Kernel"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Inherited System State"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"All the Verifier needs is the proof, and the System Definition Hash. In addition to verifying the proof, the Verifier ensures the proof suffix is in accordance to the known part of the Merkle tree structure. Means:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"For UTXOs and Kernels the Verifier knows the hashing direction of the last 2 elements."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"For inherited System State the Verifier knows the whole Merkle path, hence all the hashing directions are deduced automatically."}]}]},{"type":"element","tag":"h1","props":{"id":"history-compression-macroblocks"},"children":[{"type":"text","value":"History compression, Macroblocks"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"BEAM fully supports the excellent MW feature of history compression with removal of the spent outputs. However unlike what was written in the original MW whitepaper (published by monsieur Tom Elvis Jedusor) - there is no need to provide Merkle proofs or other supplementary info."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The \"compressed history\" in BEAM is actually just a one huge block, which we call a "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Macroblock"}]},{"type":"text","value":", which contains a single huge transaction, which is interpreted (almost) as a regular block/transaction. And this is where the System Definition Hash is of critical importance."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"No matter how big the compressed history is, the only thing that matters is the final system state, and it's verified according to the expected System Definition Hash. This is how the authenticity of the compressed history is verified."}]},{"type":"element","tag":"h1","props":{"id":"how-macroblocks-are-generated-and-used-in-beam"},"children":[{"type":"text","value":"How Macroblocks are generated and used in BEAM"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"There is an implementation of the merging two consequent (macro)blocks. It's a sort of a \"merge sort\" of all the transaction elements (which must be sorted both in input and the resulting blocks), with removal of spent elements. Using this implementation an arbitrary number of blocks may be merged by recursive halving."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Our initial design was to generate and keep a "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"cascade"}]},{"type":"text","value":" of macroblocks. Means, the Node each time merges several blocks at the tail, and then they are iteratively merged to the last merged macroblock, only if they are of the same complexity. This means at any moment we have a list of macroblocks of decreasing size, overall O(log(Height)) such blocks."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Then, to import a compressed history, the (other) Node downloads the most recent list of the consecutive macroblocks and interprets them according to their order."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"But later we abandoned this idea, mostly because of the hassles for the client to download a list of the macroblocks, especially given the fact they are constantly created and deleted by the generating Node."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"So currently the Node just creates a single macroblock once in a while (1 day by default), whereas the cascade-merge is used only internally by the Node to generate each time the new macroblock incrementally.\nWorth to note that during the macroblock generation, which can be a time-consuming operation, the Node is not paralyzed, and works as usual."}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"systemstateid","depth":3,"text":"SystemState::ID"},{"id":"systemstatefull","depth":3,"text":"SystemState::Full"},{"id":"pow","depth":3,"text":"PoW"}]}},"_type":"markdown","_id":"content:docs:core-tech:Blocks,-headers,-system-states.-Concept,-relevant-structures-and-values.md","_source":"content","_file":"docs/core-tech/Blocks,-headers,-system-states.-Concept,-relevant-structures-and-values.md","_extension":"md"},{"_path":"/docs/core-tech/cold-wallet-implementation-(deprecated)","_dir":"core-tech","_draft":false,"_partial":false,"_locale":"","title":"Cold wallet implementation","description":"","body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"cold-wallet-implementation"},"children":[{"type":"text","value":"Cold wallet implementation"}]},{"type":"element","tag":"h2","props":{"id":"definitions"},"children":[{"type":"text","value":"Definitions"}]},{"type":"element","tag":"h3","props":{"id":"cold-wallet"},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"cold"}]},{"type":"text","value":" wallet"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"can generate private keys, i.e. it has "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"master key"}]},{"type":"text","value":" generated from "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"seed phrase"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"has no connection with internet, as a result, it cannot send transactions to the node, and it cannot get proofs and notifications from the node"}]}]},{"type":"element","tag":"h3","props":{"id":"hot-wallet"},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"hot"}]},{"type":"text","value":" wallet"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"cannot generate any secrets from master key by the reason that it doesn't have it"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"has internet connection and can send/get messages from the node"}]}]},{"type":"element","tag":"h2","props":{"id":"design"},"children":[{"type":"text","value":"Design"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The goal of this design is to get cold wallet scenario with minimal changes in existing codebase."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The main idea is to split wallet database ("},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"wallet.db"}]},{"type":"text","value":") onto two parts: public ("},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"wallet.db"}]},{"type":"text","value":") and private ("},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"wallet.db.private"}]},{"type":"text","value":"). The last one should hold master key generated from seed phrase.\n\"Cold\" wallet has both of these files, \"hot\" has public data only. To be able to make tranasctions with this setup user have to constantly move public "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"wallet.db"}]},{"type":"text","value":" file between \"cold\" and \"hot\" wallets. Since we override "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"wallet.db"}]},{"type":"text","value":" we have to stop \"hot\" wallet before we copy "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"wallet.db"}]},{"type":"text","value":" file from/into its folder"}]},{"type":"element","tag":"h3","props":{"id":"changes"},"children":[{"type":"text","value":"Changes"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"For \"Cold\" wallet we don't set up connection with the node."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"\"Cold\" wallet stores all outgoing encrypted messages into public database ("},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"wallet.db"}]},{"type":"text","value":"), we subclass existing behavior with SBBS"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Add a stage for processing stored incoming messages."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"For \"hot\" wallet there is a need to add some checks if it has master key, also \"hot\" wallet has no ability to decrypt incoming SBBS messages, since it doesn't have private keys, so it has to store all incoming messages from the channel."}]}]},{"type":"element","tag":"h2","props":{"id":"usage"},"children":[{"type":"text","value":"Usage"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"To tell wallet that it works in \"cold\" mode you have to add "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--cold_wallet"}]},{"type":"text","value":" parameter"}]},{"type":"element","tag":"h3","props":{"id":"initialization-of-cold-wallet"},"children":[{"type":"text","value":"Initialization of \"cold\" wallet"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"beam-wallet init --cold_wallet"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This command will create two databases: "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"wallet.db"}]},{"type":"text","value":" and "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"wallet.db.private"}]}]},{"type":"element","tag":"h3","props":{"id":"sending-from-cold-wallet"},"children":[{"type":"text","value":"Sending from \"cold\" wallet"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Pre-conditions:\nMake sure the cold wallet is synced. In order to do so, follow the next steps:"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"copy the "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"wallet.db"}]},{"type":"text","value":" file to the \"hot\" wallet's data folder."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"launch the \"hot\" wallet and wait till it's synced."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"stop the \"hot\" wallet, copy the "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"wallet.db"}]},{"type":"text","value":" file into the \"cold\" wallet folder."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"launch the \"cold\" wallet for listening.\n"},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"beam-wallet listen --cold_wallet"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Now as the \"cold\" wallet is synced, proceed with the next steps:"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"In the cold wallet run the command:\n"},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"beam-wallet send -a <amount> -r<receiver address> -f <fee> --cold_wallet"}]},{"type":"text","value":"\nNote: there is no need in node address in this case"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"copy "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"wallet.db"}]},{"type":"text","value":" file to \"hot\" wallet's data folder"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"launch \"hot\" wallet. It should send encrypted message to the node, also he may get encrypted message back."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"stop \"hot\" wallet, copy "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"wallet.db"}]},{"type":"text","value":" file into \"cold\" wallet folder"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"launch \"cold\" wallet for listening\n"},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"beam-wallet listen --cold_wallet"}]},{"type":"text","value":"\nit should create a signed transaction kernel"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"copy "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"wallet.db"}]},{"type":"text","value":" from \"cold\" to \"hot\"\nnew transaction should go to the node and got confirmed"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"copy "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"wallet.db"}]},{"type":"text","value":" from \"hot\" to \"cold\"\n\"cold\" wallet should have actual balance and transactions statuses"}]}]},{"type":"element","tag":"h3","props":{"id":"receiving-to-cold-wallet"},"children":[{"type":"text","value":"Receiving to \"cold\" wallet"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Generate new address in \"cold\" wallet and send it to the sender"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"copy "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"wallet.db"}]},{"type":"text","value":" to \"hot\""}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"launch \"hot\" wallet. Note there will be no new transactions, since \"hot\" wallet cannot decrypt incoming messages"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"stop \"hot\". copy "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"wallet.db"}]},{"type":"text","value":" from \"hot\" to \"cold\""}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"launch \"cold\" wallet for listening, it should get new transaction and accept it."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"copy "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"wallet.db"}]},{"type":"text","value":" from \"cold\" to \"hot\""}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"launch \"hot\", wait until new transaction becomes completed"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"copy "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"wallet.db"}]},{"type":"text","value":" \"hot\" to \"cold\" balance and transactions statuses should be correct."}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"definitions","depth":2,"text":"Definitions","children":[{"id":"cold-wallet","depth":3,"text":"cold wallet"},{"id":"hot-wallet","depth":3,"text":"hot wallet"}]},{"id":"design","depth":2,"text":"Design","children":[{"id":"changes","depth":3,"text":"Changes"}]},{"id":"usage","depth":2,"text":"Usage","children":[{"id":"initialization-of-cold-wallet","depth":3,"text":"Initialization of \"cold\" wallet"},{"id":"sending-from-cold-wallet","depth":3,"text":"Sending from \"cold\" wallet"},{"id":"receiving-to-cold-wallet","depth":3,"text":"Receiving to \"cold\" wallet"}]}]}},"_type":"markdown","_id":"content:docs:core-tech:Cold-wallet-implementation-(DEPRECATED).md","_source":"content","_file":"docs/core-tech/Cold-wallet-implementation-(DEPRECATED).md","_extension":"md"},{"_path":"/docs/core-tech/confidential-assets-(historical)","_dir":"core-tech","_draft":false,"_partial":false,"_locale":"","title":"Confidential Assets (historical)","description":"Consult the MW CLA section for Confidential Assets implementation details","body":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Consult the "},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/wiki/MW-CLA","rel":["nofollow"]},"children":[{"type":"text","value":"MW CLA"}]},{"type":"text","value":" section for Confidential Assets implementation details"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Consult the "},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/wiki/Confidential-assets-(BETA)","rel":["nofollow"]},"children":[{"type":"text","value":"Confidential assets (BETA)\n"}]},{"type":"text","value":" section for the Confidential Assets tutorial"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"THE TEXT BELOW IS KEPT FOR HISTORICAL REASONS"}]}]},{"type":"element","tag":"hr","props":{},"children":[]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"MW can be extended to allows encoding multiple types of assets to be traded on the same blockchain. And it will only need a slight modifications to actually allow this.\nThere are two types of assets that can be implemented: "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"predefined"}]},{"type":"text","value":" and "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"custom"}]},{"type":"text","value":". Each type has its advantages and limitations."}]},{"type":"element","tag":"h2","props":{"id":"basic-idea"},"children":[{"type":"text","value":"Basic idea"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The UTXO is an EC point, which is a linear combination of two nums (nothing-up-my-sleeve) generators: "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"G"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"H"}]},{"type":"text","value":", whereas "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"G"}]},{"type":"text","value":" is multiplied by the secret key (blinding factor), and the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"H"}]},{"type":"text","value":" - by the value."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"To allow multiple types of assets it's sufficient to use different generators (one per asset type) instead of the single "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"H"}]},{"type":"text","value":". There may be different schemes to represent such UTXOs, but in any of them the following should be taken into consideration:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Those "},{"type":"element","tag":"u","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"must"}]}]},{"type":"text","value":" be nums-generators, and the verifier should be able to verify this."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The verifier should be able to verify the rangeproof. Means - the bulletproof should be adjusted accordingly."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"There should be a brief scheme for the emission of the assets."}]}]},{"type":"element","tag":"h2","props":{"id":"predefined-asset-types"},"children":[{"type":"text","value":"Predefined asset types"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This idea belongs to Andrew Poelstra. Described "},{"type":"element","tag":"a","props":{"href":"https://blockstream.com/2017/04/03/blockstream-releases-elements-confidential-assets.html","rel":["nofollow"]},"children":[{"type":"text","value":"here"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Each UTXO should carry a "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"tag"}]},{"type":"text","value":", which is an EC point, which defines the asset type. The great advantage of this scheme is that all the tags are "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"blinded"}]},{"type":"text","value":". Means - anyone can verify that this tag corresponds to one of the defined asset types, but not to which of them exactly. This is achieved by using Andrew Poelstra's "},{"type":"element","tag":"u","props":{},"children":[{"type":"text","value":"Asset Surjection Proof"}]},{"type":"text","value":", which has a modest size compared to the bulletproof for a reasonably-small set of asset types."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The set of the asset types, as well as their emission schedule, must be defined for the blockchain. Any change to this will require a fork."}]},{"type":"element","tag":"h3","props":{"id":"another-variant"},"children":[{"type":"text","value":"Another variant"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Another possible way to implement this is to encode all the asset types within a single UTXO. That is, each UTXO is presumably a linear combination of all the generators at once. In this design "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"tags"}]},{"type":"text","value":" are not needed."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The drawback here is the increased complexity and size of the bulletproofs, which seem to be dramatic. So that the idea with "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"tags"}]},{"type":"text","value":", whereas an UTXO encodes only a single asset type - seems to be better."}]},{"type":"element","tag":"h2","props":{"id":"custom-asset-types"},"children":[{"type":"text","value":"Custom asset types"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In addition there is a possibility to allow "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"custom"}]},{"type":"text","value":" assets, which any user can emit and trade. As in the previous scheme, such UTXOs should carry a "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"tag"}]},{"type":"text","value":", which corresponds to the asset type. But this time those tags can't be blinded perfectly. All the user can do is present a set of tags, and prove that the used tag is one of them."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"So that custom tags should either be visible, or partially obfuscated. The encoded amount, naturally, is fully concealed."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Now, since there are no predefined generators used for custom asset types, there should be a way for the verified to make sure each such a generator is actually a nums-generator. This is addressed by the following scheme."}]},{"type":"element","tag":"h3","props":{"id":"asset-control"},"children":[{"type":"text","value":"Asset control"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"To create a custom asset type the user generates a public/private key pair. The public key serves as an "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Asset ID"}]},{"type":"text","value":", and the generator used for this asset type is derived from the ID via hashing, so that it may be considered as a sound nums-generator."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The user controls the emission and collection of the asset. The user can "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"convert"}]},{"type":"text","value":" some amount of the master asset type (i.e. BEAM) into his/her type by a special instruction, which is signed by the corresponding "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"private"}]},{"type":"text","value":" key. For convenience it can be embedded into the transaction kernel."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Note:"}]},{"type":"text","value":" The conversion is only needed to prevent bloat. The user effectively "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"buys"}]},{"type":"text","value":" his/her coins, but they are refundable. Only the user is be able to trade the unspent assets back to collect the refund. If the bloat is not an issue - it's possible to allow the emission for free."}]},{"type":"element","tag":"h1","props":{"id":"final-design"},"children":[{"type":"text","value":"Final design"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The BEAM should support both the predefined and custom assets."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"There should be several predefined asset types, which are automatically emitted by every new block. Their difference is the "},{"type":"element","tag":"u","props":{},"children":[{"type":"text","value":"emission schedule"}]},{"type":"text","value":". There should be one with constant emission, one with capped emission. Possibly another one with declining but non-converging (e.i. not capped) emission."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This is equivalent to having several coin types suitable for instant payment, store of value, and etc."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Custom asset tags are not emitted automatically, they're explicitly traded for one of the predefined types."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The modifications needed to support all this is considerable, but straightforward. The following should be modified:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Tags should be added to UTXOs"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"For predefined types: Assert Surjection proofs should be added to UTXOs"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"For custom types:\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Assert Surjection proofs may optionally be used, in addition to a list of the possible asset types."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Another possibility - they should not be blinded, and contain the "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Asset ID"}]},{"type":"text","value":" explicitly."}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Transaction/Block verification:\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Bulletproof code should be modified to support custom generators (probably slight performance degradation)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Custom type conversion instruction should be supported, but this is straightforward (only alters the summation to zero criteria)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Block emission should be handled w.r.t. predefined types and their emission schedule."}]}]}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"basic-idea","depth":2,"text":"Basic idea"},{"id":"predefined-asset-types","depth":2,"text":"Predefined asset types","children":[{"id":"another-variant","depth":3,"text":"Another variant"}]},{"id":"custom-asset-types","depth":2,"text":"Custom asset types","children":[{"id":"asset-control","depth":3,"text":"Asset control"}]}]}},"_type":"markdown","_id":"content:docs:core-tech:Confidential-assets-(historical).md","_source":"content","_file":"docs/core-tech/Confidential-assets-(historical).md","_extension":"md"},{"_path":"/docs/core-tech/confidential-assets","_dir":"core-tech","_draft":false,"_partial":false,"_locale":"","title":"Confidential Assets","description":"This documents describes CLI Confidential Assets workflow.","body":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This documents describes CLI Confidential Assets workflow."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Consult the "},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/wiki/MW-CLA","rel":["nofollow"]},"children":[{"type":"text","value":"MW CLA"}]},{"type":"text","value":" section for Confidential Assets implementation details."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Consult the "},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/wiki/Beam-wallet-protocol-API","rel":["nofollow"]},"children":[{"type":"text","value":"Beam wallet protocol API"}]},{"type":"text","value":" section for API calls description. N.B. assets can be registered only via CLI."}]},{"type":"element","tag":"h1","props":{"id":"overview"},"children":[{"type":"text","value":"Overview"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Assets Support"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Confidential Assets (hereinafter СA) support requires "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Fork2"}]},{"type":"text","value":" and at least "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"v5.0"}]},{"type":"text","value":" CLI/API. Any CA operation before "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Fork2"}]},{"type":"text","value":" would fail with the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"AssetsDisabledFork2 (45)"}]},{"type":"text","value":" error code."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"v5.0"}]},{"type":"text","value":" CA support is disabled by default to avoid compatibility issues. In the GUI wallet CA support cannot be enabled at the moment. All incoming CA transactions would be rejected by the GUI wallet with the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"AssetsDisabled (43)"}]},{"type":"text","value":" error code. Rejected CA transactions are not displayed by the GUI wallet. Full GUI assets support is planned for v5.1."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In the CLI and API "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--enable_assets"}]},{"type":"text","value":" flag should be specified to perform any CA transactions. Without this flag CA transactions would be rejected with the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"AssetsDisabled (43)"}]},{"type":"text","value":" error code."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Information about Assets UTXOs/Shielded Coins/Assets Transactions/Assets Summary can be displayed using "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--assets"}]},{"type":"text","value":" or "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--asset_id ID"}]},{"type":"text","value":" parameters added to the corresponding commands."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Fees"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"All fees (transaction fees and registration deposit) are always paid in BEAM/Groth. It is not possible to pay any fees using assets."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Asset Owner"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Asset Owner"}]},{"type":"text","value":" is the person (wallet) which registered the asset. Asset owner owns private key used for signing asset issue/consume/unreg operations. Only the asset owner can perform these operations."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"name":"assetid"},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Asset ID"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Asset ID"}]},{"type":"text","value":" is an unsigned integer associated with the asset. Asset is known to the world by its asset id. Asset operations are performed using its asset id. Node assigns asset id during the asset registration process and uses the first id available."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Technically there can be a situation when one asset is unregistered, asset id becomes available and the next registered asset takes the id that has been previously used. "},{"type":"element","tag":"a","props":{"href":"#lock"},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Lock period"}]}]},{"type":"text","value":" is introduced to ensure that asset receiver would never receive an unexpected (forged) asset."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Asset ID of 0 is reserved and represents original BEAM."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Asset Info"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Asset info"}]},{"type":"text","value":" is information about the asset. It includes asset metadata, total emission and lock height. Asset info is received by the wallet automatically during asset transactions or can be requested manually using "},{"type":"element","tag":"a","props":{"href":"#assetinfo"},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_info"}]}]},{"type":"text","value":" command."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Some parts of the asset info are valid only at the height the asset info has been received ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"refresh height"}]},{"type":"text","value":"). In subsequent blocks total asset emission can change or the asset become unregistered. Unregistering the asset invalidates all the information associated with the particular asset id."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"name":"limits"},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Limits"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Maximum Asset emission is 2"},{"type":"element","tag":"sup","props":{},"children":[{"type":"text","value":"128"}]},{"type":"text","value":"-1 asset nth units. Maximum amount for a single asset transaction (issue, consume, send, receive &c.) is 2"},{"type":"element","tag":"sup","props":{},"children":[{"type":"text","value":"64"}]},{"type":"text","value":"-1 asset nth units."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"name":"lock"},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Lock period"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Lock period is a timeframe when several asset operations are restricted for safety reasons. This ensures that asset is not changed during rollback and/or by the asset owner and that receiver of the asset would receive exactly the expected asset."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Asset becomes locked every time when its total emission reaches 0 or leaves 0. Currently lock period duration is set to "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"1440"}]},{"type":"text","value":" blocks (24 hours roughly)."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Restricted operations are the following:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Asset unreg"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Asset send/receive"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Restore"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"General rules apply to the restore process. You can restore your UTXOs but not transactions. To restore shielded\nUTXOs node used for the restore process should be running with your owner key. Asset info is not restored automatically. You would need to execute the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_info"}]},{"type":"text","value":" command for each restored asset manually after the restore process is completed."}]},{"type":"element","tag":"h1","props":{"id":"working-with-assets"},"children":[{"type":"text","value":"Working with assets"}]},{"type":"element","tag":"h2","props":{"id":"asset-registration"},"children":[{"type":"text","value":"Asset registration"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Before asset can be used it should be registered on chain using the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_reg"}]},{"type":"text","value":" command:"}]},{"type":"element","tag":"pre","props":{"code":"./beam-wallet asset_reg --pass 1 -n 127.0.0.1:10000 --asset_meta \"STD:SCH_VER=1;N=Beam Coin;SN=BEAM;UN=Beam;NTHUN=Groth;CUSTOM1=VAL1;CUSTOM2=VAL2\" --fee 100 --enable_assets \n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"./beam-wallet asset_reg --pass 1 -n 127.0.0.1:10000 --asset_meta \"STD:SCH_VER=1;N=Beam Coin;SN=BEAM;UN=Beam;NTHUN=Groth;CUSTOM1=VAL1;CUSTOM2=VAL2\" --fee 100 --enable_assets \n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"You must specify your wallet password, node address, asset meta, optional transaction fee and add "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--enable_assets"}]},{"type":"text","value":" flag."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Fees"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"There is a fixed fee for asset registration of 3000 BEAM. This fee is mandatory, cannot be changed and deduced from your wallet automatically. Registration fee ensures that the network would not be spammed with dummy assets. Registration fee is returned to the owner of the asset as soon as the asset is unregistered. So basically 3000 BEAM are locked for the asset lifetime. You must also pay regular transactions fees. The "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--fee"}]},{"type":"text","value":" param applies only to the transaction fee, not the registration fee."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Asset meta"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Asset meta is a byte buffer associated with the asset and stored on chain. It is provided on asset registration and cannot be changed afterwards. Currently CLI expects UTF8 string with several mandatory "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Key=Value"}]},{"type":"text","value":" pairs. It is not possible to register an asset without meta. Please consult the "},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/wiki/Asset-Descriptor-v1.0","rel":["nofollow"]},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Asset Descriptor"}]}]},{"type":"text","value":" document for more details."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Asset ID"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"After successful asset registration it is associated with the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Asset ID"}]},{"type":"text","value":" issued by the node. Asset becomes known to the world by its ID. Asset id is used in any asset operations performed by any person. Asset owner can perform asset operations using as asset id or asset meta. Consult the "},{"type":"element","tag":"a","props":{"href":"#assetid"},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Asset ID"}]}]},{"type":"text","value":" section for more details."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Lock Period"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Immediately after the asset registration it becomes locked for 24h hours. Consult the "},{"type":"element","tag":"a","props":{"href":"#lock"},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Lock period"}]}]},{"type":"text","value":" section for more details."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Privacy"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Transaction kernel including all the asset meta becomes visible to the world. Node would know that you/your IP is the owner of the asset."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"API Restriction"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Asset registration can be performed only via CLI. There is no API call for asset registration for safety reasons."}]},{"type":"element","tag":"h2","props":{"id":"asset-issue"},"children":[{"type":"text","value":"Asset issue"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"After asset registration its total emission is set to 0. Before performing any asset transactions the owner must mint (issue) asset coins using the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"issue"}]},{"type":"text","value":" command. Only asset owner can mint asset coins."}]},{"type":"element","tag":"pre","props":{"code":"./beam-wallet issue --pass 1 --asset_id 1 -n 127.0.0.1:10000 --amount 10 --fee 100 --enable_assets\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"./beam-wallet issue --pass 1 --asset_id 1 -n 127.0.0.1:10000 --amount 10 --fee 100 --enable_assets\n"}]}]},{"type":"element","tag":"pre","props":{"code":"./beam-wallet issue --pass 1 --asset_meta \"STD:SCH_VER=1;N=Beam Coin;SN=BEAM;UN=Beam;NTHUN=Groth;CUSTOM1=VAL1;CUSTOM2=VAL2\" -n 127.0.0.1:10000 --amount 10 --fee 100 --enable_assets\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"./beam-wallet issue --pass 1 --asset_meta \"STD:SCH_VER=1;N=Beam Coin;SN=BEAM;UN=Beam;NTHUN=Groth;CUSTOM1=VAL1;CUSTOM2=VAL2\" -n 127.0.0.1:10000 --amount 10 --fee 100 --enable_assets\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"You must specify your wallet password, node address, asset id or asset meta, issue amount, optional transaction fee and add "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--enable_assets"}]},{"type":"text","value":" flag."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Coins availability"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"New Asset coins cannot be used until the issue transaction is completed. Please ensure that the minting process is completed and new coins are present in your wallet and marked as available before sending them."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Fees"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Asset emission is absolutely free. You can mint as many coins as you want. You pay only regular transaction fee."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Limits"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Maximum Asset emission is 2"},{"type":"element","tag":"sup","props":{},"children":[{"type":"text","value":"128"}]},{"type":"text","value":"-1 asset nth units. Maximum amount for a single issue transaction is 2"},{"type":"element","tag":"sup","props":{},"children":[{"type":"text","value":"64"}]},{"type":"text","value":"-1 asset nth units."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Lock Period"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"If after the issue operation total asset emission leaves 0 asset becomes locked. Consult the "},{"type":"element","tag":"a","props":{"href":"#lock"},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Lock period"}]}]},{"type":"text","value":" section for more details. Asset issue can be performed even if asset is locked. Subsequent asset issue operations do not extend the lock period."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Privacy"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Asset information is forcibly refreshed (received from node) during this operation. Operation fails if node doesn't confirm the asset. Transaction kernel including the issued asset amount and asset id becomes visible to the world. Node would know that you/your IP is the owner of the asset."}]},{"type":"element","tag":"h2","props":{"id":"asset-consume"},"children":[{"type":"text","value":"Asset consume"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Owner of the asset can consume (burn) asset coins. To burn the asset you must both be the owner of the asset and the owner of the particular coin/utxo. Asset can be consumed using the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"consume"}]},{"type":"text","value":" command."}]},{"type":"element","tag":"pre","props":{"code":"./beam-wallet consume --pass 1 --asset_id 1 -n 127.0.0.1:10000 --amount 10 --fee 100 --enable_assets\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"./beam-wallet consume --pass 1 --asset_id 1 -n 127.0.0.1:10000 --amount 10 --fee 100 --enable_assets\n"}]}]},{"type":"element","tag":"pre","props":{"code":"./beam-wallet consume --pass 1 --asset_meta \"STD:SCH_VER=1;N=Beam Coin;SN=BEAM;UN=Beam;NTHUN=Groth;CUSTOM1=VAL1;CUSTOM2=VAL2\" -n 127.0.0.1:10000 --amount 10  --fee 100 --enable_assets\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"./beam-wallet consume --pass 1 --asset_meta \"STD:SCH_VER=1;N=Beam Coin;SN=BEAM;UN=Beam;NTHUN=Groth;CUSTOM1=VAL1;CUSTOM2=VAL2\" -n 127.0.0.1:10000 --amount 10  --fee 100 --enable_assets\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"You must specify your wallet password, node address, asset id or asset meta, consume amount, optional transaction fee and add "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--enable_assets"}]},{"type":"text","value":" flag."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Fees"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Asset consuming is absolutely free. You pay only regular transaction fee."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Limits"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Maximum amount for a single consume transaction is 2"},{"type":"element","tag":"sup","props":{},"children":[{"type":"text","value":"64"}]},{"type":"text","value":"-1 asset nth units."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Lock Period"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"If after the consume operation total asset emission reaches 0 asset becomes locked. Consult the "},{"type":"element","tag":"a","props":{"href":"#lock"},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Lock period"}]}]},{"type":"text","value":" section for more details."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Privacy"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Asset information is forcibly refreshed (received from node) during this operation. Operation fails if node doesn't confirm the asset. Transaction kernel including the consumed asset amount and asset id becomes visible to the world. Node would know that you/your IP is the owner of the asset."}]},{"type":"element","tag":"h2","props":{"id":"asset-unreg"},"children":[{"type":"text","value":"Asset unreg"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Asset can be unregistered from chain by the owner. To unregister the asset its emission should be 0 and it should be not locked. Asset is unregistered using the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_unreg"}]},{"type":"text","value":" command."}]},{"type":"element","tag":"pre","props":{"code":"./beam-wallet asset_unreg --pass 1 -n 127.0.0.1:10000 --asset_meta \"STD:SCH_VER=1;N=Beam Coin;SN=BEAM;UN=Beam;NTHUN=Groth;CUSTOM1=VAL1;CUSTOM2=VAL2\" --fee 100  --enable_assets\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"./beam-wallet asset_unreg --pass 1 -n 127.0.0.1:10000 --asset_meta \"STD:SCH_VER=1;N=Beam Coin;SN=BEAM;UN=Beam;NTHUN=Groth;CUSTOM1=VAL1;CUSTOM2=VAL2\" --fee 100  --enable_assets\n"}]}]},{"type":"element","tag":"pre","props":{"code":"./beam-wallet asset_unreg --pass 1 -n 127.0.0.1:10000 --asset_id 1 --fee 100 --enable_assets\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"./beam-wallet asset_unreg --pass 1 -n 127.0.0.1:10000 --asset_id 1 --fee 100 --enable_assets\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"You must specify your wallet password, node address, asset meta or asset id, optional transaction fee and add "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--enable_assets"}]},{"type":"text","value":" flag."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Fees"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Asset unregistration is free. You pay only regular transaction fee. This operation also returns 3000 BEAM locked during the asset registration."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Asset ID"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Asset ID becomes free after this operation and can be reused by another asset."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Limits"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Maximum amount for a single consume transaction is 264-1 asset nth units."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Privacy"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Asset information is forcibly refreshed (received from node) during this operation. Operation fails if node doesn't confirm the asset. Transaction kernel which includes asset id becomes visible to the world. Node would know that you/your IP is the owner of the asset."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"API Restriction"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Asset unregistration can be performed only via CLI. There is no API call for asset unregistration for safety reasons."}]},{"type":"element","tag":"h2","props":{"id":"getting-asset-info"},"children":[{"type":"element","tag":"a","props":{"name":"assetinfo"},"children":[{"type":"text","value":"Getting Asset Info"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Asset info can be received from node using "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_info"}]},{"type":"text","value":" command for any asset registered on chain. "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_info"}]},{"type":"text","value":" command stores the received info in a local database for future usage."}]},{"type":"element","tag":"pre","props":{"code":"./beam-wallet asset_info --pass 1 -n 127.0.0.1:10000 --asset_id 1 --enable_assets\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"./beam-wallet asset_info --pass 1 -n 127.0.0.1:10000 --asset_id 1 --enable_assets\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_info"}]},{"type":"text","value":" command always receives the latest information from node. To view locally stored information regular "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"info"}]},{"type":"text","value":" command should be used with "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--assets"}]},{"type":"text","value":" or "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--asset_id ID"}]},{"type":"text","value":" parameters."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Asset owner can query asset info using asset meta ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--asset_meta \"STD:....\""}]},{"type":"text","value":") as well. Non-owners can use only asset id."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Fees"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_info"}]},{"type":"text","value":" operation is free. You do not pay any fees."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Privacy"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_info"}]},{"type":"text","value":" operation only communicates with the node and doesn't leave any traces in the blockchain. Node would know that particular IP has been interested in given asset."}]},{"type":"element","tag":"h2","props":{"id":"displaying-assets"},"children":[{"type":"text","value":"Displaying Assets"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"By default CLI wallet doesn't display any information about assets you own or have. To view assets info, assets UTXOs & assets transactions "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--assets"}]},{"type":"text","value":" (for all assets) or "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--asset_id ID"}]},{"type":"text","value":" (for a specific asset) params should be used."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"View asset info & asset UTXOs"}]},{"type":"element","tag":"pre","props":{"code":"./beam-wallet info --pass 1 --asset_id 1\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"./beam-wallet info --pass 1 --asset_id 1\n"}]}]},{"type":"element","tag":"pre","props":{"code":"./beam-wallet info --pass 1 --assets\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"./beam-wallet info --pass 1 --assets\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"View asset transactions"}]},{"type":"element","tag":"pre","props":{"code":"./beam-wallet info --pass 1 --asset_id 1 --tx_history\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"./beam-wallet info --pass 1 --asset_id 1 --tx_history\n"}]}]},{"type":"element","tag":"pre","props":{"code":"./beam-wallet info --pass 1 --assets --tx_history\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"./beam-wallet info --pass 1 --assets --tx_history\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"View shielded (Lelantus) asset UTXOs"}]},{"type":"element","tag":"pre","props":{"code":"./beam-wallet info --pass 1 --asset_id 1 --shielded_utxos\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"./beam-wallet info --pass 1 --asset_id 1 --shielded_utxos\n"}]}]},{"type":"element","tag":"pre","props":{"code":"./beam-wallet info --pass 1 --assets --shielded_utxos\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"./beam-wallet info --pass 1 --assets --shielded_utxos\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"View Shielded (Lelantus) Asset transactions"}]},{"type":"element","tag":"pre","props":{"code":"./beam-wallet info --pass 1 --asset_id 1 --shielded_tx_history\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"./beam-wallet info --pass 1 --asset_id 1 --shielded_tx_history\n"}]}]},{"type":"element","tag":"pre","props":{"code":"./beam-wallet info --pass 1 --assets --shielded_tx_history\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"./beam-wallet info --pass 1 --assets --shielded_tx_history\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Enable flag"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Asset info can be displayed without the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--enable_assets"}]},{"type":"text","value":" flag"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Orphaned transactions"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Asset transactions that do not include asset id would be displayed as "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"orphaned"}]},{"type":"text","value":". This can occur when transaction has been started with "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--asset_meta"}]},{"type":"text","value":" param and no valid asset id has been associated with the transaction while it was running. For example it can happen if you have tried to register an asset but there is not enough BEAM to pay the registration fee."}]},{"type":"element","tag":"h2","props":{"id":"sending-assets"},"children":[{"type":"text","value":"Sending assets"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Asset can be sent using regular "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"send"}]},{"type":"text","value":" command. The only difference from regular BEAM transaction is the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--asset_id"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--enable_assets"}]},{"type":"text","value":" parameters."}]},{"type":"element","tag":"pre","props":{"code":"./beam-wallet -n 127.0.0.1:10000 --pass 1 --command send -r 1ec08b72ea25cd471ec37f9088a1ae0dcb8f4526eff3b8ab38f8e23901e2adf48a2 --amount 5 --asset_id 1 --enable_assets\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"./beam-wallet -n 127.0.0.1:10000 --pass 1 --command send -r 1ec08b72ea25cd471ec37f9088a1ae0dcb8f4526eff3b8ab38f8e23901e2adf48a2 --amount 5 --asset_id 1 --enable_assets\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Limits"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Maximum amount for a single send transaction is 2"},{"type":"element","tag":"sup","props":{},"children":[{"type":"text","value":"64"}]},{"type":"text","value":"-1 asset nth units."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Enable flag"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Both sender and receiver should specify "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--enable_assets"}]},{"type":"text","value":" flag in command line otherwise transaction would fail with the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"AssetsDisabled (43)"}]},{"type":"text","value":" error code."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Lock period"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Asset cannot be sent to non-owner during the lock period. Transaction would be rejected by the receiving party with the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"AssetLocked (34)"}]},{"type":"text","value":" error code."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Privacy"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Send transaction doesn't refresh asset info. Asset ID is hidden during the send transaction though it is visible that the transaction is performed on some asset. General Mimblewimble rules apply to the transaction. Amount, sender and receiver are not disclosed."}]},{"type":"element","tag":"h2","props":{"id":"receiving-assets"},"children":[{"type":"text","value":"Receiving assets"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Process of receiving assets is mostly identical to the receiving of regular BEAM."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Enable flag"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"CLI/API receives assets automatically if it is running (listens) with the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--assets_enable"}]},{"type":"text","value":" option. If assets are not enabled all incoming asset transaction would be rejected with the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"AssetsDisabled (43)"}]},{"type":"text","value":" error code."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Lock period"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Asset cannot be received by non-owner during the lock period. Transaction would be rejected by the receiving party with the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"AssetLocked (34)"}]},{"type":"text","value":" error code."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Privacy"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Receive operation does not refresh asset info if there are any unspent UTXOs of the asset being received in the wallet. If there are no unspent UTXOs asset info might be refreshed if wallet doesn't have info about the asset (first receive) or info is older than the lock period duration."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Asset ID is hidden during the receive transaction though it is visible that the transaction is performed on some asset. General Mimblewimble rules apply to the transaction. Amount, sender and receiver are not disclosed."}]},{"type":"element","tag":"h2","props":{"id":"lelantus-one-sided-payments"},"children":[{"type":"text","value":"Lelantus & one-sided payments"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"N.B. As of v5.1 basic lelantus operations (pull & push) are removed. The info below applies only to the v5.0"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Lelantus transactions fully support confidential assets. To insert to/extract asset from pool "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--asset_id ID"}]},{"type":"text","value":" option should be specified as well as "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--enable_assets"}]},{"type":"text","value":" flag. Refer "},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/wiki/Lelantus-CLI","rel":["nofollow"]},"children":[{"type":"text","value":"Lelantus CLI"}]},{"type":"text","value":" for details."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Lock Period"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Lock period rules do not apply to Lelantus transactions. Assets can be inserted to the pool and extracted from the pool at any time."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Privacy"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Asset info is never refreshed during Lelantus transactions. Amount and Asset ID is hidden though it is visible that the transaction is performed on some asset."}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"asset-registration","depth":2,"text":"Asset registration"},{"id":"asset-issue","depth":2,"text":"Asset issue"},{"id":"asset-consume","depth":2,"text":"Asset consume"},{"id":"asset-unreg","depth":2,"text":"Asset unreg"},{"id":"getting-asset-info","depth":2,"text":"Getting Asset Info"},{"id":"displaying-assets","depth":2,"text":"Displaying Assets"},{"id":"sending-assets","depth":2,"text":"Sending assets"},{"id":"receiving-assets","depth":2,"text":"Receiving assets"},{"id":"lelantus-one-sided-payments","depth":2,"text":"Lelantus & one-sided payments"}]}},"_type":"markdown","_id":"content:docs:core-tech:Confidential-assets.md","_source":"content","_file":"docs/core-tech/Confidential-assets.md","_extension":"md"},{"_path":"/docs/core-tech/contribution-guidelines","_dir":"core-tech","_draft":false,"_partial":false,"_locale":"","title":"Beam Contribution Guidelines","description":"","body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"beam-contribution-guidelines"},"children":[{"type":"text","value":"Beam Contribution Guidelines"}]},{"type":"element","tag":"h2","props":{"id":"introduction"},"children":[{"type":"text","value":"Introduction"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Beam is an open source project, and as such welcomes developers to contribute. In order to simplify and organize this process we have written this short contribution guide that explains the key principles of contributing to Beam project."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"For any questions you might have regarding the process please contact Beam CTO at alex at beam.mw or @bigromanov on Telegram or @BeamCTO on Twitter."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"For more specific questions please contact developer team on Telegram: "},{"type":"element","tag":"a","props":{"href":"https://t.me/beamdevsupport","rel":["nofollow"]},"children":[{"type":"text","value":"https://t.me/beamdevsupport"}]}]},{"type":"element","tag":"h2","props":{"id":"projects-overview"},"children":[{"type":"text","value":"Projects overview"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"We are planning on initially supporting contributions to the following projects:"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Beam Desktop UI Wallet (C++ / QT) - described in this document"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Beam Web Wallet Chrome Extension (JS / Angular) instructions coming soon"}]}]},{"type":"element","tag":"h3","props":{"id":"beam-desktop-ui-wallet"},"children":[{"type":"text","value":"Beam Desktop UI Wallet"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This is a UI for the Beam Desktop Wallet. It uses the underlying libwallet library and wraps it with user interface implemented with QT framework."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"To contribute to this project please follow the steps below:"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Setup your dev environment, checkout and build the project using the "},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam-ui/wiki/How-to-build-Beam-desktop-UI","rel":["nofollow"]},"children":[{"type":"text","value":"Building Instructions"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Explore tasks in the currently active project on the "},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam-ui/projects","rel":["nofollow"]},"children":[{"type":"text","value":"projects page"}]},{"type":"text","value":" ("},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam-ui/projects/1","rel":["nofollow"]},"children":[{"type":"text","value":"Eager Electron 5.1"}]},{"type":"text","value":" at the time of the writing)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Look for tasks marked with the 'help wanted' label. Of course you are also welcome to contribute to other tasks as well"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Write a comment clarifying that you are starting to work on the task and providing a very rough estimate how much time you expect to spend on it."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"If the task does not have a clearly assigned bounty in the task description please contact @bigromanov on Telegram, or email alex at beam.mw"}]}]},{"type":"element","tag":"h3","props":{"id":"beam-web-wallet-extension"},"children":[{"type":"text","value":"Beam Web Wallet Extension"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Coming soon...."}]},{"type":"element","tag":"h2","props":{"id":"coding-guidelines"},"children":[{"type":"text","value":"Coding guidelines"}]},{"type":"element","tag":"h3","props":{"id":"c"},"children":[{"type":"text","value":"C++"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Coming soon"}]},{"type":"element","tag":"h3","props":{"id":"js-angular"},"children":[{"type":"text","value":"JS / Angular"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Coming soon"}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"introduction","depth":2,"text":"Introduction"},{"id":"projects-overview","depth":2,"text":"Projects overview","children":[{"id":"beam-desktop-ui-wallet","depth":3,"text":"Beam Desktop UI Wallet"},{"id":"beam-web-wallet-extension","depth":3,"text":"Beam Web Wallet Extension"}]},{"id":"coding-guidelines","depth":2,"text":"Coding guidelines","children":[{"id":"c","depth":3,"text":"C++"},{"id":"js-angular","depth":3,"text":"JS / Angular"}]}]}},"_type":"markdown","_id":"content:docs:core-tech:Contribution-Guidelines.md","_source":"content","_file":"docs/core-tech/Contribution-Guidelines.md","_extension":"md"},{"_path":"/docs/core-tech/core-transaction-elements","_dir":"core-tech","_draft":false,"_partial":false,"_locale":"","title":"Core data types used in BEAM:","description":"","body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"core-data-types-used-in-beam"},"children":[{"type":"text","value":"Core data types used in BEAM:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Height"}]},{"type":"text","value":" - 64-bit unsigned integer"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"HeightRange"}]},{"type":"text","value":" - a pair of "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Height"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Timestamp"}]},{"type":"text","value":" - 64-bit unsigned integer"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Amount"}]},{"type":"text","value":" - used to denote the value of a single UTXO. 64-bit unsigned integer"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"AmountBig"}]},{"type":"text","value":" - used to denote the value of an arbitrary number of UTXOs. Consists of 2 64-bit unsigned integer (i.e. equivalent to 128-bit integer)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Difficulty"}]},{"type":"text","value":" - 32-bit encoding of a floating-point number. 8 bits for order, 24 bits for mantissa."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Difficulty::Raw"}]},{"type":"text","value":" - 256-bit unsigned integer. Represents an \"unpacked\" "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Difficulty"}]},{"type":"text","value":" on a linear scale. Used to represent the chainwork (sum of difficulties)."}]}]},{"type":"element","tag":"h1","props":{"id":"input-utxo"},"children":[{"type":"text","value":"Input UTXO"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Consists of the following:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"ECC::Point m_Commitment"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"A commitment to the UTXO (which is supposed to exist in the system)"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Height m_Maturity"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Optional field to specify the maturity of the UTXO being-spent."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Used only in "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Macroblocks"}]},{"type":"text","value":" (compressed history block), more about this later. Illegal to use in transactions."}]}]}]}]},{"type":"element","tag":"h1","props":{"id":"output-utxo"},"children":[{"type":"text","value":"Output UTXO"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Consists of the following:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"ECC::Point m_Commitment"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"A commitment to the UTXO (which is supposed to be created in a transaction)"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Height m_Maturity"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Optional field to specify the maturity of the created UTXO."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Used only in "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Macroblocks"}]},{"type":"text","value":" (compressed history block), more about this later. Illegal to use in transactions."}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"bool m_Coinbase"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Must be set iff it's a coinbase UTXO."}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Height m_Incubation"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Optional field. If specified - the number of extra blocks (in addition to standard system rules) until the UTXO becomes mature."}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"UTXO Signature. Must be one of the following:\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"ECC::RangeProof::Confidential"}]},{"type":"text","value":" - a confidential signature (Bulletproof)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"ECC::RangeProof::Public"}]},{"type":"text","value":" - a public signature, with the Amount visible."}]}]}]}]},{"type":"element","tag":"h3","props":{"id":"utxo-signature"},"children":[{"type":"text","value":"UTXO Signature"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Coinbase UTXO must have a public signature (the Amount explicitly specified)."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Non-coinbase UTXO - depends on the system rules. In the current configuration all non-coinbase UTXOs are enforced to have a confidential signature, but may also be configured to allow public signatures."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The confidential signature is implemented in terms of a Bulletproof. The public signature consists of the following:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Amount m_Value"}]},{"type":"text","value":" - the explicit value"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"ECC::Signature m_Signature"}]},{"type":"text","value":" - a Schnorr's signature for the UTXO blinding factor."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Note"}]},{"type":"text","value":": the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"m_Incubation"}]},{"type":"text","value":" field is accounted in the UTXO signature, to prevent tampering."}]},{"type":"element","tag":"h1","props":{"id":"transaction-kernel"},"children":[{"type":"text","value":"Transaction Kernel"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Consists of the following:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"ECC::Point m_Excess"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The transaction excess (public)"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"ECC::Signature m_Signature"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The Schnorr's signature for the whole kernel body, signed with the transaction excess (secret)"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Amount m_Fee"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Transaction fee"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"uint64_t m_Multiplier"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Optional field, used in a scheme where a kernel may be consumed (more about this later)"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"HeightRange m_Height"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Optional: the transaction timelock parameters (min/max height for being valid in the block)"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"uintBig m_HashLock"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Optional: a hashlock. An arbitrary 256-bit value which is hashed, and then accounted in the kernel signature"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"m_vNested"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Optional: an array of "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"nested"}]},{"type":"text","value":" kernels. More about this later."}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"kernel-signature"},"children":[{"type":"text","value":"Kernel Signature"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The Hash of the kernel is evaluated, and then it's signed by the Schnorr's signature. The Hash evaluation formula is:"}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"pre","props":{"code":"M = m_Fee | m_Height | m_Excess | m_Multiplier;\nif Hashlock specified\nM = M | true | Hash(Hashlock.Preimage);\nelse\n  M = M | false;\n\nFor each Nested Kernel\n   M = M | true | (Nested Kernel).ID;\n\nM = M | false\n\nKernelHash = Hash(M)\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"M = m_Fee | m_Height | m_Excess | m_Multiplier;\nif Hashlock specified\nM = M | true | Hash(Hashlock.Preimage);\nelse\n  M = M | false;\n\nFor each Nested Kernel\n   M = M | true | (Nested Kernel).ID;\n\nM = M | false\n\nKernelHash = Hash(M)\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The formula accounts for all the members except except the signature. It's also unambiguous (i.e. explicit separation for optional input fields)."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Note"}]},{"type":"text","value":": The excess, which is a signature public key, is also included. This is an intentional design decision, to make the kernel's excess also immutable after it has been signed (otherwise any party could modify the excess and keep the signature correct)."}]},{"type":"element","tag":"h2","props":{"id":"kernel-id"},"children":[{"type":"text","value":"Kernel ID"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"According to the system rules every kernel has a unique ID (duplicate IDs are banned). Its value is identical to the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"KernelHash"}]},{"type":"text","value":", except there are \"forbidden\" values, which are reserved for the internal system use. So if the kernel ID happens to be equal to a forbidden value (which is highly unlikely), its value is mutated."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Currently the only forbidden value is 0."}]},{"type":"element","tag":"h1","props":{"id":"transaction"},"children":[{"type":"text","value":"Transaction"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Consists of the following:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Input UTXOs"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Output UTXOs"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Input Kernels\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"This is the BEAM extension - kernels may also be consumed! More about this later."}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Output Kernels"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"ECC::Scalar m_Offset"}]}]}]},{"type":"element","tag":"h2","props":{"id":"context-free-transaction-validation"},"children":[{"type":"text","value":"Context-free Transaction validation"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The following is validated:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"All the transaction elements (UTXOs, Kernels) must be specified in a well-defined order (there's a comparison function for each transaction element type)."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Each element must have a valid signature"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Timelocks of all the kernels must be valid for the current height"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Next, we define the "},{"type":"element","tag":"b","props":{},"children":[{"type":"text","value":"Σ"}]},{"type":"text","value":" as a sum of all outputs minus all inputs:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"b","props":{},"children":[{"type":"text","value":"Σ"}]},{"type":"text","value":" = Σ(UTXO-Out.Commit) - Σ(UTXO-In.Commit) + Σ(Kernel-Out.Excess) - Σ(Kernel-In.Excess) + m_Offset · G"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In case of transaction validation there are transaction fees that are considered lost, i.e. they are implicit outputs. So, the validation formula is:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"b","props":{},"children":[{"type":"text","value":"Σ"}]},{"type":"text","value":" + Σ(Fees)·H = 0"}]},{"type":"element","tag":"h1","props":{"id":"block-body"},"children":[{"type":"text","value":"Block body"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Contains all that is included in a transaction. In addition:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"AmountBig m_Subsidy"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"explicit Amount created by this block (Coinbase and, possibly, other types of subsidy)"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"bool m_SubsidyClosing"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"If set - means from the next block only coinbase subsidy should be allowed"}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Since blocks may be arbitrary large (when merged) - there are different underlying techniccal representations of the Block body. In a simple case it contains just arrays of all the transaction elements (like a Transaction object). But larger blocks don't keep all the data pre-loaded, instead it's read sequentially from files."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"There is an "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Transaction::IReader"}]},{"type":"text","value":" interface used to iterate sequentially over the transaction elements, and it's used by the context-free validation code, regardless to the actual data representation details."}]},{"type":"element","tag":"h2","props":{"id":"context-free-block-body-validation"},"children":[{"type":"text","value":"Context-free Block body validation"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The block body is validated similar to a transaction, keeping in mind however that this may be a "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Macroblock"}]},{"type":"text","value":", i.e. a merged block for a specific height range (applicable to the Timelock validation of kernels)."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Then "},{"type":"element","tag":"b","props":{},"children":[{"type":"text","value":"Σ"}]},{"type":"text","value":" is calculated. But in contrast to transaction the Fees should not be added, because they must have already been consumed by explicit output UTXO(s) (injected by the miner). Instead the explicit Subsidy must be accounted as an input. Hence the formula is:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"b","props":{},"children":[{"type":"text","value":"Σ"}]},{"type":"text","value":" - m_Subsidy·H = 0"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In addition the Verifier must verify that the Coinbase UTXOs are properly tagged, and unspent unless the coinbase maturity is reached.\nFor a single block verification the sum of all Coinbase UTXO amount must be equal to the single block Coinbase emission as defined by the system rules.\nFor "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Macroblock"}]},{"type":"text","value":" verification the Verifier should take into account that some Coinbase UTXOs may have already been spent."}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"utxo-signature","depth":3,"text":"UTXO Signature"},{"id":"kernel-signature","depth":2,"text":"Kernel Signature"},{"id":"kernel-id","depth":2,"text":"Kernel ID"},{"id":"context-free-transaction-validation","depth":2,"text":"Context-free Transaction validation"},{"id":"context-free-block-body-validation","depth":2,"text":"Context-free Block body validation"}]}},"_type":"markdown","_id":"content:docs:core-tech:Core-transaction-elements.md","_source":"content","_file":"docs/core-tech/Core-transaction-elements.md","_extension":"md"},{"_path":"/docs/core-tech/cryptographic-primitives","_dir":"core-tech","_draft":false,"_partial":false,"_locale":"","title":"Cryptographic Primitives","description":"Cryptographic primitives used by BEAM are based on the secp256k1 library (the one that is used in bitcoin). Naturally it uses the same elliptic curve equation. The following primitives are used directly:","body":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Cryptographic primitives used by BEAM are based on the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"secp256k1"}]},{"type":"text","value":" library (the one that is used in bitcoin). Naturally it uses the same elliptic curve equation. The following primitives are used directly:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"secp256k1_gej"}]},{"type":"text","value":" - Basic curve point arithmetics: point addition, doubling, negation, import/export to a platform-ndependent format."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"secp256k1_scalar"}]},{"type":"text","value":" - Scalar arithmetics: addition, multiplication, inverse"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"secp256k1_sha256_t"}]},{"type":"text","value":" - SHA-256 hash"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Cryptographic nonce generation ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"nonce_function_rfc6979"}]},{"type":"text","value":")."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"secp256k1_hmac_sha256_t"}]},{"type":"text","value":" - HMAC (message authentication)"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The following cryptographic functions and schemes are built over them:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Point multiplication (by a scalar).\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"There are different multiplication modes and scenarios:\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Secure/Fast"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Point may be either known in advance (a.k.a. Generator, prepared for multiplication) or \"casual\"."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Aggregation: when many points are multiplied by scalars and summed - an appropriate effective algorithm is used."}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The reason that this functionality is implemented in BEAM and not taken directly from "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"secp256k1"}]},{"type":"text","value":" is the following:\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"We'd like to have more low-level control of the primitives to implement advanced schemes"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"We need more generators: Standard secp256k1 supports just two ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"G,H"}]},{"type":"text","value":"), whereas we need many more (131)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"No effective aggregation implementation"}]}]}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Commitments (encoded amount with the blinding factor)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Schnorr's signatures (including multi-sig)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Bulletproofs (including multi-sig and batch verification)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Secure communication channels"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Secure BBS messaging system"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In addition there's a "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"uintBig"}]},{"type":"text","value":" - a \"big integer\" (arbitrary width), supports basic arithmetics and shift operations (not including division). The number is represented as an array of bytes in a big-endian byte order. Platform-independent, serialized as-is.\nImplementation is very straight-forward, not for performance-critical tasks."}]},{"type":"element","tag":"h2","props":{"id":"hash"},"children":[{"type":"text","value":"Hash"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The Hash refers to the SHA-256 hash, unless otherwise specified. Used in various schemes. When hashing some data, it's fed in a way that is both platform-independent and unambiguous. This is achieved by the following specifications:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"1-byte data is fed as-is"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Boolean values are encoded as a single byte with value either 0 or 1."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Strings are fed as-is, "},{"type":"element","tag":"u","props":{},"children":[{"type":"text","value":"including"}]},{"type":"text","value":" the 0-terminator (to prevent ambiguity for consequent strings)."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Numerical types (fixed-point) are stored as a variable-length byte sequence, with a special terminator mark. This ensures platform independence (integers may have varying width across different platforms)."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Non-primitive types are converted into the platform-independent binary format for hashing."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The following objects are derived from hash (built over them)"}]},{"type":"element","tag":"h3","props":{"id":"oracle"},"children":[{"type":"text","value":"Oracle"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Oracle is used in non-interactive cryptographic proofs, it's supposed to produce cryptographic challenges in a deterministic way, based on the visible transcript to the moment."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In BEAM Oracle uses the Hash in a straightforward way. All the visible transcript is hashed. Once the challenge is needed - the hash value is finalized, the result is the challenge, and it's immediately re-fed to the Hash. So that the new challenge construction (if needed) is generated from the visible transcript, "},{"type":"element","tag":"u","props":{},"children":[{"type":"text","value":"including"}]},{"type":"text","value":" the previous challenge."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"If there are restrictions for the challenge (such as it should be non-overflowing, non-zero scalar, or a valid x-coordinate of a curve point) - the Finalize-Re-feed is called in a loop, until the satisfying challenge is produced (i.e. accept/reject strategy is used)."}]},{"type":"element","tag":"h3","props":{"id":"nonce-generator"},"children":[{"type":"text","value":"Nonce Generator"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Also used in cryptographic proofs, but, unlike Oracle, the nonce generation involves secret data, and should not be possible to reconstruct by others."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In BEAM Nonce generator is a combination of an Oracle, and the nonce function initialized by the secret data. That is, the Oracle accounts for all the visible transcript. When a nonce is needed - first it's received from the Oracle, and then passed as an input to the nonce function (implemented in ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"secp256k1"}]},{"type":"text","value":"), which also uses the secret data."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The final nonce generation function implemented in "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"secp256k1"}]},{"type":"text","value":" actually a modified HMAC-SHA-256 scheme."}]},{"type":"element","tag":"h3","props":{"id":"kdf-key-derivation-function"},"children":[{"type":"text","value":"KDF - Key derivation function"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"All the private keys are generated via KDF. In BEAM it's implemented via the Nonce generator, which is initialized once by the master secret data. The requested key parameters (key index, type/subtype, etc.) are hashed and then the output is generated by the standard Nonce generator initialized with the master secret."}]},{"type":"element","tag":"h2","props":{"id":"schnorrs-signature"},"children":[{"type":"text","value":"Schnorr's signature"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Implemented according to the standard, the \"long\" version, compatible with batch verification. Consists of a pair "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"[P,k]"}]},{"type":"text","value":", whereas "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"P"}]},{"type":"text","value":" is an arbitrary EC point, and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"k"}]},{"type":"text","value":" is the blinded private key. Supports multisignature of course."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Specifically the scheme is the following. Given a message hash "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"M"}]},{"type":"text","value":", private key "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"sk"}]},{"type":"text","value":", public key "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"pk = G * sk"}]},{"type":"text","value":":"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Prover\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Generate a nonce "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"nk = Nonce(sk, M)"}]},{"type":"text","value":", whereas "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Nonce()"}]},{"type":"text","value":" is the standard nonce generating function."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Calculate: "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"P = nk*G"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Expose to Oracle: "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"P, M"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Get the challenge "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"e"}]},{"type":"text","value":" from Oracle."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Calculate "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"k = - nk - e*sk"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Signature: "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"[P, k]"}]}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Verifier\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Expose to Oracle: "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"P, M"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Get the challenge "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"e"}]},{"type":"text","value":" from Oracle."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Verify: "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"k*G + e*Pk + P == 0"}]}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"binary-platform-independent-representation-of-the-ecc-primitives"},"children":[{"type":"text","value":"Binary platform-independent representation of the ECC primitives"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The following are the primitives:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"ECC Scalar\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"256-bits wide integer, representing the number in a big-endian format (via "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"uintBig"}]},{"type":"text","value":")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Deserialization ensures the number is indeed a valid scalar, i.e. strictly less than modulo-prime, to prevent ambiguity"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"ECC Point\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Represented as an X-coordinate, and a Y-parity flag (1 bit)."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The X-coordinate is serialized via "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"uintBig"}]},{"type":"text","value":" (similar to scalar)."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"To recover the Y-coordinate one must solve a quadratic equation, which, naturally has 2 solutions. This is where Y-parity flag is used."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"When serialized individually the data is padded to a byte boundary (means the Y-parity bit takes the whole byte). However in some complex data types those flags are merged and stored separately (Ex: Bulletproofs)."}]}]}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"hash","depth":2,"text":"Hash","children":[{"id":"oracle","depth":3,"text":"Oracle"},{"id":"nonce-generator","depth":3,"text":"Nonce Generator"},{"id":"kdf-key-derivation-function","depth":3,"text":"KDF - Key derivation function"}]},{"id":"schnorrs-signature","depth":2,"text":"Schnorr's signature"},{"id":"binary-platform-independent-representation-of-the-ecc-primitives","depth":2,"text":"Binary platform-independent representation of the ECC primitives"}]}},"_type":"markdown","_id":"content:docs:core-tech:Cryptographic-primitives.md","_source":"content","_file":"docs/core-tech/Cryptographic-primitives.md","_extension":"md"},{"_path":"/docs/core-tech/dmmr-internal-layout","_dir":"core-tech","_draft":false,"_partial":false,"_locale":"","title":"DMMR Internal Layout","description":"In Merkle trees there are leaf nodes that are added explicitly, and appropriate non-leaf nodes which are created on-demand.","body":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In Merkle trees there are leaf nodes that are added explicitly, and appropriate non-leaf nodes which are created on-demand."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Our DMMR consists of "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Elements"}]},{"type":"text","value":" of variable size, whereas each new element internally contains all the supposed non-leaf nodes. Technically element consists of:"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Hashes of the assumed non-leaf nodes"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Pointers"}]},{"type":"text","value":" to the elements that contain the siblings assumed by the above non-leaf nodes.\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"By "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"pointers"}]},{"type":"text","value":" we mean the information used to access the element, not necessarily the memory pointer."}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"A pointer to the last element of the previous MMR peak."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"For example, consider and MMR containing 10 items:"}]},{"type":"element","tag":"pre","props":{"code":"                         *\n                        / \\\n                       /   \\\n                      /     \\\n                     /       \\\n                    /         \\\n                   /           \\\n                  /             \\\n                 /               \\\n                /                 \\\n               /                   \\\n              /                     \\\n             *                       *\n            / \\                     / \\\n           /   \\                   /   \\\n          /     \\                 /     \\\n         /       \\               /       \\\n        /         \\             /         \\\n       *           *           *           *           *\n      / \\         / \\         / \\         / \\         / \\\n     /   \\       /   \\       /   \\       /   \\       /   \\\n    0     1     2     3     4     5     6     7     8     9\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"                         *\n                        / \\\n                       /   \\\n                      /     \\\n                     /       \\\n                    /         \\\n                   /           \\\n                  /             \\\n                 /               \\\n                /                 \\\n               /                   \\\n              /                     \\\n             *                       *\n            / \\                     / \\\n           /   \\                   /   \\\n          /     \\                 /     \\\n         /       \\               /       \\\n        /         \\             /         \\\n       *           *           *           *           *\n      / \\         / \\         / \\         / \\         / \\\n     /   \\       /   \\       /   \\       /   \\       /   \\\n    0     1     2     3     4     5     6     7     8     9\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In our DMMR this is represented by the following data:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"[[/images/dmmr1.png]]"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"There are 10 elements of varying size, denoted by different colors. Rectangles outline the data and the non-leaf hashes of which the elements comprise. Lines denote pointers to the parent elements. We see the following:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Elements with odd index contain extra hashes, denoted by asterisk (*). The number of hashes equals to the height of the formed peak."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"For every extra hash there is also a pointer to the last element of the appropriate sibling node."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Most of the elements in addition have a pointer to the last element of the previous MMR peak, denoted by a curly line.\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The exceptions are elements at position 0, 1, 3, 7, because they are last elements of the only peak."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"This is obviously the property of elements at positions 2"},{"type":"element","tag":"sup","props":{},"children":[{"type":"text","value":"n"}]},{"type":"text","value":"-1."}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The only element that contains no data is the 1"},{"type":"element","tag":"sup","props":{},"children":[{"type":"text","value":"st"}]},{"type":"text","value":", at position 0."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"It's easy to see that each element has access to all the parent elements and their datas. Hence it can be used as an effective MMR implementation with all the relevant functionality, such as calculating the root, and generating proofs."}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[]}},"_type":"markdown","_id":"content:docs:core-tech:DMMR-internal-layout.md","_source":"content","_file":"docs/core-tech/DMMR-internal-layout.md","_extension":"md"},{"_path":"/docs/core-tech/ethash-verification-in-contracts","_dir":"core-tech","_draft":false,"_partial":false,"_locale":"","title":"Ethash Verification In Contracts","description":"To implement trustless bridges between Beam and other blockchains there's a need to verify the headers of the appropriate blockchains in the contract. For a PoW-based blockchain there's a need to verify the appropriate header PoW.","body":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"To implement trustless bridges between Beam and other blockchains there's a need to verify the headers of the appropriate blockchains in the contract. For a PoW-based blockchain there's a need to verify the appropriate header PoW."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Ethereum mined according to Ethash PoW algorithm. Turns out not only mining, but even the verification of Ethash is a complex task for a contract."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"UPDATE: (2021-05-09)"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Turns out a very similar idea has already been elaborated by "},{"type":"element","tag":"a","props":{"href":"https://blog.kyber.network/waterloo-a-decentralized-practical-bridge-between-eos-and-ethereum-c25b1698f010","rel":["nofollow"]},"children":[{"type":"text","value":"Kyber"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"And threre's a "},{"type":"element","tag":"a","props":{"href":"https://near.org/technology/","rel":["nofollow"]},"children":[{"type":"text","value":"Rainbow Ethereum-NEAR Rainbow Bridge"}]},{"type":"text","value":" deployed using this technology."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"While the idea is very similar, there are significant differences in the implementation. Our version is somewhat more efficient (in both proof size and verification times) since we use a more sophisticated variation of the Merkle proofs."}]},{"type":"element","tag":"h1","props":{"id":"ethash"},"children":[{"type":"text","value":"Ethash"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Ethash is designed to be memory-hard. Its hi-level design:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Mining parameters (a.k.a. "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Epoch"}]},{"type":"text","value":") are changed each 30K blocks (roughly 5.2 days)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"For the current "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Epoch"}]},{"type":"text","value":" a "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Cache"}]},{"type":"text","value":" is generated, which as a pseudo-random opaque data set.\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Its size is gradually increased with each "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Epoch"}]},{"type":"text","value":", as of today its size is roughly "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"70MB"}]},{"type":"text","value":"."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The cache generation is deliberately complex. Each element depends on the previous (so that it can't be parallelized), and CPU-intensive hash function is used."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"As for today it takes "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"several seconds"}]},{"type":"text","value":" to calculate on a typical desktop machine."}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"There is a much larger data set that can be calculated from the cache (a.k.a. "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"DAG"}]},{"type":"text","value":").\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"As for today the cache size is roughly "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"4GB"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Each element calculation is deliberately complex. Involves CPU-intensive hash functions, and pseudo-random access of cache."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Elements however are independent"}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The PoW puzzle is to find a "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"nonce"}]},{"type":"text","value":", from which a 64-element-long pseudo-random "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Path"}]},{"type":"text","value":" is derived, whose last element together with the "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"nonce"}]},{"type":"text","value":" reaches the difficulty target. It is assumed that effective miner should have the "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"DAG"}]},{"type":"text","value":" in memory, and probe different pseudo-random paths until the needed difficulty target is reached. To verify the PoW only the cache is needed. The chosen path elements can effectively be calculated from the cache (since they are independent)."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"So that, unlike most of the other blockchains, Ethash verification demands significant memory. Once the cache is prepared, the PoW verification is reasonably fast, but still may be considerable if many headers should be verified at once."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"For native Ethereum clients this is not a problem. Normally they interpret blocks/headers sequentially (perhaps with slight reorgs), so that the cache can be generated once and kept in memory for ~5 days. The complexity of verification of a header (tens of milliseconds) is also acceptable."}]},{"type":"element","tag":"h1","props":{"id":"why-ethash-verification-is-hard-in-contract"},"children":[{"type":"text","value":"Why Ethash verification is hard in contract"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"First of, the cache is needed. As we mentioned it has size roughly "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"70MB"}]},{"type":"text","value":" (as for today), and computation time of several seconds, even if done natively. This is totally unrealistic for contracts, which are deliberately restricted in both available memory and running time."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"One strategy to solve this problem (that we tried) is to provide contracts a special bvm function. It would be like this:"}]},{"type":"element","tag":"pre","props":{"className":["language-C++"],"code":"hash256 get_EthashDagEndpoint(int epochNumber, hash512 seed);\n","language":"C++","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"hash256 get_EthashDagEndpoint(int epochNumber, hash512 seed);\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The bvm implementation would generate and keep the cache for the specified Epoch in memory, and interpret the needed path for the contract. The rest of the header verification (seed derivation, difficulty test, etc.) can be done inside the contract."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This strategy however has the following drawbacks:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Adding very specialized functions to the bvm is a drawback. We prefer to keep the functions very generic, and avoid specialized functions unless there's no other option."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Unlike native Ethereum clients, it's not possible to assume that only the current Epoch would be needed. Contracts might need to process headers from the past, as well as headers from different sidechains with different heights."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Calculating the cache for each requested Epoch is heavy. Pre-calculating and keeping many of them in the local storage is unrealistic too for most of the clients, because of the considerable cache size of each Epoch."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Since the contract may want to process many Ethereum headers at once, the performance may be complex even with prepared cache."}]}]},{"type":"element","tag":"h1","props":{"id":"our-strategy"},"children":[{"type":"text","value":"Our strategy"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"First let's study the pseudo-code of the supposed "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"get_EthashDagEndpoint"}]},{"type":"text","value":":"}]},{"type":"element","tag":"pre","props":{"className":["language-C++"],"code":"hash256 get_EthashDagEndpoint(int epochNumber, hash512 seed)\n{\n    Init MyState from seed;\n    loop 64 times:\n    {\n        derive Index from MyState;\n        get hash1024 Element from DAG of the specified epoch at position Index;\n        mutate MyState by Element\n    }\n\n    derive Hash256 MixHash from MyState;\n    return  MixHash;\n}\n","language":"C++","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"hash256 get_EthashDagEndpoint(int epochNumber, hash512 seed)\n{\n    Init MyState from seed;\n    loop 64 times:\n    {\n        derive Index from MyState;\n        get hash1024 Element from DAG of the specified epoch at position Index;\n        mutate MyState by Element\n    }\n\n    derive Hash256 MixHash from MyState;\n    return  MixHash;\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Note that this code can basically be implemented in the contract. The "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"MyState"}]},{"type":"text","value":" mutation and consequent "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Index"}]},{"type":"text","value":" derivation are pretty simple (use fast hash function). The problem of course is getting the element from the "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"DAG"}]},{"type":"text","value":" at the requested "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Index"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The idea is to provide those elements for the verification. Means in order to verify the header, in addition to the header itself, the prover would include those 64 1024-bit elements of the path for the contract. Then the contract would repeat the same path and compute the same "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"MixHash"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The question is how can the contract verify that the provided elements of the "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"DAG"}]},{"type":"text","value":" are indeed correct. For this the Prover would include the Merkle multi-element proof (more about this later)."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"So that the contract gets:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The header."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"64 elements from the "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"DAG"}]},{"type":"text","value":"."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Merkle proof that proves that the above elements are indeed part of the "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"DAG"}]},{"type":"text","value":", and ("},{"type":"element","tag":"u","props":{},"children":[{"type":"text","value":"importantly!"}]},{"type":"text","value":") they are at the asserted positions."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"So, in order to deploy and use contracts written in this way the following is needed:"}]},{"type":"element","tag":"h3","props":{"id":"setup"},"children":[{"type":"text","value":"Setup."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"For each epoch:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"calculate the "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"DAG"}]},{"type":"text","value":", build a Merkle tree, and save it locally.\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"to reduce the space the lower levels of the tree may be omitted. Each omitted level saves x2 space, and increases x2 the complexity of the consequent proof generations."}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Calculate and save the Merkle tree root."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Practically the total number of Epochs can be limited to 1024. This will cover all the headers from the very beginning up to year 2030."}]},{"type":"element","tag":"h3","props":{"id":"deploy-the-contract"},"children":[{"type":"text","value":"Deploy the contract."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"For each Epoch the contract has (hard-coded) the following:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The size of the "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"DAG"}]},{"type":"text","value":"."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Merkle root."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Alternatively instead of storing this data for each Epoch, we can build yet another Merkle tree. By such the contract would only need a single Merkle root. Then, during the verification, one more Merkle proof would be necessary to verify this specific Epoch params."}]},{"type":"element","tag":"h3","props":{"id":"using"},"children":[{"type":"text","value":"Using"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"To invoke the contract method that is supposed verify the Ethereum header the following is performed by the caller:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Simulate the PoW verification locally. Obtain the 64 Elements that are needed for the path as well as deduce their indexes."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Build the Merkle multi-element proof for those elements, given their indexes."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Concatenate the elements and the Merkle proof, to form a single unified proof."}]}]},{"type":"element","tag":"h2","props":{"id":"merkle-multi-element-proof"},"children":[{"type":"text","value":"Merkle multi-element proof"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The goal is to prove that the specified subset of elements is a part of the original set. A naive way to accomplish this would be providing a separate Merkle proof for each element, which is essentially a set of hashes, by interpreting which the verifier should calculate and verify the Merkle root for each element individually. This is suboptimal however, since hashes are likely to repeat (i.e. show up in proof for different elements). Instead of doing this the prover would provide the minimal set of hashes, by using which the verifier would calculate the Merkle root only once."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In our specific case the verifier knows both the original data set size, and the asserted indexes (positions) of the elements in its subset. We designed our protocol such that it proves not only the existence of those elements in the original set, but also their positions. The simplified verifier pseudo-code would look like this:"}]},{"type":"element","tag":"pre","props":{"className":["language-C++"],"code":"Hash get_Root(Set myElements, int rangeBegin, int rangeSize)\n{\n    if myElements is empty\n        // this is where the prover is supposed to provide the complementary sibling hash\n        return next Hash from the attached proof;\n        \n    if rangeSize == 1\n        // if the myElements contains more than 1 element (i.e. original set of elements contains collisions, unlikely but possible) - make sure they are all equal.\n        return Evaluate hash from myElements[0];\n    \n    // split the range\n    rangeSize /= 2;\n    \n    int pivot = rangeBegin + rangeSize;\n    \n    Split myElements into 2 subsets myElementsLo and myElementsHi, according to pivot;\n    \n    Hash hashLo = get_Root(myElementsLo, rangeBegin, rangeSize);\n    Hash hashHi = get_Root(myElementsHi, pivot, rangeSize);\n    \n    return Hash(hashLo | hashHi);\n}\n","language":"C++","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"Hash get_Root(Set myElements, int rangeBegin, int rangeSize)\n{\n    if myElements is empty\n        // this is where the prover is supposed to provide the complementary sibling hash\n        return next Hash from the attached proof;\n        \n    if rangeSize == 1\n        // if the myElements contains more than 1 element (i.e. original set of elements contains collisions, unlikely but possible) - make sure they are all equal.\n        return Evaluate hash from myElements[0];\n    \n    // split the range\n    rangeSize /= 2;\n    \n    int pivot = rangeBegin + rangeSize;\n    \n    Split myElements into 2 subsets myElementsLo and myElementsHi, according to pivot;\n    \n    Hash hashLo = get_Root(myElementsLo, rangeBegin, rangeSize);\n    Hash hashHi = get_Root(myElementsHi, pivot, rangeSize);\n    \n    return Hash(hashLo | hashHi);\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The prover interprets this according to the same logic. It just doesn't evaluate anything, and provides the appropriate Merkle tree hashes when needed."}]},{"type":"element","tag":"h1","props":{"id":"pros-and-cons"},"children":[{"type":"text","value":"Pros and cons"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Pros:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"No need for specialilzed support functions. Hence no additional threat of abuse and etc."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Header verification is reasonably fast."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Cons:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"To invoke the contract the prover needs to generate and process the "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"DAG"}]},{"type":"text","value":"."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The proof size is considerable.\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The needed elements take 8K (64 elements, 1024 bits == 128 bytes each)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The Merkle proof size varies, but seems to be around 1100-1200 hashes for all the elements."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"We decided to use 160-bit hashes, to reduce the proof size, yet have decent security."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The overall proof size is about "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"30KB"}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Overall this solution seems very practical. The proof size, albeit considerable, is not prohibitively large. With our current block size limitation of 1MB it's possible to verify up to tens of Ethereum headers at once.\nThe verification time is reasonably fast too (actually faster than normal verification even with cache prepared). Dominated by the hashing, for which there are native functions provided by the bvm."}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"setup","depth":3,"text":"Setup."},{"id":"deploy-the-contract","depth":3,"text":"Deploy the contract."},{"id":"using","depth":3,"text":"Using"},{"id":"merkle-multi-element-proof","depth":2,"text":"Merkle multi-element proof"}]}},"_type":"markdown","_id":"content:docs:core-tech:Ethash-verification-in-contracts.md","_source":"content","_file":"docs/core-tech/Ethash-verification-in-contracts.md","_extension":"md"},{"_path":"/docs/core-tech/exchange-pool-integration-guide","_dir":"core-tech","_draft":false,"_partial":false,"_locale":"","title":"Exchange/Pool integration guide","description":"","body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"exchangepool-integration-guide"},"children":[{"type":"text","value":"Exchange/Pool integration guide"}]},{"type":"element","tag":"h2","props":{"id":"important-the-recommended-number-of-confirmations-for-beam-transfers-is-80-blocks"},"children":[{"type":"text","value":"IMPORTANT: The recommended number of confirmations for Beam transfers is 80 blocks."}]},{"type":"element","tag":"h2","props":{"id":"getting-binaries"},"children":[{"type":"text","value":"Getting binaries"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"First of all, define the network you'd like to \"play\" with:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"mainnet"}]},{"type":"text","value":" - it's the latest released production version, working with real money and you can get binaries from the "},{"type":"element","tag":"a","props":{"href":"https://www.beam.mw/downloads","rel":["nofollow"]},"children":[{"type":"text","value":"official website"}]},{"type":"text","value":", see "},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/releases","rel":["nofollow"]},"children":[{"type":"text","value":"Github Releases"}]},{"type":"text","value":" or build yourself from the sources of ("},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/tree/mainnet","rel":["nofollow"]},"children":[{"type":"text","value":"mainnet branch"}]},{"type":"text","value":")."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"testnet"}]},{"type":"text","value":" - to check the features will be released soon to production and  you can get binaries from the "},{"type":"element","tag":"a","props":{"href":"https://beam.mw/downloads/testnet","rel":["nofollow"]},"children":[{"type":"text","value":"official website"}]},{"type":"text","value":"\n, see "},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/releases","rel":["nofollow"]},"children":[{"type":"text","value":"Github Releases"}]},{"type":"text","value":" or build from the "},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/tree/testnet","rel":["nofollow"]},"children":[{"type":"text","value":"testnet branch"}]},{"type":"text","value":"."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"master"}]},{"type":"text","value":" - to see the latest changes in development build the "},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/tree/master","rel":["nofollow"]},"children":[{"type":"text","value":"master branch"}]},{"type":"text","value":"."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Here are "},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/wiki/How-to-build","rel":["nofollow"]},"children":[{"type":"text","value":"detailed instructions on how to build a project"}]},{"type":"text","value":" for "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Windows"}]},{"type":"text","value":", "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Linux"}]},{"type":"text","value":", "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Mac"}]},{"type":"text","value":" platforms ."}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Add "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-DBEAM_NO_QT_UI_WALLET=On"}]},{"type":"text","value":" command line parameter to the Cmake if you need only CLI version of the wallet without UI and QT5 library dependencies."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"You will need to build 4 binaries: "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"beam-node"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"explorer-node"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"beam-wallet"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"wallet-api"}]},{"type":"text","value":"."}]},{"type":"element","tag":"h2","props":{"id":"initializing-wallet"},"children":[{"type":"text","value":"Initializing Wallet"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"To create a new wallet run the following command ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"wallet.db"}]},{"type":"text","value":" will be created in the working folder):"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"./beam-wallet init"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Output example for "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"init"}]},{"type":"text","value":" operation:"}]},{"type":"element","tag":"pre","props":{"code":"I 2019-02-19.15:28:55.500 Beam Wallet 1.2.4392 (master)\nI 2019-02-19.15:28:55.501 Rules signature: 7c360d0c2ee92d9e\nI 2019-02-19.15:28:55.501 starting a wallet...\nEnter password: ***\nConfirm password: ***\nI 2019-02-19.15:29:01.716 Generating seed phrase...\n======\nGenerated seed phrase:\n\n        army;wing;very;trim;crumble;meat;spawn;click;donate;loyal;trap;gauge;\n\n        IMPORTANT\n\n        Your seed phrase is the access key to all the cryptocurrencies in your wallet.\n        Print or write down the phrase to keep it in a safe or in a locked vault.\n        Without the phrase you will not be able to recover your money.\n======\nI 2019-02-19.15:29:01.950 wallet successfully created...\nI 2019-02-19.15:29:01.971 New address generated:\n\n1f27eea1057633e7df23aa51f835a05fa759ca199535fe99952bf9aecad17186d9d\n\nI 2019-02-19.15:29:01.971 comment = default\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"I 2019-02-19.15:28:55.500 Beam Wallet 1.2.4392 (master)\nI 2019-02-19.15:28:55.501 Rules signature: 7c360d0c2ee92d9e\nI 2019-02-19.15:28:55.501 starting a wallet...\nEnter password: ***\nConfirm password: ***\nI 2019-02-19.15:29:01.716 Generating seed phrase...\n======\nGenerated seed phrase:\n\n        army;wing;very;trim;crumble;meat;spawn;click;donate;loyal;trap;gauge;\n\n        IMPORTANT\n\n        Your seed phrase is the access key to all the cryptocurrencies in your wallet.\n        Print or write down the phrase to keep it in a safe or in a locked vault.\n        Without the phrase you will not be able to recover your money.\n======\nI 2019-02-19.15:29:01.950 wallet successfully created...\nI 2019-02-19.15:29:01.971 New address generated:\n\n1f27eea1057633e7df23aa51f835a05fa759ca199535fe99952bf9aecad17186d9d\n\nI 2019-02-19.15:29:01.971 comment = default\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"You can also restore wallet with your "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"seed_phrase"}]},{"type":"text","value":" if you've already had it."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"./beam-wallet restore --seed_phrase=<semicolon separated list of 12 seed phrase words>;"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Once wallet is initialised, you have to export your "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Owner Key"}]},{"type":"text","value":" (it will be needed in the future to start own node)."}]},{"type":"element","tag":"details","props":{},"children":[{"type":"element","tag":"summary","props":{},"children":[{"type":"text","value":"\nMore info about `owner key`\n"}]},{"type":"text","value":"\nThe purpose of the `owner key` is to allow all nodes mining for you to be aware of all mining rewards mined by other nodes so that you would only need to connect to one node to collect all the rewards into your wallet. While in most other cryptocurrencies this is done by simply mining to a single address you control, in Mimblewimble it is not as simple since there are no addresses and the mining rewards should be coded with unique blinding factors which are deterministically derived from the `master key`, and then tagged by the single `owner key`.\n"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Output example for "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"export_owner_key"}]},{"type":"text","value":" operation:"}]},{"type":"element","tag":"pre","props":{"code":"$ ./beam-wallet export_owner_key\nI 2019-02-19.15:32:16.217 Beam Wallet 1.2.4392 (master)\nI 2019-02-19.15:32:16.218 Rules signature: 7c360d0c2ee92d9e\nI 2019-02-19.15:32:16.219 starting a wallet...\nEnter password: ***\nOwner Viewer key: +SevBZ++xL1wEM+yyGbMI+ZElHahudX8mh6Hu/atJrdtzAOD2zpeb2LPIqQcnvry3JUQFBa9gTAHT98RMQMdcggr+LX0oqdGsVIx3KRkTxyvRdKBnw8lz9uAmMx0P2TNlk30E+M5MCnX7Ngp\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"$ ./beam-wallet export_owner_key\nI 2019-02-19.15:32:16.217 Beam Wallet 1.2.4392 (master)\nI 2019-02-19.15:32:16.218 Rules signature: 7c360d0c2ee92d9e\nI 2019-02-19.15:32:16.219 starting a wallet...\nEnter password: ***\nOwner Viewer key: +SevBZ++xL1wEM+yyGbMI+ZElHahudX8mh6Hu/atJrdtzAOD2zpeb2LPIqQcnvry3JUQFBa9gTAHT98RMQMdcggr+LX0oqdGsVIx3KRkTxyvRdKBnw8lz9uAmMx0P2TNlk30E+M5MCnX7Ngp\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Owner Key"}]},{"type":"text","value":" should be kept secret. "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Owner Key"}]},{"type":"text","value":" does not allow to spend coins, however it will allow to see all coins mined for you by all miners that use this "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Owner Кey"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Here you can read about all the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"beam-wallet"}]},{"type":"text","value":" commands: "},{"type":"element","tag":"a","props":{"href":"https://beamx.gitbook.io/cli-guide/","rel":["nofollow"]},"children":[{"type":"text","value":"https://beamx.gitbook.io/cli-guide/"}]}]},{"type":"element","tag":"h2","props":{"id":"starting-a-node"},"children":[{"type":"text","value":"Starting a Node"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Run the node with your "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Owner Key"}]},{"type":"text","value":" and make sure it has completed the synchronization with the network:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"./beam-node.exe --peer=eu-node01.mainnet.beam.mw:8100 --key_owner=XPWoJ/ViEO1whRcYC1z/nylDH1C2lqLxpMYU0/AbqP67XI4sgYDkUIvJfUpMFjwdPYNz2A7PCHWo7c/kHHTZ2EDUNv2BJvQHb1KHZjLNZPFgV2wceHfzvCYIUF3cR9ADfVSBquTxEldipNgp"}]}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Please, make sure you pass proper peer address for the current network you have chosen before."}]}]},{"type":"element","tag":"details","props":{},"children":[{"type":"element","tag":"summary","props":{},"children":[{"type":"text","value":"\nList of peers\n"}]},{"type":"element","tag":"pre","props":{"code":"MASTER peers:\neu-node01.masternet.beam.mw:8100\neu-node02.masternet.beam.mw:8100\neu-node03.masternet.beam.mw:8100\neu-node04.masternet.beam.mw:8100\n\nTESTNET peers:\nap-node01.testnet.beam.mw:8100\nap-node02.testnet.beam.mw:8100\nap-node03.testnet.beam.mw:8100\neu-node01.testnet.beam.mw:8100\neu-node02.testnet.beam.mw:8100\neu-node03.testnet.beam.mw:8100\nus-node01.testnet.beam.mw:8100\nus-node02.testnet.beam.mw:8100\nus-node03.testnet.beam.mw:8100\n\nMAINNET peers:\neu-node01.mainnet.beam.mw:8100\neu-node02.mainnet.beam.mw:8100\neu-node03.mainnet.beam.mw:8100\neu-node04.mainnet.beam.mw:8100\nus-node01.mainnet.beam.mw:8100\nus-node02.mainnet.beam.mw:8100\nus-node03.mainnet.beam.mw:8100\nus-node04.mainnet.beam.mw:8100\nap-node01.mainnet.beam.mw:8100\nap-node02.mainnet.beam.mw:8100\nap-node03.mainnet.beam.mw:8100\nap-node04.mainnet.beam.mw:8100\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"MASTER peers:\neu-node01.masternet.beam.mw:8100\neu-node02.masternet.beam.mw:8100\neu-node03.masternet.beam.mw:8100\neu-node04.masternet.beam.mw:8100\n\nTESTNET peers:\nap-node01.testnet.beam.mw:8100\nap-node02.testnet.beam.mw:8100\nap-node03.testnet.beam.mw:8100\neu-node01.testnet.beam.mw:8100\neu-node02.testnet.beam.mw:8100\neu-node03.testnet.beam.mw:8100\nus-node01.testnet.beam.mw:8100\nus-node02.testnet.beam.mw:8100\nus-node03.testnet.beam.mw:8100\n\nMAINNET peers:\neu-node01.mainnet.beam.mw:8100\neu-node02.mainnet.beam.mw:8100\neu-node03.mainnet.beam.mw:8100\neu-node04.mainnet.beam.mw:8100\nus-node01.mainnet.beam.mw:8100\nus-node02.mainnet.beam.mw:8100\nus-node03.mainnet.beam.mw:8100\nus-node04.mainnet.beam.mw:8100\nap-node01.mainnet.beam.mw:8100\nap-node02.mainnet.beam.mw:8100\nap-node03.mainnet.beam.mw:8100\nap-node04.mainnet.beam.mw:8100\n"}]}]}]},{"type":"element","tag":"h3","props":{"id":"mining-support"},"children":[{"type":"text","value":"Mining support"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Beam Node also provides built-in support for "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Stratum API"}]},{"type":"text","value":" allowing to connect multiple external mining clients to a single node, "},{"type":"element","tag":"a","props":{"href":"https://beamx.gitbook.io/beam-mining","rel":["nofollow"]},"children":[{"type":"text","value":"read more..."}]},{"type":"text","value":"."}]},{"type":"element","tag":"h2","props":{"id":"wallet-api"},"children":[{"type":"text","value":"Wallet API"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"With Wallet API you can"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"check current "},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/wiki/Beam-wallet-protocol-API-v6.1#wallet_status","rel":["nofollow"]},"children":[{"type":"text","value":"wallet status and (balance)"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"get all your "},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/wiki/Beam-wallet-protocol-API-v6.1#get_utxo","rel":["nofollow"]},"children":[{"type":"text","value":"UTXO"}]},{"type":"text","value":"/"},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/wiki/Beam-wallet-protocol-API-v6.1#tx_list","rel":["nofollow"]},"children":[{"type":"text","value":"transactions"}]},{"type":"text","value":" list"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/wiki/Beam-wallet-protocol-API-v6.1#create_address","rel":["nofollow"]},"children":[{"type":"text","value":"create"}]},{"type":"text","value":"/"},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/wiki/Beam-wallet-protocol-API-v6.1#validate_address","rel":["nofollow"]},"children":[{"type":"text","value":"verify"}]},{"type":"text","value":" address"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/wiki/Beam-wallet-protocol-API-v6.1#tx_send","rel":["nofollow"]},"children":[{"type":"text","value":"send funds"}]},{"type":"text","value":" and "},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/wiki/Beam-wallet-protocol-API-v6.1#tx_cancel","rel":["nofollow"]},"children":[{"type":"text","value":"cancel"}]},{"type":"text","value":" transactions"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"make a "},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/wiki/Beam-wallet-protocol-API-v6.1#tx_split","rel":["nofollow"]},"children":[{"type":"text","value":"split of UTXO"}]},{"type":"text","value":" - create a specific set of outputs with given set of values"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"There are two ways to send JSON RPC commands to the API,"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"using TCP socket"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"via HTTP calls."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"With TCP you can hold only one connection, send JSON commands separated with "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"\\n"}]},{"type":"text","value":" symbol and receive callbacks from the API, in the one hand it's more flexible but a bit difficult to implement in the other hand.\nWith HTTP you can do POST requests using "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"curl"}]},{"type":"text","value":" command."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"So, to start API with HTTP support use the command:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"./wallet-api --node_addr=x.x.x.x:port --use_http=1"}]},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"\nwhere "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"node_addr"}]},{"type":"text","value":" is your node address and port."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"See detailed "},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/wiki/Beam-wallet-protocol-API","rel":["nofollow"]},"children":[{"type":"text","value":"wallet API documentation"}]},{"type":"text","value":"."}]},{"type":"element","tag":"h2","props":{"id":"node-explorer-api"},"children":[{"type":"text","value":"Node Explorer API"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"With this API you can get information about current blockchain state and blocks using simple GET requests."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"To run explorer use the command:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"./explorer-node.exe --peer eu-node01.mainnet.beam.mw:8100 --api_port=8080"}]}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Please, make sure you pass proper peer address for the current network you have chosen before."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"See detailed "},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/wiki/Beam-Node-Explorer-API","rel":["nofollow"]},"children":[{"type":"text","value":"explorer API documentation"}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"important-the-recommended-number-of-confirmations-for-beam-transfers-is-80-blocks","depth":2,"text":"IMPORTANT: The recommended number of confirmations for Beam transfers is 80 blocks."},{"id":"getting-binaries","depth":2,"text":"Getting binaries"},{"id":"initializing-wallet","depth":2,"text":"Initializing Wallet"},{"id":"starting-a-node","depth":2,"text":"Starting a Node","children":[{"id":"mining-support","depth":3,"text":"Mining support"}]},{"id":"wallet-api","depth":2,"text":"Wallet API"},{"id":"node-explorer-api","depth":2,"text":"Node Explorer API"}]}},"_type":"markdown","_id":"content:docs:core-tech:Exchange-Pool-integration-guide.md","_source":"content","_file":"docs/core-tech/Exchange-Pool-integration-guide.md","_extension":"md"},{"_path":"/docs/core-tech/folder-and-file-locations","_dir":"core-tech","_draft":false,"_partial":false,"_locale":"","title":"Desktop Wallet app","description":"Please refer to: https://documentation.beam.mw/en/latest/rtd_pages/user_files_and_locations.html?highlight=location","body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"desktop-wallet-app"},"children":[{"type":"text","value":"Desktop Wallet app"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Please refer to: "},{"type":"element","tag":"a","props":{"href":"https://documentation.beam.mw/en/latest/rtd_pages/user_files_and_locations.html?highlight=location","rel":["nofollow"]},"children":[{"type":"text","value":"https://documentation.beam.mw/en/latest/rtd_pages/user_files_and_locations.html?highlight=location"}]}]},{"type":"element","tag":"h2","props":{"id":"general-points-to-mention"},"children":[{"type":"text","value":"General points to mention:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The default location of the Desktop Wallet app can be modified during the installation process (Windows only)."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The default Database location for the Desktop Wallet app can be changed setting the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"appdata"}]},{"type":"text","value":" parameter to "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"beam-wallet.cfg"}]},{"type":"text","value":" (Windows only)."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Memory dump files are generated on Windows only. A dedicated memory dump file is created per each crash case."}]}]},{"type":"element","tag":"h2","props":{"id":"windows"},"children":[{"type":"text","value":"Windows"}]},{"type":"element","tag":"table","props":{},"children":[{"type":"element","tag":"thead","props":{},"children":[{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"th","props":{},"children":[{"type":"text","value":"File"}]},{"type":"element","tag":"th","props":{},"children":[{"type":"text","value":"Location"}]}]}]},{"type":"element","tag":"tbody","props":{},"children":[{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"Main Executable"}]},{"type":"element","tag":"td","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"\\Program Files\\Beam\\Beam Wallet.exe"}]}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"Configuration"}]},{"type":"element","tag":"td","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"\\Program Files\\Beam\\beam-wallet.cfg"}]}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"Logs"}]},{"type":"element","tag":"td","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"\\Users\\\\{your User name}\\AppData\\Local\\Beam Wallet\\logs"}]}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"Database"}]},{"type":"element","tag":"td","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"\\Users\\{your User name}\\AppData\\Local\\Beam Wallet\\wallet.db (node.db)"}]}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"Dumps"}]},{"type":"element","tag":"td","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"\\Users\\{your User name}\\AppData\\Local\\Beam Wallet\\Beam Wallet.exe0.dmp"}]}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"mac"},"children":[{"type":"text","value":"Mac"}]},{"type":"element","tag":"table","props":{},"children":[{"type":"element","tag":"thead","props":{},"children":[{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"th","props":{},"children":[{"type":"text","value":"File"}]},{"type":"element","tag":"th","props":{},"children":[{"type":"text","value":"Location"}]}]}]},{"type":"element","tag":"tbody","props":{},"children":[{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"Main Executable"}]},{"type":"element","tag":"td","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"/Applications/Beam Wallet.app"}]}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"Configuration"}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"N/A"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"Logs"}]},{"type":"element","tag":"td","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"/Users/{your User name}/Library/Application Support/Beam Wallet/logs"}]}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"Database"}]},{"type":"element","tag":"td","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"/Users/{your User name}/Library/Application Support/Beam Wallet/wallet.db (node.db)"}]}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"linux"},"children":[{"type":"text","value":"Linux"}]},{"type":"element","tag":"table","props":{},"children":[{"type":"element","tag":"thead","props":{},"children":[{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"th","props":{},"children":[{"type":"text","value":"File"}]},{"type":"element","tag":"th","props":{},"children":[{"type":"text","value":"Location"}]}]}]},{"type":"element","tag":"tbody","props":{},"children":[{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"Main Executable"}]},{"type":"element","tag":"td","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"/usr/bin/BeamWallet"}]}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"Configuration"}]},{"type":"element","tag":"td","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"/usr/bin/beam-wallet.cfg"}]}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"Logs"}]},{"type":"element","tag":"td","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"/home/{your User name}/.local/share/Beam Wallet/logs"}]}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"Database"}]},{"type":"element","tag":"td","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"/home/{your User name}/.local/share/Beam Wallet/wallet.db (node.db)"}]}]}]}]}]},{"type":"element","tag":"h1","props":{"id":"node-or-cli-wallet"},"children":[{"type":"text","value":"Node or CLI wallet"}]},{"type":"element","tag":"h2","props":{"id":"all-platforms-small-differences-apply-see-below"},"children":[{"type":"text","value":"All Platforms (small differences apply, see below)"}]},{"type":"element","tag":"table","props":{},"children":[{"type":"element","tag":"thead","props":{},"children":[{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"th","props":{},"children":[{"type":"text","value":"File"}]},{"type":"element","tag":"th","props":{},"children":[{"type":"text","value":"Location"}]}]}]},{"type":"element","tag":"tbody","props":{},"children":[{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"Main Executable folder"}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"User can unpack the archive in any folder to his convenience, "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"all the files/folders mentioned below are located within this folder"}]}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"Main Executable file"}]},{"type":"element","tag":"td","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"beam-node"}]},{"type":"text","value":" or "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"beam-wallet"}]}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"Configuration file"}]},{"type":"element","tag":"td","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"beam-node.cfg"}]},{"type":"text","value":" or "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"beam-wallet.cfg"}]}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"Logs folder"}]},{"type":"element","tag":"td","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"logs"}]}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"Database"}]},{"type":"element","tag":"td","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"node.db"}]},{"type":"text","value":" or "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"wallet.db"}]}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"Dumps (on Windows only)"}]},{"type":"element","tag":"td","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"beam-node.exe0.dmp"}]}]}]}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"general-points-to-mention","depth":2,"text":"General points to mention:"},{"id":"windows","depth":2,"text":"Windows"},{"id":"mac","depth":2,"text":"Mac"},{"id":"linux","depth":2,"text":"Linux"},{"id":"all-platforms-small-differences-apply-see-below","depth":2,"text":"All Platforms (small differences apply, see below)"}]}},"_type":"markdown","_id":"content:docs:core-tech:Folder-and-file-locations.md","_source":"content","_file":"docs/core-tech/Folder-and-file-locations.md","_extension":"md"},{"_path":"/docs/core-tech/hi-frequency-transactions","_dir":"core-tech","_draft":false,"_partial":false,"_locale":"","title":"Hi Frequency Transactions","description":"","body":{"type":"root","children":[{"type":"element","tag":"h2","props":{"id":"standard-transaction-handling"},"children":[{"type":"text","value":"Standard transaction handling"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Standard Beam transactions are considered independent. After they are broadcast to the network (in the "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"fluff"}]},{"type":"text","value":" phase) they are kept in a "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Transaction pool"}]},{"type":"text","value":" in each node, until they either expire or included in a block. Miners select the transactions according to their Fee/Size ratio, to maximize the reward."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The transaction lifespan (e.i. "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"height range"}]},{"type":"text","value":") is controlled by its creator, but usually order of several hours. Once the transaction is broadcast, the wallet monitors the new blocks, until either it notices the transaction is included in a block (succeeded), or expires (failed)."}]},{"type":"element","tag":"h2","props":{"id":"defi"},"children":[{"type":"text","value":"DeFi"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"While the above scheme is OK for normal transactions, smart contracts demand a different design, because transactions are potentially "},{"type":"element","tag":"u","props":{},"children":[{"type":"text","value":"dependent"}]},{"type":"text","value":", their order and block height may have consequences for users, or even render some of them invalid."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"So we designed a concept of "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"dependent"}]},{"type":"text","value":" transactions. Those that insist to be included in a specified block and at the specified position, or not included at all.\nIn contrast to normal transactions, that are stored in a "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"flat"}]},{"type":"text","value":" transaction pool, dependent transactions are stored in a special tree. Then in order to assemble a block, the miner picks the branch with maximum total fees, and includes all the appropriate transactions in this exact order."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"When working in the HFT mode, the wallet not only gets notifications about new blocks, but also about the changes in the dependent transactions tree. Then, in order to build a transaction, it does the following:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Gets the information about the current transaction branch with the maximum total fee (the one that is most likely to be selected by the miner)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Specifies this branch ID when querying the appropriate contract information. By such it can foresee the effects of all the preceding transactions in the branch, and build a new transactions accordingly."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"When ready, broadcast this transaction to the node, with the branch ID that defines uniquely the position where this transaction should be included."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Even before the new block is mined, the wallet gets notification about the transaction tree updates. If for some reason the current transaction is unlikely to be mined (another competing branch has more total fee) - the wallet may rebuild and resend transaction according to the new context."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Optionally this may be repeated continuously, until the transaction is mined."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"By such we achieve the following goals:"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Strict transaction inclusion rule. Protect the user from unexpected side effects (a.k.a. front running attack)."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Give users prompt pseudo-confirmation for their transactions."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Give opportunity for several users to see effects of other's transactions, hence include otherwise conflicting transactions in the same block."}]}]},{"type":"element","tag":"h1","props":{"id":"technical-design"},"children":[{"type":"text","value":"Technical design"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"(in progress)"}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"standard-transaction-handling","depth":2,"text":"Standard transaction handling"},{"id":"defi","depth":2,"text":"DeFi"}]}},"_type":"markdown","_id":"content:docs:core-tech:Hi-Frequency-transactions.md","_source":"content","_file":"docs/core-tech/Hi-Frequency-transactions.md","_extension":"md"},{"_path":"/docs/core-tech/how-to-build","_dir":"core-tech","_draft":false,"_partial":false,"_locale":"","title":"How To Build","description":"Starting from version 5.0 we separated core beam library project and its UI.","body":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Starting from version 5.0 we separated core beam library project and its UI."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Desktop UI is a separte git repostotry now "},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam-ui","rel":["nofollow"]},"children":[{"type":"text","value":"https://github.com/BeamMW/beam-ui"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"For earlier versions, build instructions are located "},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/wiki/How-to-build(old)","rel":["nofollow"]},"children":[{"type":"text","value":"here"}]},{"type":"text","value":"."}]},{"type":"element","tag":"h1","props":{"id":"before-build"},"children":[{"type":"text","value":"Before build"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Ensure that you have "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"git"}]},{"type":"text","value":" installed"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"beam-ui"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"beam"}]},{"type":"text","value":" project use "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"CMake"}]},{"type":"text","value":" to generate build environment. The minimal supported version of "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"CMake"}]},{"type":"text","value":" is "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"3.13"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Download and install "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"boost"}]},{"type":"text","value":" library. The minimal supported version is 1.66"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Download and install "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"OpenSSL"}]},{"type":"text","value":" library"}]}]},{"type":"element","tag":"h1","props":{"id":"common-part"},"children":[{"type":"text","value":"Common part"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Clone Beam sources before building"},{"type":"element","tag":"pre","props":{"code":"git clone https://github.com/BeamMW/beam.git\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"git clone https://github.com/BeamMW/beam.git\n"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Beam has submodules"},{"type":"element","tag":"pre","props":{"code":"cd beam\ngit submodule update --init --recursive\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"cd beam\ngit submodule update --init --recursive\n"}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"branch-convention"},"children":[{"type":"text","value":"Branch convention"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"We use "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"master"}]},{"type":"text","value":" branch for development."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"To be able to connect to "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"testnet"}]},{"type":"text","value":" you have to checkout "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"testnet"}]},{"type":"text","value":" branch"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"To be able to connect to "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"mainnet"}]},{"type":"text","value":" you have to checkout "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"mainnet"}]},{"type":"text","value":" branch"}]}]},{"type":"element","tag":"h2","props":{"id":"cmake-options"},"children":[{"type":"text","value":"CMake options"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Beam uses CMake to generate a build. Beam has several options to say how to build the project, which feature to turn ON/OFF. T\nPlease, look reference to root "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"CMakeLists.txt"}]},{"type":"text","value":" file."}]},{"type":"element","tag":"h1","props":{"id":"windows"},"children":[{"type":"text","value":"Windows"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Install Visual Studio >= 2017 with CMake support."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Download and install Boost prebuilt binaries "},{"type":"element","tag":"a","props":{"href":"https://sourceforge.net/projects/boost/files/boost-binaries/1.75.0/boost_1_75_0-msvc-14.1-64.exe","rel":["nofollow"]},"children":[{"type":"text","value":"https://sourceforge.net/projects/boost/files/boost-binaries/1.75.0/boost_1_75_0-msvc-14.1-64.exe"}]},{"type":"text","value":", also add "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"BOOST_ROOT"}]},{"type":"text","value":" to the "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Environment Variables"}]},{"type":"text","value":"."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Download and install OpenSSL prebuilt binaries "},{"type":"element","tag":"a","props":{"href":"https://slproweb.com/products/Win32OpenSSL.html","rel":["nofollow"]},"children":[{"type":"text","value":"https://slproweb.com/products/Win32OpenSSL.html"}]},{"type":"text","value":" ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Win64 OpenSSL v1.1.0h"}]},{"type":"text","value":" for example) and add "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"OPENSSL_ROOT_DIR"}]},{"type":"text","value":" to the "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Environment Variables"}]},{"type":"text","value":"."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Add "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":".../boost_1_75_0/lib64-msvc-14.1"}]},{"type":"text","value":" to the "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"System Path"}]},{"type":"text","value":"."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Open project folder in Visual Studio, select your target ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Release-x64"}]},{"type":"text","value":" for example, if you downloaded 64bit Boost and OpenSSL) and select "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"CMake -> Build All"}]},{"type":"text","value":"."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Open cache folder\n"},{"type":"element","tag":"pre","props":{"code":"Visual Studio 2017:\nGo to CMake -> Cache -> Open Cache Folder -> beam\n\nVisual Studio 2019:\nProject -> CMake Cache -> Open in Explorer\n\nYou'll find binaries in beam/..., wallet/cli/..., explorer/... subfolders.\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"Visual Studio 2017:\nGo to CMake -> Cache -> Open Cache Folder -> beam\n\nVisual Studio 2019:\nProject -> CMake Cache -> Open in Explorer\n\nYou'll find binaries in beam/..., wallet/cli/..., explorer/... subfolders.\n"}]}]}]}]},{"type":"element","tag":"h1","props":{"id":"linux"},"children":[{"type":"text","value":"Linux"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Please read carefully the points below"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"1."}]},{"type":"text","value":" After finishing your build you'll find the the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"beam-node"}]},{"type":"text","value":" binary (node) in the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"beam/beam"}]},{"type":"text","value":" folder, "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"beam-wallet"}]},{"type":"text","value":" (cli wallet) in the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"beam/wallet/cli"}]},{"type":"text","value":" folder."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"2."}]},{"type":"text","value":" You need to clone beam sources before building"}]},{"type":"element","tag":"pre","props":{"code":"git clone https://github.com/BeamMW/beam.git\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"git clone https://github.com/BeamMW/beam.git\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The command above checks out the latest master branch where all the development happens. Usually it is not what you want to build. Choose an appropriate branch "},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/branches","rel":["nofollow"]},"children":[{"type":"text","value":"here"}]},{"type":"text","value":" and check out it after you have the main repository cloned. For example the command below checks out the Double Doppler 4.0 release branch"}]},{"type":"element","tag":"pre","props":{"code":"cd beam\ngit checkout double_doppler_4.0RC\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"cd beam\ngit checkout double_doppler_4.0RC\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"3."}]},{"type":"text","value":" By default instructions produce masternet builds (development version, development blockchain). To be able to build testnet (testing) or mainnet (real-world blockchain) you need to edit the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"beam/CMakeLists.txt"}]},{"type":"text","value":" file lines 151-157. Uncomment (remove the '#' sign) respective definitions."}]},{"type":"element","tag":"pre","props":{"code":"# uncomment next line for testnet\n#set(BEAM_TESTNET TRUE)\n# uncomment next line for mainnet\n#set(BEAM_MAINNET TRUE)\n\n# uncomment next line for swap mainnet\n#set(SWAP_MAINNET TRUE)\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"# uncomment next line for testnet\n#set(BEAM_TESTNET TRUE)\n# uncomment next line for mainnet\n#set(BEAM_MAINNET TRUE)\n\n# uncomment next line for swap mainnet\n#set(SWAP_MAINNET TRUE)\n"}]}]},{"type":"element","tag":"h2","props":{"id":"ubuntu-1804-desktop"},"children":[{"type":"text","value":"Ubuntu 18.04 Desktop"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Instructions below are valid for a clean default Ubuntu 18.04.03 Desktop LTS install. If your're building on an aged system please check that steps 1, 2 & 4 do not overwrite/conflict with more recent versions of cmake and boost that might have been installed before. You can omit cmake/boost installation if you already have more recent versions."}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Install dependencies"},{"type":"element","tag":"pre","props":{"code":"sudo add-apt-repository ppa:mhier/libboost-latest\nsudo apt-get update && sudo apt-get upgrade\nsudo apt-get install g++-8 libssl-dev curl wget git make \nsudo apt-get install libgl1-mesa-dev zlib1g-dev libboost-all-dev\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"sudo add-apt-repository ppa:mhier/libboost-latest\nsudo apt-get update && sudo apt-get upgrade\nsudo apt-get install g++-8 libssl-dev curl wget git make \nsudo apt-get install libgl1-mesa-dev zlib1g-dev libboost-all-dev\n"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Install cmake"},{"type":"element","tag":"pre","props":{"code":"wget https://cmake.org/files/v3.13/cmake-3.13.0-Linux-x86_64.sh\nsudo sh ./cmake-3.13.0-Linux-x86_64.sh --skip-license --prefix=/usr\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"wget https://cmake.org/files/v3.13/cmake-3.13.0-Linux-x86_64.sh\nsudo sh ./cmake-3.13.0-Linux-x86_64.sh --skip-license --prefix=/usr\n"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Go to the Beam project folder and start the release build"},{"type":"element","tag":"pre","props":{"code":"export CC=gcc-8 && export CXX=g++-8\ncmake -DCMAKE_BUILD_TYPE=Release && make -j 4\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"export CC=gcc-8 && export CXX=g++-8\ncmake -DCMAKE_BUILD_TYPE=Release && make -j 4\n"}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"ubuntu-1804-server"},"children":[{"type":"text","value":"Ubuntu 18.04 Server"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Instructions below are valid for a clean default Ubuntu 18.04.03 Server LTS with all the updates applied during install. If your're building on an aged system please check that steps 1 & 2 do not overwrite/conflict with more recent versions of cmake and boost that might have been installed before. You can omit cmake/boost installation if you already have more recent versions."}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Install dependencies"},{"type":"element","tag":"pre","props":{"code":"sudo add-apt-repository ppa:mhier/libboost-latest\nsudo apt-get update && sudo apt-get upgrade\nsudo apt-get install g++-8 libssl-dev curl wget git make \nsudo apt-get install libgl1-mesa-dev zlib1g-dev libboost1.67-dev\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"sudo add-apt-repository ppa:mhier/libboost-latest\nsudo apt-get update && sudo apt-get upgrade\nsudo apt-get install g++-8 libssl-dev curl wget git make \nsudo apt-get install libgl1-mesa-dev zlib1g-dev libboost1.67-dev\n"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Install cmake"},{"type":"element","tag":"pre","props":{"code":"wget https://cmake.org/files/v3.13/cmake-3.13.0-Linux-x86_64.sh\nsudo sh ./cmake-3.13.0-Linux-x86_64.sh --skip-license --prefix=/usr\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"wget https://cmake.org/files/v3.13/cmake-3.13.0-Linux-x86_64.sh\nsudo sh ./cmake-3.13.0-Linux-x86_64.sh --skip-license --prefix=/usr\n"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Go to the Beam project folder and start the release build"},{"type":"element","tag":"pre","props":{"code":"export CC=gcc-8 && export CXX=g++-8\ncmake -DCMAKE_BUILD_TYPE=Release && make -j 4\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"export CC=gcc-8 && export CXX=g++-8\ncmake -DCMAKE_BUILD_TYPE=Release && make -j 4\n"}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"ubuntu-1910-server"},"children":[{"type":"text","value":"Ubuntu 19.10 Server"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Instructions below are valid for a default Ubuntu 19.10 Server install with updates applied during install."}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Install dependencies"},{"type":"element","tag":"pre","props":{"code":"sudo apt-get update && sudo apt-get upgrade\nsudo apt-get install g++ git make cmake libboost-all-dev zlib1g-dev\nsudo apt-get install libssl-dev\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"sudo apt-get update && sudo apt-get upgrade\nsudo apt-get install g++ git make cmake libboost-all-dev zlib1g-dev\nsudo apt-get install libssl-dev\n"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Go to the Beam project folder and start the release build"},{"type":"element","tag":"pre","props":{"code":"cmake -DCMAKE_BUILD_TYPE=Release . && make -j 4\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"cmake -DCMAKE_BUILD_TYPE=Release . && make -j 4\n"}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"ubuntu-1910-desktop"},"children":[{"type":"text","value":"Ubuntu 19.10 Desktop"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Instructions below are valid for a minimal Ubuntu 19.10 Desktop install with 'update during install' option enabled."}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Install dependencies"},{"type":"element","tag":"pre","props":{"code":"sudo apt-get install g++ git make cmake libboost-all-dev zlib1g-dev\nsudo apt-get install libssl-dev \n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"sudo apt-get install g++ git make cmake libboost-all-dev zlib1g-dev\nsudo apt-get install libssl-dev \n"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Go to the Beam project folder and start the release build"},{"type":"element","tag":"pre","props":{"code":"cmake -DCMAKE_BUILD_TYPE=Release . && make -j 4\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"cmake -DCMAKE_BUILD_TYPE=Release . && make -j 4\n"}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"centos-77"},"children":[{"type":"text","value":"Centos 7.7"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Instructions below are valid for a clean CentOS 7.0-1908 minimal install. If your're building on an aged system please check that steps 2 & 3 do not overwrite more recent versions of cmake and boost that might have been installed before."}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Install dependencies"},{"type":"element","tag":"pre","props":{"code":"sudo yum update && shutdown -r now\nsudo yum install centos-release-scl yum-utils\nsudo yum-config-manager --enable rhel-server-rhscl-8-rpms\nsudo yum install devtoolset-8-gcc* \nscl enable devtoolset-8 bash\nsudo yum install git make wget openssl-devel\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"sudo yum update && shutdown -r now\nsudo yum install centos-release-scl yum-utils\nsudo yum-config-manager --enable rhel-server-rhscl-8-rpms\nsudo yum install devtoolset-8-gcc* \nscl enable devtoolset-8 bash\nsudo yum install git make wget openssl-devel\n"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Build & install boost. This step could take considerable amount of time"},{"type":"element","tag":"pre","props":{"code":"wget https://dl.bintray.com/boostorg/release/1.66.0/source/boost_1_66_0.tar.gz\ntar xzvf boost_1_66_0.tar.gz\ncd boost_1_66_0 && ./bootstrap.sh && sudo ./b2 install && cd ~\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"wget https://dl.bintray.com/boostorg/release/1.66.0/source/boost_1_66_0.tar.gz\ntar xzvf boost_1_66_0.tar.gz\ncd boost_1_66_0 && ./bootstrap.sh && sudo ./b2 install && cd ~\n"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Install cmake"},{"type":"element","tag":"pre","props":{"code":"wget https://cmake.org/files/v3.13/cmake-3.13.0-Linux-x86_64.sh\nsudo sh ./cmake-3.13.0-Linux-x86_64.sh --skip-license --prefix=/usr\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"wget https://cmake.org/files/v3.13/cmake-3.13.0-Linux-x86_64.sh\nsudo sh ./cmake-3.13.0-Linux-x86_64.sh --skip-license --prefix=/usr\n"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Go to the beam sources folder and start the release build"},{"type":"element","tag":"pre","props":{"code":"cmake -DCMAKE_BUILD_TYPE=Release . && make -j 4\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"cmake -DCMAKE_BUILD_TYPE=Release . && make -j 4\n"}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"centos-8"},"children":[{"type":"text","value":"CentOS 8"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Instructions below are valid for a clean CentOS 8.0-1905 minimal install. If your're building on an aged install please check that step 2 does not overwrite more recent version of cmake that might have been installed before."}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Install dependencies"},{"type":"element","tag":"pre","props":{"code":"sudo dnf update\nsudo dnf config-manager --set-enabled PowerTools\nsudo dnf install git make cmake gcc-c++ libstdc++-static boost-devel \nsudo dnf install openssl-devel tar wget \n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"sudo dnf update\nsudo dnf config-manager --set-enabled PowerTools\nsudo dnf install git make cmake gcc-c++ libstdc++-static boost-devel \nsudo dnf install openssl-devel tar wget \n"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Install cmake"},{"type":"element","tag":"pre","props":{"code":"wget https://cmake.org/files/v3.13/cmake-3.13.0-Linux-x86_64.sh\nsudo sh ./cmake-3.13.0-Linux-x86_64.sh --skip-license --prefix=/usr\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"wget https://cmake.org/files/v3.13/cmake-3.13.0-Linux-x86_64.sh\nsudo sh ./cmake-3.13.0-Linux-x86_64.sh --skip-license --prefix=/usr\n"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Go to the beam sources folder and start the release build"},{"type":"element","tag":"pre","props":{"code":"cmake -DCMAKE_BUILD_TYPE=Release . && make -j 4\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"cmake -DCMAKE_BUILD_TYPE=Release . && make -j 4\n"}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"fedora-31-workstation"},"children":[{"type":"text","value":"Fedora 31 Workstation"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Instructions below are valid for a default Fedora 31-1.9 Workstation install."}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Install dependencies"},{"type":"element","tag":"pre","props":{"code":"sudo dnf update && shutdown -r now\nsudo dnf install git make cmake gcc-c++ libstdc++-static boost-devel \nsudo dnf install zlib-devel openssl-devel tar \n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"sudo dnf update && shutdown -r now\nsudo dnf install git make cmake gcc-c++ libstdc++-static boost-devel \nsudo dnf install zlib-devel openssl-devel tar \n"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Go to the Beam project folder and start the release build"},{"type":"element","tag":"pre","props":{"code":"cmake -DCMAKE_BUILD_TYPE=Release . && make -j 4\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"cmake -DCMAKE_BUILD_TYPE=Release . && make -j 4\n"}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"fedora-31-server"},"children":[{"type":"text","value":"Fedora 31 Server"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Instructions below are valid for a default Fedora 31-1.9 Headless Server install."}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Install dependencies"},{"type":"element","tag":"pre","props":{"code":"sudo dnf update && shutdown -r now\nsudo dnf install git make cmake gcc-c++ libstdc++-static boost-devel \nsudo dnf install zlib-devel openssl-devel tar\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"sudo dnf update && shutdown -r now\nsudo dnf install git make cmake gcc-c++ libstdc++-static boost-devel \nsudo dnf install zlib-devel openssl-devel tar\n"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Go to the Beam project folder and start the release build"},{"type":"element","tag":"pre","props":{"code":"cmake -DCMAKE_BUILD_TYPE=Release . && make -j 4\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"cmake -DCMAKE_BUILD_TYPE=Release . && make -j 4\n"}]}]}]}]},{"type":"element","tag":"h1","props":{"id":"mac"},"children":[{"type":"text","value":"Mac"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Download the source code by using:"},{"type":"element","tag":"pre","props":{"code":"git clone https://github.com/BeamMW/beam.git\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"git clone https://github.com/BeamMW/beam.git\n"}]}]},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"this will give you a master branch which is developer's version of Beam. To get "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"mainnet"}]},{"type":"text","value":" or "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"testnet"}]},{"type":"text","value":" use"},{"type":"element","tag":"pre","props":{"code":"git clone --branch mainnet https://github.com/BeamMW/beam.git\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"git clone --branch mainnet https://github.com/BeamMW/beam.git\n"}]}]},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"or"},{"type":"element","tag":"pre","props":{"code":"git clone --branch testnet https://github.com/BeamMW/beam.git\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"git clone --branch testnet https://github.com/BeamMW/beam.git\n"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Install Brew Package Manager."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Install necessary packages using:"},{"type":"element","tag":"pre","props":{"code":"brew install openssl cmake\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"brew install openssl cmake\n"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Remove any existing brew installations of boost:"},{"type":"element","tag":"pre","props":{"code":"brew uninstall --ignore-dependencies boost\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"brew uninstall --ignore-dependencies boost\n"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Download and install a compatible version of boost:"},{"type":"element","tag":"pre","props":{"code":"curl -O https://raw.githubusercontent.com/Homebrew/homebrew-core/5da5895add2f6b9320d654dd844d4827f6876c8b/Formula/boost.rb\nbrew install ./boost.rb\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"curl -O https://raw.githubusercontent.com/Homebrew/homebrew-core/5da5895add2f6b9320d654dd844d4827f6876c8b/Formula/boost.rb\nbrew install ./boost.rb\n"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Set your Environment Variables by using the following:"},{"type":"element","tag":"pre","props":{"code":"- export OPENSSL_ROOT_DIR=\"/usr/local/opt/openssl@1.1\"\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"- export OPENSSL_ROOT_DIR=\"/usr/local/opt/openssl@1.1\"\n"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Go to Beam project folder and call"},{"type":"element","tag":"pre","props":{"code":"cmake -DCMAKE_BUILD_TYPE=Release . && make -j 4\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"cmake -DCMAKE_BUILD_TYPE=Release . && make -j 4\n"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Use "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"cpack"}]},{"type":"text","value":" to get .dmg file. Go to Beam project folder and call"},{"type":"element","tag":"pre","props":{"code":"cpack\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"cpack\n"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"You'll find binaries in "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"beam/wallet/cli"}]},{"type":"text","value":", and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"beam/explorer"}]},{"type":"text","value":" subfolders."}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"branch-convention","depth":2,"text":"Branch convention"},{"id":"cmake-options","depth":2,"text":"CMake options"},{"id":"ubuntu-1804-desktop","depth":2,"text":"Ubuntu 18.04 Desktop"},{"id":"ubuntu-1804-server","depth":2,"text":"Ubuntu 18.04 Server"},{"id":"ubuntu-1910-server","depth":2,"text":"Ubuntu 19.10 Server"},{"id":"ubuntu-1910-desktop","depth":2,"text":"Ubuntu 19.10 Desktop"},{"id":"centos-77","depth":2,"text":"Centos 7.7"},{"id":"centos-8","depth":2,"text":"CentOS 8"},{"id":"fedora-31-workstation","depth":2,"text":"Fedora 31 Workstation"},{"id":"fedora-31-server","depth":2,"text":"Fedora 31 Server"}]}},"_type":"markdown","_id":"content:docs:core-tech:How-to-build.md","_source":"content","_file":"docs/core-tech/How-to-build.md","_extension":"md"},{"_path":"/docs/core-tech/how-to-build(old)","_dir":"core-tech","_draft":false,"_partial":false,"_locale":"","title":"Windows","description":"","body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"windows"},"children":[{"type":"text","value":"Windows"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Install Visual Studio >= 2017 with CMake support."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Download and install Boost prebuilt binaries "},{"type":"element","tag":"a","props":{"href":"https://sourceforge.net/projects/boost/files/boost-binaries/1.68.0/boost_1_68_0-msvc-14.1-64.exe","rel":["nofollow"]},"children":[{"type":"text","value":"https://sourceforge.net/projects/boost/files/boost-binaries/1.68.0/boost_1_68_0-msvc-14.1-64.exe"}]},{"type":"text","value":", also add "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"BOOST_ROOT"}]},{"type":"text","value":" to the "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Environment Variables"}]},{"type":"text","value":"."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Download and install OpenSSL prebuilt binaries "},{"type":"element","tag":"a","props":{"href":"https://slproweb.com/products/Win32OpenSSL.html","rel":["nofollow"]},"children":[{"type":"text","value":"https://slproweb.com/products/Win32OpenSSL.html"}]},{"type":"text","value":" ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Win64 OpenSSL v1.1.0h"}]},{"type":"text","value":" for example) and add "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"OPENSSL_ROOT_DIR"}]},{"type":"text","value":" to the "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Environment Variables"}]},{"type":"text","value":"."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Download and install QT 5.11 "},{"type":"element","tag":"a","props":{"href":"http://master.qt.io/new_archive/qt/5.11/5.11.0/qt-opensource-windows-x86-5.11.0.exe","rel":["nofollow"]},"children":[{"type":"text","value":"http://master.qt.io/new_archive/qt/5.11/5.11.0/qt-opensource-windows-x86-5.11.0.exe"}]},{"type":"text","value":" and add "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"QT5_ROOT_DIR"}]},{"type":"text","value":" to the "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Environment Variables"}]},{"type":"text","value":" (usually it looks like "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":".../5.11.0/msvc2017_64"}]},{"type":"text","value":"), also add "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"QML_IMPORT_PATH"}]},{"type":"text","value":" (it should look like "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"%QT5_ROOT_DIR%\\qml"}]},{"type":"text","value":"). BTW disabling system antivirus on Windows makes QT installing process much faster."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Add "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":".../qt511/5.11.1/msvc2017_64/bin"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":".../boost_1_68_0/lib64-msvc-14.1"}]},{"type":"text","value":" to the "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"System Path"}]},{"type":"text","value":"."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Open project folder in Visual Studio, select your target ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Release-x64"}]},{"type":"text","value":" for example, if you downloaded 64bit Boost and OpenSSL) and select "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"CMake -> Build All"}]},{"type":"text","value":"."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Go to "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"CMake -> Cache -> Open Cache Folder -> beam"}]},{"type":"text","value":" (you'll find binaries in "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"beam/..."}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"wallet/..."}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"ui/..."}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"explorer/..."}]},{"type":"text","value":" subfolders)."}]}]},{"type":"element","tag":"h1","props":{"id":"linux"},"children":[{"type":"text","value":"Linux"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Please read carefully the points below"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"1."}]},{"type":"text","value":" After finishing your build you'll find the the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"beam-node"}]},{"type":"text","value":" binary (node) in the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"beam/beam"}]},{"type":"text","value":" folder, "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"beam-wallet"}]},{"type":"text","value":" (cli wallet) in the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"beam/wallet"}]},{"type":"text","value":" folder and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"BeamWallet"}]},{"type":"text","value":" (GUI wallet) in the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"beam/ui"}]},{"type":"text","value":" folder."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"2."}]},{"type":"text","value":" You need to clone beam sources before building"}]},{"type":"element","tag":"pre","props":{"code":"git clone https://github.com/BeamMW/beam.git\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"git clone https://github.com/BeamMW/beam.git\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The command above checks out the latest master branch where all the development happens. Usually it is not what you want to build. Choose an appropriate branch "},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/branches","rel":["nofollow"]},"children":[{"type":"text","value":"here"}]},{"type":"text","value":" and check out it after you have the main repository cloned. For example the command below checks out the Double Doppler 4.0 release branch"}]},{"type":"element","tag":"pre","props":{"code":"cd beam\ngit checkout double_doppler_4.0RC\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"cd beam\ngit checkout double_doppler_4.0RC\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"3."}]},{"type":"text","value":" By default instructions produce masternet builds (development version, development blockchain). To be able to build testnet (testing) or mainnet (real-world blockchain) you need to edit the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"beam/CMakeLists.txt"}]},{"type":"text","value":" file lines 151-157. Uncomment (remove the '#' sign) respective definitions."}]},{"type":"element","tag":"pre","props":{"code":"# uncomment next line for testnet\n#set(BEAM_TESTNET TRUE)\n# uncomment next line for mainnet\n#set(BEAM_MAINNET TRUE)\n\n# uncomment next line for swap mainnet\n#set(SWAP_MAINNET TRUE)\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"# uncomment next line for testnet\n#set(BEAM_TESTNET TRUE)\n# uncomment next line for mainnet\n#set(BEAM_MAINNET TRUE)\n\n# uncomment next line for swap mainnet\n#set(SWAP_MAINNET TRUE)\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"4."}]},{"type":"text","value":" Server instructions result only in a valid build and enable you running all the CLI tools. They are not intended to ensure that you would be able to run the UI. Desktop build instructions include additional steps to ensure that the UI can be launched."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"5."}]},{"type":"text","value":" At the moment building the UI can take a lot of time (a few hours) due to the bug in QT: "},{"type":"element","tag":"a","props":{"href":"https://bugreports.qt.io/browse/QTBUG-27936","rel":["nofollow"]},"children":[{"type":"text","value":"QTBUG-27936"}]},{"type":"text","value":". To skip building the UI pass "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-DBEAM_NO_QT_UI_WALLET=On"}]},{"type":"text","value":" to cmake. You can also omit all Qt5 dependencies in this case."}]},{"type":"element","tag":"h2","props":{"id":"ubuntu-1804-desktop"},"children":[{"type":"text","value":"Ubuntu 18.04 Desktop"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Instructions below are valid for a clean default Ubuntu 18.04.03 Desktop LTS install. If your're building on an aged system please check that steps 1, 2 & 4 do not overwrite/conflict with more recent versions of cmake and boost that might have been installed before. You can omit cmake/boost installation if you already have more recent versions."}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Install dependencies"},{"type":"element","tag":"pre","props":{"code":"sudo add-apt-repository ppa:beineri/opt-qt-5.11.0-bionic\nsudo add-apt-repository ppa:mhier/libboost-latest\nsudo apt-get update && sudo apt-get upgrade\nsudo apt-get install g++-8 libssl-dev curl wget git make \nsudo apt-get install libgl1-mesa-dev zlib1g-dev libboost1.67-dev\nsudo apt-get install qt511base qt511declarative qt511svg qt511tools \n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"sudo add-apt-repository ppa:beineri/opt-qt-5.11.0-bionic\nsudo add-apt-repository ppa:mhier/libboost-latest\nsudo apt-get update && sudo apt-get upgrade\nsudo apt-get install g++-8 libssl-dev curl wget git make \nsudo apt-get install libgl1-mesa-dev zlib1g-dev libboost1.67-dev\nsudo apt-get install qt511base qt511declarative qt511svg qt511tools \n"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Install cmake"},{"type":"element","tag":"pre","props":{"code":"wget https://cmake.org/files/v3.13/cmake-3.13.0-Linux-x86_64.sh\nsudo sh ./cmake-3.13.0-Linux-x86_64.sh --skip-license --prefix=/usr\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"wget https://cmake.org/files/v3.13/cmake-3.13.0-Linux-x86_64.sh\nsudo sh ./cmake-3.13.0-Linux-x86_64.sh --skip-license --prefix=/usr\n"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Go to the Beam project folder and start the release build"},{"type":"element","tag":"pre","props":{"code":"export PATH=/opt/qt511/bin:$PATH && export CC=gcc-8 && export CXX=g++-8\ncmake -DCMAKE_BUILD_TYPE=Release && make -j4\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"export PATH=/opt/qt511/bin:$PATH && export CC=gcc-8 && export CXX=g++-8\ncmake -DCMAKE_BUILD_TYPE=Release && make -j4\n"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"To be able to run the UI (BeamWallet) install additional dependencies"},{"type":"element","tag":"pre","props":{"code":"sudo apt-get install qt511quick* qt511graphicaleffects\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"sudo apt-get install qt511quick* qt511graphicaleffects\n"}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"ubuntu-1804-server"},"children":[{"type":"text","value":"Ubuntu 18.04 Server"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Instructions below are valid for a clean default Ubuntu 18.04.03 Server LTS with all the updates applied during install. If your're building on an aged system please check that steps 1 & 2 do not overwrite/conflict with more recent versions of cmake and boost that might have been installed before. You can omit cmake/boost installation if you already have more recent versions."}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Install dependencies"},{"type":"element","tag":"pre","props":{"code":"sudo add-apt-repository ppa:beineri/opt-qt-5.11.0-bionic\nsudo add-apt-repository ppa:mhier/libboost-latest\nsudo apt-get update && sudo apt-get upgrade\nsudo apt-get install g++-8 libssl-dev curl wget git make \nsudo apt-get install libgl1-mesa-dev zlib1g-dev libboost1.67-dev\nsudo apt-get install qt511base qt511declarative qt511svg qt511tools \n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"sudo add-apt-repository ppa:beineri/opt-qt-5.11.0-bionic\nsudo add-apt-repository ppa:mhier/libboost-latest\nsudo apt-get update && sudo apt-get upgrade\nsudo apt-get install g++-8 libssl-dev curl wget git make \nsudo apt-get install libgl1-mesa-dev zlib1g-dev libboost1.67-dev\nsudo apt-get install qt511base qt511declarative qt511svg qt511tools \n"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Install cmake"},{"type":"element","tag":"pre","props":{"code":"wget https://cmake.org/files/v3.13/cmake-3.13.0-Linux-x86_64.sh\nsudo sh ./cmake-3.13.0-Linux-x86_64.sh --skip-license --prefix=/usr\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"wget https://cmake.org/files/v3.13/cmake-3.13.0-Linux-x86_64.sh\nsudo sh ./cmake-3.13.0-Linux-x86_64.sh --skip-license --prefix=/usr\n"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Go to the Beam project folder and start the release build"},{"type":"element","tag":"pre","props":{"code":"export PATH=/opt/qt511/bin:$PATH && export CC=gcc-8 && export CXX=g++-8\ncmake -DCMAKE_BUILD_TYPE=Release && make -j4\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"export PATH=/opt/qt511/bin:$PATH && export CC=gcc-8 && export CXX=g++-8\ncmake -DCMAKE_BUILD_TYPE=Release && make -j4\n"}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"ubuntu-1910-server"},"children":[{"type":"text","value":"Ubuntu 19.10 Server"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Instructions below are valid for a default Ubuntu 19.10 Server install with updates applied during install."}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Install dependencies"},{"type":"element","tag":"pre","props":{"code":"sudo apt-get update && sudo apt-get upgrade\nsudo apt-get install g++ git make cmake libboost-all-dev zlib1g-dev\nsudo apt-get install libssl-dev qtbase5-dev qtdeclarative5-dev \nsudo apt-get install libqt5svg5-dev qttools5-dev qt5-default\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"sudo apt-get update && sudo apt-get upgrade\nsudo apt-get install g++ git make cmake libboost-all-dev zlib1g-dev\nsudo apt-get install libssl-dev qtbase5-dev qtdeclarative5-dev \nsudo apt-get install libqt5svg5-dev qttools5-dev qt5-default\n"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Go to the Beam project folder and start the release build"},{"type":"element","tag":"pre","props":{"code":"cmake -DCMAKE_BUILD_TYPE=Release . && make -j4\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"cmake -DCMAKE_BUILD_TYPE=Release . && make -j4\n"}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"ubuntu-1910-desktop"},"children":[{"type":"text","value":"Ubuntu 19.10 Desktop"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Instructions below are valid for a minimal Ubuntu 19.10 Desktop install with 'update during install' option enabled."}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Install dependencies"},{"type":"element","tag":"pre","props":{"code":"sudo apt-get install g++ git make cmake libboost-all-dev zlib1g-dev\nsudo apt-get install libssl-dev qtbase5-dev qtdeclarative5-dev \nsudo apt-get install libqt5svg5-dev qttools5-dev qt5-default\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"sudo apt-get install g++ git make cmake libboost-all-dev zlib1g-dev\nsudo apt-get install libssl-dev qtbase5-dev qtdeclarative5-dev \nsudo apt-get install libqt5svg5-dev qttools5-dev qt5-default\n"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Go to the Beam project folder and start the release build"},{"type":"element","tag":"pre","props":{"code":"cmake -DCMAKE_BUILD_TYPE=Release . && make -j4\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"cmake -DCMAKE_BUILD_TYPE=Release . && make -j4\n"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"To be able not only to build but also to run the UI (BeamWallet) you need to install additional dependencies"},{"type":"element","tag":"pre","props":{"code":"sudo apt-get install qml-module-qt*\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"sudo apt-get install qml-module-qt*\n"}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"centos-77"},"children":[{"type":"text","value":"Centos 7.7"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Instructions below are valid for a clean CentOS 7.0-1908 minimal install. If your're building on an aged system please check that steps 2 & 3 do not overwrite more recent versions of cmake and boost that might have been installed before."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"N.B. These build instruction provide only commandline tools including node but no GUI wallet. Use newer operating system with more up to date Qt libraries (5.11+) to effortlessly build the UI."}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Install dependencies"},{"type":"element","tag":"pre","props":{"code":"sudo yum update && shutdown -r now\nsudo yum install centos-release-scl yum-utils\nsudo yum-config-manager --enable rhel-server-rhscl-8-rpms\nsudo yum install devtoolset-8-gcc* \nscl enable devtoolset-8 bash\nsudo yum install git make wget openssl-devel\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"sudo yum update && shutdown -r now\nsudo yum install centos-release-scl yum-utils\nsudo yum-config-manager --enable rhel-server-rhscl-8-rpms\nsudo yum install devtoolset-8-gcc* \nscl enable devtoolset-8 bash\nsudo yum install git make wget openssl-devel\n"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Build & install boost. This step could take considerable amount of time"},{"type":"element","tag":"pre","props":{"code":"wget https://dl.bintray.com/boostorg/release/1.66.0/source/boost_1_66_0.tar.gz\ntar xzvf boost_1_66_0.tar.gz\ncd boost_1_66_0 && ./bootstrap.sh && sudo ./b2 install && cd ~\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"wget https://dl.bintray.com/boostorg/release/1.66.0/source/boost_1_66_0.tar.gz\ntar xzvf boost_1_66_0.tar.gz\ncd boost_1_66_0 && ./bootstrap.sh && sudo ./b2 install && cd ~\n"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Install cmake"},{"type":"element","tag":"pre","props":{"code":"wget https://cmake.org/files/v3.13/cmake-3.13.0-Linux-x86_64.sh\nsudo sh ./cmake-3.13.0-Linux-x86_64.sh --skip-license --prefix=/usr\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"wget https://cmake.org/files/v3.13/cmake-3.13.0-Linux-x86_64.sh\nsudo sh ./cmake-3.13.0-Linux-x86_64.sh --skip-license --prefix=/usr\n"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Go to the beam sources folder and start the release build"},{"type":"element","tag":"pre","props":{"code":"cmake -DCMAKE_BUILD_TYPE=Release -DBEAM_NO_QT_UI_WALLET=On . && make -j4\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"cmake -DCMAKE_BUILD_TYPE=Release -DBEAM_NO_QT_UI_WALLET=On . && make -j4\n"}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"centos-8"},"children":[{"type":"text","value":"CentOS 8"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Instructions below are valid for a clean CentOS 8.0-1905 minimal install. If your're building on an aged install please check that step 2 does not overwrite more recent version of cmake that might have been installed before."}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Install dependencies"},{"type":"element","tag":"pre","props":{"code":"sudo dnf update\nsudo dnf config-manager --set-enabled PowerTools\nsudo dnf install git make cmake gcc-c++ libstdc++-static boost-devel \nsudo dnf install openssl-devel tar wget qt5-qtbase-devel qt5-linguist\nsudo dnf install qt5-qtsvg-devel qt5-qtdeclarative-devel \n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"sudo dnf update\nsudo dnf config-manager --set-enabled PowerTools\nsudo dnf install git make cmake gcc-c++ libstdc++-static boost-devel \nsudo dnf install openssl-devel tar wget qt5-qtbase-devel qt5-linguist\nsudo dnf install qt5-qtsvg-devel qt5-qtdeclarative-devel \n"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Install cmake"},{"type":"element","tag":"pre","props":{"code":"wget https://cmake.org/files/v3.13/cmake-3.13.0-Linux-x86_64.sh\nsudo sh ./cmake-3.13.0-Linux-x86_64.sh --skip-license --prefix=/usr\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"wget https://cmake.org/files/v3.13/cmake-3.13.0-Linux-x86_64.sh\nsudo sh ./cmake-3.13.0-Linux-x86_64.sh --skip-license --prefix=/usr\n"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Go to the beam sources folder and start the release build"},{"type":"element","tag":"pre","props":{"code":"export PATH=${PATH}:/usr/lib64/qt5/bin\ncmake -DCMAKE_BUILD_TYPE=Release . && make -j4\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"export PATH=${PATH}:/usr/lib64/qt5/bin\ncmake -DCMAKE_BUILD_TYPE=Release . && make -j4\n"}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"fedora-31-workstation"},"children":[{"type":"text","value":"Fedora 31 Workstation"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Instructions below are valid for a default Fedora 31-1.9 Workstation install."}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Install dependencies"},{"type":"element","tag":"pre","props":{"code":"sudo dnf update && shutdown -r now\nsudo dnf install git make cmake gcc-c++ libstdc++-static boost-devel \nsudo dnf install zlib-devel openssl-devel tar qt5-qtbase-devel qt5-linguist\nsudo dnf install qt5-qtsvg-devel qt5-qtdeclarative-devel \n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"sudo dnf update && shutdown -r now\nsudo dnf install git make cmake gcc-c++ libstdc++-static boost-devel \nsudo dnf install zlib-devel openssl-devel tar qt5-qtbase-devel qt5-linguist\nsudo dnf install qt5-qtsvg-devel qt5-qtdeclarative-devel \n"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Go to the Beam project folder and start the release build"},{"type":"element","tag":"pre","props":{"code":"cmake -DCMAKE_BUILD_TYPE=Release . && make -j4\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"cmake -DCMAKE_BUILD_TYPE=Release . && make -j4\n"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"To be able to run the UI (BeamWallet) install additional dependencies"},{"type":"element","tag":"pre","props":{"code":"sudo dnf install qt5-qtquickcontrols qt5-qtquickcontrols2\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"sudo dnf install qt5-qtquickcontrols qt5-qtquickcontrols2\n"}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"fedora-31-server"},"children":[{"type":"text","value":"Fedora 31 Server"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Instructions below are valid for a default Fedora 31-1.9 Headless Server install."}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Install dependencies"},{"type":"element","tag":"pre","props":{"code":"sudo dnf update && shutdown -r now\nsudo dnf install git make cmake gcc-c++ libstdc++-static boost-devel \nsudo dnf install zlib-devel openssl-devel tar qt5-qtbase-devel qt5-linguist\nsudo dnf install qt5-qtsvg-devel qt5-qtdeclarative-devel \n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"sudo dnf update && shutdown -r now\nsudo dnf install git make cmake gcc-c++ libstdc++-static boost-devel \nsudo dnf install zlib-devel openssl-devel tar qt5-qtbase-devel qt5-linguist\nsudo dnf install qt5-qtsvg-devel qt5-qtdeclarative-devel \n"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Go to the Beam project folder and start the release build"},{"type":"element","tag":"pre","props":{"code":"cmake -DCMAKE_BUILD_TYPE=Release . && make -j4\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"cmake -DCMAKE_BUILD_TYPE=Release . && make -j4\n"}]}]}]}]},{"type":"element","tag":"h1","props":{"id":"mac"},"children":[{"type":"text","value":"Mac"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Download the source code by using:"},{"type":"element","tag":"pre","props":{"code":"git clone https://github.com/BeamMW/beam.git\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"git clone https://github.com/BeamMW/beam.git\n"}]}]},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"this will give you a master branch which is developer's version of Beam. To get "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"mainnet"}]},{"type":"text","value":" or "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"testnet"}]},{"type":"text","value":" use"},{"type":"element","tag":"pre","props":{"code":"git clone --branch mainnet https://github.com/BeamMW/beam.git\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"git clone --branch mainnet https://github.com/BeamMW/beam.git\n"}]}]},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"or"},{"type":"element","tag":"pre","props":{"code":"git clone --branch testnet https://github.com/BeamMW/beam.git\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"git clone --branch testnet https://github.com/BeamMW/beam.git\n"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Install Brew Package Manager."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Install necessary packages using:"},{"type":"element","tag":"pre","props":{"code":"brew install openssl cmake\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"brew install openssl cmake\n"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Remove any existing brew installations of qt and boost:"},{"type":"element","tag":"pre","props":{"code":"brew uninstall --ignore-dependencies qt boost\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"brew uninstall --ignore-dependencies qt boost\n"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Download and install a compatible version of boost:"},{"type":"element","tag":"pre","props":{"code":"curl -O https://raw.githubusercontent.com/Homebrew/homebrew-core/5da5895add2f6b9320d654dd844d4827f6876c8b/Formula/boost.rb\nbrew install ./boost.rb\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"curl -O https://raw.githubusercontent.com/Homebrew/homebrew-core/5da5895add2f6b9320d654dd844d4827f6876c8b/Formula/boost.rb\nbrew install ./boost.rb\n"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Download and install QT5.11 from the official website "},{"type":"element","tag":"a","props":{"href":"http://master.qt.io/new_archive/qt/5.11/5.11.0/qt-opensource-mac-x64-5.11.0.dmg","rel":["nofollow"]},"children":[{"type":"text","value":"http://master.qt.io/new_archive/qt/5.11/5.11.0/qt-opensource-mac-x64-5.11.0.dmg"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Set your Environment Variables by using the following:"},{"type":"element","tag":"pre","props":{"code":"- export OPENSSL_ROOT_DIR=\"/usr/local/opt/openssl@1.1\"\n- export PATH=/Users/<username>/Qt5.11.0/5.11.0/clang_64/bin:$PATH\n- export QT5_ROOT_DIR=/Users/<username>/Qt5.11.0/5.11.0/\n- export QML_IMPORT_PATH=\"/Users/<username>/Qt5.11.0/5.11.0/qml\"\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"- export OPENSSL_ROOT_DIR=\"/usr/local/opt/openssl@1.1\"\n- export PATH=/Users/<username>/Qt5.11.0/5.11.0/clang_64/bin:$PATH\n- export QT5_ROOT_DIR=/Users/<username>/Qt5.11.0/5.11.0/\n- export QML_IMPORT_PATH=\"/Users/<username>/Qt5.11.0/5.11.0/qml\"\n"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Go to Beam project folder and call"},{"type":"element","tag":"pre","props":{"code":"cmake -DCMAKE_BUILD_TYPE=Release . && make -j4\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"cmake -DCMAKE_BUILD_TYPE=Release . && make -j4\n"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Use "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"cpack"}]},{"type":"text","value":" to get .dmg file"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"You'll find binaries in "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"beam/wallet"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"beam/ui"}]},{"type":"text","value":", and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"beam/explorer"}]},{"type":"text","value":" subfolders."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"If you don't want to build UI don't install QT5 and add "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-DBEAM_NO_QT_UI_WALLET=On"}]},{"type":"text","value":" command line parameter when you are calling "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"cmake"}]},{"type":"text","value":"."}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"ubuntu-1804-desktop","depth":2,"text":"Ubuntu 18.04 Desktop"},{"id":"ubuntu-1804-server","depth":2,"text":"Ubuntu 18.04 Server"},{"id":"ubuntu-1910-server","depth":2,"text":"Ubuntu 19.10 Server"},{"id":"ubuntu-1910-desktop","depth":2,"text":"Ubuntu 19.10 Desktop"},{"id":"centos-77","depth":2,"text":"Centos 7.7"},{"id":"centos-8","depth":2,"text":"CentOS 8"},{"id":"fedora-31-workstation","depth":2,"text":"Fedora 31 Workstation"},{"id":"fedora-31-server","depth":2,"text":"Fedora 31 Server"}]}},"_type":"markdown","_id":"content:docs:core-tech:How-to-build(old).md","_source":"content","_file":"docs/core-tech/How-to-build(old).md","_extension":"md"},{"_path":"/docs/core-tech/how-to-remove-the-desktop-wallet-files-in-a-manual-way","_dir":"core-tech","_draft":false,"_partial":false,"_locale":"","title":"How To Remove The Desktop Wallet Files In A Manual Way","description":"Since the current versions of the Desktop Wallet are not backward compatible, it is required to remove the files manually before upgrading to the next major version.","body":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Since the current versions of the Desktop Wallet are not backward compatible, it is required to remove the files manually before upgrading to the next major version."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Points to mention:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"On Mac and Windows the wallet files reside in directories which are not shown by default, yet they can be accessed via a command line interface (see the examples below)."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"On Mac and Windows the wallet files reside (by default) in a home directory of the user. In the examples below the user name is "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"alice"}]},{"type":"text","value":" on all the platforms."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The suggested commands will unconditionally remove the files, an action which cannot be undone."}]}]},{"type":"element","tag":"h3","props":{"id":"on-windows"},"children":[{"type":"text","value":"On Windows"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Push windows button+R, the Run window will appear. Type cmd and click OK."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"In the window that appears, paste the following command and click enter:"}]}]},{"type":"element","tag":"pre","props":{"className":["language-sh"],"code":"RD /s /q \"C:\\Users\\alice\\AppData\\Local\\Beam Wallet\"\n","language":"sh","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"RD /s /q \"C:\\Users\\alice\\AppData\\Local\\Beam Wallet\"\n"}]}]},{"type":"element","tag":"h3","props":{"id":"on-mac"},"children":[{"type":"text","value":"On Mac"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Open the Terminal app, paste the following command and click enter:"}]}]},{"type":"element","tag":"pre","props":{"className":["language-sh"],"code":"rm -R \"/Users/alice/Library/Application Support/Beam Wallet\"\n","language":"sh","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"rm -R \"/Users/alice/Library/Application Support/Beam Wallet\"\n"}]}]},{"type":"element","tag":"h3","props":{"id":"on-linux"},"children":[{"type":"text","value":"On Linux"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Run the following command in terminal:"}]}]},{"type":"element","tag":"pre","props":{"className":["language-sh"],"code":"rm -R \".local/share/Beam Wallet\"\n","language":"sh","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"rm -R \".local/share/Beam Wallet\"\n"}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"on-windows","depth":3,"text":"On Windows"},{"id":"on-mac","depth":3,"text":"On Mac"},{"id":"on-linux","depth":3,"text":"On Linux"}]}},"_type":"markdown","_id":"content:docs:core-tech:How-to-remove-the-Desktop-Wallet-files-in-a-manual-way.md","_source":"content","_file":"docs/core-tech/How-to-remove-the-Desktop-Wallet-files-in-a-manual-way.md","_extension":"md"},{"_path":"/docs/core-tech/how-to-test-beam-with-trezor-wallet","_dir":"core-tech","_draft":false,"_partial":false,"_locale":"","title":"How To Test Beam With Trezor Wallet","description":"","body":{"type":"root","children":[{"type":"element","tag":"h2","props":{"id":"preparing"},"children":[{"type":"text","value":"Preparing"}]},{"type":"element","tag":"h3","props":{"id":"install-git-and-python3-with-pip3"},"children":[{"type":"text","value":"Install "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Git"}]},{"type":"text","value":" and "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Python3"}]},{"type":"text","value":" (with pip3)"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Debain/Ubuntu: "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"sudo apt-get -y install git python3 python3-pip"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Windows/MacOS: download from "},{"type":"element","tag":"a","props":{"href":"https://www.python.org/downloads","rel":["nofollow"]},"children":[{"type":"text","value":"https://www.python.org/downloads"}]}]}]},{"type":"element","tag":"h3","props":{"id":"install-trezor-bridge"},"children":[{"type":"text","value":"Install Trezor Bridge"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Go to "},{"type":"element","tag":"a","props":{"href":"https://wallet.trezor.io/#/bridge","rel":["nofollow"]},"children":[{"type":"text","value":"https://wallet.trezor.io/#/bridge"}]},{"type":"text","value":", download and install."}]},{"type":"element","tag":"h3","props":{"id":"install-protobuf-compiler"},"children":[{"type":"text","value":"Install Protobuf Compiler"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Go to "},{"type":"element","tag":"a","props":{"href":"https://github.com/protocolbuffers/protobuf/releases","rel":["nofollow"]},"children":[{"type":"text","value":"https://github.com/protocolbuffers/protobuf/releases"}]},{"type":"text","value":" and download the latest "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"protoc"}]},{"type":"text","value":" for your OS."},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"\nExtract it and add "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<path to protoc folder>/bin"}]},{"type":"text","value":" path to the system "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"PATH"}]},{"type":"text","value":": "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"export PATH=$PATH:/<path to protoc folder>/bin"}]},{"type":"text","value":"."}]},{"type":"element","tag":"h3","props":{"id":"build-firmware-loader"},"children":[{"type":"text","value":"Build Firmware Loader"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Run the following commands (don't use "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"sudo"}]},{"type":"text","value":" prefix on Windows):"}]},{"type":"element","tag":"pre","props":{"code":"git clone https://github.com/BeamMW/python-trezor.git\ncd python-trezor\ngit checkout beam\ngit submodule update --init --recursive --force\n\nsudo pip3 install protobuf click requests mnemonic construct ecdsa pyblake2 typing_extensions\npython3 setup.py prebuild\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"git clone https://github.com/BeamMW/python-trezor.git\ncd python-trezor\ngit checkout beam\ngit submodule update --init --recursive --force\n\nsudo pip3 install protobuf click requests mnemonic construct ecdsa pyblake2 typing_extensions\npython3 setup.py prebuild\n"}]}]},{"type":"element","tag":"h2","props":{"id":"install-the-firmware"},"children":[{"type":"text","value":"Install the firmware"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Wipe your Trezor device using "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"python3 ./trezorctl wipe-device"}]},{"type":"text","value":" command."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Go to "},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/trezor_beam_minimal_wallet/releases","rel":["nofollow"]},"children":[{"type":"text","value":"https://github.com/BeamMW/trezor_beam_minimal_wallet/releases"}]},{"type":"text","value":" and download the latest "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"firmware.bin"}]},{"type":"text","value":"."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Restart the device to enter bootloader mode (video how to do it "},{"type":"element","tag":"a","props":{"href":"https://www.youtube.com/watch?v=xVBiSFTx0qQ","rel":["nofollow"]},"children":[{"type":"text","value":"https://www.youtube.com/watch?v=xVBiSFTx0qQ"}]},{"type":"text","value":")."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Call "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"python3 ./trezorctl firmware-update -f <path to firmware folder>/firmware.bin"}]},{"type":"text","value":" to install firmware."}]}]},{"type":"element","tag":"h3","props":{"id":"windows"},"children":[{"type":"text","value":"Windows"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Install "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"trezorctl"}]},{"type":"text","value":" "},{"type":"element","tag":"a","props":{"href":"https://wiki.trezor.io/Installing_trezorctl_on_Windows","rel":["nofollow"]},"children":[{"type":"text","value":"https://wiki.trezor.io/Installing_trezorctl_on_Windows"}]},{"type":"text","value":" ."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Restart the device to enter bootloader mode (video how to do it "},{"type":"element","tag":"a","props":{"href":"https://www.youtube.com/watch?v=xVBiSFTx0qQ","rel":["nofollow"]},"children":[{"type":"text","value":"https://www.youtube.com/watch?v=xVBiSFTx0qQ"}]},{"type":"text","value":")."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Call "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"trezorctl firmware-update -f <path to firmware folder>/firmware.bin"}]},{"type":"text","value":" to install firmware."}]}]},{"type":"element","tag":"h2","props":{"id":"test-beam-with-trezor"},"children":[{"type":"text","value":"Test Beam with Trezor"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Go to "},{"type":"element","tag":"a","props":{"href":"https://builds.beam-mw.com/trezor_build","rel":["nofollow"]},"children":[{"type":"text","value":"https://builds.beam-mw.com/trezor_build"}]},{"type":"text","value":" and download/install the latest build."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Connect your device, go to "},{"type":"element","tag":"a","props":{"href":"https://trezor.io/start","rel":["nofollow"]},"children":[{"type":"text","value":"https://trezor.io/start"}]},{"type":"text","value":", create a new wallet or recover with your seed phrase."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Run installed "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Beam Wallet"}]},{"type":"text","value":" and push "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"create new Trezor wallet"}]},{"type":"text","value":" button."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Agree with generating "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Owner Key"}]},{"type":"text","value":" on Trezor device and wait, it usually takes about 15 sec.\n"},{"type":"element","tag":"img","props":{"alt":"image","src":"https://user-images.githubusercontent.com/1101448/65770926-c5d87f80-e13f-11e9-9095-a9fbac692917.png"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Remember generated password from the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Key Password"}]},{"type":"text","value":" page and enter it in the Beam Wallet.\n"},{"type":"element","tag":"img","props":{"alt":"image","src":"https://user-images.githubusercontent.com/1101448/65770789-7e51f380-e13f-11e9-899e-33dc09d96787.png"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Hurray, the wallet is initialized, now try to send/receive beams to test how it works..."}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"preparing","depth":2,"text":"Preparing","children":[{"id":"install-git-and-python3-with-pip3","depth":3,"text":"Install Git and Python3 (with pip3)"},{"id":"install-trezor-bridge","depth":3,"text":"Install Trezor Bridge"},{"id":"install-protobuf-compiler","depth":3,"text":"Install Protobuf Compiler"},{"id":"build-firmware-loader","depth":3,"text":"Build Firmware Loader"}]},{"id":"install-the-firmware","depth":2,"text":"Install the firmware","children":[{"id":"windows","depth":3,"text":"Windows"}]},{"id":"test-beam-with-trezor","depth":2,"text":"Test Beam with Trezor"}]}},"_type":"markdown","_id":"content:docs:core-tech:How-to-test-Beam-with-Trezor-wallet.md","_source":"content","_file":"docs/core-tech/How-to-test-Beam-with-Trezor-wallet.md","_extension":"md"},{"_path":"/docs/core-tech/hw-wallet-design","_dir":"core-tech","_draft":false,"_partial":false,"_locale":"","title":"HW Wallet Design","description":"","body":{"type":"root","children":[{"type":"element","tag":"h3","props":{"id":"beam-vs-other-blockchains"},"children":[{"type":"text","value":"Beam vs other blockchains"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Beam HW wallet supports the functionality similar to other blockchain protocols, such as keeping all the secret keys within the device, and signing transactions authorized by the users."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Since Beam is based in MW, the design of such a wallet is more complex, because of the following:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Transactions are built interactively"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"No addresses"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"No transactions in the common sense. Transaction elements can be added and removed"}]}]},{"type":"element","tag":"h2","props":{"id":"assumptions"},"children":[{"type":"text","value":"Assumptions"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The HW wallet is a minimalistic stateless device. It should not handle blockchain events (blocks, headers, reorgs), handle BBS traffic, fully negotiate transactions, and etc."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The host may be compromised, yet no spend should be possible without user's permission."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Once the user activates the HW wallet (enters the pin-code), the host can view all the user information (balance, UTXOs), but not spend funds."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Every spend (transaction that assumes user spends funds) needs a user authorization. The user sees the following:\n"},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The amount being-sent"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Asset type (beam or CA)."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Recipient identifier."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Transaction kernel ID."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Height range (min/max height) during which the transaction is valid."}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"All this information is cryptographically verified, and there should be no feasible way for the host to tamper with it."}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Note:"}]},{"type":"text","value":" Because in MW transactions are essentially (sort of) Schnorr's multisignatures, the (1) is actually tricky to implement. To create a Schnorr's signature the signer generates a "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"nonce"}]},{"type":"text","value":", which must be retained for the duration of the multi-signature ritual."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"We solve this by assuming the device has a limited non-volatile memory that can be used to store "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"nonce"}]},{"type":"text","value":" preimage (source material). We make sure that neither the "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"nonce"}]},{"type":"text","value":" nor the appropriate secret key can be extracted by malicious host (such as attempt to use the same "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"nonce"}]},{"type":"text","value":" to sign different things)."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The HW wallet device should have several 256-bit "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"slots"}]},{"type":"text","value":" for "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"nonce"}]},{"type":"text","value":" preimages. The more slots it has - the more ongoing transactions the HW wallet may handle at the same time."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"(There is also an option of using VRFs, but it's too complex for HW wallets.)"}]},{"type":"element","tag":"h2","props":{"id":"terminology"},"children":[{"type":"text","value":"Terminology"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"CoinID"}]},{"type":"text","value":" - full UTXO identifier. Consists of the following:\n"},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"SubIdx"}]},{"type":"text","value":" 32-bit "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"child"}]},{"type":"text","value":" key identifier"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Idx"}]},{"type":"text","value":" 64-bit coin number"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Value"}]},{"type":"text","value":" (64 bits)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"AssetID"}]},{"type":"text","value":" (32-bit number)"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"For each "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"CoinID"}]},{"type":"text","value":" the HW wallet generates a unique "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"blinding factor"}]},{"type":"text","value":" using the master secret."}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"OwnerKey"}]},{"type":"text","value":" - derived from the master secret, used to recognize the owned UTXOs."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"P-Kdf"}]},{"type":"text","value":" - public key generator, which for a "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"CoinID"}]},{"type":"text","value":" generates an appropriate public key (EC point) that corresponds to its "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"blinding factor"}]},{"type":"text","value":"."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"IdentityNumber"}]},{"type":"text","value":" 32-bit number"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Identity"}]},{"type":"text","value":" - public key that corresponds to the unique private key generated for specific "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"IdentityNumber"}]},{"type":"text","value":"."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"PaymentProof"}]},{"type":"text","value":" - Schnorr's signature, signed by the receiver, that it receives funds as a result of the transaction. The signature signs the following parameters:\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Value received"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Asset type"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Kernel ID"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Sender "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Identity"}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Note:"}]},{"type":"text","value":" the actual key generation is according to HKDF (rfc-5869). The generated "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"blinding factor"}]},{"type":"text","value":" depends in a non-transparent way on "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"all"}]},{"type":"text","value":" the fields of "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"CoinID"}]},{"type":"text","value":", thus there's no feasible way to tamper with them and adjust the resulting "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"blinding factor"}]},{"type":"text","value":" accordingly."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In addition to HKDF, each computed key is multiplied by a fixed secret scalar, so-called "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"co-factor"}]},{"type":"text","value":". The "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"P-Kdf"}]},{"type":"text","value":" contains the same seed HKDF data, but the "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"co-factor"}]},{"type":"text","value":" is replaced by its image (EC point)."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Note (2):"}]},{"type":"text","value":" To denote the UTXO Beam actually uses so-called "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"switch"}]},{"type":"text","value":" commitments, which are compressed el-Gamal commitments. So that in practice the obtained "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"blidning factor"}]},{"type":"text","value":" gets an addition, which depends on the committed value and asset type. The host can calculate this addition alone (without the HW wallet)."}]},{"type":"element","tag":"h1","props":{"id":"functionality-high-level"},"children":[{"type":"text","value":"Functionality high-level"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"All the HW wallet functionality comes down to the following methods."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The following is returned without user permission"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Number of slots available"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"OwnerKey"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"P-Kdf"}]},{"type":"text","value":" for arbitrary "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"child"}]},{"type":"text","value":" key"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Rangeproof for arbitrary "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"CoinID"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"signature for receive transaction kernel (i.e. transaction in which no funds are lost)."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The following needs user permission"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"signature for send transaction kernel"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"signature for split transaction kernel (i.e. only transaction fee is lost)"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"During the HW wallet initialization it generates a seed using the true random generator (available on most HW wallets), which is used to set initial values in all the slots."}]},{"type":"element","tag":"h1","props":{"id":"why-this-design-is-secure"},"children":[{"type":"text","value":"Why this design is secure?"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"MW transaction consists of 3 things: inputs, outputs, and transaction kernels."}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Input is denoted by its Pedersen (switch) commitment. The host can create it for any "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"CoinID"}]},{"type":"text","value":", since only "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"blinding factor"}]},{"type":"text","value":" "},{"type":"element","tag":"u","props":{},"children":[{"type":"text","value":"image"}]},{"type":"text","value":" is needed, and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"P-Kdf"}]},{"type":"text","value":" is exported freely."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Output consists of Pedersen (switch) commitment and the rangeproof. The commitment is calculated by the host (as for inputs), and the rangeproof is calculated by the HW wallet without any restriction."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"So, both inputs and outputs can be created by the host without any restrictions. But to build a valid (balanced) MW transaction the corresponding transaction kernel is required, and this is where HW wallet restrictions come into play. As we mentioned, HW wallet requests user permission along with the verifiable recipient ID for any spend transaction."}]},{"type":"element","tag":"h2","props":{"id":"how-do-we-verify-the-transaction-is-indeed-spendingreceiving-or-splitting"},"children":[{"type":"text","value":"How do we verify the transaction is indeed spending/receiving, or splitting?"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"For all transactions the host specifies the input/output "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"CoinID"}]},{"type":"text","value":"s that belong to the user before/after the transaction. Based on them the HW wallet deduces:"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Overall value and asset which is obtained/lost in a transaction"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"excess "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"blinding factor"}]},{"type":"text","value":" (diff of input/output "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"blinding factors"}]},{"type":"text","value":")."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The transaction type is verified according to (1), whereas the signed kernel balances the transaction according to (2). As we mentioned, by "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"blinding factor"}]},{"type":"text","value":" depends on the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"CoinID"}]},{"type":"text","value":" in an opaque way, hence there's no feasible way to substitute different inputs/outputs in the transaction after it was signed."}]},{"type":"element","tag":"h1","props":{"id":"transaction-signing"},"children":[{"type":"text","value":"Transaction signing"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"For all the mentioned transaction types the host supplies the following:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"List of input/output "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"CoinID"}]},{"type":"text","value":"s."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Kernel lock height (min/max height)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Kernel fee"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Upon signing, as usual, the excess _blinding factor of the transaction is split into 2 parts in a pseudo-random way: one goes to the kernel commitment, the other goes to the "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"offset"}]},{"type":"text","value":" (plain scalar). This is done for all the MW transactions for a better obfuscation."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Send and Receive are mutual transactions, that follow the following ritual:"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Sender creates its part of the kernel commitment, and sends it to the receiver"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Receiver adds its part of the commitment, signs it, and sends it back to the sender."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Sender finishes its part."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Split transaction (where the user sends funds to itself) is signed in a single invocation."}]},{"type":"element","tag":"h3","props":{"id":"split-transaction"},"children":[{"type":"text","value":"Split transaction"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This is the simplest case, as there's no additional transaction party. The HW wallet analyzes the input/output "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"CoinID"}]},{"type":"text","value":"s to make sure no funds \"disappear\". Means the user only spends the transaction fee."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"If everything matches and the user authorizes it - the HW wallet generates the kernel "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"blinding factor"}]},{"type":"text","value":" in a deterministic way, and then generates the kernel commitment + signature, and the appropriate "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"offset"}]},{"type":"text","value":"."}]},{"type":"element","tag":"h3","props":{"id":"receive-transaction"},"children":[{"type":"text","value":"Receive transaction"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"As usual the HW wallet analyzes the input/output "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"CoinID"}]},{"type":"text","value":"s to make sure it receives funds."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Note:"}]},{"type":"text","value":" currently it's allowed to receive only one asset type at a time, i.e. exchanging different assets in the same transaction is currently not allowed (as right now we don't have appropriate "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"PaymentProof"}]},{"type":"text","value":" for this)."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"According to the ritual, by the time of invocation the sender has already produced its part. This includes the following:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Kernel commitment"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Kernel signature \"public nonce\""}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"If everything matches - the HW wallet generates its part of the kernel "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"blinding factor"}]},{"type":"text","value":" in a deterministic way, and then generates its part of the kernel commitment and signature, and the appropriate "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"offset"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In addition to this, the HW wallet also signs the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"PaymentProof"}]},{"type":"text","value":". The Kernel ID, value and asset type are deduced automatically. The following additional parameters are specified by the host for the signature:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Sender "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Identity"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Self "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"IdentityNumber"}]},{"type":"text","value":", which corresponds to the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Identity"}]},{"type":"text","value":" expected by the sender. The HW wallet generates the appropriate private key, and signs the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"PaymentProof"}]},{"type":"text","value":" by it."}]}]},{"type":"element","tag":"h3","props":{"id":"send-transaction"},"children":[{"type":"text","value":"Send transaction"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This is the most complex case. To sign the send transaction the HW wallet should be invoked twice (as can be seen according to the ritual). It also needs a "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"nonce"}]},{"type":"text","value":" that should retain valid for the duration of the transaction."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"When the HW wallet is invoked to sign the send transaction, the host, among other things, specifies the nonce "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"slot"}]},{"type":"text","value":" which should be used to this transaction (the slot management, i.e. which ongoing transaction uses which slot - up to the host)."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"On the first invocation the HW wallet generates the kernel parameters (commitment and public nonce) based on the visible parameters and this nonce."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"On the second invocation it verifies receiver part, verifies the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"PaymentProof"}]},{"type":"text","value":" signed by the receiver, and asks for user permission to transfer the funds to this receiver. If everything is ok - the kernel is signed."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Note:"}]},{"type":"text","value":" just before signing, the HW wallet re-generates the value of the "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"slot"}]},{"type":"text","value":" used in this transaction (re-generates its value in a deterministic way). This is to prevent malicious host make HW wallet sign different transactions using the same "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"nonce"}]},{"type":"text","value":"."}]},{"type":"element","tag":"h2","props":{"id":"note-regarding-rangeproof-generation"},"children":[{"type":"text","value":"Note regarding rangeproof generation"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Beam uses bulletproof as a rangeproof, which is computationally heavy for a device with limited capabilities. To improve the performance the host and HW wallet perform a multi-party computation. The HW wallet participates only where the "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"blinding factor"}]},{"type":"text","value":" is necessary."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"However, apart from being valid, the generated bulletproof must also be detectable by the user "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"OwnerKey"}]},{"type":"text","value":". This is obviously unacceptable if a malicious host can generate an output which would be \"invisible\" to the user after the transaction."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Because of this there's a considerable amount of computation that HW wallet needs to do. In particular it needs to calculate a multi-exponentiation of 129 generators. Yet it's only a fairly small fraction of the overall computation."}]},{"type":"element","tag":"h2","props":{"id":"note-regarding-paymentproof-and-bbs-addresses"},"children":[{"type":"text","value":"Note regarding "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"PaymentProof"}]},{"type":"text","value":" and BBS addresses"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Normally wallets negotiate over BBS system, each has a BBS address key, by which it tries to decrypt all the BBS traffic and chase the messages intended to it. Then during the transaction the BBS public address is also treated as the peer "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Identity"}]},{"type":"text","value":", i.e. the sender expects the receiver to sign the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"PaymentProof"}]},{"type":"text","value":" by it."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"However for the HW wallet it's not feasible to decode all the BBS traffic. Hence we decided to separate the BBS and the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Identity"}]},{"type":"text","value":". Now in order to send/receive funds the users exchange "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Tokens"}]},{"type":"text","value":" (over secure channel), which optionally include both the BBS address and the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Identity"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Conceptually the BBS address belongs to the entity you are directly talking to, whereas the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Identity"}]},{"type":"text","value":" belongs to the "},{"type":"element","tag":"u","props":{},"children":[{"type":"text","value":"final"}]},{"type":"text","value":" sender/recipient of the funds. In other words, the software wallet is a proxy, which may be compromised, whereas still there is a confirmation that the final recipient gets all the funds."}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"beam-vs-other-blockchains","depth":3,"text":"Beam vs other blockchains"},{"id":"assumptions","depth":2,"text":"Assumptions"},{"id":"terminology","depth":2,"text":"Terminology"},{"id":"how-do-we-verify-the-transaction-is-indeed-spendingreceiving-or-splitting","depth":2,"text":"How do we verify the transaction is indeed spending/receiving, or splitting?","children":[{"id":"split-transaction","depth":3,"text":"Split transaction"},{"id":"receive-transaction","depth":3,"text":"Receive transaction"},{"id":"send-transaction","depth":3,"text":"Send transaction"}]},{"id":"note-regarding-rangeproof-generation","depth":2,"text":"Note regarding rangeproof generation"},{"id":"note-regarding-paymentproof-and-bbs-addresses","depth":2,"text":"Note regarding PaymentProof and BBS addresses"}]}},"_type":"markdown","_id":"content:docs:core-tech:HW-wallet-design.md","_source":"content","_file":"docs/core-tech/HW-wallet-design.md","_extension":"md"},{"_path":"/docs/core-tech/hw-wallet-requirements-deprecated","_dir":"core-tech","_draft":false,"_partial":false,"_locale":"","title":"-- DEPRECATED --","description":"The HW wallet should support the following functionality","body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"deprecated"},"children":[{"type":"text","value":"-- DEPRECATED --"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The HW wallet should support the following functionality"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Deterministic key generation for key parameters"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Export public keys"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Participate in signing schemes: Schnorr's signature, Bulletproof.\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The latter in CPU-hungry, but most of the computations can be done without HW"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Support multi-signatures\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"This includes both: signing with multiple self keys, as well as the keys generated by the others."}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Obviously secret keys must not be revealed."}]}]},{"type":"element","tag":"h2","props":{"id":"nonces-and-randomness"},"children":[{"type":"text","value":"Nonces and randomness"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Our signing protocols follow a ritual where the signer generates some "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"nonce(s)"}]},{"type":"text","value":", reveals its "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"image(s)"}]},{"type":"text","value":", gets a "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"challenge(s)"}]},{"type":"text","value":", and then should reveal the appropriate "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"preimage"}]},{"type":"text","value":". To guarantee (5) the signer must "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"never"}]},{"type":"text","value":" answer to different "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"challenges"}]},{"type":"text","value":" for the same "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"nonce"}]},{"type":"text","value":". This is absolutely vital!"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In a regular signature protocol the "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"nonce"}]},{"type":"text","value":" can always be generated in a deterministic way from the visible transcript and the sercret key, the "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"challenge"}]},{"type":"text","value":" is derived from the visible transcript, and the whole signing process is "},{"type":"element","tag":"u","props":{},"children":[{"type":"text","value":"atomic"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This approach, however, is not compatible with (4). In the case of the multisignature the signing process is not atomic. And ability to create multisignatures is essential in MW."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Hence, in order to sustain the requirements the HW should use another source of (pseudo)randomness. Moreover, the random "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"nonce"}]},{"type":"text","value":" generated for the signing process should be kept inside the HW for indefinite time, because signing may take considerable time, during which HW wallet should be able to operate normally. In addition each "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"nonce"}]},{"type":"text","value":" should be "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"erased"}]},{"type":"text","value":" once the "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"preimage"}]},{"type":"text","value":" based on it is revealed."}]},{"type":"element","tag":"h1","props":{"id":"proposed-design"},"children":[{"type":"text","value":"Proposed design"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"HW wallet should support the basic EC cryptography primitives for the parameters specified by the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"secp256k1"}]},{"type":"text","value":" standard (the one that is used in bitcoin). Means - 256-bit wide keys, the same EC equation, finite field parameters, same "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"G"}]},{"type":"text","value":"-generator."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The HW wallet should have non-volatile memory, represented by memory "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"slots"}]},{"type":"text","value":". There should be the following "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"slots"}]},{"type":"text","value":":"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Master secret.\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"No direct access to the caller."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Should be used as a secret for key generation."}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Nonce source.\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"No direct access to the caller."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Should be initialized by "},{"type":"element","tag":"u","props":{},"children":[{"type":"text","value":"true random"}]},{"type":"text","value":" either during production, or upon initialization of the Master secret."}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Generated key.\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Contains the generated key. May be a single key or their sum/difference (more about this later)."}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Generated nonces."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This low-level design may look weird, but it's needed to support all the MW functionality. The following functionality should be supported:"}]},{"type":"element","tag":"h3","props":{"id":"nonce-regeneration"},"children":[{"type":"text","value":"Nonce regeneration"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Parameters:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"i"}]},{"type":"text","value":" - the target slot index"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Result: the target slot should contain a unique nonce, derived from the Nonce source, and the Nonce source itself should be mutated immediately after that."}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"n[i] = DeriveNonce(NonceSource)"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"NonceSource = Mutate(NonceSource)"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"u","props":{},"children":[{"type":"text","value":"Important"}]},{"type":"text","value":": all the nonce slots must be regenerated before (or immediately after) the Master secret is initialized. In simple words, there must be no situation where the HW is operational, yet there's a nonce slot which contains predictable (zero?) value."}]},{"type":"element","tag":"h3","props":{"id":"key-slot-reset-assign-to-zero"},"children":[{"type":"text","value":"Key slot reset (assign to zero)"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Result: the target slot should contain zero value: "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"k = 0"}]}]},{"type":"element","tag":"h3","props":{"id":"key-generation"},"children":[{"type":"text","value":"Key generation"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Parameters:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"ID"}]},{"type":"text","value":" - an opaque 256-bit data that identifies the key"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Result: the generated key should be "},{"type":"element","tag":"u","props":{},"children":[{"type":"text","value":"added"}]},{"type":"text","value":" to the target slot: "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"k += KeyGenerate(MasterSecret, ID)"}]}]},{"type":"element","tag":"h3","props":{"id":"key-split"},"children":[{"type":"text","value":"Key split"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The key should be split into 2 parts in a deterministic (yet opaque) way."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Return value: "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"k2 = Muate(k)"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Result: "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"k -= k2"}]}]},{"type":"element","tag":"h3","props":{"id":"image-public-key-reveal"},"children":[{"type":"text","value":"Image (public key) reveal"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Parameters:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"i"}]},{"type":"text","value":" - the slot index."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Return value: EC point (in whatever representation) equals to the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"G"}]},{"type":"text","value":"-generator multiplied by the value of this slot: "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"G * n[i]"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Applicable for key and nonce slots"}]},{"type":"element","tag":"h3","props":{"id":"sig1-schnorr"},"children":[{"type":"text","value":"Sig1 (Schnorr)"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Parameters:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"i"}]},{"type":"text","value":" - the slot index"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"e"}]},{"type":"text","value":" - challenge"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Return value: blinded "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"preimage"}]},{"type":"text","value":": "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"kb = n[i] + e*k"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Result: used nonce is immediately regenerated: "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Regenerate(i)"}]}]},{"type":"element","tag":"h3","props":{"id":"sig2-bulletproof"},"children":[{"type":"text","value":"Sig2 (Bulletproof)"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Parameters:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"i1, i2"}]},{"type":"text","value":" - 2 slot indexes"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"e"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"e2"}]},{"type":"text","value":" - 2 challenges"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Return value: blinded "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"preimage"}]},{"type":"text","value":": "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"kb = n[i1] + e2*n[i2] + e*k"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Result: used nonce is immediately regenerated: "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Regenerate(i1)"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Regenerate(i2)"}]}]},{"type":"element","tag":"hr","props":{},"children":[]},{"type":"element","tag":"hr","props":{},"children":[]},{"type":"element","tag":"h1","props":{"id":"api"},"children":[{"type":"text","value":"API"}]},{"type":"element","tag":"h3","props":{"id":"key-generation-1"},"children":[{"type":"text","value":"Key generation"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Inputs:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"KIDV"}]},{"type":"text","value":" for the needed key\nOtputs:"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The public key (ECC point)"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Generate the key, and export its image (i.e. multiplies by "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"G"}]},{"type":"text","value":"-generator)"}]},{"type":"element","tag":"h3","props":{"id":"bulletproof-generation"},"children":[{"type":"text","value":"Bulletproof generation"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Inputs:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"KIDV"}]},{"type":"text","value":" for the needed key\nOtputs:"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The Bulletproof"}]}]},{"type":"element","tag":"h3","props":{"id":"nonce-generation"},"children":[{"type":"text","value":"Nonce generation"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Inputs:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Slot number\nOtputs:"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The nonce image (ECC point)"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Generate the random nonce (ECC scalar), and export its image (i.e. multiplies by "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"G"}]},{"type":"text","value":"-generator)."}]},{"type":"element","tag":"h3","props":{"id":"transaction-signature"},"children":[{"type":"text","value":"Transaction signature"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Inputs:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"List of "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"KIDV"}]},{"type":"text","value":"s of input UTXOs"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"List of "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"KIDV"}]},{"type":"text","value":"s of output UTXOs"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Randomly generated offset (ECC scalar)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Number of the nonce slot"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Challenge "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"e"}]},{"type":"text","value":" (ECC scalar) // after discussion, it seems that it should be calculated on device, so we need kernel parameters\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Fee"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Commitment // total public excess"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"minimal height"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"maximum height"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Amount(m_AssetEmission)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"m_pHashLock;"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Public nonce of 2nd party (for multisig)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Public excess of 2nd party (for multisig)"}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Outputs:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Signature (ECC scalar)"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The HW wallet should do the following:"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Request user's permission for the transaction."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Calculate the result."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Immediately overwrite the nonce slot with another randomly-generated value."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The result is calculated by the following algorithm:"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Generate all the keys (i.e. blinding factors), and calculate "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"sk"}]},{"type":"text","value":" as sum of inputs minus outputs."},{"type":"element","tag":"br","props":{},"children":[]},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"sk = Sum(input blinding factors) - Sum(output blinding factors) - offset"}]},{"type":"element","tag":"br","props":{},"children":[]},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"offset"}]},{"type":"text","value":" is generated randomly on caller side"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Calculate multi signature public nonce: "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"PublicNonce = Nonce*G + PeerPublicNonce"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Calculate total blinding excess: "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"TotalExcess = sk * G + PeerPublicExcess"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Calculate Message for sign: hash kernel parameters see: TxKernel::get_Hash"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Calculate challenge by: "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"e = H(PublicNonce|Message)"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Calculate the signature by: "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Signature = sk * e + Nonce"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Re-generate "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Nonce"}]},{"type":"text","value":" (overwrite the contents of the slot)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Reveal "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Signature"}]}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"nonces-and-randomness","depth":2,"text":"Nonces and randomness","children":[{"id":"nonce-regeneration","depth":3,"text":"Nonce regeneration"},{"id":"key-slot-reset-assign-to-zero","depth":3,"text":"Key slot reset (assign to zero)"},{"id":"key-generation","depth":3,"text":"Key generation"},{"id":"key-split","depth":3,"text":"Key split"},{"id":"image-public-key-reveal","depth":3,"text":"Image (public key) reveal"},{"id":"sig1-schnorr","depth":3,"text":"Sig1 (Schnorr)"},{"id":"sig2-bulletproof","depth":3,"text":"Sig2 (Bulletproof)"},{"id":"key-generation-1","depth":3,"text":"Key generation"},{"id":"bulletproof-generation","depth":3,"text":"Bulletproof generation"},{"id":"nonce-generation","depth":3,"text":"Nonce generation"},{"id":"transaction-signature","depth":3,"text":"Transaction signature"}]}]}},"_type":"markdown","_id":"content:docs:core-tech:HW-wallet-requirements----DEPRECATED---.md","_source":"content","_file":"docs/core-tech/HW-wallet-requirements----DEPRECATED---.md","_extension":"md"},{"_path":"/docs/core-tech/instructions-for-command-line-node","_dir":"core-tech","_draft":false,"_partial":false,"_locale":"","title":"This documentation is obsolete","description":"Please refer to Beam Node User Guide","body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"this-documentation-is-obsolete"},"children":[{"type":"text","value":"This documentation is obsolete"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Please refer to "},{"type":"element","tag":"a","props":{"href":"https://beam-docs.readthedocs.io/en/latest/rtd_pages/user_beam_node_guide.html","rel":["nofollow"]},"children":[{"type":"text","value":"Beam Node User Guide"}]}]},{"type":"element","tag":"h1","props":{"id":"running-a-node"},"children":[{"type":"text","value":"Running a node"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/tree/master/beam","rel":["nofollow"]},"children":[{"type":"text","value":"Node source code"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Node binaries for Windows, Mac and Linux can be downloaded from the Beam website ("},{"type":"element","tag":"a","props":{"href":"http://beam.mw/downloads","rel":["nofollow"]},"children":[{"type":"text","value":"http://beam.mw/downloads"}]},{"type":"text","value":") or GitHub ("},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/releases","rel":["nofollow"]},"children":[{"type":"text","value":"https://github.com/BeamMW/beam/releases"}]},{"type":"text","value":")."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Node parameters can be either passed through command line or specified in the configuration file called "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"beam-node.cfg"}]},{"type":"text","value":" and located in the same folder the node resides in."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"For every parameter, the value in the command line prevails over configuration file."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The log files are located in the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"logs"}]},{"type":"text","value":" folder, which in turn resides in the node folder."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Once started, the node will create a "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"node.db"}]},{"type":"text","value":" file in the same folder it is located. This file will store an internal state of the node."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Upon the first launch, the node will download current blockchain history in batch mode as a single large macroblock. After the initial sync is complete, the node will continue to sync blocks and individual transactions from the current blockchain Tip (height) and onwards. This can be seen in the log entry: "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"My Tip: 24704-f2ab414ba6430d85"}]},{"type":"text","value":"."}]}]},{"type":"element","tag":"h1","props":{"id":"command-line-execution-example"},"children":[{"type":"text","value":"Command line execution example:"}]},{"type":"element","tag":"pre","props":{"code":"./beam-node --peer 104.248.159.154:8100 --mining_threads 1 --file_log_level debug --key_mine=Ipte/cVRHvS72U4h66KIDDILwtIhpsRugTWycwnDUqwOqFq+qmcVEuWhjPJ2OwBn6ZkxKKpLX0W9PvHhGIUVPz8d6CL5CSB8fjt4kA== --key_view=xj7uVZh7kWaY2U4h66KIDDILwtIhpsRugTWycwnDUqwOqFq+qmcVEuVqiydGxomYaF2lQcc92Rzm3HBqsvk9LrFZlrksacvpDgteNLqxQJ4DUD+iKiDYvXy+VLCui125Rw69lO+8gxnxMM5j1rk= --pass=123\n","language":"sh","meta":"","className":["language-sh"]},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"./beam-node --peer 104.248.159.154:8100 --mining_threads 1 --file_log_level debug --key_mine=Ipte/cVRHvS72U4h66KIDDILwtIhpsRugTWycwnDUqwOqFq+qmcVEuWhjPJ2OwBn6ZkxKKpLX0W9PvHhGIUVPz8d6CL5CSB8fjt4kA== --key_view=xj7uVZh7kWaY2U4h66KIDDILwtIhpsRugTWycwnDUqwOqFq+qmcVEuVqiydGxomYaF2lQcc92Rzm3HBqsvk9LrFZlrksacvpDgteNLqxQJ4DUD+iKiDYvXy+VLCui125Rw69lO+8gxnxMM5j1rk= --pass=123\n"}]}]},{"type":"element","tag":"h2","props":{"id":"node-command-line-parameters-explained"},"children":[{"type":"text","value":"Node command line parameters explained:"}]},{"type":"element","tag":"table","props":{},"children":[{"type":"element","tag":"thead","props":{},"children":[{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"th","props":{},"children":[{"type":"text","value":"Name"}]},{"type":"element","tag":"th","props":{},"children":[{"type":"text","value":"Description"}]}]}]},{"type":"element","tag":"tbody","props":{},"children":[{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"peer"}]}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"Specifies a comma-separated list of peers the node will initially connect to. After the connection is established, the node will get an updated list of peers from other nodes, along with peer ratings and from that moment the node will manage its connections on its own."}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"key_mine"}]}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"A password-protected secret key, exported by the wallet, that should be used for standalone mining (when the owner wallet is offline). If not specified - mining would be possible only when the owner wallet is online"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"key_view"}]}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"A semicolon-separated list of password-protected viewer keys, exported by the wallet, that should be monitored by the node. The wallet master viewer key is also needed for node-wallet authentication. The "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"key_mine"}]},{"type":"text","value":", if set, is also included implicitly"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"pass"}]}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"A password that should be used to access they encoded keys."}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"mining_treads"}]}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"Specifies the number of CPU cores utilized for mining. If set to 0, node acts as a validating node only."}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"file_log_level"}]}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"Allows to raise the debug level when a deeper investigation is required."}]}]}]}]},{"type":"element","tag":"h1","props":{"id":"config-file-example"},"children":[{"type":"text","value":"Config file example:"}]},{"type":"element","tag":"pre","props":{"code":"# port to start server on\nport=10000\n\n# secret key for mining.\nkey_mine=Ipte/cVRHvS72U4h66KIDDILwtIhpsRugTWycwnDUqwOqFq+qmcVEuWhjPJ2OwBn6ZkxKKpLX0W9PvHhGIUVPz8d6CL5CSB8fjt4kA==\n\n# All the viewer keys.\n--key_view=xj7uVZh7kWaY2U4h66KIDDILwtIhpsRugTWycwnDUqwOqFq+qmcVEuVqiydGxomYaF2lQcc92Rzm3HBqsvk9LrFZlrksacvpDgteNLqxQJ4DUD+iKiDYvXy+VLCui125Rw69lO+8gxnxMM5j1rk=\n\n# Password. If required (at least 1 key specified) and not set - will be asked after launch.\n--pass=123\n\n# number of mining threads(there is no mining if 0)\nmining_threads=1\n\n# peers\npeer=104.248.159.154:8100\n\n# miner type\nminer_type=cpu\n","language":"sh","meta":"","className":["language-sh"]},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"# port to start server on\nport=10000\n\n# secret key for mining.\nkey_mine=Ipte/cVRHvS72U4h66KIDDILwtIhpsRugTWycwnDUqwOqFq+qmcVEuWhjPJ2OwBn6ZkxKKpLX0W9PvHhGIUVPz8d6CL5CSB8fjt4kA==\n\n# All the viewer keys.\n--key_view=xj7uVZh7kWaY2U4h66KIDDILwtIhpsRugTWycwnDUqwOqFq+qmcVEuVqiydGxomYaF2lQcc92Rzm3HBqsvk9LrFZlrksacvpDgteNLqxQJ4DUD+iKiDYvXy+VLCui125Rw69lO+8gxnxMM5j1rk=\n\n# Password. If required (at least 1 key specified) and not set - will be asked after launch.\n--pass=123\n\n# number of mining threads(there is no mining if 0)\nmining_threads=1\n\n# peers\npeer=104.248.159.154:8100\n\n# miner type\nminer_type=cpu\n"}]}]},{"type":"element","tag":"h1","props":{"id":"the-full-list-of-options-supported-by-the-node"},"children":[{"type":"text","value":"The full list of options supported by the node"}]},{"type":"element","tag":"h2","props":{"id":"general-options"},"children":[{"type":"text","value":"General options:"}]},{"type":"element","tag":"table","props":{},"children":[{"type":"element","tag":"thead","props":{},"children":[{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"th","props":{},"children":[{"type":"text","value":"Name"}]},{"type":"element","tag":"th","props":{},"children":[{"type":"text","value":"Description"}]}]}]},{"type":"element","tag":"tbody","props":{},"children":[{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"h"}]},{"type":"text","value":" or "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"help"}]}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"list of all options"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"p arg"}]},{"type":"text","value":" or "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"port arg (=10000)"}]}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"port to start the server on"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"log_level arg"}]}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"log level "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"[info/debug/verbose]"}]}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"file_log_level arg"}]}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"file log level "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"[info/debug/verbose]"}]}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"v"}]},{"type":"text","value":" or "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"version"}]}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"return project version"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"git_commit_hash"}]}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"return commit hash"}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"node-options"},"children":[{"type":"text","value":"Node options:"}]},{"type":"element","tag":"table","props":{},"children":[{"type":"element","tag":"thead","props":{},"children":[{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"th","props":{},"children":[{"type":"text","value":"Name"}]},{"type":"element","tag":"th","props":{},"children":[{"type":"text","value":"Description"}]}]}]},{"type":"element","tag":"tbody","props":{},"children":[{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"storage arg (=node.db)"}]}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"node storage path"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"history_dir arg (=./)"}]}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"directory for compressed history"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"temp_dir arg (=/tmp/)"}]}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"temp directory for compressed history, must be on the same volume"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"miner_type arg (=cpu)"}]}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"miner type "},{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"cpu/gpu"}]}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"mining_threads arg (=0)"}]}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"number of mining threads(there is no mining if 0)"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"verification_threads arg (=-1)"}]}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"number of threads for cryptographic verifications (0 = single thread, -1 = auto)"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"miner_id arg (=0)"}]}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"seed for miner nonce generation"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"peer arg"}]}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"nodes to connect to"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"import arg (=0)"}]}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"specify the blockchain height to import, the compressed history is assumed to be downloaded to the specified directory"}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"rules-configuration"},"children":[{"type":"text","value":"Rules configuration:"}]},{"type":"element","tag":"table","props":{},"children":[{"type":"element","tag":"thead","props":{},"children":[{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"th","props":{},"children":[{"type":"text","value":"Name"}]},{"type":"element","tag":"th","props":{},"children":[{"type":"text","value":"Description"}]}]}]},{"type":"element","tag":"tbody","props":{},"children":[{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"CoinbaseEmission arg (=80000000)"}]}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"coinbase emission in a single block"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"MaturityCoinbase arg (=60)"}]}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"Number of blocks before coinbase UTXO can be spent"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"MaturityStd arg (=0)"}]}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"Number of blocks before non-coinbase UTXO can be spent"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"MaxBodySize arg (=1048576)"}]}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"Max block body size in "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"[bytes]"}]}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"DesiredRate_s arg (=60)"}]}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"Desired rate of generated blocks in "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"[seconds]"}]}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"DifficultyReviewCycle arg (=1440)"}]}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"Number of blocks after which the mining difficulty can be adjusted"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"MaxDifficultyChange arg (=2)"}]}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"Max difficulty change after each cycle (each step is roughly x2 complexity)"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"TimestampAheadThreshold_s arg (=7200)"}]}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"Block timestamp tolerance in "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"[seconds]"}]}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"WindowForMedian arg (=25)"}]}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"How many blocks are considered in calculating the timestamp median"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"AllowPublicUtxos arg (=0)"}]}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"Set to allow regular (non-coinbase) UTXO to have non-confidential signature"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"FakePoW arg (=0)"}]}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"Don't verify PoW. Mining is simulated by the timer. For tests only"}]}]}]}]},{"type":"element","tag":"h1","props":{"id":"running-beam-node-with-stratum-server"},"children":[{"type":"text","value":"Running Beam Node with Stratum Server"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Beam node implements Stratum protocol for connecting external miner clients. Clients open a TCP connection to the node though which they receive jobs to mine blocks using Equihash mining protocol."}]}]},{"type":"element","tag":"h1","props":{"id":"command-line-execution-example-1"},"children":[{"type":"text","value":"Command line execution example"}]},{"type":"element","tag":"pre","props":{"code":"./beam-node --port {NODE_PORT} --peer {PEER_IP} --stratum_port {STRATUM_PORT} --stratum_secrets_path {DIRECTORY} ----key_view=xj7uVZh7kWaY2U4h66KIDDILwtIhpsRugTWycwnDUqwOqFq+qmcVEuVqiydGxomYaF2lQcc92Rzm3HBqsvk9LrFZlrksacvpDgteNLqxQJ4DUD+\"\n","language":"sh","meta":"","className":["language-sh"]},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"./beam-node --port {NODE_PORT} --peer {PEER_IP} --stratum_port {STRATUM_PORT} --stratum_secrets_path {DIRECTORY} ----key_view=xj7uVZh7kWaY2U4h66KIDDILwtIhpsRugTWycwnDUqwOqFq+qmcVEuVqiydGxomYaF2lQcc92Rzm3HBqsvk9LrFZlrksacvpDgteNLqxQJ4DUD+\"\n"}]}]},{"type":"element","tag":"h2","props":{"id":"command-line-parameters"},"children":[{"type":"text","value":"Command line parameters"}]},{"type":"element","tag":"table","props":{},"children":[{"type":"element","tag":"thead","props":{},"children":[{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"th","props":{},"children":[{"type":"text","value":"Name"}]},{"type":"element","tag":"th","props":{},"children":[{"type":"text","value":"Description"}]}]}]},{"type":"element","tag":"tbody","props":{},"children":[{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"port"}]}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"port to start the node server on"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"peer"}]}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"nodes to connect to (in example remote node from masternet)"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"stratum_port"}]}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"stratum server port (should be >0)"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"stratum_secrets_path"}]}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"folder where configuration files are located"}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"configuration-files"},"children":[{"type":"text","value":"Configuration files"}]},{"type":"element","tag":"table","props":{},"children":[{"type":"element","tag":"thead","props":{},"children":[{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"th","props":{},"children":[{"type":"text","value":"Name"}]},{"type":"element","tag":"th","props":{},"children":[{"type":"text","value":"Description"}]}]}]},{"type":"element","tag":"tbody","props":{},"children":[{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"stratum.crt"}]}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"TLS certificate"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"stratum.key"}]}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"private key for TLS"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"stratum.api.keys"}]}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"file with allowed api keys"}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"For testing purposes ONLY "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"stratum.crt"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"stratum.key"}]},{"type":"text","value":" can be downloaded from:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/blob/master/utility/unittest/test.crt","rel":["nofollow"]},"children":[{"type":"text","value":"https://github.com/BeamMW/beam/blob/master/utility/unittest/test.crt"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/blob/master/utility/unittest/test.key","rel":["nofollow"]},"children":[{"type":"text","value":"https://github.com/BeamMW/beam/blob/master/utility/unittest/test.key"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The stratum.api.keys file (which you create by yourself) should contain any number of strings at least 7 symbols long without spaces each:"}]},{"type":"element","tag":"pre","props":{"code":"12345678\nsfdskjhfdksk\n984398349834\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"12345678\nsfdskjhfdksk\n984398349834\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"If there is no "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"stratum.api.keys"}]},{"type":"text","value":", ACL will be switched off."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Please note that "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"stratum.api.key"}]},{"type":"text","value":" file is reloaded by the server every 5 seconds, if you want to add/delete/edit  key you shouldn't restart "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"beam-node"}]},{"type":"text","value":", just edit file "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"stratum.api.keys"}]},{"type":"text","value":" file."}]},{"type":"element","tag":"h1","props":{"id":"known-limitations"},"children":[{"type":"text","value":"Known limitations"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"CPU without SSE3 instruction set are not supported"}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"node-command-line-parameters-explained","depth":2,"text":"Node command line parameters explained:"},{"id":"general-options","depth":2,"text":"General options:"},{"id":"node-options","depth":2,"text":"Node options:"},{"id":"rules-configuration","depth":2,"text":"Rules configuration:"},{"id":"command-line-parameters","depth":2,"text":"Command line parameters"},{"id":"configuration-files","depth":2,"text":"Configuration files"}]}},"_type":"markdown","_id":"content:docs:core-tech:Instructions-for-Command-Line-Node.md","_source":"content","_file":"docs/core-tech/Instructions-for-Command-Line-Node.md","_extension":"md"},{"_path":"/docs/core-tech/instructions-for-command-line-wallet","_dir":"core-tech","_draft":false,"_partial":false,"_locale":"","title":"This documentation is obsolete","description":"Please refer to Command Line User Guide","body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"this-documentation-is-obsolete"},"children":[{"type":"text","value":"This documentation is obsolete"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Please refer to "},{"type":"element","tag":"a","props":{"href":"https://beam-docs.readthedocs.io/en/latest/rtd_pages/user_cli_wallet_guide.html","rel":["nofollow"]},"children":[{"type":"text","value":"Command Line User Guide"}]}]},{"type":"element","tag":"h1","props":{"id":"running-a-command-line-wallet"},"children":[{"type":"text","value":"Running a command line wallet"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"After extracting the wallet binary to a folder, we need to initialize the wallet by executing the following command:"}]}]},{"type":"element","tag":"pre","props":{"className":["language-sh"],"code":"./beam-wallet --command init\n","language":"sh","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"./beam-wallet --command init\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"You will be prompted to provide wallet password and then the secret phrase, which would be used to initialize the master secret. Make sure to write down the secret phrase, to be able to restore wallet contents in case of emergency."}]}]},{"type":"element","tag":"h1","props":{"id":"printing-wallet-information"},"children":[{"type":"text","value":"Printing wallet information"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"To get the information about the current status of the wallet, execute:"}]}]},{"type":"element","tag":"pre","props":{"className":["language-sh"],"code":"./beam-wallet --command info -n 127.0.0.1:10000\n","language":"sh","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"./beam-wallet --command info -n 127.0.0.1:10000\n"}]}]},{"type":"element","tag":"h1","props":{"id":"receiving-beams"},"children":[{"type":"text","value":"Receiving Beams"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"To receive beams start the wallet in a listening mode by running:"}]}]},{"type":"element","tag":"pre","props":{"className":["language-sh"],"code":"./beam-wallet --command listen -n 127.0.0.1:10000\n","language":"sh","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"./beam-wallet --command listen -n 127.0.0.1:10000\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"After entering the password, the wallet will print out the line similar to: "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"WalletID 4a0e54b24d5fdf06891a8eaa57b4b3ac16731e932a64da8ec768083495d624f1 subscribes to BBS channel 9"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"This shows the SBBS address the wallet is listening on. This address can be copied and sent to Sender."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"If you want to create new SBBS address use the following command:"}]}]},{"type":"element","tag":"pre","props":{"className":["language-sh"],"code":"./beam-wallet --command=new_addr --listen -n 127.0.0.1:10000\n","language":"sh","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"./beam-wallet --command=new_addr --listen -n 127.0.0.1:10000\n"}]}]},{"type":"element","tag":"h1","props":{"id":"exporting-keys-for-standalone-nodes"},"children":[{"type":"text","value":"Exporting keys for standalone Node(s)"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The Node(s) that belongs to the wallet should be given appropriate keys for the following purpose:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Node-Wallet authentication"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Standalone mining (when the wallet is offline)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Monitoring wallet activity, supporting recovery and etc."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"It's possible to export the master wallet key, as well as a "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"child"}]},{"type":"text","value":" key, which is derived from the master key (but not vice versa!).\nIn addition every key can be exported as a full key, or as a "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"viewer"}]},{"type":"text","value":" key, which is suitable for Node authentication and monitoring activity, but not for generating and spending the UTXOs."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Keeping in mind that the wallet may own several nodes, we recommend providing each node a different child key for mining, so that in case it gets hacked - the attacker won't be able to steal what's been mined by other nodes. Anyway when the owner wallet connects the Node prefers to involve the wallet in mining, so that key won't be used either.\nObviously it's not recommended to export the master secret key ever."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In addition to mining, one or more viewer keys should be exported and provided to the nodes. To be able to communicate with the wallet, each Node must have its master viewer key. In addition to this, every node should have all the viewer child keys that are used for mining, to be able to detect/restore all the mined UTXOs."}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"To export a child key"}]}]},{"type":"element","tag":"pre","props":{"className":["language-sh"],"code":"./beam-wallet --command=key_export --subkey=N\n","language":"sh","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"./beam-wallet --command=key_export --subkey=N\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"whereas "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"N"}]},{"type":"text","value":" is the child index. Specifying "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"0"}]},{"type":"text","value":" means the master key."}]},{"type":"element","tag":"h1","props":{"id":"sending-beams"},"children":[{"type":"text","value":"Sending Beams"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"To sending beams use the following command"}]}]},{"type":"element","tag":"pre","props":{"className":["language-sh"],"code":"./beam-wallet --command=send -n 127.0.0.1:10000 -r 77de6bd3de40bc58ab7e4fb68d5e0596fd1e72f3c4fb3eb3d106082d89264909 -a 11.3 -f 0.2\n","language":"sh","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"./beam-wallet --command=send -n 127.0.0.1:10000 -r 77de6bd3de40bc58ab7e4fb68d5e0596fd1e72f3c4fb3eb3d106082d89264909 -a 11.3 -f 0.2\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The send-related command line parameters of the wallet:"}]}]},{"type":"element","tag":"table","props":{},"children":[{"type":"element","tag":"thead","props":{},"children":[{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"th","props":{},"children":[{"type":"text","value":"Name"}]},{"type":"element","tag":"th","props":{},"children":[{"type":"text","value":"Description"}]}]}]},{"type":"element","tag":"tbody","props":{},"children":[{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"r"}]}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"SBBS address of the receiver node"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"a"}]}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"amount of beams to send"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"f"}]}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"transaction fee"}]}]}]}]},{"type":"element","tag":"h1","props":{"id":"the-full-list-of-wallet-command-line-options"},"children":[{"type":"text","value":"The Full list of wallet command line options"}]},{"type":"element","tag":"h2","props":{"id":"general-options"},"children":[{"type":"text","value":"General options:"}]},{"type":"element","tag":"table","props":{},"children":[{"type":"element","tag":"thead","props":{},"children":[{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"th","props":{},"children":[{"type":"text","value":"Name"}]},{"type":"element","tag":"th","props":{},"children":[{"type":"text","value":"Description"}]}]}]},{"type":"element","tag":"tbody","props":{},"children":[{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"h"}]},{"type":"text","value":" or "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"help"}]}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"list of all options"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"p"}]},{"type":"text","value":"  or "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"port arg (=10000)"}]}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"port to start the server on"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"log_level arg"}]}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"log level `[info"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"file_log_level arg"}]}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"file log level `[info"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"v"}]},{"type":"text","value":" or "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"version"}]}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"return project version"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"git_commit_hash"}]}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"return commit hash"}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"wallet-options"},"children":[{"type":"text","value":"Wallet options:"}]},{"type":"element","tag":"table","props":{},"children":[{"type":"element","tag":"thead","props":{},"children":[{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"th","props":{},"children":[{"type":"text","value":"Name"}]},{"type":"element","tag":"th","props":{},"children":[{"type":"text","value":"Description"}]}]}]},{"type":"element","tag":"tbody","props":{},"children":[{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"seed_phrase arg"}]}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"phrase to initialize master secret, according to BIP-39"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"pass arg"}]}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"password for the wallet"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"a"}]},{"type":"text","value":" or "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"amount arg"}]}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"amount to send (in Beams, 1 Beam = 1000000 chattle)"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"f"}]},{"type":"text","value":" or "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"fee arg (=0)"}]}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"fee (in Beams, 1 Beam = 1000000 chattle)"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"r"}]},{"type":"text","value":" or "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"receiver_addr arg"}]}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"address of receiver"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"n"}]},{"type":"text","value":" or "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"node_addr arg"}]}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"address of node"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"wallet_path arg (=wallet.db)"}]}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"path to wallet file"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"bbs_keystore_path arg (=bbs_keys.db)"}]}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"path to file with bbs keys"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"tx_history"}]}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"print transactions' history in info command"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"command arg"}]}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"command to execute `[send"}]}]}]}]},{"type":"element","tag":"h1","props":{"id":"known-limitations"},"children":[{"type":"text","value":"Known limitations"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"CPUs without SSE3 instruction set are not supported"}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"general-options","depth":2,"text":"General options:"},{"id":"wallet-options","depth":2,"text":"Wallet options:"}]}},"_type":"markdown","_id":"content:docs:core-tech:Instructions-for-Command-Line-Wallet.md","_source":"content","_file":"docs/core-tech/Instructions-for-Command-Line-Wallet.md","_extension":"md"},{"_path":"/docs/core-tech/laser-beam-commands","_dir":"core-tech","_draft":false,"_partial":false,"_locale":"","title":"Laser BEAM Commands","description":"","body":{"type":"root","children":[{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"show laser channels"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"./beam-wallet-masternet laser --laser_channels_list"}]}]},{"type":"element","tag":"ol","props":{"start":2},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"wait incoming laser connection (will generate address)"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"./beam-wallet-masternet laser --laser_receive --laser_my_locked_amount <amount in beam> --laser_remote_locked_amount <amount in beam> --laser_fee <amount in groth>"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Example:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"./beam-wallet-masternet laser --laser_receive --laser_my_locked_amount 1.1 --laser_remote_locked_amount 1.1 --laser_fee 100"}]}]},{"type":"element","tag":"ol","props":{"start":3},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"connect with laser"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"./beam-wallet-masternet laser --laser_open --laser_address <address> --laser_my_locked_amount <amount in beam> --laser_remote_locked_amount <amount in beam> --laser_fee <amount in groth>"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Example:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"./beam-wallet-masternet laser --laser_open --laser_address 285a776d78e6e0ee285a196282e61768b87c7c108a7d8cf7622a094555d2cfeb80e --laser_my_locked_amount 0.9 --laser_remote_locked_amount 1.1 --laser_fee 100"}]}]},{"type":"element","tag":"ol","props":{"start":4},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"listen laser channels"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"./beam-wallet-masternet laser --laser_listen [channel id 1,channel id 2, ... channel id N]"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Example:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"./beam-wallet-masternet laser --laser_listen"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"./beam-wallet-masternet laser --laser_listen 4bd5ee31b264f6102709dc145cf37b55"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"./beam-wallet-masternet laser --laser_listen 4bd5ee31b264f6102709dc145cf37b55,73e5af986eb3ea165f71bbb54ebfad37"}]}]},{"type":"element","tag":"ol","props":{"start":5},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"send coins"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"./beam-wallet-masternet laser --laser_send <amount in beam> --laser_channel <channel id>"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Example:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"./beam-wallet-masternet laser --laser_send 0.1 --laser_channel 4bd5ee31b264f6102709dc145cf37b55"}]}]},{"type":"element","tag":"ol","props":{"start":6},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"close laser channels. after lock time is up or if other side is offline"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"./beam-wallet-masternet laser --laser_drop <channel id 1,channel id 2, ... channel id N>"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Example:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"./beam-wallet-masternet laser --laser_drop 4bd5ee31b264f6102709dc145cf37b55"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"./beam-wallet-masternet laser --laser_drop 4bd5ee31b264f6102709dc145cf37b55,73e5af986eb3ea165f71bbb54ebfad37"}]}]},{"type":"element","tag":"ol","props":{"start":7},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"close laser channels. before lock time is up, only if other side is online"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"./beam-wallet-masternet laser --laser_close <channel id 1,channel id 2, ... channel id N>"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Example:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"./beam-wallet-masternet laser --laser_close 4bd5ee31b264f6102709dc145cf37b55"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"./beam-wallet-masternet laser --laser_close 4bd5ee31b264f6102709dc145cf37b55,73e5af986eb3ea165f71bbb54ebfad37"}]}]},{"type":"element","tag":"ol","props":{"start":8},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"delete laser channels from DB, only for closed channels"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"./beam-wallet-masternet laser --laser_delete <channel id 1,channel id 2, ... channel id N>"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Example:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"./beam-wallet-masternet laser --laser_delete 4bd5ee31b264f6102709dc145cf37b55"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"./beam-wallet-masternet laser --laser_delete 4bd5ee31b264f6102709dc145cf37b55,73e5af986eb3ea165f71bbb54ebfad37"}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[]}},"_type":"markdown","_id":"content:docs:core-tech:Laser-BEAM-commands.md","_source":"content","_file":"docs/core-tech/Laser-BEAM-commands.md","_extension":"md"},{"_path":"/docs/core-tech/lelantus-cli-(historical-below-v6.0)","_dir":"core-tech","_draft":false,"_partial":false,"_locale":"","title":"Lelantus CLI (historical, Below V60)","description":"","body":{"type":"root","children":[{"type":"element","tag":"h2","props":{"id":"historical-notice"},"children":[{"type":"text","value":"Historical notice"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This document is valid for version below v6.0 and is retained only for historical reasons. For v6.0+ refer the "},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/wiki/Lelantus-CLI","rel":["nofollow"]},"children":[{"type":"text","value":"Lelantus CLI"}]},{"type":"text","value":" page."}]},{"type":"element","tag":"h2","props":{"id":"overview"},"children":[{"type":"text","value":"Overview"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Conceptually, Lelantus is a mean which allows to avoid UXTO linkability in transactions graph. To make UTXOs unlinked user should insert regular BEAM UTXO into "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"shielded pool"}]},{"type":"text","value":", converting these UTXOs into "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"shielded UTXOs"}]},{"type":"text","value":" and then, after some time extract them back as "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"unlinked"}]},{"type":"text","value":" UTXOs. "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Shielded UTXO"}]},{"type":"text","value":" belonging to the wallet could be detected by the node with owner key (as regular utxo), and the user can use this info to extract these coins back.\nWe are trying to hide the details of this process from the user, extracting from the "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"shielded pool"}]},{"type":"text","value":" is performed automatically when user sends beams, it influences the fee, but the user shouldn't think about unlinking."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"To send BEAMs through Lelantus we introduced three types of addresses:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"offline"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"max privacy"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"public offline"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"All of these addresses could be used with "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"send"}]},{"type":"text","value":" command and should be passed via "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-r"}]},{"type":"text","value":" parameter"}]},{"type":"element","tag":"h3","props":{"id":"offline-address"},"children":[{"type":"text","value":"Offline address"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"It allows sending BEAMs without interactions with the receiver. It is a very long base58 string, which contains embedded information for 10 payments(in UI), also it has SBBS address of the receiver, so, in the case when the receiver becomes online, the sender could get info for more payments."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"To generate this type of address with 10 embedded payments use"}]},{"type":"element","tag":"pre","props":{"code":"./beam-wallet get_address --offline=10\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"./beam-wallet get_address --offline=10\n"}]}]},{"type":"element","tag":"h3","props":{"id":"max-privacy-address"},"children":[{"type":"text","value":"Max privacy address"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This address allows to make only one payment, there is no ability to get more payments, and there is a guaranty that shielded coins received by sending on this address will be extracted in the correct moment to achieve the max privacy effect.\nTo generate a new max privacy address use"}]},{"type":"element","tag":"pre","props":{"code":"./beam-wallet get_address --max_privacy \n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"./beam-wallet get_address --max_privacy \n"}]}]},{"type":"element","tag":"h3","props":{"id":"public-offline-address"},"children":[{"type":"text","value":"Public offline address"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This type of address is intended to be used to receive donations. It is permanent, relatively short, and provides less privacy comparing with others, the sender has an ability to detect if the sent shielded coin has been spent.\nThis type of address could be obtained with the following command:"}]},{"type":"element","tag":"pre","props":{"code":"./beam-wallet get_address --public_offline \n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"./beam-wallet get_address --public_offline \n"}]}]},{"type":"element","tag":"h2","props":{"id":"offline-payments"},"children":[{"type":"text","value":"Offline payments"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"With Lelantus we are able to without need to be online, this is also known as one-side payments. To make them we need to accomplish the following steps:"}]},{"type":"element","tag":"h3","props":{"id":"receiver"},"children":[{"type":"text","value":"Receiver"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Receiver have to generate a token with the needed quantity of vouchers (allowed number of payments)"},{"type":"element","tag":"pre","props":{"code":"./beam-wallet get_address --offline=3 \n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"./beam-wallet get_address --offline=3 \n"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Send this token to the sender, and go offline"}]}]},{"type":"element","tag":"h3","props":{"id":"sender"},"children":[{"type":"text","value":"Sender"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Sender can use the received token to make payments as many times as many vouchers this token has.\n"},{"type":"element","tag":"pre","props":{"code":"./beam_wallet insert_to_pool -r <token> -n <node address> -a <amount> -f <fee>\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"./beam_wallet insert_to_pool -r <token> -n <node address> -a <amount> -f <fee>\n"}]}]}]}]},{"type":"element","tag":"h3","props":{"id":"receiver-1"},"children":[{"type":"text","value":"Receiver"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Receiver after a while should check if he has "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"shielded UTXOs"}]},{"type":"element","tag":"pre","props":{"code":"./beam_wallet info\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"./beam_wallet info\n"}]}]},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"the shielded coins has type "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"shld"}]},{"type":"element","tag":"pre","props":{"code":"|                                                ID |           BEAM |          GROTH | Maturity           | Status               | Type     |\n                                               14724               34                0   95849                [Spent]                shld\n                                               14725                7                0   95873                [Spent]                shld\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"|                                                ID |           BEAM |          GROTH | Maturity           | Status               | Type     |\n                                               14724               34                0   95849                [Spent]                shld\n                                               14725                7                0   95873                [Spent]                shld\n"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Also a new transaction record should appear with status "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"received max privacy"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"received offline"}]},{"type":"text","value":" or "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"received public offline"}]},{"type":"text","value":", depending od what address type was used"},{"type":"element","tag":"pre","props":{"code":"./beam_wallet info --tx_history\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"./beam_wallet info --tx_history\n"}]}]},{"type":"element","tag":"pre","props":{"code":"2020.11.14 12:52:22    incoming                                     5   received offline        c714875164c8444cb12f90c4353fa1f6\n2020.10.30 18:13:22    incoming                                     1   received max privacy    7a6dbf11fa6649e39992c41c349ab6ad\n2020.10.30 17:57:22    incoming                                     4   received max privacy    d5f1b5acee474b4cb187321431040306\n2020.10.30 11:15:22    incoming                                     2   received public offline\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"2020.11.14 12:52:22    incoming                                     5   received offline        c714875164c8444cb12f90c4353fa1f6\n2020.10.30 18:13:22    incoming                                     1   received max privacy    7a6dbf11fa6649e39992c41c349ab6ad\n2020.10.30 17:57:22    incoming                                     4   received max privacy    d5f1b5acee474b4cb187321431040306\n2020.10.30 11:15:22    incoming                                     2   received public offline\n"}]}]}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"historical-notice","depth":2,"text":"Historical notice"},{"id":"overview","depth":2,"text":"Overview","children":[{"id":"offline-address","depth":3,"text":"Offline address"},{"id":"max-privacy-address","depth":3,"text":"Max privacy address"},{"id":"public-offline-address","depth":3,"text":"Public offline address"}]},{"id":"offline-payments","depth":2,"text":"Offline payments","children":[{"id":"receiver","depth":3,"text":"Receiver"},{"id":"sender","depth":3,"text":"Sender"},{"id":"receiver-1","depth":3,"text":"Receiver"}]}]}},"_type":"markdown","_id":"content:docs:core-tech:Lelantus-CLI-(historical,-below-v6.0).md","_source":"content","_file":"docs/core-tech/Lelantus-CLI-(historical,-below-v6.0).md","_extension":"md"},{"_path":"/docs/core-tech/lelantus-cli","_dir":"core-tech","_draft":false,"_partial":false,"_locale":"","title":"Lelantus CLI","description":"","body":{"type":"root","children":[{"type":"element","tag":"h2","props":{"id":"v60-changes"},"children":[{"type":"text","value":"V6.0 Changes"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Starting from v6.0"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"CLI "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"get_address --offline"}]},{"type":"text","value":" switch is renamed to "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--offline_count"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"default address generated by the UI is an offline address that includes 1 offline voucher (enables 1 offline payment). This address is equivalent to the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"get_address --ofline_count 1"}]},{"type":"text","value":" in CLI"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"all "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"offline"}]},{"type":"text","value":" addresses by default trigger an online regular transaction if used in CLI "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"send"}]},{"type":"text","value":" without the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--offline"}]},{"type":"text","value":" switch"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"to make an offline payment via the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"send"}]},{"type":"text","value":" command with the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"offline"}]},{"type":"text","value":" address the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--offline"}]},{"type":"text","value":" switch should be added"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Text below includes the changes described in this section. For CLI instructions before v6.0 refer the "},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/wiki/Lelantus-CLI-(v6.0-)","rel":["nofollow"]},"children":[{"type":"text","value":"Lelantus CLI Historical"}]},{"type":"text","value":" page."}]},{"type":"element","tag":"h2","props":{"id":"overview"},"children":[{"type":"text","value":"Overview"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Conceptually, Lelantus is a mean which allows to avoid UXTO linkability in transactions graph. To make UTXOs unlinked user should insert regular BEAM UTXO into "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"shielded pool"}]},{"type":"text","value":", converting these UTXOs into "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"shielded UTXOs"}]},{"type":"text","value":" and then, after some time extract them back as "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"unlinked"}]},{"type":"text","value":" UTXOs. "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Shielded UTXO"}]},{"type":"text","value":" belonging to the wallet could be detected by the node with owner key (as regular utxo), and the user can use this info to extract these coins back.\nWe are trying to hide the details of this process from the user, extracting from the "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"shielded pool"}]},{"type":"text","value":" is performed automatically when user sends beams, it influences the fee, but the user shouldn't think about unlinking."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"To send BEAMs through Lelantus we introduced three types of addresses:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"offline"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"max privacy"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"public offline"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"All of these addresses could be used with "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"send"}]},{"type":"text","value":" command and should be passed via "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-r"}]},{"type":"text","value":" parameter"}]},{"type":"element","tag":"h3","props":{"id":"offline-address"},"children":[{"type":"text","value":"Offline address"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"It allows sending BEAMs without interactions with the receiver. It is a very long base58 string, which contains embedded information for 10 payments(in UI), also it has SBBS address of the receiver, so, in the case when the receiver becomes online, the sender could get info for more payments."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"To generate this type of address with 10 embedded payments use"}]},{"type":"element","tag":"pre","props":{"code":"./beam-wallet get_address --offline_count=10\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"./beam-wallet get_address --offline_count=10\n"}]}]},{"type":"element","tag":"h3","props":{"id":"max-privacy-address"},"children":[{"type":"text","value":"Max privacy address"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This address allows to make only one payment, there is no ability to get more payments, and there is a guaranty that shielded coins received by sending on this address will be extracted in the correct moment to achieve the max privacy effect.\nTo generate a new max privacy address use"}]},{"type":"element","tag":"pre","props":{"code":"./beam-wallet get_address --max_privacy \n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"./beam-wallet get_address --max_privacy \n"}]}]},{"type":"element","tag":"h3","props":{"id":"public-offline-address"},"children":[{"type":"text","value":"Public offline address"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This type of address is intended to be used to receive donations. It is permanent, relatively short, and provides less privacy comparing with others, the sender has an ability to detect if the sent shielded coin has been spent.\nThis type of address could be obtained with the following command:"}]},{"type":"element","tag":"pre","props":{"code":"./beam-wallet get_address --public_offline \n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"./beam-wallet get_address --public_offline \n"}]}]},{"type":"element","tag":"h2","props":{"id":"offline-payments"},"children":[{"type":"text","value":"Offline payments"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"With Lelantus we are able to without need to be online, this is also known as one-side payments. To make them we need to accomplish the following steps:"}]},{"type":"element","tag":"h3","props":{"id":"receiver"},"children":[{"type":"text","value":"Receiver"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Receiver have to generate a token with the needed quantity of vouchers (allowed number of payments)"},{"type":"element","tag":"pre","props":{"code":"./beam-wallet get_address --offline_count=3 \n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"./beam-wallet get_address --offline_count=3 \n"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Send this token to the sender, and go offline"}]}]},{"type":"element","tag":"h3","props":{"id":"sender"},"children":[{"type":"text","value":"Sender"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Sender can use the received token with the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--offline"}]},{"type":"text","value":" switch to make payments as many times as many vouchers this token has. If the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--ofline"}]},{"type":"text","value":" switch is not specified, regular online transaction would be executed"},{"type":"element","tag":"pre","props":{"code":"./beam_wallet send -r <token> --offline -n <node address> -a <amount> -f <fee>\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"./beam_wallet send -r <token> --offline -n <node address> -a <amount> -f <fee>\n"}]}]}]}]},{"type":"element","tag":"h3","props":{"id":"receiver-1"},"children":[{"type":"text","value":"Receiver"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Receiver after a while should check if he has "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"shielded UTXOs"}]},{"type":"element","tag":"pre","props":{"code":"./beam_wallet info\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"./beam_wallet info\n"}]}]},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"the shielded coins has type "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"shld"}]},{"type":"element","tag":"pre","props":{"code":"|    ID |           BEAM |          GROTH | Maturity           | Status               | Type     |\n   14724               34                0   95849                [Spent]                shld\n   14725                7                0   95873                [Spent]                shld\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"|    ID |           BEAM |          GROTH | Maturity           | Status               | Type     |\n   14724               34                0   95849                [Spent]                shld\n   14725                7                0   95873                [Spent]                shld\n"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Also a new transaction record should appear with status "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"received max privacy"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"received offline"}]},{"type":"text","value":" or "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"received public offline"}]},{"type":"text","value":", depending od what address type was used"},{"type":"element","tag":"pre","props":{"code":"./beam_wallet info --tx_history\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"./beam_wallet info --tx_history\n"}]}]},{"type":"element","tag":"pre","props":{"code":"2020.11.14 12:52:22    incoming                                     5   received offline        c714875164c8444cb12f90c4353fa1f6\n2020.10.30 18:13:22    incoming                                     1   received max privacy    7a6dbf11fa6649e39992c41c349ab6ad\n2020.10.30 17:57:22    incoming                                     4   received max privacy    d5f1b5acee474b4cb187321431040306\n2020.10.30 11:15:22    incoming                                     2   received public offline\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"2020.11.14 12:52:22    incoming                                     5   received offline        c714875164c8444cb12f90c4353fa1f6\n2020.10.30 18:13:22    incoming                                     1   received max privacy    7a6dbf11fa6649e39992c41c349ab6ad\n2020.10.30 17:57:22    incoming                                     4   received max privacy    d5f1b5acee474b4cb187321431040306\n2020.10.30 11:15:22    incoming                                     2   received public offline\n"}]}]}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"v60-changes","depth":2,"text":"V6.0 Changes"},{"id":"overview","depth":2,"text":"Overview","children":[{"id":"offline-address","depth":3,"text":"Offline address"},{"id":"max-privacy-address","depth":3,"text":"Max privacy address"},{"id":"public-offline-address","depth":3,"text":"Public offline address"}]},{"id":"offline-payments","depth":2,"text":"Offline payments","children":[{"id":"receiver","depth":3,"text":"Receiver"},{"id":"sender","depth":3,"text":"Sender"},{"id":"receiver-1","depth":3,"text":"Receiver"}]}]}},"_type":"markdown","_id":"content:docs:core-tech:Lelantus-CLI.md","_source":"content","_file":"docs/core-tech/Lelantus-CLI.md","_extension":"md"},{"_path":"/docs/core-tech/lelantus-mw","_dir":"core-tech","_draft":false,"_partial":false,"_locale":"","title":"Lelantus MW","description":"Linkability is the Achilles' heel of MW.","body":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Linkability is the Achilles' heel of MW."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Beam has several "},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/wiki/Transaction-graph-obfuscation","rel":["nofollow"]},"children":[{"type":"text","value":"improvements"}]},{"type":"text","value":" to the original MW to obfuscate the transaction graph. Now we're building a hybrid, of MW and Lelantus, which should be a huge step forward in this direction."}]},{"type":"element","tag":"h2","props":{"id":"disclaimer"},"children":[{"type":"text","value":"Disclaimer"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The "},{"type":"element","tag":"a","props":{"href":"https://lelantus.io/","rel":["nofollow"]},"children":[{"type":"text","value":"Lelantus protocol"}]},{"type":"text","value":" is the work of Zcoin's cryptographer Aram Jivanyan as part of its research to improve its privacy protocol."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Our design and implementation are based on the publicly-available Lelantus scientific paper. All our code was developed from scratch based on this paper alone."}]},{"type":"element","tag":"h1","props":{"id":"our-design"},"children":[{"type":"text","value":"Our design"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"To fit our needs and utilize the full power of MW we made several modifications to the original protocol."}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Instead of focusing on transaction types described in the paper (Mint, Spend, Joint-Split) we implement this in terms of "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"primitives"}]},{"type":"text","value":", which can be combined and used in various transaction types."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Minted/spent values are never revealed."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"We use other technique to prove the transaction balance. We removed the balance proof from the original Lelantus protocol, hence it's now closer to the original Sigma protocol by Jens Groth."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"MW blockchain consists of the following objects (primitives):"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Inputs - references to existing UTXOs, that are being spent"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Outputs"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Transaction kernels"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Our design, which we call Lelantus-MW, keeps this structure, and the Balance-to-zero principle also holds.\nAll those 3 object types, however, are modified to support Lelantus."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"We use the following notation in the code:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"G"}]},{"type":"text","value":" - generator (nothing-up-my-sleeve EC point) multiplied by UTXO blinding factor"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"H"}]},{"type":"text","value":" - generator multiplied by UTXO Value"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"J"}]},{"type":"text","value":" - generator multiplied by UTXO 2"},{"type":"element","tag":"sup","props":{},"children":[{"type":"text","value":"nd"}]},{"type":"text","value":" blinding factor (i.e. double-blinded commitment)."}]}]},{"type":"element","tag":"h2","props":{"id":"outputs"},"children":[{"type":"text","value":"Outputs"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Normal MW output consists of a Pedersen commitment (EC point) and the Bulletproof signature. After validation it's added to the UTXO set, and later can be referenced as inputs in consequent blocks/transactions."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The modified output, used in Lelantus, is called "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Shielded"}]},{"type":"text","value":" output. Unlike normal output, shielded output is double-blinded, hence its bulletproof is (slightly) extended."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"After validation it's added to the Shielded pool (rather than UTXO set)."}]},{"type":"element","tag":"h2","props":{"id":"kernels"},"children":[{"type":"text","value":"Kernels"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"As we said, shielded outputs are double-blinded. Hence, in order to keep the balance-to-zero principle, transaction kernels can optionally contain the 2"},{"type":"element","tag":"sup","props":{},"children":[{"type":"text","value":"nd"}]},{"type":"text","value":" blinding factor excess as well. So that transactions are allowed to have excess of both blinding factors, but not the value (obviously)."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Such kernels are signed by "},{"type":"element","tag":"u","props":{},"children":[{"type":"text","value":"generalized Schnorr's signature"}]},{"type":"text","value":" (rather than normal Schnorr's signature), to prove that their revealed commitment is indeed of the form "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"k*G + s*J"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"b","props":{},"children":[{"type":"text","value":"Note:"}]},{"type":"text","value":" the generalized Schnorr's signature does not reveal which part of the kernel commitment is due to each of the blinding factors. I.e. the attacker can't split it into "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"k*G"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"s*J"}]},{"type":"text","value":". This is important, as the 2"},{"type":"element","tag":"sup","props":{},"children":[{"type":"text","value":"nd"}]},{"type":"text","value":" blinding factor (a.k.a. serial number) eventually gets revealed, there is still no way to identify its corresponding transaction kernel."}]},{"type":"element","tag":"h2","props":{"id":"inputs"},"children":[{"type":"text","value":"Inputs"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Normal inputs are just commitments (EC points) that correspond to previous outputs that must be in the current UTXO set."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Shielded inputs, in addition to the commitment, have the "},{"type":"element","tag":"u","props":{},"children":[{"type":"text","value":"Spend Proof"}]},{"type":"text","value":", which proves that:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"A valid shielded element is being-spent"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"No double-spend"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The specified input commitment encodes the value equal to the one being spent (with different blinding factor though)."}]}]},{"type":"element","tag":"h1","props":{"id":"spend-proof"},"children":[{"type":"text","value":"Spend Proof"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In the original Lelantus paper the proof idea is the following:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Convert the revealed public Spend Key into serial number "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"s"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Subtract (methodically) "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"s*J"}]},{"type":"text","value":" from each commitment in the referenced anonymity set (a.k.a. cmList)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Prove the knowledge of the opening of one of the elements in the form of "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"k*G + v*H"}]},{"type":"text","value":", i.e. without the serial number"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Additionally prove that the revealed being-extracted value corresponds to the value of that element\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"For this the original Sigma protocol was modified"}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"We modified it into the following:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Convert the revealed public Spend Key into serial number "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"s"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Prove that the revealed commitment "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"C"}]},{"type":"text","value":" is of the form "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"k*G + v*H"}]},{"type":"text","value":", i.e. does not conceal additional serial number"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Subtract (methodically) "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"s*J + C"}]},{"type":"text","value":" from each commitment in the referenced anonymity set"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Prove the knowledge of the opening of one of the elements in the form of "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"k*G"}]},{"type":"text","value":" only, i.e. without the serial number or additional value"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In such a scheme there is no need to provide additional balance proof, since the value of extracted commitment should be the same as of the element being-spent. Because of this there is also no need to prove the value is non-negative (by bulletproof), as it was already proven when the element was added to the shielded pool."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"So, the whole Spend proof, in addition to the commitment being-extracted, contains the following:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Generalized Schnorr's proof that this commitment is of the form "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"k*G + v*H"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Public spend key, and the whole spend proof is signed by the appropriate private key"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Standard 1-out-of-N Sigma protocol in terms of a single "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"G"}]},{"type":"text","value":"-generator only."}]}]},{"type":"element","tag":"h2","props":{"id":"compared-to-original-lelantus-paper"},"children":[{"type":"text","value":"Compared to original Lelantus paper"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"What is similar:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Shielded outputs are double-blinded, with the appropriate (extended) bulletproof signature"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"To spend a shielded element the public Spend Key must be revealed, and the Spend Proof must be signed by the appropriate private key"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Spend proof is also based on the 1-out-of-N Sigma protocol (by Jens Groth)"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"What is different:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Rather than specifying transactions, Lelantus-MW is formulated in terms of inputs and outputs (i.e. MW-style). Hence:\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Just a single type of shielded input and output primitive is enough"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Transactions are easily merged (as usual)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Despite better size and verification time, we don't implement multi-input spend proofs.\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Limiting all the inputs to the same anonymity set seems to be practically restricting"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"This also potentially reveals their linkability"}]}]}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Added/spent values are never revealed"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Separate balance proof is not required: it's an inherent part of each MW block/transaction."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Spend proof is improved\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Implemented in terms of classical (unmodified) Sigma protocol"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Significantly smaller size"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Better verification time\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Significant in batch mode, when all the proofs refer to the same anonymity set"}]}]}]}]}]}]},{"type":"element","tag":"h1","props":{"id":"direct-anonymous-payments"},"children":[{"type":"text","value":"Direct anonymous payments"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In classical MW payments are interactive, and this is unavoidable: payment means creating an UTXO for someone else, however in order to create such an UTXO and its bulletproof the creator needs its blinding factor, hence it owns it, means it must be the payee."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"We "},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/wiki/One-side-payments","rel":["nofollow"]},"children":[{"type":"text","value":"designed"}]},{"type":"text","value":" a mechanism to allow one-side payments after initial setup (currently fully supported in Node, but not in the wallet), however it's less anonymous, and the functionality is limited."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Lelantus doesn't have this limitation. It's possible to create a shielded output, such that the creator itself can't spend (thanks to the idea with Spend pubkey). What's remaining is the \"coloring\" scheme of the shielded output, i.e. how to make it distinguishable to the payee only, but not to others, including those that pay to the same payee."}]},{"type":"element","tag":"h2","props":{"id":"standard-bulletproof-coloring-scheme"},"children":[{"type":"text","value":"Standard bulletproof coloring scheme"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"(based on the coloring scheme used by secp256k1 library)"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Our standard UTXO coloring scheme allows to embed an arbitrary 255-bits long description. In practice we use 24-byte description, which we call "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Coin ID"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"During bulletproof construction various nonces are generated. Those nonces are generated in a deterministic way from the public (visible) UTXO commitment, and a secret "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"coloring seed"}]},{"type":"text","value":" (not necessarily the one used to generate the blinding factor)."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In particular the following is performed"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"α - generated nonce"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"ρ - generated nonce"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"x - challenge"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Revealed: "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"μ = α + ρ*x"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In order to embed meta-data into UTXO, the creator converts it into a scalar "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"β"}]},{"type":"text","value":" (possible for every 255-bit data), and adds it to the originally-generated nonce "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"α"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"So, the revealed "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"μ"}]},{"type":"text","value":" is calculated as: "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"μ = α + β + ρ*x"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In order to recognize such an UTXO one needs the same secret "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"coloring seed"}]},{"type":"text","value":". It generates the same "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"α"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"ρ"}]},{"type":"text","value":", and then recovers "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"β"}]},{"type":"text","value":" and the embedded parameters:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The recognition process goes as following:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Generate "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"α"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"ρ"}]},{"type":"text","value":" from the UTXO commitment and the "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"coloring seed"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Calculate the challenge "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"x"}]},{"type":"text","value":" (from the revealed bulletproof transcript)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Calculate "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"β = μ - α - ρ*x"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Decode the "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Coin ID"}]},{"type":"text","value":", see if this makes sense (in particular it may have only 24 trailing non-zero bytes)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Recreate the UTXO commitment from the master secret and the extracted "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Coin ID"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Check if the obtained commitment is correct"}]}]},{"type":"element","tag":"h2","props":{"id":"advanced-coloring"},"children":[{"type":"text","value":"Advanced coloring"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"So far the above scheme is suitable for coloring the shielded double-blind UTXO, but it's not anonymous: anyone with the same "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"coloring seed"}]},{"type":"text","value":" can identify such an UTXO"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"To overcome this limitation we use an additional step. We'll encode the embedded meta-data using the Diffie-Hellman encoding scheme."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The payee creates a private/public key pair, which we call "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"encoding key"}]},{"type":"text","value":". The "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"encoding pubkey"}]},{"type":"text","value":" is given to the payer, along with the "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"coloring seed"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"During the bulletproof construction, among other things, the creator reveals the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"T1"}]},{"type":"text","value":" commitment, which is used to hide the blinding factors. In case of double-blinded bulletproof it's calculated as:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"T1 = n1 * G + n2 * J"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"n1"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"n2"}]},{"type":"text","value":" - nonces, generated deterministically from the UTXO commitment and the "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"coloring seed"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Now we'll add another nonce to this:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"T1 = (n1 + n3) * G + n2 + J"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"n3"}]},{"type":"text","value":" - "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"random"}]},{"type":"text","value":" nonce, i.e. can't be recovered from the "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"coloring seed"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"So, using the "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"coloring seed"}]},{"type":"text","value":" it's not possible to recover "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"n3"}]},{"type":"text","value":", but it's possible to obtain "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"n3 * G"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Finally, both payer and payee calculate the same secret:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Payer:\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"n3"}]},{"type":"text","value":" * "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"encoding pubkey"}]}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Payee:\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"n3 * G"}]},{"type":"text","value":" * "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"encoding private key"}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Finally the scheme goes as following:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Payer:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Generate random nonce "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"n3"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Calculate shared secret point "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"S = n3 * encoding pubkey"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Convert X-coordinate of "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"S"}]},{"type":"text","value":" to a scalar "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"γ"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"If it's too large and can't be converted (highly unlikely) - retry with different nonce"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Add "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"γ"}]},{"type":"text","value":" to the encoded meta-data "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"β"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Add "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"n3"}]},{"type":"text","value":" to "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"n1"}]},{"type":"text","value":" for the rest of the protocol"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The rest is straight-forward"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Payee:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Generate the nonces "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"n1"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"n2"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Calculate the \"unmodified\" "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"T1"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Subtract it from the revealed "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"T1"}]},{"type":"text","value":" to obtain "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"n3 * G"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Calculate shared secret point "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"n3 * G * encoding private key"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Convert X-coordinate of "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"S"}]},{"type":"text","value":" to a scalar "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"γ"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"If it's too large - skip the rest"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Recover encoded meta-data "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"β"}]},{"type":"text","value":" (as usual)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Subtract "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"γ"}]},{"type":"text","value":" from "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"β"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The rest is straight-forward"}]}]},{"type":"element","tag":"h3","props":{"id":"what-about-shielded-inputs"},"children":[{"type":"text","value":"What about shielded inputs?"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"They are identified by the revealed Spend pubkey. The payee should track all the Spend pubkeys for shielded outputs it detected, and realize the spending once it sees the shielded input from the same Spend pubkey."}]},{"type":"element","tag":"h3","props":{"id":"payee-address"},"children":[{"type":"text","value":"Payee address"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"So far the payer needs the "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"coloring seed"}]},{"type":"text","value":" and the "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"encoding pubkey"}]},{"type":"text","value":". But they don't have to be different: a payee can provide the "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"encoding pubkey"}]},{"type":"text","value":", and the "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"coloring seed"}]},{"type":"text","value":" may be generated from it in a deterministic way.\nMoreover, since the "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"encoding pubkey"}]},{"type":"text","value":" is fully controlled by the payee - it can always make sure its "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Y"}]},{"type":"text","value":"-coordinate is odd/even (by just negating the private key), hence providing only X-coordinate (32 bytes) is enough."}]},{"type":"element","tag":"h3","props":{"id":"multiple-address"},"children":[{"type":"text","value":"Multiple address?"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Although in the above scheme a payer can not identify payments of others to the same payee, it may still be necessary to have multiple addresses. For instance, if payers share information, it may be necessary to conceal the fact that they pay to the same payee."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The above scheme is possible to extend to multiple addresses, they payee can generate arbitrary number of addresses. However there is no unified way for the payee to identify the payments: it needs to scan all the shielded outputs by all its generated addresses."}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"disclaimer","depth":2,"text":"Disclaimer"},{"id":"outputs","depth":2,"text":"Outputs"},{"id":"kernels","depth":2,"text":"Kernels"},{"id":"inputs","depth":2,"text":"Inputs"},{"id":"compared-to-original-lelantus-paper","depth":2,"text":"Compared to original Lelantus paper"},{"id":"standard-bulletproof-coloring-scheme","depth":2,"text":"Standard bulletproof coloring scheme"},{"id":"advanced-coloring","depth":2,"text":"Advanced coloring","children":[{"id":"what-about-shielded-inputs","depth":3,"text":"What about shielded inputs?"},{"id":"payee-address","depth":3,"text":"Payee address"},{"id":"multiple-address","depth":3,"text":"Multiple address?"}]}]}},"_type":"markdown","_id":"content:docs:core-tech:Lelantus-MW.md","_source":"content","_file":"docs/core-tech/Lelantus-MW.md","_extension":"md"},{"_path":"/docs/core-tech/lightning-network","_dir":"core-tech","_draft":false,"_partial":false,"_locale":"","title":"Lightning Network","description":"","body":{"type":"root","children":[{"type":"element","tag":"h2","props":{"id":"aka-laser-beam"},"children":[{"type":"text","value":"a.k.a. Laser Beam"}]},{"type":"element","tag":"h1","props":{"id":"what-is-lightning-network"},"children":[{"type":"text","value":"What is Lightning Network"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"As in traditional blockchains (btc-alike), in Beam lightning network two (or more) users lock some funds, and then effectively transfer them "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"off-chain"}]},{"type":"text","value":". This has the following advantages:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Instant. No need to wait for transaction confirmation (after initial setup)."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"No transaction fee."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Hidden. The information about intermediate transactions is never broadcasted. The number of off-chain transactions, frequency and amounts are never revealed."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"All the transfers are performed in the context of the "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Lightning channel"}]},{"type":"text","value":". Its lifetime consists of the following:"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Channel Open\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Users prepare and broadcast the transaction that consumes their inputs, and create a multi-signed output, which can be spent collectively."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"At this point each user "},{"type":"element","tag":"u","props":{},"children":[{"type":"text","value":"already has a refund transaction"}]},{"type":"text","value":", which can be used to get the funds back."}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Off-chain funds transfers (arbitrary number of times).\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Users agree on another partition of the locked funds, and generate newer refund transactions, with appropriate amounts to each, which is effectively equivalent to the funds transfer."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"u","props":{},"children":[{"type":"text","value":"Older refund transactions are revoked"}]},{"type":"text","value":" (more about this later). Nothing is broadcasted to the network."}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Channel close.\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Each user any moment can broadcast the most recent refund transaction, to get the funds back."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"All the users notice this, and the channel is considered closed."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"In case the users cooperate and perform a "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"graceful"}]},{"type":"text","value":" channel closure - it'd be faster, and with less fee (more about this later)."}]}]}]}]},{"type":"element","tag":"h1","props":{"id":"implementation-in-beam"},"children":[{"type":"text","value":"Implementation in Beam"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Since there are no scripts in MW, all the relevant functionality is implemented within the context of the transaction negotiation. This is called "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"scriptless scripts"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The actual negotiation flow is somewhat complex, but logically it can be split into separate "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"building blocks"}]},{"type":"text","value":"."}]},{"type":"element","tag":"h3","props":{"id":"multisig-multisigned-utxo"},"children":[{"type":"text","value":"MultiSig - multisigned UTXO"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"An UTXO created by several users, whose blinding factor consists of their blinding factor. Such an UTXO looks indistinguishable from others. The following operations can only be done collectively by all the users:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Creating the UTXO (commitment + bulletproof)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Transaction that creates it (has as an output)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Transaction that spends it (has as an input)"}]}]},{"type":"element","tag":"h3","props":{"id":"relative-timelock"},"children":[{"type":"text","value":"Relative timelock"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This feature enables to create 2 dependent transactions, whereas the second one becomes valid only after the first one is already accepted in a block, and the block is mature enough. Means - there is a minimum enforced delay between the transactions.\nIt requires a special processing on the node side, and will be available after the planned Hard Fork 1."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Technically each kernel may optionally contain the Relative Lock info, which consists of:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Kernel ID (hash) being referenced"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Minimum maturity (height difference)"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"When such a kernel is encountered the node verifies if indeed the referenced kernel exists in the blockchain, and is mature enough."}]},{"type":"element","tag":"h3","props":{"id":"refund-procedure"},"children":[{"type":"text","value":"Refund procedure"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Refund procedure consists of 2 transactions, which consume the locked funds and create the agreed user outputs."}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"MultiSig.0 -> MultiSig.N"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"MultiSig.N -> Outputs.N\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Relatively time-locked w.r.t. transaction (1)."}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"whereas "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"MultiSig.0"}]},{"type":"text","value":" represents the funds locked in the channel, "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"MultiSig.N"}]},{"type":"text","value":" is an intermediate multisigned UTXO, and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Outputs.N"}]},{"type":"text","value":" are all the outputs that users are supposed to get by the refund."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The transaction (2) is time-locked w.r.t. transaction (1). Means, after (1) was broadcasted, the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"MultiSig.N"}]},{"type":"text","value":" becomes visible in the blockchain, but the transaction (2) can't be used immediately.\nAs we'll see this is important. In case a malicious user would try to use not the most recently agreed refund procedure, it gives a time window for the affected user to respond."}]},{"type":"element","tag":"h3","props":{"id":"refund-revocation"},"children":[{"type":"text","value":"Refund revocation"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"As we said, there is a way to revoke the refund procedure. This should prevent malicious users from trying to use an older refund procedure after a newer agreement was set."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In Beam in order to revoke the N-th refund procedure, the user "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"reveals its blinding factor"}]},{"type":"text","value":" that was used for "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"MultiSig.N"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Once the blinding factor was revealed the user won't be able to use the refund procedure. If it does, then after transaction (1) the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"MultiSig.N"}]},{"type":"text","value":" becomes visible in the blockchain, and the peer can consume it immediately, because it knows the overall blinding factor. Just build and broadcast a transaction immediately that takes it as an input, and creates an output that belongs solely to it, i.e. punish."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This is why relative timelock is important."}]},{"type":"element","tag":"h3","props":{"id":"multi-user-refund-procedure"},"children":[{"type":"text","value":"Multi-user Refund procedure"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Now let's see how 2 users (A)lice and (B)ob build and use their refund procedures. We'll study the case for 2 users, but it can easily be generalized for arbitrary number of users."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"To build N-th refund procedure (A) and (B) negotiate to build the following transactions:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Refund.N.A.1\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"MultiSig.0 -> MultiSig.N.A"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Refund.N.A.2\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"MultiSig.N.A -> Outputs.N"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Refund.N.B.1\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"MultiSig.0 -> MultiSig.N.B"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Refund.N.B.2\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"MultiSig.B.A -> Outputs.N"}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"So there are 4 transactions overall, all of them are built collectively. At the end "},{"type":"element","tag":"u","props":{},"children":[{"type":"text","value":"each user has its own refund procedure"}]},{"type":"text","value":", with different intermediate "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"MultiSig.N.X"}]},{"type":"text","value":", but the final "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Outputs.N"}]},{"type":"text","value":" are the same."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Note the following:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The transaction (1) of each refund procedure is kept "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"private"}]},{"type":"text","value":". Means - only (A) has the Refund.N.A.1, and only (B) has the Refund.N.B.1"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The transaction (2) of each refund procedure is "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"public"}]},{"type":"text","value":". Means - both (A) and (B) have Refund.N.A.2 and Refund.N.B.2"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The order of transaction building is important. Both (A) and (B) should "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"NOT"}]},{"type":"text","value":" complete their parts of transaction (1) for the peer, before they have the appropriate transaction (2).\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Otherwise a malicious user can just use the transaction (1) to lock the funds permanently."}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"So, the idea is that (A) and (B) have their own refund procedures, partly kept private. This separation is important, since in case they come to another agreement and create a newer refund procedures - they will need to "},{"type":"element","tag":"u","props":{},"children":[{"type":"text","value":"revoke"}]},{"type":"text","value":" the older ones, which means the appropriate blinding factors of "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"MultiSig.N.A"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"MultiSig.N.B"}]},{"type":"text","value":" must be revealed. As we already mentioned, using a compromised transaction (1) would lead to loss of funds. But, importantly, we must also guarantee that user that gets the revealed blinding factor can't initiate the compromised path on its own. This is the reason why the appropriate transactions (1) are private."}]},{"type":"element","tag":"h1","props":{"id":"lightning-channel-from-the-building-blocks"},"children":[{"type":"text","value":"Lightning channel from the building blocks."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Conceptually the lightning channel operates the following way:"}]},{"type":"element","tag":"h3","props":{"id":"channel-open"},"children":[{"type":"text","value":"Channel open"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Users agree on how much funds each of them locks."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Create the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"MultiSig.0"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Build "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Refund.1"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Create a transaction "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Inputs"}]},{"type":"text","value":" -> "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"MultiSig.0"}]},{"type":"text","value":" + "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Changes"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Wait for confirmation"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Of course the order is important. Users should not make (4) available before they have (3)."}]},{"type":"element","tag":"h3","props":{"id":"off-chain-funds-transfer"},"children":[{"type":"text","value":"Off-chain funds transfer"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Users agree on newer partition of the locked funds."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Negotiate to build "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Refund.N"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Revoke the previous "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Refund.N-1"}]}]}]},{"type":"element","tag":"h3","props":{"id":"graceful-channel-closure"},"children":[{"type":"text","value":"Graceful channel closure."}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Users agree to close the channel gracefully."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Create a transaction "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"MultiSig.0"}]},{"type":"text","value":" -> "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Outputs.N"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This scheme makes the withdrawal immediate. No timelocks are needed."}]},{"type":"element","tag":"h3","props":{"id":"one-side-channel-closure"},"children":[{"type":"text","value":"One-side channel closure."}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"User decides to invoke its refund procedure (in case there's no cooperation)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"User uses its latest refund procedure (all the others are revoked)."}]}]},{"type":"element","tag":"h3","props":{"id":"blockchain-status-monitoring-aka-watch-towers"},"children":[{"type":"text","value":"Blockchain status monitoring (a.k.a. watch towers)"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In addition to the voluntary actions, all the users should monitor the blockchain to detect if/when any of them made one-side actions.\nDepends on the agreed timelock (which is applied in all the relative locks of all the refund procedures) - the monitoring doesn't have to be for each new block. It can be once in many blocks as well."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Once a new block arrives and the user decides to check the status:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Does "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"MultiSig.0"}]},{"type":"text","value":" present?\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Yes - channel is open. No further actions."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"No\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Was the channel open already?\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"No - we're still opening it (waiting for the 1st tx)."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Yes - the channel is being closed!\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Find one of he "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"MultiSig.N"}]},{"type":"text","value":" that was created for the refund procedures."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Does it belong to the revoked refund?\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Yes - cheat attempt detected!!!\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Claim all the funds immediately."}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"No - valid withdrawal triggered\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Wait until the timelock expires"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Broadcast the appropriate transaction (2)"}]}]}]}]}]}]}]}]}]}]}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"code-design-minimizing-the-number-of-negotiation-roundtrips"},"children":[{"type":"text","value":"Code design - Minimizing the number of negotiation roundtrips."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"As we saw, each operation on the Lightning channel requires to prepare many different "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"building blocks"}]},{"type":"text","value":", with dependencies. Some are literally dependent on each other (some of their results are needed by others), whereas for some there are artificial order restrictions to prevent malicious users from doing harm."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Nevertheless, many such negotiations may run in parallel. At least partially, up to the point where their dependencies come into play."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"To allow this Beam code infrastructure allows the negotiations in terms of "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"primitives"}]},{"type":"text","value":", each is responsible for a well-defined functionality (such as creating a MultiSig, or a transaction), each has an interface to load/store the parameters and transfer the data to the peer.\nWhen those primitives are aggregated to create a more complex negotiation scheme - their inputs/outputs are \"re-routed\", to reflect their dependency."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"By such the code remains relatively not too complex (readable), the dependencies are visible and can be verified, whereas on the other hand the negotiations effectively run in parallel, and each action is performed in a minimum number of negotiation roundtrips."}]},{"type":"element","tag":"h1","props":{"id":"how-typical-negotiations-look"},"children":[{"type":"text","value":"How typical negotiations look"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Below are the real negotiations produced by our code."}]},{"type":"element","tag":"h3","props":{"id":"multisig"},"children":[{"type":"text","value":"MultiSig"}]},{"type":"element","tag":"pre","props":{"code":"    A -> B 115 bytes\n         Partial Commitment\n         Bulletproof T1,T2\n    B -> A 155 bytes\n         Partial Commitment\n         Bulletproof T1,T2\n         Bulletproof TauX\n    B done\n    A done\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"    A -> B 115 bytes\n         Partial Commitment\n         Bulletproof T1,T2\n    B -> A 155 bytes\n         Partial Commitment\n         Bulletproof T1,T2\n         Bulletproof TauX\n    B done\n    A done\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Overall 1 roundtrip, assuming both users get the commitment, but only A has the valid bulletproof"}]},{"type":"element","tag":"h3","props":{"id":"refund-one-sided"},"children":[{"type":"text","value":"Refund, one-sided"}]},{"type":"element","tag":"pre","props":{"code":"    A -> B 279 bytes\n         MultiSig.Partial Commitment\n         MultiSig.Bulletproof T1,T2\n         Tx-TLock.Excess Commitment\n         Tx-TLock.Nonce Commitment\n         Tx-Final.Excess Commitment\n         Tx-Final.Nonce Commitment\n    B -> A 1158 bytes\n         MultiSig.Partial Commitment\n         MultiSig.Bulletproof T1,T2\n         MultiSig.Bulletproof TauX\n         Tx-TLock.Excess Commitment\n         Tx-TLock.Nonce Commitment\n         Tx-TLock.Partial Kernel Signature\n         Tx-Final.Excess Commitment\n         Tx-Final.Nonce Commitment\n         Tx-Final.Partial Kernel Signature\n         Tx-Final.Partial Transaction\n    A -> B 925 bytes\n         Tx-Final.Partial Transaction\n    B -> A 52 bytes\n         Tx-TLock.Partial Transaction\n    B done\n    A done\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"    A -> B 279 bytes\n         MultiSig.Partial Commitment\n         MultiSig.Bulletproof T1,T2\n         Tx-TLock.Excess Commitment\n         Tx-TLock.Nonce Commitment\n         Tx-Final.Excess Commitment\n         Tx-Final.Nonce Commitment\n    B -> A 1158 bytes\n         MultiSig.Partial Commitment\n         MultiSig.Bulletproof T1,T2\n         MultiSig.Bulletproof TauX\n         Tx-TLock.Excess Commitment\n         Tx-TLock.Nonce Commitment\n         Tx-TLock.Partial Kernel Signature\n         Tx-Final.Excess Commitment\n         Tx-Final.Nonce Commitment\n         Tx-Final.Partial Kernel Signature\n         Tx-Final.Partial Transaction\n    A -> B 925 bytes\n         Tx-Final.Partial Transaction\n    B -> A 52 bytes\n         Tx-TLock.Partial Transaction\n    B done\n    A done\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Overall 2 roundtrips. Note that B delays the completion of "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Tx-TLock"}]},{"type":"text","value":" for A until it gets and validates the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Tx-Final"}]},{"type":"text","value":" from it."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Now let's see how the Lightning channel operations are negotiated."}]},{"type":"element","tag":"h2","props":{"id":"lightning-channel-open"},"children":[{"type":"text","value":"Lightning channel open"}]},{"type":"element","tag":"pre","props":{"code":"    A -> B 591 bytes\n         MultiSig.Partial Commitment\n         MultiSig.Bulletproof T1,T2\n         Tx-Open.Excess Commitment\n         Tx-Open.Nonce Commitment\n         Exit-A.MultiSig.Partial Commitment\n         Exit-A.MultiSig.Bulletproof T1,T2\n         Exit-A.Tx-TLock.Excess Commitment\n         Exit-A.Tx-TLock.Nonce Commitment\n         Exit-A.Tx-Final.Excess Commitment\n         Exit-A.Tx-Final.Nonce Commitment\n         Exit-B.MultiSig.Partial Commitment\n         Exit-B.MultiSig.Bulletproof T1,T2\n    B -> A 1754 bytes\n         MultiSig.Partial Commitment\n         MultiSig.Bulletproof T1,T2\n         MultiSig.Bulletproof TauX\n         Tx-Open.Excess Commitment\n         Tx-Open.Nonce Commitment\n         Tx-Open.Partial Kernel Signature\n         Exit-A.MultiSig.Partial Commitment\n         Exit-A.MultiSig.Bulletproof T1,T2\n         Exit-A.MultiSig.Bulletproof TauX\n         Exit-A.Tx-TLock.Excess Commitment\n         Exit-A.Tx-TLock.Nonce Commitment\n         Exit-A.Tx-TLock.Partial Kernel Signature\n         Exit-A.Tx-Final.Excess Commitment\n         Exit-A.Tx-Final.Nonce Commitment\n         Exit-A.Tx-Final.Partial Kernel Signature\n         Exit-A.Tx-Final.Partial Transaction\n         Exit-B.MultiSig.Partial Commitment\n         Exit-B.MultiSig.Bulletproof T1,T2\n         Exit-B.MultiSig.Bulletproof TauX\n         Exit-B.Tx-TLock.Excess Commitment\n         Exit-B.Tx-TLock.Nonce Commitment\n         Exit-B.Tx-Final.Excess Commitment\n         Exit-B.Tx-Final.Nonce Commitment\n    A -> B 1968 bytes\n         Exit-A.Tx-Final.Partial Transaction\n         Exit-B.MultiSig.Bulletproof TauX\n         Exit-B.Tx-TLock.Excess Commitment\n         Exit-B.Tx-TLock.Nonce Commitment\n         Exit-B.Tx-TLock.Partial Kernel Signature\n         Exit-B.Tx-Final.Excess Commitment\n         Exit-B.Tx-Final.Nonce Commitment\n         Exit-B.Tx-Final.Partial Kernel Signature\n         Exit-B.Tx-Final.Partial Transaction\n    B -> A 977 bytes\n         Exit-A.Tx-TLock.Partial Transaction\n         Exit-B.Tx-Final.Partial Transaction\n    A -> B 52 bytes\n         Exit-B.Tx-TLock.Partial Transaction\n    B -> A 85 bytes\n         Tx-Open.Partial Transaction\n    B done\n    A done\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"    A -> B 591 bytes\n         MultiSig.Partial Commitment\n         MultiSig.Bulletproof T1,T2\n         Tx-Open.Excess Commitment\n         Tx-Open.Nonce Commitment\n         Exit-A.MultiSig.Partial Commitment\n         Exit-A.MultiSig.Bulletproof T1,T2\n         Exit-A.Tx-TLock.Excess Commitment\n         Exit-A.Tx-TLock.Nonce Commitment\n         Exit-A.Tx-Final.Excess Commitment\n         Exit-A.Tx-Final.Nonce Commitment\n         Exit-B.MultiSig.Partial Commitment\n         Exit-B.MultiSig.Bulletproof T1,T2\n    B -> A 1754 bytes\n         MultiSig.Partial Commitment\n         MultiSig.Bulletproof T1,T2\n         MultiSig.Bulletproof TauX\n         Tx-Open.Excess Commitment\n         Tx-Open.Nonce Commitment\n         Tx-Open.Partial Kernel Signature\n         Exit-A.MultiSig.Partial Commitment\n         Exit-A.MultiSig.Bulletproof T1,T2\n         Exit-A.MultiSig.Bulletproof TauX\n         Exit-A.Tx-TLock.Excess Commitment\n         Exit-A.Tx-TLock.Nonce Commitment\n         Exit-A.Tx-TLock.Partial Kernel Signature\n         Exit-A.Tx-Final.Excess Commitment\n         Exit-A.Tx-Final.Nonce Commitment\n         Exit-A.Tx-Final.Partial Kernel Signature\n         Exit-A.Tx-Final.Partial Transaction\n         Exit-B.MultiSig.Partial Commitment\n         Exit-B.MultiSig.Bulletproof T1,T2\n         Exit-B.MultiSig.Bulletproof TauX\n         Exit-B.Tx-TLock.Excess Commitment\n         Exit-B.Tx-TLock.Nonce Commitment\n         Exit-B.Tx-Final.Excess Commitment\n         Exit-B.Tx-Final.Nonce Commitment\n    A -> B 1968 bytes\n         Exit-A.Tx-Final.Partial Transaction\n         Exit-B.MultiSig.Bulletproof TauX\n         Exit-B.Tx-TLock.Excess Commitment\n         Exit-B.Tx-TLock.Nonce Commitment\n         Exit-B.Tx-TLock.Partial Kernel Signature\n         Exit-B.Tx-Final.Excess Commitment\n         Exit-B.Tx-Final.Nonce Commitment\n         Exit-B.Tx-Final.Partial Kernel Signature\n         Exit-B.Tx-Final.Partial Transaction\n    B -> A 977 bytes\n         Exit-A.Tx-TLock.Partial Transaction\n         Exit-B.Tx-Final.Partial Transaction\n    A -> B 52 bytes\n         Exit-B.Tx-TLock.Partial Transaction\n    B -> A 85 bytes\n         Tx-Open.Partial Transaction\n    B done\n    A done\n"}]}]},{"type":"element","tag":"h2","props":{"id":"lightning-channel-update-funds-transfer"},"children":[{"type":"text","value":"Lightning channel update (funds transfer)"}]},{"type":"element","tag":"pre","props":{"code":"    A -> B 394 bytes\n         Exit-A.MultiSig.Partial Commitment\n         Exit-A.MultiSig.Bulletproof T1,T2\n         Exit-A.Tx-TLock.Excess Commitment\n         Exit-A.Tx-TLock.Nonce Commitment\n         Exit-A.Tx-Final.Excess Commitment\n         Exit-A.Tx-Final.Nonce Commitment\n         Exit-B.MultiSig.Partial Commitment\n         Exit-B.MultiSig.Bulletproof T1,T2\n    B -> A 1477 bytes\n         Exit-A.MultiSig.Partial Commitment\n         Exit-A.MultiSig.Bulletproof T1,T2\n         Exit-A.MultiSig.Bulletproof TauX\n         Exit-A.Tx-TLock.Excess Commitment\n         Exit-A.Tx-TLock.Nonce Commitment\n         Exit-A.Tx-TLock.Partial Kernel Signature\n         Exit-A.Tx-Final.Excess Commitment\n         Exit-A.Tx-Final.Nonce Commitment\n         Exit-A.Tx-Final.Partial Kernel Signature\n         Exit-A.Tx-Final.Partial Transaction\n         Exit-B.MultiSig.Partial Commitment\n         Exit-B.MultiSig.Bulletproof T1,T2\n         Exit-B.MultiSig.Bulletproof TauX\n         Exit-B.Tx-TLock.Excess Commitment\n         Exit-B.Tx-TLock.Nonce Commitment\n         Exit-B.Tx-Final.Excess Commitment\n         Exit-B.Tx-Final.Nonce Commitment\n    A -> B 1968 bytes\n         Exit-A.Tx-Final.Partial Transaction\n         Exit-B.MultiSig.Bulletproof TauX\n         Exit-B.Tx-TLock.Excess Commitment\n         Exit-B.Tx-TLock.Nonce Commitment\n         Exit-B.Tx-TLock.Partial Kernel Signature\n         Exit-B.Tx-Final.Excess Commitment\n         Exit-B.Tx-Final.Nonce Commitment\n         Exit-B.Tx-Final.Partial Kernel Signature\n         Exit-B.Tx-Final.Partial Transaction\n    B -> A 977 bytes\n         Exit-A.Tx-TLock.Partial Transaction\n         Exit-B.Tx-Final.Partial Transaction\n    A -> B 92 bytes\n         Reveal Previous Blinding Factor\n         Exit-B.Tx-TLock.Partial Transaction\n    B -> A 40 bytes\n         Reveal Previous Blinding Factor\n    B done\n    A done\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"    A -> B 394 bytes\n         Exit-A.MultiSig.Partial Commitment\n         Exit-A.MultiSig.Bulletproof T1,T2\n         Exit-A.Tx-TLock.Excess Commitment\n         Exit-A.Tx-TLock.Nonce Commitment\n         Exit-A.Tx-Final.Excess Commitment\n         Exit-A.Tx-Final.Nonce Commitment\n         Exit-B.MultiSig.Partial Commitment\n         Exit-B.MultiSig.Bulletproof T1,T2\n    B -> A 1477 bytes\n         Exit-A.MultiSig.Partial Commitment\n         Exit-A.MultiSig.Bulletproof T1,T2\n         Exit-A.MultiSig.Bulletproof TauX\n         Exit-A.Tx-TLock.Excess Commitment\n         Exit-A.Tx-TLock.Nonce Commitment\n         Exit-A.Tx-TLock.Partial Kernel Signature\n         Exit-A.Tx-Final.Excess Commitment\n         Exit-A.Tx-Final.Nonce Commitment\n         Exit-A.Tx-Final.Partial Kernel Signature\n         Exit-A.Tx-Final.Partial Transaction\n         Exit-B.MultiSig.Partial Commitment\n         Exit-B.MultiSig.Bulletproof T1,T2\n         Exit-B.MultiSig.Bulletproof TauX\n         Exit-B.Tx-TLock.Excess Commitment\n         Exit-B.Tx-TLock.Nonce Commitment\n         Exit-B.Tx-Final.Excess Commitment\n         Exit-B.Tx-Final.Nonce Commitment\n    A -> B 1968 bytes\n         Exit-A.Tx-Final.Partial Transaction\n         Exit-B.MultiSig.Bulletproof TauX\n         Exit-B.Tx-TLock.Excess Commitment\n         Exit-B.Tx-TLock.Nonce Commitment\n         Exit-B.Tx-TLock.Partial Kernel Signature\n         Exit-B.Tx-Final.Excess Commitment\n         Exit-B.Tx-Final.Nonce Commitment\n         Exit-B.Tx-Final.Partial Kernel Signature\n         Exit-B.Tx-Final.Partial Transaction\n    B -> A 977 bytes\n         Exit-A.Tx-TLock.Partial Transaction\n         Exit-B.Tx-Final.Partial Transaction\n    A -> B 92 bytes\n         Reveal Previous Blinding Factor\n         Exit-B.Tx-TLock.Partial Transaction\n    B -> A 40 bytes\n         Reveal Previous Blinding Factor\n    B done\n    A done\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"So, both channel open and funds transfer negotiations are completed in 3 full roundtrips, whereas all the dependencies are observed."}]},{"type":"element","tag":"h1","props":{"id":"demo"},"children":[{"type":"text","value":"Demo"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"There's a working demo of the Lightning channel in our codebase here: "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"beam/node/laser_beam_demo"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Various scenarios are emulated, such as graceful channel opening and closure, one-side channel closure and appropriate user responses, and the cheat attempt and punishing."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The node used in the demo is the standard Beam node (no hacks, workarounds, or other tricks specifically for the demo), configured to generate fake PoW. All the broadcasted transactions and timelocks are fully validated."}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"aka-laser-beam","depth":2,"text":"a.k.a. Laser Beam","children":[{"id":"multisig-multisigned-utxo","depth":3,"text":"MultiSig - multisigned UTXO"},{"id":"relative-timelock","depth":3,"text":"Relative timelock"},{"id":"refund-procedure","depth":3,"text":"Refund procedure"},{"id":"refund-revocation","depth":3,"text":"Refund revocation"},{"id":"multi-user-refund-procedure","depth":3,"text":"Multi-user Refund procedure"},{"id":"channel-open","depth":3,"text":"Channel open"},{"id":"off-chain-funds-transfer","depth":3,"text":"Off-chain funds transfer"},{"id":"graceful-channel-closure","depth":3,"text":"Graceful channel closure."},{"id":"one-side-channel-closure","depth":3,"text":"One-side channel closure."},{"id":"blockchain-status-monitoring-aka-watch-towers","depth":3,"text":"Blockchain status monitoring (a.k.a. watch towers)"}]},{"id":"code-design-minimizing-the-number-of-negotiation-roundtrips","depth":2,"text":"Code design - Minimizing the number of negotiation roundtrips.","children":[{"id":"multisig","depth":3,"text":"MultiSig"},{"id":"refund-one-sided","depth":3,"text":"Refund, one-sided"}]},{"id":"lightning-channel-open","depth":2,"text":"Lightning channel open"},{"id":"lightning-channel-update-funds-transfer","depth":2,"text":"Lightning channel update (funds transfer)"}]}},"_type":"markdown","_id":"content:docs:core-tech:Lightning-Network.md","_source":"content","_file":"docs/core-tech/Lightning-Network.md","_extension":"md"},{"_path":"/docs/core-tech/main-wallet-entities-and-their-attributes","_dir":"core-tech","_draft":false,"_partial":false,"_locale":"","title":"User info","description":"","body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"user-info"},"children":[{"type":"text","value":"User info"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Address (can be many): Unique ID money can be sent to/from. Each user/wallet can create and use any number of addresses. Address is assigned to one or more address categories (each category is denoted by name and color)."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Name: Meaningful name is kept for semantic identification only (in a separate Directory service, should not be unique)."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Avatar: Small and nice picture for the further identification."}]}]},{"type":"element","tag":"h1","props":{"id":"address"},"children":[{"type":"text","value":"Address"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"a list of categories it is assigned to"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"a textual description (optional)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"additional attributes such as: single use (won't be valid after the transaction is completed or failed) or time expiration (won't be valid once expired)"}]}]},{"type":"element","tag":"h1","props":{"id":"balance"},"children":[{"type":"text","value":"Balance"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Amounts, aggregated by transaction states:\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Available: always shown, with LARGE font"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"In progress: Sending, Receiving, Change etc: shown when applicable (Alexandra Shelenkova do we need it?)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Locked: shown separately when applicable (sub-cases: \"maturing\" etc)"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"currency is:\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"BEAM"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"GROTH (1*10^-8 of BEAM)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Consider estimated amount in BTC/ETH later on"}]}]}]}]},{"type":"element","tag":"h1","props":{"id":"utxo-details"},"children":[{"type":"text","value":"UTXO details"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"ID"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Amount"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Transactions it had participated in\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"As output UTXO for incoming transaction, \"earned\" time is specified"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"As input UTXO for outgoing transaction, \"spent\" time is specified"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Coin type\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Regular: just a regular coin, can receive most of the statuses (see below)\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Regular (received): received upon a successful completion of an incoming transaction"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Regular (change): received by the sender when his UTXO is split during a successfully accomplished outgoing transaction"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Transaction fee: paid by the user, is always created with \"Maturing\" status"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Coinbase: mined when miner closed the block, is always created with \"Maturing\" status"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Treasury: generated for maintenance and development of the project"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Status\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Available: not in the transaction, can be spent"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"In progress, can have the following sub-cases:\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Incoming (draft) or Incoming: the amount is locked because of the ongoing incoming transaction\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Example:\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Alice has single UTXO of 100 BEAM and wants to send it fully to Bob (zero transaction fee for clarity)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Bob sees 100 BEAM as \"Incoming (draft)\" before that UTXO was registered in the node/blockchain"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Bob sees 100 BEAM as \"Incoming\" when that UTXO was recognized registered in the node/blockchain"}]}]}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Outgoing: the amount is locked because of the ongoing outgoing transaction, new UTXO will be generated as a change once the transaction will be competed\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Example:\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Alice has single UTXO of 100 BEAM and wants to send 20 BEAM to Bob (zero transaction fee for clarity)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Alice sees 100 BEAM are \"outgoing (locked)\" at first"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Alice sees 80 BEAM as \"incoming (change)\" and Bob sees 20 BEAM \"incoming\""}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Alice sees 80 BEAM as \"Available\" and Bob sees 20 BEAM \"Available\""}]}]}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Maturing\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Reserved till "},{"type":"element","tag":"time","props":{},"children":[{"type":"text","value":": the amount will become available after the \"locked\" timeout will expire"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Mined till block height "},{"type":"element","tag":"height","props":{},"children":[{"type":"text","value":" (similar to \"Reserved\", but measured in block height): the mined amount becomes available to miners only after the block height will be reached"}]}]}]}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Spent: gone with the completed outgoing transaction"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Unavailable: for UTXO that cannot be spent anymore (due to transaction rollback or mining result rollback, the reason should be supplied just like for the \"Locked\" status)"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Incoming Transaction details (if available, for example is not mined locally)\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Transaction ID - when clicked, should be taken to transaction list with the designated transaction details opened"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Transaction completion time (ie time when UTXO was received)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Transaction Address ID (and its address group name and category if available)"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Outgoing Transaction details (if available, for example not spent yet)\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Transaction ID - when clicked, should be taken to transaction list with the designated transaction details opened"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Transaction completion time (ie time when UTXO was spent)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Transaction Address ID (and its address group name and category if available)"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"A history of status changes with its respective timestamps etc"}]}]},{"type":"element","tag":"h1","props":{"id":"transaction-details"},"children":[{"type":"text","value":"Transaction details"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"amount: shown as <currency + amount + state>"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"short state (displayed in transaction status in mobile)\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"sending/receiving for Send/Receive"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"in progress for Atomic Swap"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"sent/received for Send/Receive"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"completed for Atomic Swap"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"cancelled for both"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"failed for both"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"expired for both"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"detailed state (displayed on desktop or in transaction details in mobile)\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"\"Waiting for network sync to complete\" - to indicate that transaction can't be started before the network sync is accomplished"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"\"Waiting for Sender/Waiting for Receiver\" - to indicate that sender or receiver should come online to initiate the transaction"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"\"Handshaking\" - two wallets are negotiating the transaction details"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"\"Syncing with blockchain\" - the transaction is being registered with the node"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"\"Sending/Receiving\" - the transaction is taken care by the blockchain, some miner needs to PoW and to add it to a block, the block should be added to the blockchain"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"\"Sent/Received\" - the transaction is completed"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"\"Cancelled\" (by Sender, due to Rollback)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"\"Expired\" (by timeout)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"\"Failed\" (should come with the user-friendly actionable reason/description)"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"time for every status change in the transaction lifecycle such as:\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"creation timestamp"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"peer online timestamp"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"peer offline timestamp"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"timestamp for each confirmation"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"deletion time (where appropriate)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"peer addresses (sending, receiving escrow in the future etc), each address can be assigned to an address groups"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"related UTXOs (ie IDs of transactions, outputs of which serve as inputs for the current transaction)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"textual annotation (optional), sender and receiver have separate annotations, each is stored locally"}]}]}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[]}},"_type":"markdown","_id":"content:docs:core-tech:Main-wallet-entities-and-their-attributes.md","_source":"content","_file":"docs/core-tech/Main-wallet-entities-and-their-attributes.md","_extension":"md"},{"_path":"/docs/core-tech/merkle-trees","_dir":"core-tech","_draft":false,"_partial":false,"_locale":"","title":"Merkle Trees","description":"BEAM uses various kinds of Merkle trees and proofs.","body":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"BEAM uses various kinds of Merkle trees and proofs."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"There are 2 kinds of proofs used:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Standard proofs. Consists of an array of hashes, with the flag that specifies the hashing direction (left/right)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Hard proofs. Consists only of hashes. The hashing direction (as long as the proof length) is deduced by the Verifier automatically."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Hard proofs are used where the client is aware of the supposed Merkle tree structure and the position of the needed element. Those proofs are not only a little smaller, but also more robust - they won't allow the Attacker to include different versions of the same element."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In addition there are combinations: a proof which begins as a standard proof, whereas for the suffix the client may deduce the hashing direction. More about this later."}]},{"type":"element","tag":"h1","props":{"id":"mmr"},"children":[{"type":"text","value":"MMR"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Stands for "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Merkle Mountain Range"}]},{"type":"text","value":", which is a fancy term to describe a (potentially) incomplete Merkle tree."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The underlying objects that are represented by the leaf nodes are converted to hashes according to a specific scheme applicable to the specific object kind (Means - Merkle trees in BEAM never contain "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"raw objects"}]},{"type":"text","value":", to prevent possible ambiguity attacks)."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The hashing used is SHA-256. Non-leaf node hashes are calculated according to"}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Hash ( Left-Child | Right->Child )"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The tree fill order is left-to-right, whereas at each height two adjacent nodes form a parent node. This forms a sequence of complete trees of decreasing height (a.k.a. Mountain Range). Then adjacent trees are grouped from right to left, and form a mutual parent node, whose children are the roots of those trees. So it's like a regular Merkle tree, except the fact that the root node of the right child is \"promoted\" to the height of the left tree."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Note"}]},{"type":"text","value":": in our implementation this promotion doesn't involve any actions, such as hashing with itself (which is used AFAIK in some implementations). This means that the proof length may vary for different elements."}]},{"type":"element","tag":"h2","props":{"id":"implementation-details"},"children":[{"type":"text","value":"Implementation details"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The core MMR implementation is in "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Mmr"}]},{"type":"text","value":" abstract class. Contains the following virtual functions:"}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"pre","props":{"code":"  virtual void LoadElement(Hash&, const Position&) const = 0;\n  virtual void SaveElement(const Hash&, const Position&) = 0;\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"  virtual void LoadElement(Hash&, const Position&) const = 0;\n  virtual void SaveElement(const Hash&, const Position&) = 0;\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Whereas "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Position"}]},{"type":"text","value":" is a logical position of an element in the tree (Height and X-coordinate)."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Based on the underlying implementation in a derived class, which is supposed to load/save an arbitrary tree element, it supports the expected functionality: appending elements, getting the root hash, getting a proof for a specific element."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"There are various implementation base on "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Mmr"}]},{"type":"text","value":", which differ in how they actually store the hashes."}]},{"type":"element","tag":"h3","props":{"id":"dmmr-distributed-mmr"},"children":[{"type":"text","value":"DMMR - Distributed MMR"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"A more sophisticated variant is called "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"DistributedMmr"}]},{"type":"text","value":". It's assumed that the tree data is not stored in one place, but distributed over multiple sites. So that whenever a new element is added to the tree - this element gets a \"reference\" to the existing tree data, and all the new data that should be created (new non-leaf node hashes) is stored in the context of this element only, without the modification of older ones."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This is very useful for branching, whereas one needs to keep track of different variants of what's added to the MMR."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://github.com/beam-mw/beam/wiki/DMMR-internal-layout","rel":["nofollow"]},"children":[{"type":"text","value":"More information about their structure is here."}]}]},{"type":"element","tag":"h4","props":{"id":"use-case"},"children":[{"type":"text","value":"Use case"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Every system state should have an MMR of all the inherited states to support"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"proof of state inclusion in the current state"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Chainwork proof (variation of "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"FlyClient"}]},{"type":"text","value":")."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Every state references the DMMR of the inherited state and adds the extra data to reflect its addition to the tree."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This allows to use the full MMR functionality for every state, no matter if it's the branch tip or not, as well as if it's a part of the current consensus branch or not."}]},{"type":"element","tag":"h2","props":{"id":"multiproof"},"children":[{"type":"text","value":"Multiproof"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"We use an efficient encoding scheme in a situation where the Prover is supposed to prove multiple elements, whereas the tree structure is known to the Verifier (i.e. the client is able to deduce the Merkle path for any element). In this scenario, during the proof interpretation, both the Prover and the Verifier process hashes up to the point where the Merkle path collides with a path of an element which was included already."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This both saves the proof size and the verification complexity."}]},{"type":"element","tag":"h1","props":{"id":"radix-tree"},"children":[{"type":"text","value":"Radix Tree"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"(a.k.a. Patricia tree, Merklish (?) tree)"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"BEAM makes use of special Radix trees, with the following properties:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"It's a variant of a Merkle tree. Means - leaf elements represented by hashes, non-leaf nodes have exactly 2 children, and their hash is evaluated accordingly."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"It's also a binary search tree, which means:\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"logarithmic search, modification"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Option to search by either exact or partial key, find elements within key ranges, and etc."}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The internal tree structure is fully defined by the set of contained elements. Regardless to the "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"history"}]},{"type":"text","value":" (i.e. in which order they were inserted/removed)."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The search key is an opaque bits sequence, whereas the length of this sequence must be equal among all the elements contained in the Radix tree. It may, however, be different for different tree instances, which are supposed to contain objects of different kinds (UTXOs, kernels, etc.)."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Our Radix trees have the following properties:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"1bit - radix.\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Means - the key bits are evaluated one-by-one, and each bit is potentially a junction."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Non-leaf nodes always have exactly 2 children"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Lazy split\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Unlike classical radix trees, our trees have non-leaf nodes only where splitting is needed."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"In particular if there's only 1 element - there is indeed just a single leaf node."}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Lazy evaluate\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Merkle hashes are not immediately recalculated when the tree is modified, instead they're just marked "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"dirty"}]},{"type":"text","value":"."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"They are re-evaluated (recursively) only when needed and only if "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"dirty"}]},{"type":"text","value":"."}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Intrusive-container-like semantics\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"To insert an element into the tree it's first allocated with the key (as a single allocation block)."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The key of the allocated leaf node is used by the non-leaf nodes (they have a pointer to the same key)."}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"No pointer to parent\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"To save space pointers to parent are omitted."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"To allow this - during the operation we keep a "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Cursor"}]},{"type":"text","value":", which contains the pointers to all the passed nodes to the point."}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Speaking technically, non-leaf nodes are allocated/destroyed on-demand, they have the pointer to the key (of one of the leaf nodes contained beneath), and the bit count remaining to the next node. Either the next node is the leaf or not - is determined by the total path length - is it equal to the assumed key length (which is known and supposed to be equal for all the contained elements)."}]},{"type":"element","tag":"h2","props":{"id":"merkle-disproof"},"children":[{"type":"text","value":"Merkle disproof"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Surprisingly using those radix trees it's possible  to prove (with some assumptions) that there is no queried element."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"If there is no queried element - the Prover can present its two closest siblings (or one if it's the maximum/minimum) with their Merkle proofs, which the Verifier can verify indeed belong to adjacent elements."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The Verifier needs, however, to assume that the tree was built according to the rules. In particular when querying for multiple elements, both existing and non-existing, the Verifier should verify that indeed all the presented proofs are in agreement with the assumed element order."}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"implementation-details","depth":2,"text":"Implementation details","children":[{"id":"dmmr-distributed-mmr","depth":3,"text":"DMMR - Distributed MMR"}]},{"id":"multiproof","depth":2,"text":"Multiproof"},{"id":"merkle-disproof","depth":2,"text":"Merkle disproof"}]}},"_type":"markdown","_id":"content:docs:core-tech:Merkle-trees.md","_source":"content","_file":"docs/core-tech/Merkle-trees.md","_extension":"md"},{"_path":"/docs/core-tech/mimblewimble-whitepaper-(june-2016)","_dir":"core-tech","_draft":false,"_partial":false,"_locale":"","title":"Mimblewimble Whitepaper (June 2016)","description":"MIMBLEWIMBLE\nTom Elvis Jedusor\n19 July, 2016","body":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"MIMBLEWIMBLE\nTom Elvis Jedusor\n19 July, 2016"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"**"},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"/\nIntroduction\n/"}]},{"type":"text","value":"**\\"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Bitcoin is the first widely used financial system for which all the necessary\ndata to validate the system status can be cryptographically verified by anyone.\nHowever, it accomplishes this feat by storing all transactions in a public\ndatabase called \"the blockchain\" and someone who genuinely wishes to check\nthis state must download the whole thing and basically replay each transaction,\ncheck each one as they go. Meanwhile, most of these transactions have not\naffected the actual final state (they create outputs that are destroyed\na transaction later)."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"At the time of this writing, there were nearly 150 million transactions\ncommitted in the blockchain, which must be replayed to produce a set of\nonly 4 million unspent outputs."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"It would be better if an auditor needed only to check data on the outputs\nthemselves, but this is impossible because they are valid if and only if the\noutput is at the end of a chain of previous outputs, each signs the next. In\nother words, the whole blockchain must be validated to confirm the final\nstate."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Add to this that these transactions are cryptographically atomic, it is clear\nwhat outputs go into every transaction and what emerges. The \"transaction graph\"\nresulting reveals a lot of information and is subjected to analysis by many\ncompanies whose business model is to monitor and control the lower classes.\nThis makes it very non-private and even dangerous for people to use."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Some solutions to this have been proposed. Greg Maxwell discovered to encrypt\nthe amounts, so that the graph of the transaction is faceless but still allow\nvalidation that the sums are correct "},{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"1"}]},{"type":"text","value":". Dr Maxwell also produced CoinJoin,\na system for Bitcoin users to combine interactively transactions, confusing\nthe transaction graph. Nicolas van Saberhagen has developed a system to blind\nthe transaction entries, goes much further to cloud the transaction graph (as\nwell as not needed the user interaction) "},{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"3"}]},{"type":"text","value":". Later, Shen Noether combined\nthe two approaches to obtain \"confidential transactions\" of Maxwell AND the\ndarkening of van Saberhagen "},{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"4"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"These solutions are very good and would make Bitcoin very safe to use. But\nthe problem of too much data is made even worse. Confidential transactions\nrequire multi-kilobyte proofs on every output, and van Saberhagen signatures\nrequire every output to be stored for ever, since it is not possible to tell\nwhen they are truly spent."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Dr. Maxwell's CoinJoin has the problem of needing interactivity. Dr. Yuan Horas\nMouton fixed this by making transactions freely mergeable "},{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"5"}]},{"type":"text","value":", but he needed to\nuse pairing-based cryptography, which is potentially slower and more difficult\nto trust. He called this \"one-way aggregate signatures\" (OWAS)."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"OWAS had the good idea to combine the transactions in blocks. Imagine that we\ncan combine across blocks (perhaps with some glue data) so that when the outputs\nare created and destroyed, it is the same as if they never existed. Then, to\nvalidate the entire chain, users only need to know when money is entered into\nthe system (new money in each block as in Bitcoin or Monero or peg-ins for\nsidechains "},{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"6"}]},{"type":"text","value":") and final unspent outputs, the rest can be removed and forgotten.\nThen we can have Confidential Transactions to hide the amounts and OWAS to blur\nthe transaction graph, and use LESS space than Bitcoin to allow users to fully\nverify the blockchain. And also imagine that we must not pairing-based cryptography\nor new hypotheses, just regular discrete logarithms signatures like Bitcoin.\nHere is what I propose."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"I call my creation Mimblewimble because it is used to prevent the blockchain from\ntalking about all user's information "},{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"7"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"**"},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"/\nConfidential Transactions and OWAS\n/"}]},{"type":"text","value":"**\\"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The first thing we need to do is remove Bitcoin Script. This is sad, but it is too\npowerful so it is impossible to merge transactions using general scripts. We will\ndemonstrate that confidential transactions of Dr. Maxwell are enough (after some\nsmall modification) to authorize spending of outputs and also allows to make\ncombined transactions without interaction. This is in fact identical to OWAS,\nand allows relaying nodes take some transaction fee or the recipient to change\nthe transaction fees. These additional things Bitcoin can not do, we get for free."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"We start by reminding the reader how confidential transactions work. First, the\namounts are coded by the following equation:"}]},{"type":"element","tag":"pre","props":{"code":"C = r*G + v*H\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"C = r*G + v*H\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"where C is a Pedersen commitment, G and H are fixed nothing-up-my-sleeve elliptic\ncurve group generators, v is the amount, and r is a secret random blinding key."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Attached to this output is a rangeproof which proves that v is in "},{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"0, 2^64"}]},{"type":"text","value":", so\nthat user cannot exploit the blinding to produce overflow attacks, etc."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"To validate a transaction, the verifer will add commitments for all outputs, plus\nf*H (f here is the transaction fee which is given explicitly) and subtracts all\ninput commitments. The result must be 0, which proves that no amount was created\nor destroyed overall."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"We note that to create such a transaction, the user must know the sum of all the\nvalues of r for commitments entries. Therefore, the r-values (and their sums) act\nas secret keys. If we can make the r output values known only to the recipient,\nthen we have an authentication system! Unfortunately, if we keep the rule that\ncommits all add to 0, this is impossible, because the sender knows the sum of\nall "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"his"}]},{"type":"text","value":" r values, and therefore knows the receipient's r values sum to the\nnegative of that. So instead, we allow the transaction to sum to a nonzero value\nk*G, and require a signature of an empty string with this as key, to prove its\namount component is zero."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"We let transactions have as many k*G values as they want, each with a signature,\nand sum them during verification."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"To create transactions sender and recipient do following ritual:"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Sender and recipient agree on amount to be sent. Call this b."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Sender creates transaction with all inputs and change output(s), and gives\nrecipient the total blinding factor (r-value of change minus r-values of\ninputs) along with this transaction. So the commitments sum to r"},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"G - b"}]},{"type":"text","value":"H."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Recipient chooses random r-values for his outputs, and values that sum\nto b minus fee, and adds these to transaction (including range proof).\nNow the commitments sum to k"},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"G - fee"}]},{"type":"text","value":"H for some k that only recipient\nknows."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Recipient attaches signature with k to the transaction, and the explicit\nfee. It has done."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Now, creating transactions in this manner supports OWAS already. To show this,\nsuppose we have two transactions that have a surplus k1"},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"G and k2"}]},{"type":"text","value":"G, and the\nattached signatures with these. Then you can combine the lists of inputs and\noutputs of the two transactions, with both k1"},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"G and k2"}]},{"type":"text","value":"G to the mix, and\nvoilá! is again a valid transaction. From the combination, it is impossible to\nsay which outputs or inputs are from which original transaction."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Because of this, we change our block format from Bitcoin to this information:"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Explicit amounts for new money (block subsidy or sidechain peg-ins) with\nwhatever else data this needs. For a sidechain peg-in maybe it references\na Bitcoin transaction that commits to a specific excess k*G value?"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Inputs of all transactions"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Outputs of all transactions"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Excess k*G values for all transactions"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Each of these are grouped together because it do not matter what the transaction\nboundaries are originally. In addition, Lists 2 3 and 4 should be required to be\ncoded in alphabetical order, since it is quick to check and prevents the block\ncreator of leaking any information about the original transactions."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Note that the outputs are now identified by their hash, and not by their position\nin a transaction that could easily change. Therefore, it should be banned to have\ntwo unspent outputs are equal at the same time, to avoid confusion."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"**"},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"/\nMerging Transactions Across Blocks\n/"}]},{"type":"text","value":"**\\"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Now, we have used Dr. Maxwell's Confidential Transactions to create a noninteractive\nversion of Dr. Maxwell's CoinJoin, but we have not seen the last of marvelous Dr. Maxwell!\nWe need another idea, transaction cut-through, he described in "},{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"8"}]},{"type":"text","value":". Again, we create a\nnoninteractive version of this, and to show how it is used with several blocks."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"We can imagine now each block as one large transaction. To validate it, we add all the\noutput commitments together, then subtracts all input commitments, k*G values, and all\nexplicit input amounts times H. We find that we could combine transactions from two\nblocks, as we combined transactions to form a single block, and the result is again\na valid transaction. Except now, some output commitments have an input commitment exactly\nequal to it, where the first block's output was spent in the second block. We could\nremove both commitments and still have a valid transaction. In fact, there is not even\nneed to check the rangeproof of the deleted output."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The extension of this idea all the way from the genesis block to the latest block, we\nsee that EVERY nonexplicit input is deleted along with its referenced output. What\nremains are only the unspent outputs, explicit input amounts and every k"},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"G value.\nAnd this whole mess can be validated as if it were one transaction: add all unspent\ncommitments output, subtract the values k"}]},{"type":"text","value":"G, validate explicit input amounts (if there\nis anything to validate) then subtract them times H. If the sum is 0, the entire\nchain is good."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"What is this mean? When a user starts up and downloads the chain he needs the following\ndata from each block:"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Explicit amounts for new money (block subsidy or sidechain peg-ins) with\nwhatever else data this needs."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Unspent outputs of all transactions, along with a merkle proof that each\noutput appeared in the original block."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Excess k*G values for all transactions."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Bitcoin today there are about 423000 blocks, totaling 80GB or so of data on the hard\ndrive to validate everything. These data are about 150 million transactions and 5 million\nunspent nonconfidential outputs. Estimate how much space the number of transactions\ntake on a Mimblewimble chain. Each unspent output is around 3Kb for rangeproof and\nMerkle proof. Each transaction also adds about 100 bytes: a k*G value and a signature.\nThe block headers and explicit amounts are negligible. Add this together and get\n30Gb -- with a confidential transaction and obscured transaction graph!"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"**"},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"/\nQuestions and Intuition\n/"}]},{"type":"text","value":"**\\"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Here are some questions that since these weeks, dreams asked me and I woke up sweating.\nBut in fact it is OK."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Q. If you delete the transaction outputs, user cannot verify the rangeproof and maybe\na negative amount is created."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"A. This is OK. For the entire transaction to validate all negative amounts must have\nbeen destroyed. User have SPV security only that no illegal inflation happened in\nthe past, but the user knows that "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"at this time"}]},{"type":"text","value":" no inflation occurred."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Q. If you delete the inputs, double spending can happen."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"A. In fact, this means: maybe someone claims that some unspent output was spent\nin the old days. But this is impossible, otherwise the sum of the combined transaction\ncould not be zero."}]},{"type":"element","tag":"pre","props":{"code":" An exception is that if the outputs are amount zero, it is possible to make two that\n are negatives of each other, and the pair can be revived without anything breaks. So to\n prevent consensus problems, outputs 0-amount should be banned. Just add H at each output,\n now they all amount to at least 1.\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":" An exception is that if the outputs are amount zero, it is possible to make two that\n are negatives of each other, and the pair can be revived without anything breaks. So to\n prevent consensus problems, outputs 0-amount should be banned. Just add H at each output,\n now they all amount to at least 1.\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"**"},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"/\nFuture Research\n/"}]},{"type":"text","value":"**\\"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Here are some questions I can not answer at the time of this writing."}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"What script support is possible? We would need to translate script operations into\nsome sort of discrete logarithm information."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"We require user to check all k"},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"G values, when in fact all that is needed is that their\nsum is of the form k"}]},{"type":"text","value":"G. Instead of using signatures is there another proof of discrete\nlogarithm that could be combined?"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"There is a denial-of-service option when a user downloads the chain, the peer can give\ngigabytes of data and list the wrong unspent outputs. The user will see that the result\ndo not add up to 0, but cannot tell where the problem is."},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"For now maybe the user should just download the blockchain from a Torrent or something\nwhere the data is shared between many users and is reasonably likely to be correct."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"1"}]},{"type":"text","value":" "},{"type":"element","tag":"a","props":{"href":"https://people.xiph.org/~greg/confidential_values.txt","rel":["nofollow"]},"children":[{"type":"text","value":"https://people.xiph.org/~greg/confidential_values.txt"}]},{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"2"}]},{"type":"text","value":" "},{"type":"element","tag":"a","props":{"href":"https://bitcointalk.org/index.php?topic=279249.0","rel":["nofollow"]},"children":[{"type":"text","value":"https://bitcointalk.org/index.php?topic=279249.0"}]},{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"3"}]},{"type":"text","value":" "},{"type":"element","tag":"a","props":{"href":"https://cryptonote.org/whitepaper.pdf","rel":["nofollow"]},"children":[{"type":"text","value":"https://cryptonote.org/whitepaper.pdf"}]},{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"4"}]},{"type":"text","value":" "},{"type":"element","tag":"a","props":{"href":"https://eprint.iacr.org/2015/1098.pdf","rel":["nofollow"]},"children":[{"type":"text","value":"https://eprint.iacr.org/2015/1098.pdf"}]},{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"5"}]},{"type":"text","value":" "},{"type":"element","tag":"a","props":{"href":"https://download.wpsoftware.net/bitcoin/wizardry/horasyuanmouton-owas.pdf","rel":["nofollow"]},"children":[{"type":"text","value":"https://download.wpsoftware.net/bitcoin/wizardry/horasyuanmouton-owas.pdf"}]},{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"6"}]},{"type":"text","value":" "},{"type":"element","tag":"a","props":{"href":"http://blockstream.com/sidechains.pdf","rel":["nofollow"]},"children":[{"type":"text","value":"http://blockstream.com/sidechains.pdf"}]},{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"7"}]},{"type":"text","value":" "},{"type":"element","tag":"a","props":{"href":"http://fr.harrypotter.wikia.com/wiki/Sortil%C3%A8ge_de_Langue_de_Plomb","rel":["nofollow"]},"children":[{"type":"text","value":"http://fr.harrypotter.wikia.com/wiki/Sortilège_de_Langue_de_Plomb"}]},{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"8"}]},{"type":"text","value":" "},{"type":"element","tag":"a","props":{"href":"https://bitcointalk.org/index.php?topic=281848.0","rel":["nofollow"]},"children":[{"type":"text","value":"https://bitcointalk.org/index.php?topic=281848.0"}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[]}},"_type":"markdown","_id":"content:docs:core-tech:Mimblewimble-Whitepaper-(June-2016).md","_source":"content","_file":"docs/core-tech/Mimblewimble-Whitepaper-(June-2016).md","_extension":"md"},{"_path":"/docs/core-tech/mining-difficulty","_dir":"core-tech","_draft":false,"_partial":false,"_locale":"","title":"Mining Difficulty","description":"Mining difficulty is a measure of how many attempts on average it is required to find the proof-of-work solution required to mine a block and receive the mining reward.\nOne can define the Difficulty as the inverse probability of a random solution being the correct one. Thus, a difficulty of 100 means that one in 100 tries should produce a valid block in average.","body":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Mining difficulty is a measure of how many attempts on average it is required to find the proof-of-work solution required to mine a block and receive the mining reward.\nOne can define the Difficulty as the inverse probability of a random solution being the correct one. Thus, a difficulty of 100 means that one in 100 tries should produce a valid block in average."}]},{"type":"element","tag":"h1","props":{"id":"why-change-the-difficulty"},"children":[{"type":"text","value":"Why change the difficulty?"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In Proof of Work blockchains, the difficulty is a dynamic parameter, periodically retargeted to reflect the fluctuations in the total computational power of all the miners. Accounting for changes in mining competition, as well as improvements in mining technology."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The goal of updating the difficulty is to keep the average block time at a certain value. In Beam, the target block time is 60 seconds, which underpins a constant currency issuance and the transaction settlement time of the network."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Here’s an example. Let’s assume we have 100 miners in our network. They are trying different random solutions and find one roughly every minute. Now 100 more miners join, the hashrate of the network doubles, and it will take just 30 seconds to find the solution in average. And if 200 and more join, the time will halve into 15 seconds, and so on."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"To mitigate that, Beam nodes adjust "},{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"shall we mention that they reach consensus here?"}]},{"type":"text","value":"the difficulty, increasing the difficulty of the proof of work algorithm as more miners join, and lowering it if the number of miners decreases."}]},{"type":"element","tag":"h1","props":{"id":"how-difficulty-is-calculated-in-beam"},"children":[{"type":"text","value":"How Difficulty is calculated in Beam"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In Beam, the difficulty is reassessed with every block, by every client independently\nThe algorithm looks at the average time and the average difficulty the last 1440 blocks. f the time required to mine the last 1440 blocks is higher or lower than 24 hours, the difficulty is retargeted accordingly."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The detailed algorithm is outlined below:"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Look at the last 7 blocks. Identify the block that has the median block time. This is the Window End block."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Look at blocks from 127 to 120 before the current block (7 blocks altogether). Identify the block that has the median block time out of those. This will be the Window Start block."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Sum all the difficulties of the blocks from Window Start to Window End. This is Delta Work."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Calculate the time difference between Window Start and Window End blocks. This is Delta Time."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Calculate the difficulty for next block as: NewDifficulty = (Delta Work / Delta Time) * 60seconds."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The Delta Time is bounded by 1 hour and 4 hours. I.e. if the difference is less than 1 hour, 1 hours is still used as Delta Time, same for differences larger than 4 hours. This is done to prevent extreme changes in difficulty."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The algorithm above ensures that as the total solution power of the network fluctuates, the difficulty is gradually adjusted and thus the target block time is ensured."}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[]}},"_type":"markdown","_id":"content:docs:core-tech:Mining-Difficulty.md","_source":"content","_file":"docs/core-tech/Mining-Difficulty.md","_extension":"md"},{"_path":"/docs/core-tech/mw-cla","_dir":"core-tech","_draft":false,"_partial":false,"_locale":"","title":"MW CLA","description":"MW-CLA stands for Mimblewimble Confidential Lelantus Assets","body":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"MW-CLA stands for Mimblewimble Confidential Lelantus Assets"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This page describes our most recent system design, which will be activated on Fork2. It includes CA (confidential assets), Lelantus-MW, as well as will enable adding more features in the future."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Those are the key features:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"CA support\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"each UTXO may optionally have a blinded asset tag (similar to the Elements design by A.Poelstra)."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"There's a proof of validity of the asset tag. It's based on the 1-out-of-many Sigma protocol (by Jens Groth)."}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Shielded pool (a.k.a. Lelantus-MW)\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"CA support for shielded operations too"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Support for one-side payments and direct anonymous payments"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The system design is heterogeneous in nature:\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"All kernels carry an excess blinding factors, and (optionally) extra validation rules (height lock, relative lock, etc.)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Some kernels may control subsystems:\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Asset control (creation, emission)."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Shielded operations (mint, spend)."}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Those kernels, in addition to contributing to the balance, will have side effects as well."}]}]}]}]},{"type":"element","tag":"h1","props":{"id":"confidential-assets-support"},"children":[{"type":"text","value":"Confidential assets support"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"u","props":{},"children":[{"type":"text","value":"Note"}]},{"type":"text","value":": this design is very different from the older preliminary design."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"We identify each asset by "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"AssetID"}]},{"type":"text","value":", which is a 32-bit integer. For each asset there's an appropriate NUMS generator, which is generated deterministically from the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"AssetID"}]},{"type":"text","value":" (via hashing). The "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"AssetID == 0"}]},{"type":"text","value":" is reserved for default asset (Beam)."}]},{"type":"element","tag":"h2","props":{"id":"utxo-encoding"},"children":[{"type":"text","value":"UTXO encoding"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In MW it's possible to encode UTXOs of different kinds (asset types) by using different NUMS (nothing-up-my-sleeve) generators. The UTXO that encodes an asset consists of the following:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Blinded generator: "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"H"},{"type":"element","tag":"sup","props":{},"children":[{"type":"text","value":"*"}]}]},{"type":"text","value":" = "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"H"},{"type":"element","tag":"sub","props":{},"children":[{"type":"text","value":"i"}]}]},{"type":"text","value":" + k"},{"type":"element","tag":"sub","props":{},"children":[{"type":"text","value":"A"}]},{"type":"text","value":"•"},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"G"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Asset surjection proof (proves that the provided generator is indeed one of the list with arbitrary blinding factor added)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Pedersen commitment: "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"C"}]},{"type":"text","value":" = k•"},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"G"}]},{"type":"text","value":" + v•"},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"H"},{"type":"element","tag":"sup","props":{},"children":[{"type":"text","value":"*"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Rangeproof (bulletproof) in terms of this blinded generator"}]}]},{"type":"element","tag":"h3","props":{"id":"asset-surjection-proof"},"children":[{"type":"text","value":"Asset surjection proof"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"It's based on Sigma protocol. The prover specifies a "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"range"}]},{"type":"text","value":" of "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"AssetID"}]},{"type":"text","value":" values, and proves that the specified generator is one of those with arbitrary blinding factor added."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The verifier generates the list of the asset generators for this range, and subtracts (methodically) the provided blinded generator from each element in the list. Then the prover proves by the Sigma protocol that it knows the opening of one of the elements in terms of "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"G"}]},{"type":"text","value":" generator (used for blinding factor)."}]},{"type":"element","tag":"h2","props":{"id":"asset-control"},"children":[{"type":"text","value":"Asset control"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Any user is allowed to create its asset types. Unlike Beams, which are created automatically with each new block generated, assets are emitted and burned explicitly by their owners. The life cycle of each asset goes as following:"}]},{"type":"element","tag":"h3","props":{"id":"asset-creation"},"children":[{"type":"text","value":"Asset creation."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The user sends a transaction (kernel) that asks to create its asset type. It provides the following:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Owner key"}]},{"type":"text","value":" - an arbitrary public key that will be associated with this asset. All further asset actions must be signed by the appropriate private key."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Metadata"}]},{"type":"text","value":" - arbitrary data (buffer), visible to all other users. Once asset is created this metadata can't be modified."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In addition to this, the user "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Locks"}]},{"type":"text","value":" a considerable amount of Beams, i.e. this transaction implicitly consumes this amount. If successful, the system allocates the lowest available (unused) "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"AssetID"}]},{"type":"text","value":", and associates it with this asset."}]},{"type":"element","tag":"h3","props":{"id":"asset-emissionburn"},"children":[{"type":"text","value":"Asset emission/burn."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The user sends a special asset emission kernel (emission amount may be either positive or negative). In addition to signing the kernel excess blinding factor (as usual) - it also must be signed by the appropriate private key of the asset owner."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This transaction implicitly creates/consumes some amount of this asset, which should be compensated by other transaction elements (inputs and outputs)."}]},{"type":"element","tag":"h3","props":{"id":"asset-destroying"},"children":[{"type":"text","value":"Asset destroying."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"To destroy an asset the user sends an appropriate asset destruction kernel (signed by the appropriate owner key). After the asset is destroyed - the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"AssetID"}]},{"type":"text","value":" is no longer associated with the owner, and the user gets the locked Beams back."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Note that asset can be destroyed only if:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"It is completely burned."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Minimum lock period elapsed after it was completely burned, and not emitted since then."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This minimum lock period is needed to prevent manipulations (tampering) by the asset owner. For example, a user may want to receive a specific asset, then it must be sure that this "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"AssetID"}]},{"type":"text","value":" will be associated with exactly this asset info (Metadata and owner key) before its transaction expires, i.e. the asset owner won't be able to destroy and re-create the asset in the meanwhile."}]},{"type":"element","tag":"h2","props":{"id":"asset-state"},"children":[{"type":"text","value":"Asset state."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The system state contains a commitment to the most recent assets state. It's an MMR root of all the currently active assets, with their info, which includes:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Static info: "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Metadata"}]},{"type":"text","value":" and owner public key"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Current emission value"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Lockheight"}]},{"type":"text","value":" - the most recent height of the asset burned/not-burned transition. Based on this users can:\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Asset owner: knows if/when it can destroy the asset, and get the locked funds back"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Other users: estimate the minimum height range when this asset can be used safely. i.e. can it disappear due to reorgs in the past, or tampered in the future."}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"u","props":{},"children":[{"type":"text","value":"Note"}]},{"type":"text","value":": The ever need to lock the funds for asset creation is needed to prevent system spamming. Not only excess of assets will make Nodes heavier, it'll also make the asset surjection proof less effective (since its anonymity set is limited)."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"However despite the need to lock considerable funds, this design should be ok for users that just want to experiment with assets, since they are supposed to get the funds back once they finish.\nOrganizations that sell their asset to users - not obvious if they will ever be able to burn their asset back (for this they first need to own all their asset). But this seems as a justified risk."}]},{"type":"element","tag":"h2","props":{"id":"note-on-transaction-repeatability"},"children":[{"type":"text","value":"Note on transaction repeatability"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"One of the problems specific to UTXO-based systems in general and MW particularly is repeatability. If an attacker controls all the inputs of a specific transaction where it pays someone (which is usually the case) - it can repeat this transaction later regardless to the will of the other user. Moreover, if that user later spends only the inputs received from the attacker - then the attacker can repeat those transactions too, and so on. Everything can be 'replayed' up to some depth, where more inputs are needed, that were not originally received from the attacker."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"If only beams are traded, then there's no big problem. Because of those 'replays' users can only get paid, not loose their funds. But replaying asset-controlling transaction "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"IS"}]},{"type":"text","value":" a problem. Because assets are essentially created from 'thin air', by replaying some transactions the attacker may cause extra asset emission (which is already a big problem), and may even be able to get some amount of this asset."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"To mitigate this threat, starting from Fork2 duplicating kernels will be forbidden. Technically this is achieved by the following:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"There will be a new consensus parameter, "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"MaxKernelLifespan"}]},{"type":"text","value":", probably equivalent to ~ 1 month."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Starting from Fork2, kernels with "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"HeightLock.Min"}]},{"type":"text","value":" (minimum height) lower than Fork2 will be rejected."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Each kernel, in addition to the optional "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"HeightLock.Max"}]},{"type":"text","value":" (maximum height) will have implicit max height lock as "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"HeightLock.Min + MaxKernelLifespan"}]},{"type":"text","value":". This (and the previous restriction) will make repeating old kernels impossible."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Each node will have to keep track of all the recent kernels, down to current height minus "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"MaxKernelLifespan"}]},{"type":"text","value":". Kernels below this height may be forgotten (for the sake of blockchain verification)."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Side effect: Kernels with relative height lock (already available on the mainnet) will not be able to reference a kernel older than "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"MaxKernelLifespan"}]},{"type":"text","value":". But this is ok, practically relative locks are needed for much shorter duration."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"By such we will make kernel replaying illegal, whereas nodes will have to keep track only of the most recent kernels."}]},{"type":"element","tag":"h1","props":{"id":"shielded-pool-aka-lelantus-mw"},"children":[{"type":"text","value":"Shielded pool (a.k.a. Lelantus-MW)"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Disclaimer:"}]},{"type":"text","value":" The "},{"type":"element","tag":"a","props":{"href":"https://lelantus.io/","rel":["nofollow"]},"children":[{"type":"text","value":"Lelantus Protocol"}]},{"type":"text","value":" is the work of Zcoin's cryptographer Aram Jivanyan as part of its research to improve its privacy protocol. Our design and implementation are based on the publicly-available Lelantus scientific paper. All our code was developed from scratch based on this paper alone."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In order to solve the MW linkability problem, users will be able to recycle their funds via shielded pool. Our design is different from the original Lelantus protocol in the following ways:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Transaction values are never revealed"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Instead of transactions, it's formulated in terms of mint/spend "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"primitives"}]},{"type":"text","value":", and the final transactions are composed of MW and shielded parts in any combinations, keeping the balance-to-zero principle (MW-style)."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"CA are naturally supported"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Technically in addition to standard transaction elements, the following are supported:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Shielded output - transfers some amount from MW into shielded pool"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Shielded input - withdraws some amount from the shielded pool back into MW"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Both elements are encoded as special transaction kernels."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In addition to the standard MW blinding factor generator "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"G"}]},{"type":"text","value":", there's an additional generator "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"J"}]},{"type":"text","value":" for the secondary blinding factor, a.k.a. "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"serial number"}]},{"type":"text","value":"."}]},{"type":"element","tag":"h2","props":{"id":"shielded-output"},"children":[{"type":"text","value":"Shielded output"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Consists of the following:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Blinded serial number commitment: "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"C"},{"type":"element","tag":"sub","props":{},"children":[{"type":"text","value":"s"}]}]},{"type":"text","value":" = k"},{"type":"element","tag":"sub","props":{},"children":[{"type":"text","value":"s"}]},{"type":"text","value":"•"},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"G"}]},{"type":"text","value":" + s•"},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"J"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Generalized Schnorr's signature that proves the above commitment is indeed of this form"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Optionally asset info: the blinded asset generator + asset surjection proof."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"UTXO commitment "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"C"},{"type":"element","tag":"sub","props":{},"children":[{"type":"text","value":"MW"}]}]},{"type":"text","value":" = k"},{"type":"element","tag":"sub","props":{},"children":[{"type":"text","value":"MW"}]},{"type":"text","value":"•"},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"G"}]},{"type":"text","value":" + v•"},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"H"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Rangeproof"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In order to verify the overall transaction balance - only the UTXO commitment "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"C"},{"type":"element","tag":"sub","props":{},"children":[{"type":"text","value":"MW"}]}]},{"type":"text","value":" (without the serial number) is accounted for. After verification, instead of going to the UTXO set, the following double-blinded commitment goes into the shielded pool:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"C"}]},{"type":"text","value":" = "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"C"},{"type":"element","tag":"sub","props":{},"children":[{"type":"text","value":"s"}]}]},{"type":"text","value":" + "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"C"},{"type":"element","tag":"sub","props":{},"children":[{"type":"text","value":"MW"}]}]},{"type":"text","value":" = s•"},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"J"}]},{"type":"text","value":" + (k"},{"type":"element","tag":"sub","props":{},"children":[{"type":"text","value":"s"}]},{"type":"text","value":" + k"},{"type":"element","tag":"sub","props":{},"children":[{"type":"text","value":"MW"}]},{"type":"text","value":")•"},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"G"}]},{"type":"text","value":" + v•"},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"H"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The shielded outputs in the pool form a sequence of commitments (EC points)."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Note: the serial number "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"s"}]},{"type":"text","value":" is derived from another public key "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"SpendKey"}]},{"type":"text","value":", which will need to be revealed during spending. In addition the prover will need to prove the knowledge of the appropriate private key."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In addition, the "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"C"},{"type":"element","tag":"sub","props":{},"children":[{"type":"text","value":"s"}]}]},{"type":"text","value":" commitment must be unique. This is to prevent accidental misuse, which will make subsequent element withdrawal impossible."}]},{"type":"element","tag":"h2","props":{"id":"shielded-input"},"children":[{"type":"text","value":"Shielded input"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Consists of the following:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Range within the shielded pool, that contains the being-spent element."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"SpendKey"}]},{"type":"text","value":" is revealed, and the whole shielded input is signed by the appropriate private key"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Optionally asset info: the blinded asset generator + asset surjection proof."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Output commitment "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"C"},{"type":"element","tag":"sub","props":{},"children":[{"type":"text","value":"out"}]}]},{"type":"text","value":" = k"},{"type":"element","tag":"sub","props":{},"children":[{"type":"text","value":"out"}]},{"type":"text","value":"•"},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"G"}]},{"type":"text","value":" + v•"},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"H"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"It should commit to the same value, but the blinding factor k"},{"type":"element","tag":"sub","props":{},"children":[{"type":"text","value":"out"}]},{"type":"text","value":" is different from that used in shielded output."}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Generalized Schnorr's signature, that proves the "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"C"},{"type":"element","tag":"sub","props":{},"children":[{"type":"text","value":"out"}]}]},{"type":"text","value":" is indeed of this form."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Sigma proof for the rest"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"SpendKey"}]},{"type":"text","value":" must be unique, this way double-spend is prevented."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"During the verification, the verifier computes the "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"serial number"}]},{"type":"text","value":" "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"s"}]},{"type":"text","value":" from the "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"SpendKey"}]},{"type":"text","value":". Then the following is calculated:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"C"}]},{"type":"text","value":" = "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"C"},{"type":"element","tag":"sub","props":{},"children":[{"type":"text","value":"out"}]}]},{"type":"text","value":" + s•"},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"J"}]},{"type":"text","value":"\nThis EC point is subtracted (methodically) from all the elements in the referenced range of the shielded pool. If everything is correct, then the element being-spent turns into:"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"C"}]},{"type":"text","value":" = (k"},{"type":"element","tag":"sub","props":{},"children":[{"type":"text","value":"s"}]},{"type":"text","value":" + k"},{"type":"element","tag":"sub","props":{},"children":[{"type":"text","value":"MW"}]},{"type":"text","value":" - k"},{"type":"element","tag":"sub","props":{},"children":[{"type":"text","value":"out"}]},{"type":"text","value":")•"},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"G"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Note that both asset and serial number generators "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"H"}]},{"type":"text","value":" and "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"J"}]},{"type":"text","value":" are eliminated. The prover then proves knowledge of opening of one of the elements in the range in terms of "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"G"}]},{"type":"text","value":"-generator only."}]},{"type":"element","tag":"h2","props":{"id":"one-side-payments-and-direct-anonymous-payments"},"children":[{"type":"text","value":"One-side payments, and direct anonymous payments."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In addition to solving the linkability problem, shielded pool allows one-side payments (normally in MW transactions are built mutually). This is due to the fact that "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"serial number"}]},{"type":"text","value":" is derived from an arbitrary public key "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"SpendKey"}]},{"type":"text","value":", which, after initial setup, may be calculated by the sender alone, without the knowledge of the appropriate private key (and, hence, the ability to spend it)."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This already provides the one-side payments ability. However it's not completely anonymous: since the sender knows the "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"SpendKey"}]},{"type":"text","value":" - it can see when the receiver spends it.\nBut this can be solved too, due to the fact that the shielded output consists of 2 parts: the "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"C"},{"type":"element","tag":"sub","props":{},"children":[{"type":"text","value":"s"}]}]},{"type":"text","value":" and "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"C"},{"type":"element","tag":"sub","props":{},"children":[{"type":"text","value":"MW"}]}]},{"type":"text","value":". During the initial setup the receiver generates and sends arbitrary number of different "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"C"},{"type":"element","tag":"sub","props":{},"children":[{"type":"text","value":"s"}]}]},{"type":"text","value":" elements (with their Schnorr's signatures). The sender will use them as-is in the shielded output, without the knowledge of the "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"serial number"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"We incorporated a scheme by which the receiver detects all its shielded outputs by scanning the blockchain (i.e. no auxiliary channel is needed to notify the receiver). For "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"C"},{"type":"element","tag":"sub","props":{},"children":[{"type":"text","value":"s"}]}]},{"type":"text","value":" all the owner info is embedded within the Schnorr's signature (which has a degree of freedom). For the "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"C"},{"type":"element","tag":"sub","props":{},"children":[{"type":"text","value":"MW"}]}]},{"type":"text","value":" all the needed info is recovered from the bulletproof."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"At the end the following information is recovered:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"All the relevant parameters: blinding factor, SpendKey, value, "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"AssetID"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Is it visible to the sender, i.e. was the "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"C"},{"type":"element","tag":"sub","props":{},"children":[{"type":"text","value":"s"}]}]},{"type":"text","value":" created by the sender or the receiver in advance."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Sender ID (a public key belonging to the sender)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Arbitrary 32-byte message"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Note also that this info can be obtained by the so-called "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Owner key"}]},{"type":"text","value":", but still in order to spend it - the master key is required. This allows to use the owner key in owned nodes to detect owned TXOs and shielded elements, without the risk of loosing the funds if the node is compromised."}]},{"type":"element","tag":"h2","props":{"id":"implications-and-constraints"},"children":[{"type":"text","value":"implications and constraints"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The Lelantus is a great technology, but it comes at a price."}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Scalability (size)\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Obviously no cut-through for the shielded inputs/outputs\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Shielded output ~800 bytes"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Shielded input ~1.6KB, depends on the anonymity set size"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"If asset type is blinded: 2 more asset proofs (for output and input), another ~2K"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"But cut-through is still applied on the MW part."}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Verification time\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"~1sec for 64K elements (very big)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"easily parallelized"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"only 10ms for each additional proof for the same anonymity set (batch verification)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"During initial sync many blocks can be batch-verified at once as well."}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"So, in order to build a sane system, which enjoys the benefits of MW, but helps break the linkability, we design it this way:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Most of transactions should remain in MW"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Max number of shielded inputs/outputs in a block is limited. Users will have to compete for them (fee market)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The spend window (anonymity set size) is limited, and dramatically decreased if the element being-spent is not one of the most recent."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The maximum spend window (anonymity set size) will probably be ~50K - 100K (not decided yet). The maximum number of shielded elements in a block will be tuned such that this window will be created within at least several days."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Another important restriction: users will be able to spend their shielded element with the maximum spend window only if it references the most recent elements. It won't be possible to specify a large spend window, that covers a range older than twice this window size."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In simple words, users will have a time window to spend their element \"nicely\". If they miss their opportunity - they'll have to spend it in a dramatically smaller spend window (~1K elements), but then they will be able to recycle it through shielded pool again."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"By such we expect to keep "},{"type":"element","tag":"u","props":{},"children":[{"type":"text","value":"good scalability and performance"}]},{"type":"text","value":":"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Not too many elements that can't be cut-through"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Reasonable verification times: shielded inputs will have large overlap."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"But importantly those restrictions will also lead to "},{"type":"element","tag":"u","props":{},"children":[{"type":"text","value":"better privacy"}]},{"type":"text","value":". Here's why."}]},{"type":"element","tag":"h2","props":{"id":"privacy"},"children":[{"type":"text","value":"Privacy"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"To understand which privacy is achieved while hiding in a crowd, let's first define "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"absolute"}]},{"type":"text","value":" and "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"relative"}]},{"type":"text","value":" anonymity sets."}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"absolute"}]},{"type":"text","value":" anonymity set size is the net size of the set chosen by the user."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"relative"}]},{"type":"text","value":" anonymity set size is the ratio of the chosen "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"absolute"}]},{"type":"text","value":" set size, to the weighted overall set, where the user could potentially hide, with appropriate probabilities."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Speaking simply, the "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"relative"}]},{"type":"text","value":" set size is a probability of a user to choose a specific absolute set."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"To achieve high privacy "},{"type":"element","tag":"u","props":{},"children":[{"type":"text","value":"both"}]},{"type":"text","value":" the absolute and the relative sets should be maximized."}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Obviously if the absolute set size is small, then the user is already suspected."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"If the relative set size is small then the user can be deanonymized by a number of recurring transactions, even if the absolute anonymity set is big! "},{"type":"element","tag":"a","props":{"href":"https://www.zfnd.org/blog/blockchain-privacy/","rel":["nofollow"]},"children":[{"type":"text","value":"A good explanation by Ian Miers is here."}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Because the anonymity set size in Lelantus is finite, we need a compromise."}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"If too few users use it, then every user is already is a suspect."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"If too many users use it, then the window is filled within shorter time period, which means smaller relative set (smaller probability of an unrelated user to fall into the same set)."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The systems with unlimited anonymity set size (like Zcash) have an advantage here. However, speaking practically, the difference may be not that big. Although theoretically users can spend any element, practically they probably spend their recent outputs anyway (because of the usage nature). So the information leaked in Lelantus is considerable, but could be assumed by the attacker with significant probability anyway."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Probably real-world usage data is needed to estimate the practical privacy of the system"}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"utxo-encoding","depth":2,"text":"UTXO encoding","children":[{"id":"asset-surjection-proof","depth":3,"text":"Asset surjection proof"}]},{"id":"asset-control","depth":2,"text":"Asset control","children":[{"id":"asset-creation","depth":3,"text":"Asset creation."},{"id":"asset-emissionburn","depth":3,"text":"Asset emission/burn."},{"id":"asset-destroying","depth":3,"text":"Asset destroying."}]},{"id":"asset-state","depth":2,"text":"Asset state."},{"id":"note-on-transaction-repeatability","depth":2,"text":"Note on transaction repeatability"},{"id":"shielded-output","depth":2,"text":"Shielded output"},{"id":"shielded-input","depth":2,"text":"Shielded input"},{"id":"one-side-payments-and-direct-anonymous-payments","depth":2,"text":"One-side payments, and direct anonymous payments."},{"id":"implications-and-constraints","depth":2,"text":"implications and constraints"},{"id":"privacy","depth":2,"text":"Privacy"}]}},"_type":"markdown","_id":"content:docs:core-tech:MW-CLA.md","_source":"content","_file":"docs/core-tech/MW-CLA.md","_extension":"md"},{"_path":"/docs/core-tech/new-address-types-support","_dir":"core-tech","_draft":false,"_partial":false,"_locale":"","title":"Beam Fierce Fermion 6.0 Upgrade Guide for pools and exchanges","description":"","body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"beam-fierce-fermion-60-upgrade-guide-for-pools-and-exchanges"},"children":[{"type":"text","value":"Beam Fierce Fermion 6.0 Upgrade Guide for pools and exchanges"}]},{"type":"element","tag":"h2","props":{"id":"confidential-assets"},"children":[{"type":"text","value":"Confidential Assets"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Confidential Assets (CA) are tokens mint on the Beam blockchain. Beam supports Confidential Assets since hard fork 2, but this feature had limited ability to be used in real life applications. Starting from the version 6.0 Beam Wallet adds ability to create smart contracts which make CA more usable and very important feature in Beam infrastructure. We already have "},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/wiki/Beam-wallet-protocol-API#assets-support","rel":["nofollow"]},"children":[{"type":"text","value":"API"}]},{"type":"text","value":" to work with CA, but it was disabled by default. If you wish to accept and create transactions with CA you should enable this feature in the wallet API and update your codebase to handle CA correctly."}]},{"type":"element","tag":"h2","props":{"id":"new-transaction-types"},"children":[{"type":"text","value":"New transaction types"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"New types of transaction are available in the wallet API:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Maximum privacy transaction"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Offline transaction"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In order to receive these transactions there are no need to make any changes, but if you want to send them you have to explicitly enable them in the wallet, and distinguish new address types."}]},{"type":"element","tag":"h2","props":{"id":"new-address-types"},"children":[{"type":"text","value":"New address types"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"We introduced new address types in CLI and Desktop wallet version 5.0, now they are available in API. We highly recommend to use these new addresses, this should bring better user experience both for sending and receiving. For backward compatibility we preserved old address type.\nThe difference between new addresses and old are the following"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"new addresses are "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"base58"}]},{"type":"text","value":" encoded and have relatively long, old addresses are "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"hex"}]},{"type":"text","value":" encoded and have length 64-67 characters"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"new addresses can hold additional data for transaction, this allows us to make new type of transactions mentioned before and add more when it will be needed"}]}]},{"type":"element","tag":"h2","props":{"id":"updating-wallet-api"},"children":[{"type":"text","value":"Updating wallet API"}]},{"type":"element","tag":"h3","props":{"id":"download-new-binaries-of-the-wallet-api"},"children":[{"type":"text","value":"Download new binaries of the wallet API"}]},{"type":"element","tag":"h3","props":{"id":"enable-ca-support"},"children":[{"type":"text","value":"Enable CA support"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"run new binary with "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--enable_assets"}]},{"type":"text","value":". With this flag your wallet starts to accept transactions with Confidential Assets"},{"type":"element","tag":"pre","props":{"code":"    ./wallet-api --enable_assets -n <node address>\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"    ./wallet-api --enable_assets -n <node address>\n"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"updated the codebase. Methods "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"get_utxo"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"tx_list"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"wallet_status"}]},{"type":"text","value":" now has "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"\"assets\""}]},{"type":"text","value":" parameter, if you pass "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"\"assets\": true"}]},{"type":"text","value":" these methods return data related to CA. If you wish to send or split CA you should specify "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"\"asset_id\""}]},{"type":"text","value":" parameter. Also there are some new methods which provide CA specific functionality ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"get_asset_info"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"tx_asset_info"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"tx_asset_issue"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"tx_asset_consume"}]},{"type":"text","value":"). Please, see "},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/wiki/Beam-wallet-protocol-API","rel":["nofollow"]},"children":[{"type":"text","value":"wallet API documentation"}]},{"type":"text","value":" for more details."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"add "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"\"assets\": true"}]},{"type":"text","value":" parameter to "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"get_utxo"}]},{"type":"text","value":" method to view assets"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]},{"type":"element","tag":"pre","props":{"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 6,\n    \"method\":\"get_utxo\",\n    \"params\" :\n    {\n        \"count\": 10,\n        \"skip\": 0,\n        \"assets\": true,           // <------------ report assets\n        \"sort\": {\n            \"field\": \"amount\",\n            \"direction\": \"asc\"\n        },\n        \"filter\": {\n            \"asset_id\": 1         // <------------ filter assets with ID 1\n        }\n    }\n}\n","language":"json","meta":"","className":["language-json"]},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 6,\n    \"method\":\"get_utxo\",\n    \"params\" :\n    {\n        \"count\": 10,\n        \"skip\": 0,\n        \"assets\": true,           // <------------ report assets\n        \"sort\": {\n            \"field\": \"amount\",\n            \"direction\": \"asc\"\n        },\n        \"filter\": {\n            \"asset_id\": 1         // <------------ filter assets with ID 1\n        }\n    }\n}\n"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"add "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"\"assets\": true"}]},{"type":"text","value":" parameter to "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"tx_list"}]},{"type":"text","value":" method, to view report transaction list including transactions with assets"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]},{"type":"element","tag":"pre","props":{"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 8,\n    \"method\":\"tx_list\",\n    \"params\":\n    {\n        \"filter\" :             // <--------------- you can filter buy asset_id here\n        {\n            \"status\":4,\n            \"height\":1055,\n        },\n        \"skip\" : 0,\n        \"count\" : 10,\n        \"assets\": true         // <--------------- report assets too\n    }\n}\n","language":"json","meta":"","className":["language-json"]},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 8,\n    \"method\":\"tx_list\",\n    \"params\":\n    {\n        \"filter\" :             // <--------------- you can filter buy asset_id here\n        {\n            \"status\":4,\n            \"height\":1055,\n        },\n        \"skip\" : 0,\n        \"count\" : 10,\n        \"assets\": true         // <--------------- report assets too\n    }\n}\n"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"to retrieve info about assets in your wallet pass "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"\"assets\": true"}]},{"type":"text","value":" parameter to "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"wallet_status"}]},{"type":"text","value":" method, to get status of the wallet and its balance in different CAs and BEAM"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]},{"type":"element","tag":"pre","props":{"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 6,\n    \"method\":\"wallet_status\",\n        \"params\": {\n              \"assets\" : true\n        }\n}\n","language":"json","meta":"","className":["language-json"]},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 6,\n    \"method\":\"wallet_status\",\n        \"params\": {\n              \"assets\" : true\n        }\n}\n"}]}]},{"type":"element","tag":"br","props":{},"children":[]},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]},{"type":"element","tag":"pre","props":{"code":"{\n  \"id\": 1236,\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"current_height\": 112,\n    \"current_state_hash\": \"b9e8b868de60f28e553a1499a569f481991e4cff9fe2191d09d71a03c7708296\",\n    \"difficulty\": 378.36236572265625,\n    \"prev_state_hash\": \"3f84da0b0390deaca908603b6061867def987575a1af9311248ffb01503a0f02\",\n    \"totals\": [\n      {\n        \"asset_id\": 0,\n        \"available\": 303000000000,\n        \"available_str\": \"303000000000\",\n        \"maturing\": 8000000000,\n        \"maturing_str\": \"8000000000\",\n        \"receiving\": 0,\n        \"receiving_str\": \"0\",\n        \"sending\": 0,\n        \"sending_str\": \"0\"\n      },\n      {\n        \"asset_id\": 1,                    // <--------------- this could be used to send/split CA or to retrieve extended info\n        \"available\": 2000000000,\n        \"available_str\": \"2000000000\",\n        \"maturing\": 0,\n        \"maturing_str\": \"0\",\n        \"receiving\": 0,\n        \"receiving_str\": \"0\",\n        \"sending\": 0,\n        \"sending_str\": \"0\"\n      }\n    ]\n  }\n}\n","language":"json","meta":"","className":["language-json"]},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n  \"id\": 1236,\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"current_height\": 112,\n    \"current_state_hash\": \"b9e8b868de60f28e553a1499a569f481991e4cff9fe2191d09d71a03c7708296\",\n    \"difficulty\": 378.36236572265625,\n    \"prev_state_hash\": \"3f84da0b0390deaca908603b6061867def987575a1af9311248ffb01503a0f02\",\n    \"totals\": [\n      {\n        \"asset_id\": 0,\n        \"available\": 303000000000,\n        \"available_str\": \"303000000000\",\n        \"maturing\": 8000000000,\n        \"maturing_str\": \"8000000000\",\n        \"receiving\": 0,\n        \"receiving_str\": \"0\",\n        \"sending\": 0,\n        \"sending_str\": \"0\"\n      },\n      {\n        \"asset_id\": 1,                    // <--------------- this could be used to send/split CA or to retrieve extended info\n        \"available\": 2000000000,\n        \"available_str\": \"2000000000\",\n        \"maturing\": 0,\n        \"maturing_str\": \"0\",\n        \"receiving\": 0,\n        \"receiving_str\": \"0\",\n        \"sending\": 0,\n        \"sending_str\": \"0\"\n      }\n    ]\n  }\n}\n"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"if you want to send or split CA you should specify "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"\"asset_id\""}]},{"type":"text","value":" in parameters"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]},{"type":"element","tag":"pre","props":{"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 2,\n    \"method\":\"tx_send\", \n    \"params\":\n    {\n        \"value\": 12342342,\n        \"fee\": 2,\n        \"from\": \"472e17b0419055ffee3b3813b98ae671579b0ac0dcd6f1a23b11a75ab148cc67\",\n        \"address\": \"472e17b0419055ffee3b3813b98ae671579b0ac0dcd6f1a23b11a75ab148cc67\",\n        \"comment\": \"thank you!\",\n        \"asset_id\": 1                   <------------------ NEW\n    }\n}\n","language":"json","meta":"","className":["language-json"]},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 2,\n    \"method\":\"tx_send\", \n    \"params\":\n    {\n        \"value\": 12342342,\n        \"fee\": 2,\n        \"from\": \"472e17b0419055ffee3b3813b98ae671579b0ac0dcd6f1a23b11a75ab148cc67\",\n        \"address\": \"472e17b0419055ffee3b3813b98ae671579b0ac0dcd6f1a23b11a75ab148cc67\",\n        \"comment\": \"thank you!\",\n        \"asset_id\": 1                   <------------------ NEW\n    }\n}\n"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"if you want to get info about CA use"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]},{"type":"element","tag":"pre","props":{"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 2,\n    \"method\": \"tx_asset_info\",\n    \"params\": \n    {\n        \"asset_id\": 1\n    }\n}\n","language":"json","meta":"","className":["language-json"]},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 2,\n    \"method\": \"tx_asset_info\",\n    \"params\": \n    {\n        \"asset_id\": 1\n    }\n}\n"}]}]},{"type":"element","tag":"br","props":{},"children":[]},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]},{"type":"element","tag":"pre","props":{"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 2,\n    \"result\":\n    {\n        \"txId\" : \"10c4b760c842433cb58339a0fafef3db\"\n    }\n}\n","language":"json","meta":"","className":["language-json"]},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 2,\n    \"result\":\n    {\n        \"txId\" : \"10c4b760c842433cb58339a0fafef3db\"\n    }\n}\n"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"after this transaction become completed, you can read CA info from the local database"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]},{"type":"element","tag":"pre","props":{"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 6,\n    \"method\": \"get_asset_info\",\n    \"params\" :\n    {\n        \"asset_id\": 1\n    }\n}\n","language":"json","meta":"","className":["language-json"]},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 6,\n    \"method\": \"get_asset_info\",\n    \"params\" :\n    {\n        \"asset_id\": 1\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_id"}]},{"type":"text","value":" asset id to retrieve info about. Can be used for any asset even if you don't own it."}]}]},{"type":"element","tag":"br","props":{},"children":[]},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]},{"type":"element","tag":"pre","props":{"code":"{\n    \"id\": 1236,\n    \"jsonrpc\": \"2.0\",\n    \"result\": \n    {\n        \"asset_id\": 1,\n        \"emission\": 2000000000,\n        \"emission_str\": \"2000000000\",\n        \"isOwned\": 1,\n        \"lockHeight\": 39,\n        \"metadata\": \"STD:N=NAME;SN=SNM;UN=UNIT;NTHUN=NTHUNIT\",\n        \"ownerId\": \"0ae08a49e018e98177774294107dc033790b87538e54a20e99c6b98f1dbd39ce\",\n        \"refreshHeight\": 927\n    }\n}\n","language":"json","meta":"","className":["language-json"]},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"id\": 1236,\n    \"jsonrpc\": \"2.0\",\n    \"result\": \n    {\n        \"asset_id\": 1,\n        \"emission\": 2000000000,\n        \"emission_str\": \"2000000000\",\n        \"isOwned\": 1,\n        \"lockHeight\": 39,\n        \"metadata\": \"STD:N=NAME;SN=SNM;UN=UNIT;NTHUN=NTHUNIT\",\n        \"ownerId\": \"0ae08a49e018e98177774294107dc033790b87538e54a20e99c6b98f1dbd39ce\",\n        \"refreshHeight\": 927\n    }\n}\n"}]}]},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"Returns full asset info or "},{"type":"element","tag":"a","props":{"href":"#Errors"},"children":[{"type":"text","value":"error code"}]},{"type":"text","value":"."},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"asset_id"}]},{"type":"text","value":" asset id"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"metadata"}]},{"type":"text","value":" asset metadata"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"emission"}]},{"type":"text","value":" & "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"emission_str"}]},{"type":"text","value":" total asset emission. Maximum asset emission is 2"},{"type":"element","tag":"sup","props":{},"children":[{"type":"text","value":"128"}]},{"type":"text","value":"-1. To ensure compatibility with JavaScript raw number returned only if it is less than or equal to "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Number.MAX_SAFE_INTEGER"}]},{"type":"text","value":" (2"},{"type":"element","tag":"sup","props":{},"children":[{"type":"text","value":"53"}]},{"type":"text","value":"-1). If asset emission is greater than "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Number.MAX_SAFE_INTEGER"}]},{"type":"text","value":" only corresponding string representation is returned."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"isOwned"}]},{"type":"text","value":" is 1 if you own this asset"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"lockHeight"}]},{"type":"text","value":" last block when asset emission turned to/from 0."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"refreshHeight"}]},{"type":"text","value":" block at which asset information has been received. Please note, that all returned fields are valid only for this and previous blocks. In next blocks emission might change, asset become unregistered &c. Use "},{"type":"element","tag":"a","props":{"href":"#tx_asset_info"},"children":[{"type":"text","value":"tx_asset_info"}]},{"type":"text","value":" to retrieve the most recent info."}]}]}]}]},{"type":"element","tag":"h3","props":{"id":"enable-new-types-of-transaction"},"children":[{"type":"text","value":"Enable new types of transaction"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"run new binary with "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--enable_lelantus"}]},{"type":"text","value":". With this flag your wallet is able to send UTXO via shielded pool."},{"type":"element","tag":"pre","props":{"code":"    ./wallet-api --enable_lelantus -n <node address>\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"    ./wallet-api --enable_lelantus -n <node address>\n"}]}]}]}]},{"type":"element","tag":"h3","props":{"id":"newer-address-type-support"},"children":[{"type":"text","value":"Newer address type support"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Update address verification. Now, "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"validate_address"}]},{"type":"text","value":" method return additional info about address:"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<--"}]},{"type":"element","tag":"pre","props":{"code":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"result\" : \n    {\n        \"is_valid\" : true,\n        \"is_mine\" : false,\n        \"type\": \"offline\",  // <---------- NEW\n        \"payments\": 3       // <---------- NEW\n    }\n}\n","language":"json","meta":"","className":["language-json"]},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\":\"2.0\", \n    \"id\": 1,\n    \"result\" : \n    {\n        \"is_valid\" : true,\n        \"is_mine\" : false,\n        \"type\": \"offline\",  // <---------- NEW\n        \"payments\": 3       // <---------- NEW\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"type"}]},{"type":"text","value":" the type of address, possible values are"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"regular"}]},{"type":"text","value":" - regular old-style "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"hex"}]},{"type":"text","value":" encoded address, default"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"offline"}]},{"type":"text","value":" - new-style "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"base58"}]},{"type":"text","value":" encoded address for "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"offline"}]},{"type":"text","value":" transaction, could be used several times, it has no strong guaranties for privacy"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"max_privacy"}]},{"type":"text","value":" - new-style "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"base58"}]},{"type":"text","value":" encoded address for "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"maximum privacy"}]},{"type":"text","value":" transaction, could be used once"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"public_offline"}]},{"type":"text","value":" - new-style "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"base58"}]},{"type":"text","value":" encoded address for "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"offline"}]},{"type":"text","value":" transaction, it's constant, it provided less privacy, you could publish it, designed for donations"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"regular_new"}]},{"type":"text","value":" - new-style "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"base58"}]},{"type":"text","value":" encoded address for regular mimblewimble transaction"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"payments"}]},{"type":"text","value":" - the number of payments left in case of "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"offline"}]},{"type":"text","value":" address"}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"If you don't want to support newer type of transactions you could simply allow "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"regular"}]},{"type":"text","value":" addresses."}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"regex for the newer address is:\n"},{"type":"element","tag":"pre","props":{"code":"/[0-9a-zA-Z]{1,1000}/\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"/[0-9a-zA-Z]{1,1000}/\n"}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"it allows both old-style and new-style addresses."}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"in order to generate new-style address pass "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"\"type\""}]},{"type":"text","value":" parameter to "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"create_address"}]},{"type":"text","value":" method"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-->"}]},{"type":"element","tag":"pre","props":{"code":"{\n    \"jsonrpc\" : \"2.0\", \n    \"id\" : 1,\n    \"method\" : \"create_address\", \n    \"params\" :\n    {\n        \"type\": \"max_privacy\",  // <----- NEW\n        \"expiration\" : \"auto\",\n        \"comment\" : \"John Smith\"\n    }\n}\n","language":"json","meta":"","className":["language-json"]},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"jsonrpc\" : \"2.0\", \n    \"id\" : 1,\n    \"method\" : \"create_address\", \n    \"params\" :\n    {\n        \"type\": \"max_privacy\",  // <----- NEW\n        \"expiration\" : \"auto\",\n        \"comment\" : \"John Smith\"\n    }\n}\n"}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The values for "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"\"type\""}]},{"type":"text","value":" parameter are the same as described earlier. If you don't specify "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"\"type\""}]},{"type":"text","value":" "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"\"regular\""}]},{"type":"text","value":" is used by default to keep backward compatibility."}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"confidential-assets","depth":2,"text":"Confidential Assets"},{"id":"new-transaction-types","depth":2,"text":"New transaction types"},{"id":"new-address-types","depth":2,"text":"New address types"},{"id":"updating-wallet-api","depth":2,"text":"Updating wallet API","children":[{"id":"download-new-binaries-of-the-wallet-api","depth":3,"text":"Download new binaries of the wallet API"},{"id":"enable-ca-support","depth":3,"text":"Enable CA support"},{"id":"enable-new-types-of-transaction","depth":3,"text":"Enable new types of transaction"},{"id":"newer-address-type-support","depth":3,"text":"Newer address type support"}]}]}},"_type":"markdown","_id":"content:docs:core-tech:New-address-types-support.md","_source":"content","_file":"docs/core-tech/New-address-types-support.md","_extension":"md"},{"_path":"/docs/core-tech/node-initial-synchronization-(deprecated)","_dir":"core-tech","_draft":false,"_partial":false,"_locale":"","title":"-- DEPRECATED --","description":"BEAM Node initially operates in Sync mode, then eventually it switches to the Standard mode.","body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"deprecated"},"children":[{"type":"text","value":"-- DEPRECATED --"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"BEAM Node initially operates in "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Sync"}]},{"type":"text","value":" mode, then eventually it switches to the "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Standard"}]},{"type":"text","value":" mode."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Initial state selection is performed according to the following logic:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"If the current blockchain tip is non-empty, i.e. contains at least the genesis block "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Standard"}]},{"type":"text","value":" mode is selected."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"If there is a "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Treasury"}]},{"type":"text","value":" block(s) defined - the Node is supposed to create the genesis block. It switches to the "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Standard"}]},{"type":"text","value":" mode, mines the genesis block(s), and eventually broadcasts it to the network."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Otherwise "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Sync"}]},{"type":"text","value":" mode is activated."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The goal of the "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Sync"}]},{"type":"text","value":" mode is to allow the fast-Sync via "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Macroblock"}]},{"type":"text","value":" whenever possible. It consists of three phases."}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Detection phase"}]},{"type":"text","value":". Node analyzes its peers, and selects the most suitable "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Macroblock"}]},{"type":"text","value":" to download."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Download phase"}]},{"type":"text","value":". Node downloads the "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Macroblock"}]},{"type":"text","value":" (by portions), from one or several peers."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Import phase"}]},{"type":"text","value":". Once fully downloaded - the Node uses it to import, and then switches to the "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Standard"}]},{"type":"text","value":" mode."}]}]},{"type":"element","tag":"h3","props":{"id":"synchronization-via-macroblock"},"children":[{"type":"text","value":"Synchronization via Macroblock"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Macroblock"}]},{"type":"text","value":" is a \"compressed\" blockchain history, which includes the following:"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"All the block headers, with PoW."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"All the transaction kernels."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The unspent UTXO set."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In contrast to the original blocks the macroblock doesn't contain any info about spent UTXOs. Once downloaded, the Node verifies the following:"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"All the headers are valid (sane, have valid PoW, form a valid blockchain)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"All the original kernels are included in the macroblock\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"This is done by verifying groups of kernels corresponding to a specific block w.r.t. kernel commitment in the appropriate header."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"This proves that all the original transactions are included."}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The resulting state of the system is valid:\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Unspent UTXOs with all the kernels form a valid transformation from the genesis to the asserted height."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The overall value equals what it should be according to the emission schedule."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Recent coinbase UTXOs are time-locked, according to the system rules."}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"detection-phase"},"children":[{"type":"text","value":"Detection phase"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"For each peer with non-empty tip the Node requests the following:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Chainwork proof"}]},{"type":"text","value":" (to ensure the credibility of the reported tip)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Information about the most recently generated "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Macroblock"}]},{"type":"text","value":" (its State ID)."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This continues until either enough such peers are examined, or the timeout expires (since the first suitable peer was found). The macroblock of the peer with the highest "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Chainwork"}]},{"type":"text","value":" is selected.\nIf there is no macroblock to download (which is typically the case until blockchain height is low) - the Node switches to the "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Standard"}]},{"type":"text","value":" mode, otherwise the "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Download phase"}]},{"type":"text","value":" is activated."}]},{"type":"element","tag":"h2","props":{"id":"download-phase"},"children":[{"type":"text","value":"Download phase"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"During this phase the "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Macroblock"}]},{"type":"text","value":" is downloaded by portions. Each time it gets a portion - the next portion is requested from the same peer. In case the peer goes down or has no macroblock for upload - another peer is selected."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In case of shutdown/restart - the Node will continue the download from where it stopped."}]},{"type":"element","tag":"h2","props":{"id":"import-phase"},"children":[{"type":"text","value":"Import phase"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The Node performs the import from the downloaded "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Macroblock"}]},{"type":"text","value":", and then switches to the "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Standard"}]},{"type":"text","value":" mode."}]},{"type":"element","tag":"h1","props":{"id":"notes"},"children":[{"type":"text","value":"Notes"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In case something goes wrong during the "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Sync"}]},{"type":"text","value":" mode - there is no automatic retry/restart. User intervention is required. Whereas in typical scenarios problems are unlikely, possible abnormal cases are:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"No Macroblock detected. Can happen if the peer with the highest (proven) chainwork reports than it has no "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Macroblock"}]},{"type":"text","value":". In this case Node goes straight to the "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Standard"}]},{"type":"text","value":" mode to sync, which is slower, and may not succeed in case old original blocks are already deleted in all peers."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Macroblock download stuck: Node attempts to download a "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Macroblock"}]},{"type":"text","value":" which no more exists in any of its peers. Can happen if the download takes insanely long, and during this time all the peers generated many newer "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Macroblocks"}]},{"type":"text","value":". Typically each node keeps several most recently-generated "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Macroblocks"}]},{"type":"text","value":" (7 by default), and eventually deletes older ones."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Macroblock import error (data corruped, inconsistent state). Most probably the result of DoS attack,  or less probably - some bug or the storage corruption."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In case of an error it's possible to reset the Node state, and retry the synchronization. Or, alternatively, the most recent "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Macroblock"}]},{"type":"text","value":" may be downloaded manually, and given to the Node for explicit initialization"}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"synchronization-via-macroblock","depth":3,"text":"Synchronization via Macroblock"},{"id":"detection-phase","depth":2,"text":"Detection phase"},{"id":"download-phase","depth":2,"text":"Download phase"},{"id":"import-phase","depth":2,"text":"Import phase"}]}},"_type":"markdown","_id":"content:docs:core-tech:Node-initial-synchronization-(DEPRECATED).md","_source":"content","_file":"docs/core-tech/Node-initial-synchronization-(DEPRECATED).md","_extension":"md"},{"_path":"/docs/core-tech/node-standard-operation-mode","_dir":"core-tech","_draft":false,"_partial":false,"_locale":"","title":"Node Standard Operation Mode","description":"According to the protocol Node advertises its tip (header) to all the connected peers, which may potentially be interested in it. Potentially interested means the following:","body":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"According to the protocol Node advertises its tip (header) to all the connected peers, which may "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"potentially"}]},{"type":"text","value":" be interested in it. Potentially interested means the following:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The peer tip has lower Chainwork"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The peer tip has the same Chainwork, but the tip is different\nImmediately after connecting the tip is always sent, because the peer tip is not known yet (by default assumed empty). Then, after each state transition, the tip is sent only if either of the above criterias is satisfied."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In addition to the advertising, Nodes synchronize actively: request and send headers and blocks. The data request logic is designed such that all the nodes aim to reach the tip of the heaviest branch, but in practice nodes would also request any data to achieve a higher state than the current (so that they're not easily paralyzed by revealing a non-existing tip)."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"There are 2 types of requests: headers and block."}]},{"type":"element","tag":"h2","props":{"id":"headers"},"children":[{"type":"text","value":"Headers"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"sends its tip (header) to every peer (be it client or other Node) when it connects."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Then, if the peer tip is also received, the Node"}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"headers","depth":2,"text":"Headers"}]}},"_type":"markdown","_id":"content:docs:core-tech:Node-standard-operation-mode.md","_source":"content","_file":"docs/core-tech/Node-standard-operation-mode.md","_extension":"md"},{"_path":"/docs/core-tech/one-side-payments-(take-2)-deprecated","_dir":"core-tech","_draft":false,"_partial":false,"_locale":"","title":"-- DEPRECATED --","description":"In MW transactions are built interactively, means sender and receiver must collaborate to build a transaction. Here we'll describe a scheme where the sender can pay the receiver without the latter being involved during the payment.","body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"deprecated"},"children":[{"type":"text","value":"-- DEPRECATED --"}]},{"type":"element","tag":"hr","props":{},"children":[]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In MW transactions are built interactively, means sender and receiver must collaborate to build a transaction. Here we'll describe a scheme where the sender can pay the receiver without the latter being involved during the payment."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Previously we described such a scheme that allowed one-side payments, which demanded our extension to MW which we called "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"kernel fusion"}]},{"type":"text","value":". The idea was that the receiver prepares in advance its UTXO + kernel that compensates for its blinding factor. Then in order to pay the sender creates a transaction with this UTXO appended, and another kernel "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"fused"}]},{"type":"text","value":" with that given by the receiver. The drawback of this scheme is that it was possible to transfer fixed values only (that corresponded to the prepared UTXOs)."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Here we describe a scheme without this drawback, i.e. where the sender can transfer any amount to the receiver.\nThe idea is to "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"fuse"}]},{"type":"text","value":" UTXOs rather than kernel. The receiver should prepare the UTXO only partially, then the sender would finalize it to accomplish the payment."}]},{"type":"element","tag":"h1","props":{"id":"detailed-description"},"children":[{"type":"text","value":"Detailed description"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The UTXO is redefined, and may optionally contain an "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"extra excess"}]},{"type":"text","value":", which is an arbitrary EC point with the Schnorr's signature that proves there's no value hidden (similar to kernel). So that when the UTXO signature (bulletproof) is created - it signs the visible UTXO Commitment minus the "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"extra excess"}]},{"type":"text","value":", however this "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"excess"}]},{"type":"text","value":" is accounted for in the signature, so that it's not possible to remove it (this is the fusion)."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The receiver picks an arbitrary excess, signs both this excess and the kernel that would compensate for it. In addition it picks the KDF (key deviation function) parameters."}]},{"type":"element","tag":"h1","props":{"id":"comparison-of-both-schemes"},"children":[{"type":"text","value":"Comparison of both schemes"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Kernel fusion\n*"}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[]}},"_type":"markdown","_id":"content:docs:core-tech:One-side-payments-(take-2)---DEPRECATED.md","_source":"content","_file":"docs/core-tech/One-side-payments-(take-2)---DEPRECATED.md","_extension":"md"},{"_path":"/docs/core-tech/one-side-payments","_dir":"core-tech","_draft":false,"_partial":false,"_locale":"","title":"One Side Payments","description":"In MW in order to create a valid transaction all the parties must collaborate. Here we'll present a one-side payment scheme, which, after initial setup, allows arbitrary senders to pay specified (fixed) values to a particular receiver, without any further collaboration from the receiver side.","body":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In MW in order to create a valid transaction all the parties must collaborate. Here we'll present a one-side payment scheme, which, after initial setup, allows arbitrary senders to pay specified (fixed) values to a particular receiver, without any further collaboration from the receiver side."}]},{"type":"element","tag":"h1","props":{"id":"principle"},"children":[{"type":"text","value":"Principle"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In order to receive a payment the receiver creates and publishes the following:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The value that it expects to receive"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"An UTXO (commitment + Bulletproof) that encodes the above value, with arbitrary blinding factor"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"A "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"compensatory"}]},{"type":"text","value":" kernel that compensates for the above blinding factor"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Optionally: a signed payment proof\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Should include the received value, and the above kernel ID"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"No sender address, since it's unknown, plus payment may come from multiple senders"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Should be signed by a private key bound to the receiver identity"}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The above UTXO and the kernel form a part of the transaction with zero (or any other "},{"type":"element","tag":"u","props":{},"children":[{"type":"text","value":"known"}]},{"type":"text","value":" value) blinding factor, and a known value on output. Let's call it an "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"acceptor"}]},{"type":"text","value":" part."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In order to pay this receiver the sender create its own transaction part, which has appropriate value on input, and the kernel that compensates for its blinding factor. Call it a "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"donor"}]},{"type":"text","value":" part."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Together those 2 parts form a valid transaction with 2 kernels."}]},{"type":"element","tag":"h1","props":{"id":"why-this-is-not-good-enough"},"children":[{"type":"text","value":"Why this is not good enough"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The above scheme is naïve, and there are several problems with it."}]},{"type":"element","tag":"h2","props":{"id":"value-can-be-stolen"},"children":[{"type":"text","value":"Value can be stolen"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"As we said, the above transaction consists of two parts: the "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"donor"}]},{"type":"text","value":" and the "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"acceptor"}]},{"type":"text","value":". Means it's "},{"type":"element","tag":"u","props":{},"children":[{"type":"text","value":"not atomic"}]},{"type":"text","value":". A malicious node may delete the original "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"acceptor"}]},{"type":"text","value":" part, and instead substitute its own, effectively stealing the value."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"If the above payment scheme was agreed secretly between the sender and the receiver - still there's a chance the receiver is colluded with the miners."}]},{"type":"element","tag":"h2","props":{"id":"impossible-to-prove-the-payment"},"children":[{"type":"text","value":"Impossible to prove the payment"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Normally the existence of the kernel in the blockchain together with the payment proof signed by the receiver unambiguously prove the payment. However in this case the signed payment proof doesn't include the sender address, and the sender can't prove that the payment was made by him/her."}]},{"type":"element","tag":"h1","props":{"id":"improved-scheme"},"children":[{"type":"text","value":"Improved scheme"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In BEAM the above issues are solved by the following extensions to the protocol."}]},{"type":"element","tag":"h2","props":{"id":"kernel-fusion"},"children":[{"type":"text","value":"Kernel fusion"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In BEAM it's possible to create a transaction kernel which includes \"internally\" arbitrary number of additional ones. The kernel signature accounts for all the contents, so it's not feasible to tamper with it."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"So, in order to send a payment, the sender creates a "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"composite"}]},{"type":"text","value":" kernel, which includes "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"internally"}]},{"type":"text","value":" the receiver compensatory kernel. This makes it impossible for the attacker to remove the receiver kernel, hence the receiver UTXO also must remain. This guarantees the integrity of the transaction."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In addition the sender now has an ability to prove that the payment was made by him/her. For this the sender must do the following:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Locate its composite kernel in the blockchain"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Demonstrate that it includes internally the receiver compensatory kernel, as well as the payment proof signed by the receiver, which means that this receiver kernel means accepting a specific value."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Prove that the composite kernel indeed belongs to the sender\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"It's sufficient to prove the knowledge of the blinding factor of the \"outer\" part of the kernel. Given an arbitrary data, the sender will sign it with its blinding factor. The verifier may check it corresponds to the visible kernel excess."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"This scheme must be elaborated though to prevent MITM attack."}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"duplicated-utxos-are-allowed-in-beam"},"children":[{"type":"text","value":"Duplicated UTXOs are allowed in BEAM"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This is important to allow multiple payments, as well as payments in terms of several instances of predefined values."}]},{"type":"element","tag":"h1","props":{"id":"additional-notes-and-caveats"},"children":[{"type":"text","value":"Additional notes and caveats"}]},{"type":"element","tag":"h2","props":{"id":"potential-problem-with-transaction-replaying"},"children":[{"type":"text","value":"Potential problem with transaction replaying"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Assume receiver owns several identical UTXOs, and decides to spend only one of them in a transaction.\nThe problem is that such a transaction can be replayed (repeated) several times, without the permission of the owner, each time it will consume the next such an UTXO."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"To prevent this the wallet must NEVER create a transaction that spends only (potentially) duplicated UTXOs. The set of inputs must contain at least 1 unique UTXO, which is not supposed to get duplicated (with non-negligible probability)."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This logic must be implemented in the wallet. In the simplest case the wallet may have a single \"dummy\" UTXO (i.e. with zero value) for this. Whenever necessary it will be used as an input, whereas another unique dummy will be created on output instead of the consumed one."}]},{"type":"element","tag":"h2","props":{"id":"less-anonimity"},"children":[{"type":"text","value":"Less anonimity"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Naturally the described scheme provides less anonymity than the standard MW. This however impacts the receiver only, and basically only those UTXOs used in this scheme."}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"value-can-be-stolen","depth":2,"text":"Value can be stolen"},{"id":"impossible-to-prove-the-payment","depth":2,"text":"Impossible to prove the payment"},{"id":"kernel-fusion","depth":2,"text":"Kernel fusion"},{"id":"duplicated-utxos-are-allowed-in-beam","depth":2,"text":"Duplicated UTXOs are allowed in BEAM"},{"id":"potential-problem-with-transaction-replaying","depth":2,"text":"Potential problem with transaction replaying"},{"id":"less-anonimity","depth":2,"text":"Less anonimity"}]}},"_type":"markdown","_id":"content:docs:core-tech:One-side-payments.md","_source":"content","_file":"docs/core-tech/One-side-payments.md","_extension":"md"},{"_path":"/docs/core-tech/out-of-sync-wallets","_dir":"core-tech","_draft":false,"_partial":false,"_locale":"","title":"Out of sync wallets","description":"This document describes scenarios of transferring beams between wallets which are not in sync with node or syncing is in progress.","body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"out-of-sync-wallets"},"children":[{"type":"text","value":"Out of sync wallets"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This document describes scenarios of transferring beams between wallets which are not in sync with node or syncing is in progress."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Beam is decentralized system, as a result wallet and node cannot be 100% confident about their current state. Is their last known block real tip of the chain or not? - the question wallet and node are trying to resolve through their life."},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"\nIn these circumstances, wallets may communicate with each other being on different heights of the chain. In general, this is not a problem if these wallets will come out with a valid transaction which will be accepted by the node. But there are some possibilities to create invalid transaction in this case:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"sender has selected outdated (or spent) UTXO for transaction (possible reasons: wallet clones)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"transaction kernel max height is less than current chain tip height. For this case there are following scenarios:"}]}]},{"type":"element","tag":"h2","props":{"id":"old-wallets-204431"},"children":[{"type":"text","value":"Old wallets (<= 2.0.4431)"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In this version the sender sets min and max height of the kernel."}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"if sender is in sync whereas receiver is out-of-sync the kernel's height will be correct, receiver will simply accept the transaction and sender will send it to the node."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"if sender is out-of-sync and its known tip height is significantly less than current chain's height, then it will create kernel which will be rejected by the node and transaction will be failed."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"if sender is out-of-sync and the difference in height with the chain is less than transaction lifetime (default lifetime is 120 blocks it should be roughly equal 2h), then new transaction probably will be accepted by the node."}]}]},{"type":"element","tag":"h2","props":{"id":"new-wallets-204431"},"children":[{"type":"text","value":"New wallets (> 2.0.4431)"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Starting from this version min and max height are set by receiver. If receiver got invitation to transaction it makes kernel's max height as currently known height + lifetime (120 block by default). Sender checks that this height is valid from his known height and sends transaction to the node."}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"if sender is in sync and receiver is out-of-sync and its known height is far below sender's (more than lifetime of transaction), then transaction will be failed by sender."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"if sender is out-of-sync, but receiver is in sync and its known height is far above sender's, then transaction will be failed by sender."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"if both sender and receiver are out-of-sync and kernel's maximum height is below than current chain height, then transaction will be failed by the node"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"in other cases, kernel with valid range of heights should be created and, as a result, it should most likely be accepted by the node"}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"old-wallets-204431","depth":2,"text":"Old wallets (<= 2.0.4431)"},{"id":"new-wallets-204431","depth":2,"text":"New wallets (> 2.0.4431)"}]}},"_type":"markdown","_id":"content:docs:core-tech:Out-of-sync-wallets.md","_source":"content","_file":"docs/core-tech/Out-of-sync-wallets.md","_extension":"md"},{"_path":"/docs/core-tech/payment-confirmation-(proof)","_dir":"core-tech","_draft":false,"_partial":false,"_locale":"","title":"Payment Confirmation (proof)","description":"Before describing the Payment confirmation - some basic definitions, concepts and disambiguations.","body":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Before describing the Payment confirmation - some basic definitions, concepts and disambiguations."}]},{"type":"element","tag":"h2","props":{"id":"coins-transactions-kernels-and-bbs-addresses"},"children":[{"type":"text","value":"Coins, Transactions, Kernels and BBS addresses"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In MW there are no addresses, and all the UTXOs (i.e. coins) look like random EC points, no public info that can bind a specific UTXO to a user."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Upon initialization the wallet either generates a secret 12-word phrase, or is given it explicitly (in case of restore). It is used to derive the "},{"type":"element","tag":"u","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Master Secret"}]}]}]},{"type":"text","value":" - the root secret key, used to generate all other secret objects."}]},{"type":"element","tag":"h3","props":{"id":"utxos"},"children":[{"type":"text","value":"UTXOs"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In Beam UTXOs are created by the wallet using its "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Master Secret"}]},{"type":"text","value":", and they are signed in a special way, by which the wallet can identify them in the blockchain, whereas for others they are indistinguishable."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"u","props":{},"children":[{"type":"text","value":"Note"}]},{"type":"text","value":": when your wallet receives a payment from another one - your resulting UTXO is created by "},{"type":"element","tag":"u","props":{},"children":[{"type":"text","value":"your"}]},{"type":"text","value":" wallet, not by the sender."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This means that by scanning the blockchain you can "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"always"}]},{"type":"text","value":" recover all your UTXOs that are unspent yet. It doesn't matter how the transaction was negotiated, which BBS address was used. UTXOs can always be identified with the "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Master Secret"}]},{"type":"text","value":"."}]},{"type":"element","tag":"h3","props":{"id":"transactions"},"children":[{"type":"text","value":"Transactions"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In MW parties must negotiate to build a valid transaction. Upon successful negotiation they build and then broadcast a valid transaction, that consumes some of their UTXOs (inputs), produces new UTXOs (outputs), and a "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Transaction Kernel"}]},{"type":"text","value":" (more about it later)."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In Beam transactions are negotiated via (S)BBS - secure message exchange system."}]},{"type":"element","tag":"h3","props":{"id":"bbs-address"},"children":[{"type":"text","value":"BBS address"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In order to negotiate parties generate at least one "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"BBS address"}]},{"type":"text","value":". It consists of the following:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Channel number"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Public Key"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In order to send a BBS message to an address one uses the Public Key to encrypt the message, and then this message is broadcasted on the specified channel and replicated in all the Nodes. There is an E2E encryption, no info about to/from is leaked as well, and it's only possible to decrypt with the appropriate "},{"type":"element","tag":"u","props":{},"children":[{"type":"text","value":"Private Key"}]},{"type":"text","value":" of the BBS address."}]},{"type":"element","tag":"h3","props":{"id":"kernels"},"children":[{"type":"text","value":"Kernels"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Each transaction produces a transaction kernel (one or more), which has the following properties:"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"It's co-signed by all the transaction parties (the sender and the receiver in a simple payment transaction). Both must cooperate."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"It's practically unique. There is no feasible way to craft the same valid kernel without the cooperation of all the parties."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Unlike UTXOs it can't be consumed, hence it's guaranteed to stay in the blockchain."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"So, the "},{"type":"element","tag":"u","props":{},"children":[{"type":"text","value":"kernel in the blockchain is the only reliable indicator of the transaction"}]},{"type":"text","value":". The even presence of it in the blockchain unambiguously tells the transaction took place, whereas its absence means the opposite. So all the transaction parties can monitor the blockchain (or ask for a proof from an arbitrary node) to see if/when the transaction takes place."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"However in case of a dispute the "},{"type":"element","tag":"u","props":{},"children":[{"type":"text","value":"receiver can deny any relation to this transaction"}]},{"type":"text","value":"."}]},{"type":"element","tag":"h1","props":{"id":"payment-confirmation"},"children":[{"type":"text","value":"Payment confirmation"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Payment Confirmation"}]},{"type":"text","value":" is a cryptographic proof, using which the sender should be able to convince a 3"},{"type":"element","tag":"sup","props":{},"children":[{"type":"text","value":"rd"}]},{"type":"text","value":" party that the receiver actually received the payment."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"It's a message, signed by the receiver, that he/she accepts the payment. It includes the following:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Value to-be-received"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"KernelID"}]},{"type":"text","value":" - the unique identifier of the kernel of the transaction"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"SenderID"}]},{"type":"text","value":" - The Public Key of the sender BBS address"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Signature"}]},{"type":"text","value":" - The Schnorr's signature of this message, signed by the Private Key of the receiver BBS address."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"During the transaction negotiation, before the sender completes its part of the kernel signature, the receiver is expected to sign the Payment confirmation. Without it the sender will not collaborate, and the transaction negotiation fails with \"no payment confirmation\" error (unless unconfirmed payments are enabled, please see remarks for more info)."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Upon successful negotiation - the Payment confirmation is stored within the sender wallet, and can be exported and then validated by everyone."}]},{"type":"element","tag":"h2","props":{"id":"dispute-what-should-be-presentedassumed"},"children":[{"type":"text","value":"Dispute - what should be presented/assumed?"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In case the transaction actually took place whereas the receiver denies it - the following should be presented:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Proof of the kernel with the specified KernelID in the blockchain.\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Can be discovered via blockchain explorer."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"It's also possible to get a cryptographic proof of inclusion this kernel in a specific parent block of the current tip."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Since blocks also include the Timestamp - it's also an indication of when the transaction took place."}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Payment confirmation."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The following is assumed:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The receiver BBS address (Private key of which was used to sign the Payment confirmation) indeed belongs to the receiver\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"This is usually the case for automated payment systems, where a user registers via a website, and defines its BBS address for payments."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"For regular P2P payments the sender should consider how it'd bind the specific user to its BBS address. Perhaps some documentation or message history should be kept."}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The sender BBS address indeed belongs to the sender\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The receiver may claim that this specific transaction was from someone else"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The sender theoretically "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"can"}]},{"type":"text","value":" prove that the sender address belongs to him/her by proving that he/she has the appropriate private key.\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"A naive non-interactive scheme (like the one used by the receiver) is inappropriate, because it's prone to the MITM attack."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Right now the appropriate interactive scheme isn't implemented yet. But it will be in the near future."}]}]}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"remarks"},"children":[{"type":"text","value":"Remarks"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Initially released wallet didn't support the payment confirmations.\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"To be backward-compatible, the newer wallet by default "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"will"}]},{"type":"text","value":" send a payment to the older one, without confirmation."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"This can be prevented, by explicitly configuring it to disallow unconfirmed payments.\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"beam-wallet --payment_proof_required=1"}]}]}]}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"During wallet restore - only the unspent UTXOs are recovered.\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Neither transaction info, nor Payment confirmations can be recovered if they are lost"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"It's important to back-up the wallet"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Exporting the Payment confirmation:\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"beam-wallet payment_proof_export --tx_id=<tx_id>"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<tx_id>"}]},{"type":"text","value":" is the internal transaction ID"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Upon success the payment confirmation summary will be printed, as well as the appropriate text-encoded (base-64) message, including all the relevant data and the signature, that can be copied and verified within an arbitrary wallet."}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Verifying the Payment confirmation:\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"beam-wallet payment_proof_verify --payment_proof=<message>"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"<message>"}]},{"type":"text","value":" is the exported text-encoded message."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The message will be parsed, signature verified, and upon success - the Payment confirmation details will be printed."}]}]}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"coins-transactions-kernels-and-bbs-addresses","depth":2,"text":"Coins, Transactions, Kernels and BBS addresses","children":[{"id":"utxos","depth":3,"text":"UTXOs"},{"id":"transactions","depth":3,"text":"Transactions"},{"id":"bbs-address","depth":3,"text":"BBS address"},{"id":"kernels","depth":3,"text":"Kernels"}]},{"id":"dispute-what-should-be-presentedassumed","depth":2,"text":"Dispute - what should be presented/assumed?"},{"id":"remarks","depth":2,"text":"Remarks"}]}},"_type":"markdown","_id":"content:docs:core-tech:Payment-confirmation-(proof).md","_source":"content","_file":"docs/core-tech/Payment-confirmation-(proof).md","_extension":"md"},{"_path":"/docs/core-tech/programming-beam-terms-and-concepts","_dir":"core-tech","_draft":false,"_partial":false,"_locale":"","title":"Programming Beam Terms And Concepts","description":"","body":{"type":"root","children":[{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The following document is still under construction and is subject to changes"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This page presents a list of terms and concepts used in Beam code"}]},{"type":"element","tag":"h3","props":{"id":"address"},"children":[{"type":"text","value":"Address"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In Mimblewimble, unlike most other cryptocurrencies there are no addresses stored in the blockchian. However the Wallets still should be able to communicate to interactively create a transaction. Which is why in Beam, we provide the Secure Bulletin Board System (SBBS ) which allows wallets to send encrypted messages to each other via Beam Nodes. In SBBS=, each wallet is identified by one or more SBBS Addresses. Each Address is represented by a private/public key pair. All addreses are derived from the seed phrase, using a separate key chain, and are only stored in the wallet (not on the blockchain)"}]},{"type":"element","tag":"h3","props":{"id":"atomic-swap"},"children":[{"type":"text","value":"Atomic Swap"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Atomic Swap is an algorithm that allows to exchange value between two independent blockchains (for example Bitcoin and Beam) without having to rely on a centralized entity, such as exchange or any of the parties participating in the exchange. Atomic Swap is based on an ability to lock funds using Hash and Time Lock Contracts ("},{"type":"element","tag":"a","props":{"href":"https://en.bitcoin.it/wiki/Hash_Time_Locked_Contracts","rel":["nofollow"]},"children":[{"type":"text","value":"HTLC"}]},{"type":"text","value":" ) on both chains."}]},{"type":"element","tag":"h3","props":{"id":"bulletproofs"},"children":[{"type":"text","value":"Bulletproofs"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Each UTXO, though confidential, should be a representation of a positive value. Creating negative coins could break the protocol and allow for arbitrary inflation. To prove that value is positive without revealing the value itself, Beam uses an implementation of the non interactive zero knowledge proof algorithm knows as "},{"type":"element","tag":"a","props":{"href":"https://eprint.iacr.org/2017/1066.pdf","rel":["nofollow"]},"children":[{"type":"text","value":"Bulletproofs"}]},{"type":"text","value":". Beam is using its own "},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/blob/master/core/ecc_bulletproof.cpp","rel":["nofollow"]},"children":[{"type":"text","value":"implementation"}]},{"type":"text","value":" of Bulletproofs."}]},{"type":"element","tag":"h3","props":{"id":"coin"},"children":[{"type":"text","value":"Coin"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Internal representation of the single commitment for specific value in Beam Wallet. In reality, key id and value are stored and the actual blinding factors are generated each time. More detailed explanation on this structure is provided below"}]},{"type":"element","tag":"h3","props":{"id":"dandelion"},"children":[{"type":"text","value":"Dandelion"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"An improvement of the basic P2P layer 'gossip' style protocol "},{"type":"element","tag":"a","props":{"href":"https://arxiv.org/abs/1805.11060","rel":["nofollow"]},"children":[{"type":"text","value":"whitepaper"}]},{"type":"text","value":" making tracing of transaction source much more difficult through introduction of two phase transaction propagation. In 'Stem' phase, the transaction is sent through a series of random peers, during which each peer decides with a given probability whether to continue the 'Stem' or whether to 'Fluff'. In 'Fluff' phrase the transaction is broadcast to all known peers, effectively falling back to 'gossip' for transaction propagation."}]},{"type":"element","tag":"h3","props":{"id":"elliptic-curve"},"children":[{"type":"text","value":"Elliptic Curve"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Beam makes heavy use of "},{"type":"element","tag":"a","props":{"href":"https://en.wikipedia.org/wiki/Elliptic-curve_cryptography","rel":["nofollow"]},"children":[{"type":"text","value":"Elliptic Curve Cryptography"}]},{"type":"text","value":". Beam uses the "},{"type":"element","tag":"a","props":{"href":"https://en.bitcoin.it/wiki/Secp256k1","rel":["nofollow"]},"children":[{"type":"text","value":"same curve as Bitcoin"}]}]},{"type":"element","tag":"h3","props":{"id":"equihash"},"children":[{"type":"text","value":"Equihash"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Beam uses Equihash Proof of Work mining algorithm. "},{"type":"element","tag":"a","props":{"href":"https://en.wikipedia.org/wiki/Equihash","rel":["nofollow"]},"children":[{"type":"text","value":"description"}]},{"type":"text","value":"."}]},{"type":"element","tag":"h3","props":{"id":"fly-client"},"children":[{"type":"text","value":"Fly Client"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In Beam implementation FlyClient protocol (located in project core) provides an abstraction for communication with either 'own' node and 'untrusted' node and hides implementation details from the Wallet. "},{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":" "},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/blob/master/core/fly_client.h","rel":["nofollow"]},"children":[{"type":"text","value":"implementation"}]}]}]},{"type":"element","tag":"h3","props":{"id":"kidf"},"children":[{"type":"text","value":"KIDF"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Hierarchical key generator that allows to create new private and public keys from the master secret, generated from the seed_phrase and specific key index."}]},{"type":"element","tag":"h3","props":{"id":"merkle-tree"},"children":[{"type":"text","value":"Merkle Tree"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://en.wikipedia.org/wiki/Merkle_tree","rel":["nofollow"]},"children":[{"type":"text","value":"Merkle Tree"}]},{"type":"text","value":" is a data structure representing a binary tree in which each non leaf node holds a cryptographic hash or the child nodes and which provides an efficient way to prove that a certain element is present in the tree in logarithmic time. In Beam, Merkle Tree is based on a "},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/blob/master/core/radixtree.h","rel":["nofollow"]},"children":[{"type":"text","value":"Radix tree"}]},{"type":"text","value":", in which the order of nodes is independent of the order in which the values were entered into the tree. Beam "},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/blob/master/core/merkle.h","rel":["nofollow"]},"children":[{"type":"text","value":"implementation"}]},{"type":"text","value":" uses generalized concept of Merkle Mountain Range, which can be seen as a collection fo Merkle Trees"}]},{"type":"element","tag":"h3","props":{"id":"own-node"},"children":[{"type":"text","value":"Own node"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Beam wallet has two key modes of operation one with 'own' (trusted) node and one with 'untrusted' node. Regardless whether local or remote, the 'own' node knows the 'owner key' which is generated from the seed phrase and is used to tag specific UTXOs that belong to the wallet. In this case the node is considered trusted and the information received from it is treated accordindly. In case of the untrusted node, Beam Wallet employ the protocol called ChainWork (an implementation of the FlyClient idea by Benedict Bunz) which implements compact and reliable way of validation the information sent by the Node."}]},{"type":"element","tag":"h3","props":{"id":"peer"},"children":[{"type":"text","value":"Peer"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In the context of Node to Node communications, each node is a Peer for all others. Node stores and manages the list of Peers it is currently connected to and uses this list to propagate transactions and blocks. "},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/blob/master/core/peer_manager.h","rel":["nofollow"]},"children":[{"type":"text","value":"Peer Manager"}]},{"type":"text","value":" implements the logic of rating Peers and preferring those that are quicker to respond and provide valid information."}]},{"type":"element","tag":"h3","props":{"id":"sbbs"},"children":[{"type":"text","value":"SBBS"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"SBBS stands for Secure Bulletin Board System and provides an infrastructure for sending secure and encrypted messages between Beam Wallets to create a transaction. SBBS is part of the Beam Node. Each Address in the SBBS represents a private / public key pair used for encrypting the messages. Each wallet listens to a number of SBBS channels, derived from the Address to reduce the load on the wallet "},{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":" "},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/blob/master/core/proto.h","rel":["nofollow"]},"children":[{"type":"text","value":"protocol"}]}]}]},{"type":"element","tag":"h3","props":{"id":"seed-phrase"},"children":[{"type":"text","value":"Seed Phrase"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This is the most secret key generated from the 12 word seed phrase. Using the seed phrase only it is always possible to reconstruct the entire UTXO set directly from the blockchain. In fact, this is the only information that can be extracted from the blockchain, all the other data including transaction history should be stored locally in the wallet."}]},{"type":"element","tag":"h3","props":{"id":"transaction"},"children":[{"type":"text","value":"Transaction"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In Mimblewimble transaction is created by both Sender and Receiver wallets and in its simplest form describes exchange of certain value between two (or more) participants. Unlike most other blockchains, transactions are actually meaningless in the context of the blockchain itself. They are however important in the context of the wallet. "},{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":" "},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/blob/master/wallet/base_transaction.h","rel":["nofollow"]},"children":[{"type":"text","value":"implementation"}]}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"address","depth":3,"text":"Address"},{"id":"atomic-swap","depth":3,"text":"Atomic Swap"},{"id":"bulletproofs","depth":3,"text":"Bulletproofs"},{"id":"coin","depth":3,"text":"Coin"},{"id":"dandelion","depth":3,"text":"Dandelion"},{"id":"elliptic-curve","depth":3,"text":"Elliptic Curve"},{"id":"equihash","depth":3,"text":"Equihash"},{"id":"fly-client","depth":3,"text":"Fly Client"},{"id":"kidf","depth":3,"text":"KIDF"},{"id":"merkle-tree","depth":3,"text":"Merkle Tree"},{"id":"own-node","depth":3,"text":"Own node"},{"id":"peer","depth":3,"text":"Peer"},{"id":"sbbs","depth":3,"text":"SBBS"},{"id":"seed-phrase","depth":3,"text":"Seed Phrase"},{"id":"transaction","depth":3,"text":"Transaction"}]}},"_type":"markdown","_id":"content:docs:core-tech:Programming-Beam-Terms-and-Concepts.md","_source":"content","_file":"docs/core-tech/Programming-Beam-Terms-and-Concepts.md","_extension":"md"},{"_path":"/docs/core-tech/programming-beam-wallet-transactions","_dir":"core-tech","_draft":false,"_partial":false,"_locale":"","title":"Programming Beam Wallet Transactions","description":"This section describes the structure of Beam transactions. Transactions are created and managed locally in the Beam wallet.","body":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This section describes the structure of Beam transactions. Transactions are created and managed locally in the Beam wallet."}]},{"type":"element","tag":"h2","props":{"id":"transaction-parameters"},"children":[{"type":"text","value":"Transaction parameters"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Transactions are defined and stored in the database as a set of transaction parameters, thus allowing a lot of flexibility."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The complete list of transaction parameters is defined "},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/blob/edf0bb8a16626f6e1160bc09a7af4e0a40adb813/wallet/common.h#L226","rel":["nofollow"]},"children":[{"type":"text","value":"here"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Transaction parameters are divided into two groups. "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Public"}]},{"type":"text","value":" parameters can be set during the interaction between wallets. Once public parameter is set, it can not be changed. "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Private"}]},{"type":"text","value":" parameters, can be set and reset at any time within the wallet and are not sent outside the wallet. The reason for this separation is to maintain a clear distinction between the parameters that are revealed to or received from the other wallet and can thus irreversibly affect the state of negotiation between the wallets creating the transaction."}]},{"type":"element","tag":"h2","props":{"id":"transaction-id"},"children":[{"type":"text","value":"Transaction id"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"TxID, "},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/blob/edf0bb8a16626f6e1160bc09a7af4e0a40adb813/wallet/common.h#L37","rel":["nofollow"]},"children":[{"type":"text","value":"defined here"}]},{"type":"text","value":" is the unique id of the transaction"}]},{"type":"element","tag":"h2","props":{"id":"itransaction-interface-definition"},"children":[{"type":"text","value":"ITransaction interface "},{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":" "},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/blob/edf0bb8a16626f6e1160bc09a7af4e0a40adb813/wallet/base_transaction.h#L28","rel":["nofollow"]},"children":[{"type":"text","value":"definition"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Defines basic set of operations for each transaction, Update, Cancel and Rollback"}]},{"type":"element","tag":"pre","props":{"className":["language-c++"],"code":"struct ITransaction\n    {\n        using Ptr = std::shared_ptr<ITransaction>;\n        virtual TxType GetType() const = 0;\n        virtual void Update() = 0;\n        virtual void Cancel() = 0;\n        virtual bool Rollback(Height height) = 0;\n    };\n\n","language":"c++","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"struct ITransaction\n    {\n        using Ptr = std::shared_ptr<ITransaction>;\n        virtual TxType GetType() const = 0;\n        virtual void Update() = 0;\n        virtual void Cancel() = 0;\n        virtual bool Rollback(Height height) = 0;\n    };\n\n"}]}]},{"type":"element","tag":"h2","props":{"id":"basetransaction-definition"},"children":[{"type":"text","value":"BaseTransaction "},{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":" "},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/blob/edf0bb8a16626f6e1160bc09a7af4e0a40adb813/wallet/base_transaction.h#L55","rel":["nofollow"]},"children":[{"type":"text","value":"definition"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Implements the ITransaction interface and provides the state machine for creation of transactions. Constructor for BaseTransaction receives three parameters:"}]},{"type":"element","tag":"pre","props":{"className":["language-c++"],"code":"\nBaseTransaction(INegotiatorGateway& gateway, beam::IWalletDB::Ptr walletDB, const TxID& txID);\n\n","language":"c++","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"\nBaseTransaction(INegotiatorGateway& gateway, beam::IWalletDB::Ptr walletDB, const TxID& txID);\n\n"}]}]},{"type":"element","tag":"h2","props":{"id":"basetxbuilder"},"children":[{"type":"text","value":"BaseTxBuilder"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This class encapsulates all the methods necessary for transaction creation following the protocol described "},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/wiki/Transaction-creation-protocol","rel":["nofollow"]},"children":[{"type":"text","value":"here"}]},{"type":"text","value":"."}]},{"type":"element","tag":"h2","props":{"id":"inegotiatorgateway-definition"},"children":[{"type":"text","value":"INegotiatorGateway "},{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":" "},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/blob/edf0bb8a16626f6e1160bc09a7af4e0a40adb813/wallet/common.h#L409","rel":["nofollow"]},"children":[{"type":"text","value":"definition"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Negotiator Gateway provides an abstraction of the messaging between the node or another wallet during the transaction creation. The INegotiatorGateway interface is implemented by the Wallet class."}]},{"type":"element","tag":"h2","props":{"id":"basetransactionupdate-method"},"children":[{"type":"text","value":"BaseTransaction::Update method"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The Update method describes generic logic of asynchronous transaction update. The update logic is implemented in the UpdateImpl method described below."}]},{"type":"element","tag":"pre","props":{"className":["language-c++"],"code":"\nvoid BaseTransaction::Update()\n    {\n        AsyncContextHolder async(m_Gateway);\n        try\n        {\n            if (CheckExternalFailures())\n            {\n                return;\n            }\n\n            UpdateImpl();\n\n            CheckExpired();\n        }\n        catch (const TransactionFailedException& ex)\n        {\n            LOG_ERROR() << GetTxID() << \" exception msg: \" << ex.what();\n            OnFailed(ex.GetReason(), ex.ShouldNofify());\n        }\n        catch (const exception& ex)\n        {\n            LOG_ERROR() << GetTxID() << \" exception msg: \" << ex.what();\n            OnFailed(TxFailureReason::Unknown);\n        }\n    }\n\n","language":"c++","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"\nvoid BaseTransaction::Update()\n    {\n        AsyncContextHolder async(m_Gateway);\n        try\n        {\n            if (CheckExternalFailures())\n            {\n                return;\n            }\n\n            UpdateImpl();\n\n            CheckExpired();\n        }\n        catch (const TransactionFailedException& ex)\n        {\n            LOG_ERROR() << GetTxID() << \" exception msg: \" << ex.what();\n            OnFailed(ex.GetReason(), ex.ShouldNofify());\n        }\n        catch (const exception& ex)\n        {\n            LOG_ERROR() << GetTxID() << \" exception msg: \" << ex.what();\n            OnFailed(TxFailureReason::Unknown);\n        }\n    }\n\n"}]}]},{"type":"element","tag":"h2","props":{"id":"simpletransaction-wallet_transactionh"},"children":[{"type":"text","value":"SimpleTransaction ( "},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/blob/edf0bb8a16626f6e1160bc09a7af4e0a40adb813/wallet/wallet_transaction.h#L1","rel":["nofollow"]},"children":[{"type":"text","value":"wallet_transaction.h"}]},{"type":"text","value":" )"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"SimpleTransaction extends BaseTransaction and provides an implementation of the basic confidential transaction between two wallets. The key part of the implementation is the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"void SimpleTransaction::UpdateImpl()"}]},{"type":"text","value":" method that provides the state machine for the transaction creation logic."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"//TODO: Add detailed explanation for the transaction creation logic"}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"transaction-parameters","depth":2,"text":"Transaction parameters"},{"id":"transaction-id","depth":2,"text":"Transaction id"},{"id":"itransaction-interface-definition","depth":2,"text":"ITransaction interface  definition"},{"id":"basetransaction-definition","depth":2,"text":"BaseTransaction  definition"},{"id":"basetxbuilder","depth":2,"text":"BaseTxBuilder"},{"id":"inegotiatorgateway-definition","depth":2,"text":"INegotiatorGateway  definition"},{"id":"basetransactionupdate-method","depth":2,"text":"BaseTransaction::Update method"},{"id":"simpletransaction-wallet_transactionh","depth":2,"text":"SimpleTransaction ( wallet_transaction.h )"}]}},"_type":"markdown","_id":"content:docs:core-tech:Programming-Beam-Wallet-Transactions.md","_source":"content","_file":"docs/core-tech/Programming-Beam-Wallet-Transactions.md","_extension":"md"},{"_path":"/docs/core-tech/programming-beam-wallet","_dir":"core-tech","_draft":false,"_partial":false,"_locale":"","title":"Programming Beam Wallet","description":"","body":{"type":"root","children":[{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The following document is still under construction and is subject to changes"}]}]},{"type":"element","tag":"h2","props":{"id":"key-differences-of-mimblewimble-wallets"},"children":[{"type":"text","value":"Key Differences of Mimblewimble Wallets"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Since Beam is an implementation of the Mimblewimble protocol, it has all the nuances that are specific to this protocol and have a huge impact on the wallet architecture, making it very different in comparison to most existing cryptocurrencies. Such changes include:"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Not all the information can be extracted from the blockchain. In fact, only the UTXOs are stored in the blockchain, hence all additional information regarding transactions, addresses etc... has to be locally stored in the wallet."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Transaction is created interactively by both the sender and the receiver. Hence, a state machine and communication model is required between two wallets, a problem which does not exist in Bitcoin and most other cryprocurrencies where transaction can be created by a single wallet and immediately sent to the network."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This means that Beam Wallet has several different responsibilities:"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Storing and managing the list of Coins (UTXO set)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Storing and managing SBBS Addresses (described below) for communication between wallets"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Allow wallet to wallet (W2W) communications and interactive creation of new transactions"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Handle wallet to node (W2N) communications, send transactions to the node, request proofs for kernels and UTXOs and process blockchain updates and manage transaction and Coin state"}]}]},{"type":"element","tag":"h2","props":{"id":"wallet-code-structure-and-high-level-architecture"},"children":[{"type":"text","value":"Wallet Code Structure and High Level Architecture"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Beam Wallet has the following conceptual modules (located in the wallet folder)"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":""},"children":[{"type":"text","value":"core"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/wiki/Beam-Wallet-Database","rel":["nofollow"]},"children":[{"type":"text","value":"database"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/wiki/Programming-Beam-Wallet-Transactions","rel":["nofollow"]},"children":[{"type":"text","value":"transactions"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":""},"children":[{"type":"text","value":"wallet"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":""},"children":[{"type":"text","value":"wallet_client"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The structure of the files and folders is currently being refactored to match the structure described above"}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"key-differences-of-mimblewimble-wallets","depth":2,"text":"Key Differences of Mimblewimble Wallets"},{"id":"wallet-code-structure-and-high-level-architecture","depth":2,"text":"Wallet Code Structure and High Level Architecture"}]}},"_type":"markdown","_id":"content:docs:core-tech:Programming-Beam-Wallet.md","_source":"content","_file":"docs/core-tech/Programming-Beam-Wallet.md","_extension":"md"},{"_path":"/docs/core-tech/programming-beam","_dir":"core-tech","_draft":false,"_partial":false,"_locale":"","title":"Programming Beam","description":"The following series of articles starts the documentation process for Beam project.","body":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The following series of articles starts the documentation process for Beam project."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Beam is a Mimblewimble implementation done from scratch in the C++ programming language."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/wiki/Programming-Beam-Terms-and-Concepts","rel":["nofollow"]},"children":[{"type":"text","value":"Key Terms and Concepts"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Beam project can be divided into the following logical modules:"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":""},"children":[{"type":"text","value":"P2P and networking"}]},{"type":"text","value":". A lower level implementation of the communication mechanisms. There are several different types of communications: Node2Node, Node2Wallet and Wallet2Wallet. The implementation of the P2P infrastructure can be found "},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/tree/master/p2p","rel":["nofollow"]},"children":[{"type":"text","value":"here"}]},{"type":"text","value":"."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":""},"children":[{"type":"text","value":"Cryptography and Core elements"}]},{"type":"text","value":". All cryptographic primitives and necessary building blocks are implemented in the "},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/tree/master/core","rel":["nofollow"]},"children":[{"type":"text","value":"core"}]},{"type":"text","value":" of the project"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":""},"children":[{"type":"text","value":"Beam Node"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/wiki/Programming-Beam-Wallet","rel":["nofollow"]},"children":[{"type":"text","value":"Beam Wallet"}]}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[]}},"_type":"markdown","_id":"content:docs:core-tech:Programming-Beam.md","_source":"content","_file":"docs/core-tech/Programming-Beam.md","_extension":"md"},{"_path":"/docs/core-tech/proposal-for-i-o-layer-and-p2p","_dir":"core-tech","_draft":false,"_partial":false,"_locale":"","title":"Proposal For I O Layer And P2P","description":"","body":{"type":"root","children":[{"type":"element","tag":"h2","props":{"id":"нынешнее-видение-по-организации-сетевого-в-тч-p2p-модуля"},"children":[{"type":"text","value":"Нынешнее видение по организации сетевого (в т.ч. p2p) модуля"}]},{"type":"element","tag":"h3","props":{"id":"несколько-уровней-внутри-самого-модуля"},"children":[{"type":"text","value":"Несколько уровней внутри самого модуля"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Для тестирования самое то. Код понятный, кусок логики не придется искать в других директориях. Снизу наверх:"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"IO уровень: оперирует соединениями, сырыми байтами, реконнектами, таймаутами и асинхронностью (там поллинг самого общего плана)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Peer уровень:"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"протокол и сериализация,"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"коллекция peers,"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"броадкасты,"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"персистентное хранилище, связанное с peers (пусть отдельно будет от хранилища блокчейна),"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"ban/unban"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Dandelion (да, он здесь, а не в уровне 3)"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Integration layer:"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"фильтр и cache (это множество хешей, которые позволят не отправлять TX или блок в узел, у которого он есть, а также не отсылать в другие модули то, что им уже известно)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"бридж с основной системой, т.е. формирование и трансляция запросов/ответов между ней (API модулей) и уровнем 2"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"межпоточное взаимодействие"}]}]}]}]},{"type":"element","tag":"h3","props":{"id":"основные-моменты-подробнее"},"children":[{"type":"text","value":"Основные моменты подробнее"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Один поток на все вышесказанное (сетевая логика, а также уровни 2 и 3)"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Тут логика, которая не требует вычислений, можно иметь очень много активных соединений, пределом может стать только сеть или память, но не cpu"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Исключение: может понадобиться отдельный поток, который зипует громоздкие ответы. Пусть они асинхронно формируются по мере надобности в них"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Взаимодействие с другими потоками или через очереди (если это запросы/ответы) или напрямую (явно сделать, чтоб было понятно, что это константный кусок памяти). Мьютексы ставить на небольшие кусочки обновляемых данных (ну например { total_difficulty, total_height }), которые можно быстро прочитать"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"В очередях только что-то легко копируемое или immutable data, напр. { Type type; shared_ptr"},{"type":"element","tag":"const","props":{"tx":""},"children":[{"type":"text","value":" и т.п.}"}]}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Сетевое хозяйство и протокол"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Ограничиваемся TCP и IPv4. Потом успеем добавить если что понадобится, а так пусть меньше сначала кода будет"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"В качестве библиотеки по сетевым вещам и асинхронности очень желаю libuv. Обоснование ниже."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Можно взять за основу протокол из grin, что-то убрать/добавить проблем не составит"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Dandelion: надо определиться с одной из 2х схем, прописанных в документации по grin"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Peers"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Логику взять у grin, для начала"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Для хранилища (не блокчейн, только для peers, оно отдельное должно быть) взять sqlite как наиболее проверенную временем штуку. Она гибкая (индексы и т.д.). Кстати, in-memory sqlite тоже хорошо себя зарекомендовало как штука для работы с табличными данными и сложными индексами. Когда/если будут видны ограничения по performance или станет ясно, что не нужно индексирование, можно быдет подобрать key-value storage побыстрее"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Кэши и фильтры"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"То же, что и у grin для начала. Можно будет какой-нибудь bloom filter попробовать, чтоб избежать ограничений, которые мы в этой части видим у grin"}]}]}]}]},{"type":"element","tag":"h3","props":{"id":"доводы-в-пользу-libuv"},"children":[{"type":"text","value":"Доводы в пользу libuv"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Оно здесь: "},{"type":"element","tag":"a","props":{"href":"http://docs.libuv.org/en/v1.x/","rel":["nofollow"]},"children":[{"type":"text","value":"http://docs.libuv.org/en/v1.x/"}]},{"type":"text","value":", "},{"type":"element","tag":"a","props":{"href":"https://github.com/libuv/libuv","rel":["nofollow"]},"children":[{"type":"text","value":"https://github.com/libuv/libuv"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Качественная и компактная вещь. На ней весь node.js и его асинхронность и "},{"type":"element","tag":"a","props":{"href":"https://github.com/libuv/libuv/wiki/Projects-that-use-libuv","rel":["nofollow"]},"children":[{"type":"text","value":"много еще чего"}]},{"type":"text","value":"."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Можно зафиксировать версию и исходники встроить в build system"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"У меня с ней очень положительный опыт и не один. Вообще могу всю эту часть взять на себя и гарантировать хороший результат, и быстрый, т.к. изнутри знаю, что там"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Будет на несколько % медленнее самописного решения на epoll, но зато mature и не один линукс"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Туда же приделывается асинхронность и таймеры, API можно вывести приличное, на std::function, например"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Также можно приделать, когда понадобится, http и TLS"}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"нынешнее-видение-по-организации-сетевого-в-тч-p2p-модуля","depth":2,"text":"Нынешнее видение по организации сетевого (в т.ч. p2p) модуля","children":[{"id":"несколько-уровней-внутри-самого-модуля","depth":3,"text":"Несколько уровней внутри самого модуля"},{"id":"основные-моменты-подробнее","depth":3,"text":"Основные моменты подробнее"},{"id":"доводы-в-пользу-libuv","depth":3,"text":"Доводы в пользу libuv"}]}]}},"_type":"markdown","_id":"content:docs:core-tech:Proposal-for-I-O-layer-and-P2P.md","_source":"content","_file":"docs/core-tech/Proposal-for-I-O-layer-and-P2P.md","_extension":"md"},{"_path":"/docs/core-tech/readme","_dir":"core-tech","_draft":false,"_partial":false,"_locale":"","title":"Current version: Groovy Gluon 7.2.13533","description":"Download latest binaries here: https://www.beam.mw/downloads","body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"current-version-groovy-gluon-7213533"},"children":[{"type":"text","value":"Current version: Groovy Gluon 7.2.13533"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Download latest binaries here: "},{"type":"element","tag":"a","props":{"href":"https://www.beam.mw/downloads","rel":["nofollow"]},"children":[{"type":"text","value":"https://www.beam.mw/downloads"}]}]},{"type":"element","tag":"h2","props":{"id":"important"},"children":[{"type":"text","value":"IMPORTANT"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/wiki/Beam-Fierce-Fermion-6.0-Upgrade-Guide-for-pools-and-exchanges","rel":["nofollow"]},"children":[{"type":"text","value":"Upgrade guide for pools and exchanges"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In case you encounter any problem, please open a GitHub ticket at "},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/issues","rel":["nofollow"]},"children":[{"type":"text","value":"https://github.com/BeamMW/beam/issues"}]},{"type":"text","value":" or email us at "},{"type":"element","tag":"a","props":{"href":"mailto:testnet@beam.mw"},"children":[{"type":"text","value":"testnet@beam.mw"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"For effective investigation please attach the following items for every issue:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Logs, compressed into a single archive"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Configuration file"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Command line parameters of the executed binary"}]}]},{"type":"element","tag":"h1","props":{"id":"beam-confidential-defi-platform"},"children":[{"type":"text","value":"Beam Confidential DeFi Platform"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/shader-sdk","rel":["nofollow"]},"children":[{"type":"text","value":"Beam Shader SDK"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/shader-sdk/wiki/BVM-functions-for-shaders","rel":["nofollow"]},"children":[{"type":"text","value":"BVM Specifications"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/wiki/WASM-wallet-client","rel":["nofollow"]},"children":[{"type":"text","value":"Web wallet client"}]}]},{"type":"element","tag":"h1","props":{"id":"documentation"},"children":[{"type":"text","value":"Documentation"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://documentation.beam.mw","rel":["nofollow"]},"children":[{"type":"text","value":"User Guides"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/wiki/Exchange-Pool-integration-guide","rel":["nofollow"]},"children":[{"type":"text","value":"Exchange integration Guide"}]}]},{"type":"element","tag":"h1","props":{"id":"specifications"},"children":[{"type":"text","value":"Specifications"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://github.com/beam-mw/beam/wiki/Beam-Technical-Specifications","rel":["nofollow"]},"children":[{"type":"text","value":"Beam Technical Specifications"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/wiki/Cryptographic-primitives","rel":["nofollow"]},"children":[{"type":"text","value":"Cryptographic primitives"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/wiki/Merkle-trees","rel":["nofollow"]},"children":[{"type":"text","value":"Merkle trees"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/wiki/DMMR-internal-layout","rel":["nofollow"]},"children":[{"type":"text","value":"DMMR internal layout"}]}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/wiki/Core-transaction-elements","rel":["nofollow"]},"children":[{"type":"text","value":"Core transaction elements"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/wiki/Blocks,-headers,-system-states.-Concept,-relevant-structures-and-values","rel":["nofollow"]},"children":[{"type":"text","value":"Blocks, headers, system states: concept, relevant structures and values"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/wiki/System-state-in-depth","rel":["nofollow"]},"children":[{"type":"text","value":"System state in-depth"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Node\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/wiki/UTXO-set,-horizons-and-cut-through","rel":["nofollow"]},"children":[{"type":"text","value":"Synchronization and cut-through"}]}]}]}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/wiki/BEAM-Mining","rel":["nofollow"]},"children":[{"type":"text","value":"Beam Mining"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/wiki/Mining-Difficulty","rel":["nofollow"]},"children":[{"type":"text","value":"Mining Difficulty"}]}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/wiki/Secure-bulletin-board-system-(SBBS)","rel":["nofollow"]},"children":[{"type":"text","value":"Secure Bulletin Board System (SBBS)"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/wiki/Transaction-creation-protocol","rel":["nofollow"]},"children":[{"type":"text","value":"Transaction creation protocol"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/wiki/Main-wallet-entities-and-their-attributes","rel":["nofollow"]},"children":[{"type":"text","value":"Wallet application: main entities and their attributes"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/wiki/Payment-confirmation-(proof)","rel":["nofollow"]},"children":[{"type":"text","value":"Payment Confirmation"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/wiki/One-side-payments","rel":["nofollow"]},"children":[{"type":"text","value":"One side payment"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/wiki/Transactions-with-Beam-Wallet-CLI-over-TOR-network","rel":["nofollow"]},"children":[{"type":"text","value":"Transactions with Beam Wallet CLI over TOR network"}]}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/wiki/Exchange-Pool-integration-guide","rel":["nofollow"]},"children":[{"type":"text","value":"Exchanges and Pools Integration Guide"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/wiki/Cold-wallet-implementation","rel":["nofollow"]},"children":[{"type":"text","value":"Cold Wallet Support"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/wiki/Beam-URI-scheme","rel":["nofollow"]},"children":[{"type":"text","value":"Beam URI scheme"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/wiki/Atomic-swap-token","rel":["nofollow"]},"children":[{"type":"text","value":"Token format"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/wiki/Beam-news-channels","rel":["nofollow"]},"children":[{"type":"text","value":"News channels"}]}]}]},{"type":"element","tag":"h1","props":{"id":"apis"},"children":[{"type":"text","value":"APIs"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/wiki/Beam-mining-protocol-API-(Stratum)","rel":["nofollow"]},"children":[{"type":"text","value":"Beam Mining API (Stratum)"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/wiki/Beam-wallet-protocol-API","rel":["nofollow"]},"children":[{"type":"text","value":"Beam Wallet API"}]}]}]},{"type":"element","tag":"h1","props":{"id":"lelantus-mw"},"children":[{"type":"text","value":"Lelantus MW"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/wiki/Lelantus-MW","rel":["nofollow"]},"children":[{"type":"text","value":"Lelantus MW"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/wiki/MW-CLA","rel":["nofollow"]},"children":[{"type":"text","value":"Confidential Lelantus Assets"}]}]}]},{"type":"element","tag":"h1","props":{"id":"hardware-wallet-support"},"children":[{"type":"text","value":"Hardware Wallet Support"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/wiki/HW-wallet-requirements","rel":["nofollow"]},"children":[{"type":"text","value":"Hardware Wallet Requirements"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/wiki/How-to-test-Beam-with-Trezor-wallet","rel":["nofollow"]},"children":[{"type":"text","value":"How to test Beam with Trezor T HW wallet"}]}]}]},{"type":"element","tag":"h1","props":{"id":"research"},"children":[{"type":"text","value":"Research"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://github.com/beam-mw/beam/wiki/Thoughts-about-eliminating-transaction-kernels","rel":["nofollow"]},"children":[{"type":"text","value":"Eliminating transaction kernels"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://github.com/beam-mw/beam/wiki/Transaction-graph-obfuscation","rel":["nofollow"]},"children":[{"type":"text","value":"Transaction graph obfuscation"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://github.com/beam-mw/beam/wiki/Wallet-audit","rel":["nofollow"]},"children":[{"type":"text","value":"Auditable wallet"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://github.com/beam-mw/beam/wiki/Atomic-swap","rel":["nofollow"]},"children":[{"type":"text","value":"Atomic swap"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://github.com/beam-mw/beam/wiki/Confidential-assets","rel":["nofollow"]},"children":[{"type":"text","value":"Confidential assets"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/wiki/Lightning-Network","rel":["nofollow"]},"children":[{"type":"text","value":"Laser Beam"}]}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"important","depth":2,"text":"IMPORTANT"}]}},"_type":"markdown","_id":"content:docs:core-tech:README.md","_source":"content","_file":"docs/core-tech/README.md","_extension":"md"},{"_path":"/docs/core-tech/rescan-offline","_dir":"core-tech","_draft":false,"_partial":false,"_locale":"","title":"Rescan offline","description":"This scenario is for cases when you don't want to stop running node and wallet and you wish to ensure if the balance is correct.","body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"rescan-offline"},"children":[{"type":"text","value":"Rescan offline"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This scenario is for cases when you don't want to stop running node and wallet and you wish to ensure if the balance is correct."}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Create a clone of your running wallet. This can be done by restoring the wallet from the seed"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"./beam_wallet restore --seed_phrase=<a;d;b>"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"or"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"by copying of its "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"wallet.db"}]},{"type":"text","value":" file"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"It can be done on separate machine with no internet connection."}]},{"type":"element","tag":"ol","props":{"start":2},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Copy your running node.db. to these machine"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Ensure that this copied node has "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"your"}]},{"type":"text","value":" owner_key. Export it from your cloned wallet"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"./beam_wallet export_owner_key"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"and launch your node"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"./beam_node --owner_key=<key>"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Note that this node may have no connection to internet, as a result this wallet will not accept incoming transactions."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Node.db"}]},{"type":"text","value":" contains the blockchain data up to the height when you did a copy of it.\nNow, with owner key node should distinguish all your transaction outputs."}]},{"type":"element","tag":"ol","props":{"start":4},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Connect you cloned wallet to your offline node"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"./beam_wallet listen -n 127.0.0.1:10000"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"or if you copied existing wallet.db"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"`./beam_wallet rescan -n 127.0.0.1:10000"}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[]}},"_type":"markdown","_id":"content:docs:core-tech:Rescan-offline.md","_source":"content","_file":"docs/core-tech/Rescan-offline.md","_extension":"md"},{"_path":"/docs/core-tech/secure-bulletin-board-system-(sbbs)","_dir":"core-tech","_draft":false,"_partial":false,"_locale":"","title":"Secure bulletin board system (SBBS)","description":"","body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"secure-bulletin-board-system-sbbs"},"children":[{"type":"text","value":"Secure bulletin board system (SBBS)"}]},{"type":"element","tag":"h2","props":{"id":"overview"},"children":[{"type":"text","value":"Overview"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The main goal of BBS is to allow wallets to communicate with each other in a secure and asynchronous manner. Using BBS wallets allows individuals to exchange messages, even if one of the individuals is offline. In general, BBS is a virtual board, where users can place messages, and each message is encrypted. For encryption, the public key of the recipient is used. This implies that the recipient’s public key is his address in terms of this system. Every participant who is interested in messages from this board, observes and tries to decrypt new messages with his private key, and he manages to do so only if the message has been addressed to him. It consists of server and client sides. The server is implemented as a part of the node. The client is a wallet."}]},{"type":"element","tag":"h2","props":{"id":"server-side"},"children":[{"type":"text","value":"Server side"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"BBS is a part of our node, This implementation implies that messages are sent to n=32 channels, which can ultimately change. The channel is calculated from the public key (first 5 bits). A client has to subscribe to a specific channel, and the server will retranslate all of the new messages to subscribers. Also, the server receives and stores within the database all new messages and exchanges these messages with other servers using a P2P protocol. This logic is implemented in class Node::Peer. It represents the node’s peer and handles the node’s P2P message. BBS messages are a part of node P2P protocol."}]},{"type":"element","tag":"h4","props":{"id":"bbssubscribe"},"children":[{"type":"text","value":"BbsSubscribe"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Message "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"tp"}]},{"type":"text","value":" allows clients to subscribe/unsubscribe to notifications from the node about new messages."}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"BbsChannel m_Channel"}]},{"type":"text","value":" – channel to listen."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Timestamp m_TimeFrom"}]},{"type":"text","value":" – timestamp used to avoid sending of out-of-date messages."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"bool m_On"}]},{"type":"text","value":" – subscribe/unsubscribe flag."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"When the server receives this message from the peer with "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"m_On == true"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Node::Peer::m_Subscriptions"}]},{"type":"text","value":" list doesn’t have it (the look up is made by channel), then the node adds a new instance of "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Node::Bbs::Subscription"}]},{"type":"text","value":" to this list and to "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Node::m_Bbs::m_Subscribed"}]},{"type":"text","value":". If the node has messages for this channel that are sent after given timestamp, then it sends them as a new "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"BbsMsg"}]},{"type":"text","value":" to this subscriber. If "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"m_On == false"}]},{"type":"text","value":" and a given subscriber exists in "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"m_Subscriptions"}]},{"type":"text","value":" list, the node simply removes it."}]},{"type":"element","tag":"h4","props":{"id":"bbsmsg"},"children":[{"type":"text","value":"BbsMsg"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"A message which is used to put an encrypted message onto the board or to exchange between nodes:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"BbsChannel m_Channel"}]},{"type":"text","value":" – target channel."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Timestamp m_TimePosted"}]},{"type":"text","value":" – timestamp, when wallet has posted message to bbs."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"ByteBuffer m_Message"}]},{"type":"text","value":" – the encrypted content."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"When this message is received, server gets current timestamp. If "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"m_TimePosted"}]},{"type":"text","value":" <= currentTime-24 hours, i.e. to old, or "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"m_TimePosted"}]},{"type":"text","value":" > currentTime + 2 hour (someone generates messages from future), then node rejects this message. If it doesn’t have this message it stores it in database, sends "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"BbsHaveMsg"}]},{"type":"text","value":", to inform other peers about new bbs message, and sends "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"BbsMsg "}]},{"type":"text","value":"to subscriberd interested in messages from "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"m_Channel"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"When this message is received, the server gets a current timestamp. If "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"m_TimePosted <= currentTime-24"}]},{"type":"text","value":" hours, i.e. too old, or "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"m_TimePosted > currentTime + 2"}]},{"type":"text","value":" hours (someone generates messages from the future), then the node rejects this message. If it doesn’t have this message, it is stored in the database, and sent "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"BbsHaveMsg"}]},{"type":"text","value":", in order to inform other peers about new bbs message. It sends "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"BbsMsg"}]},{"type":"text","value":" to subscribed interested in messages from "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"m_Channel"}]},{"type":"text","value":"."}]},{"type":"element","tag":"h4","props":{"id":"bbshavemsg"},"children":[{"type":"text","value":"BbsHaveMsg"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"A Message which is used by BBS server (node) to exchange information about message that it has."}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"BbsMsgID m_Key"}]},{"type":"text","value":" – the message’s key. It is defined as a hash of the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"m_Message"}]},{"type":"text","value":" and the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"m_Channel"}]},{"type":"text","value":" in "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"BbsMsg"}]},{"type":"text","value":". In order to handle this message, the node checks if it already has this message. If it doesn’t, it stores it into waitlist "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Node::m_Bbs::m_W"}]},{"type":"text","value":" and sends "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"BbsGetMsg"}]},{"type":"text","value":"."}]}]},{"type":"element","tag":"h4","props":{"id":"bbsgetmsg"},"children":[{"type":"text","value":"BbsGetMsg"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"A peer server request for bbs message, which occurs as a response to "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"BbsHaveMsg"}]},{"type":"text","value":"."}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"BbsMsgID m_Key"}]},{"type":"text","value":" If the node has a bbs message with a given key, it sends it back as "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"BbsMsg"}]},{"type":"text","value":"."}]}]},{"type":"element","tag":"h4","props":{"id":"bbspickchannel"},"children":[{"type":"text","value":"BbsPickChannel"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The Client asks the server for recommended channels."}]},{"type":"element","tag":"h4","props":{"id":"bbspickchannelres"},"children":[{"type":"text","value":"BbsPickChannelRes"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Server channel recommendation"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"BbsChannel m_Channel"}]},{"type":"text","value":" - recommended channel. Once in an hour "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"(Node::m_Cfg::m_Timeout::m_BbsCleanupPeriod_ms)"}]},{"type":"text","value":" the node tries to find a channel which is populated with less than 100 listeners "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"(Node::m_Cfg::m_BbsIdealChannelPopulation)"}]},{"type":"text","value":". Found value is stored into "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"m_RecommendedChannel"}]},{"type":"text","value":" and it is used as a response to "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"BbsPickChannel"}]},{"type":"text","value":"."}]}]},{"type":"element","tag":"h2","props":{"id":"client-side"},"children":[{"type":"text","value":"Client side"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In the wallet, the BBS communication is placed in WalletNetworkViaBbs class. It allows to send a message to BBS and it manages BBS keys and timestamps. This class contains references to:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"IWallet& m_Wallet"}]},{"type":"text","value":" - which is used for callbacks to wallet object."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"proto::FlyClient::INetwork& m_NodeNetwork"}]},{"type":"text","value":" - which is used to communicate with the node."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"When the wallet wants to create a new address (from cli, ui) or load already-created addresses from the database, "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"AddOwnAddress()"}]},{"type":"text","value":" is called. This method calls "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"IWalletDB::calcKey()"}]},{"type":"text","value":" with the key type "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Bbs"}]},{"type":"text","value":" to generate a private key for BBS. The public key is created using "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"proto::Sk2Pk()"}]},{"type":"text","value":". Index, which is used for generating a private key that is stored in "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"wallet.db"}]},{"type":"text","value":". The wallet will then choose a channel. If the client has not subscribed to the chosen channel, the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"BbsSubscribe"}]},{"type":"text","value":" message is posted to the node via "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"m_NodeNetwork"}]},{"type":"text","value":". If the wallet wants to send a message via Bbs it calls the overridden method "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Send()"}]},{"type":"text","value":". In this method, the given message is encrypted using "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"proto::BbsEncrypt()"}]},{"type":"text","value":" and sent to "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"m_NodeNetwork"}]},{"type":"text","value":". If the wallet received the bbs message it updates the timestamp for the channel and stores them to the database."}]},{"type":"element","tag":"h4","props":{"id":"usage-of-bbs-to-exchange-message"},"children":[{"type":"text","value":"Usage of BBS to exchange message"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"There are two sides wallet "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"A"}]},{"type":"text","value":" and wallet "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"B"}]},{"type":"text","value":"."}]},{"type":"element","tag":"h5","props":{"id":"a-and-b"},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"A"}]},{"type":"text","value":" and "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"B"}]},{"type":"text","value":":"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"picks or generates a pair of keys public and private"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"choose channel//asks BBS server (node) for suitable"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"sends "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"BbsSubscribe"}]},{"type":"text","value":" to chosen channel, if needed"}]}]},{"type":"element","tag":"h5","props":{"id":"wallet-a"},"children":[{"type":"text","value":"Wallet "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"A"}]},{"type":"text","value":":"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"chooses the address of target recipient (his public key)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"creates a message, it has to contain its public key as an address for answer"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"encrypts this message using pub"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"creates "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"BbsMsg"}]},{"type":"text","value":", fills it and sends to BBS server"}]}]},{"type":"element","tag":"h5","props":{"id":"wallet-b"},"children":[{"type":"text","value":"Wallet "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"B"}]},{"type":"text","value":":"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"receives "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"BbsMsg"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"updates timestamps for the message channel"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"tries to decrypt bbs message using the known key for message channel"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"if succeeded, it notifies wallet"}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"overview","depth":2,"text":"Overview"},{"id":"server-side","depth":2,"text":"Server side"},{"id":"client-side","depth":2,"text":"Client side"}]}},"_type":"markdown","_id":"content:docs:core-tech:Secure-bulletin-board-system-(SBBS).md","_source":"content","_file":"docs/core-tech/Secure-bulletin-board-system-(SBBS).md","_extension":"md"},{"_path":"/docs/core-tech/setting-up-read-only-wallet-for-monitoring","_dir":"core-tech","_draft":false,"_partial":false,"_locale":"","title":"Setting Up Read Only Wallet For Monitoring","description":"","body":{"type":"root","children":[{"type":"element","tag":"h2","props":{"id":"overview"},"children":[{"type":"text","value":"Overview"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The intention of this scenario is to have a some kind of monitoring wallet,  which can provide info about the list of the transactions, possibly, the list of UTXO, but without any ability to create or accept a new transaction and without access to any secrets."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In this scenario user should have:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"a regular (live ) wallet connected to the node, but initialized in the way, that it has separate storage for private data (master key) and for public data. User should be able to get this public database and provide it to monitoring wallet."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"a read-only (monitoring) wallet api server, also connected to the node. It should have access to the public data only. This server should have set up Access control list (ACL). This wallet does not hold any secret keys"}]}]},{"type":"element","tag":"h2","props":{"id":"setup-live-wallet"},"children":[{"type":"text","value":"Setup live wallet"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Init live wallet with separated private data (--cold_wallet flag allows us to do this)"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"beam-wallet init --cold_wallet"}]},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"it creates new wallet with two databases: "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"wallet.db"}]},{"type":"text","value":" for public data and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"wallet.db.private"}]},{"type":"text","value":" for private."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Create \"own\" node for this wallet, for this you should export wallet's owner key and pass it to the node. This will let this wallet get notifications about UTXO which belong to this wallet."},{"type":"element","tag":"br","props":{},"children":[]},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"beam-wallet export_owner_key"}]},{"type":"element","tag":"br","props":{},"children":[]},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"beam-node --owner_key=<output from previous command> --peer=<url to existing node on target network>"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Use this wallet for sending/receiving beams. It should work as regular BEAM wallet with no exceptions. You even may put "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"wallet.db"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"wallet.db.private"}]},{"type":"text","value":" to the application data folder of UI wallet and it should work."}]}]},{"type":"element","tag":"h2","props":{"id":"setup-read-only-monitoring-wallet"},"children":[{"type":"text","value":"Setup read only monitoring wallet"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"On a different machine, setup another instance of wallet API"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/wiki/Beam-wallet-protocol-API#user-authorization","rel":["nofollow"]},"children":[{"type":"text","value":"Setup access to you wallet API"}]},{"type":"text","value":"."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Stop monitoring wallet"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Copy "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"wallet.db"}]},{"type":"text","value":" from live wallet to a monitoring wallet."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Launch wallet API server."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Repeat steps 3 to 5 with updated "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"wallet.db"}]},{"type":"text","value":" from live wallet to get latest transactions."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"wallet-api -n <url of a node with port> --port=<port> --use_acl=1 --acl_path=wallet_api.acl"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This wallet API server should allow to perform:"}]},{"type":"element","tag":"pre","props":{"code":"validate_address\naddr_list\ndelete_address\nedit_address\ntx_status\ntx_list\ntx_cancel\nwallet_status\nget_utxo\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"validate_address\naddr_list\ndelete_address\nedit_address\ntx_status\ntx_list\ntx_cancel\nwallet_status\nget_utxo\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"whereas the following methods should be prohibited (due to lack of secret key)"}]},{"type":"element","tag":"pre","props":{"code":"create_address\ntx_send\ntx_split\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"create_address\ntx_send\ntx_split\n"}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"overview","depth":2,"text":"Overview"},{"id":"setup-live-wallet","depth":2,"text":"Setup live wallet"},{"id":"setup-read-only-monitoring-wallet","depth":2,"text":"Setup read only monitoring wallet"}]}},"_type":"markdown","_id":"content:docs:core-tech:Setting-up-read-only-wallet-for-monitoring.md","_source":"content","_file":"docs/core-tech/Setting-up-read-only-wallet-for-monitoring.md","_extension":"md"},{"_path":"/docs/core-tech/supported-nvidia-cards-for-mining-using-opencl-miner","_dir":"core-tech","_draft":false,"_partial":false,"_locale":"","title":"Supported NVidia Cards For Mining Using OpenCL Miner","description":"The following list of card should be supported by Beam OpenCL miner:","body":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The following list of card should be supported by Beam OpenCL miner:"}]},{"type":"element","tag":"pre","props":{"code":"Tesla K40/K80\nGeForce 700\nGT-730\nTesla K40\nTesla K80\nTesla/Quadro M series\nQuadro M6000\nGeForce 900\nGTX-970\nGTX-980\nGTX Titan X\nGP100/Tesla P100 – DGX-1\nGTX 1080\nGTX 1070\nGTX 1060\nGTX 1050\nGTX 1030\nTitan Xp\nTesla P40\nTesla P4\nTesla V100\nGTX 1180 (GV104)\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"Tesla K40/K80\nGeForce 700\nGT-730\nTesla K40\nTesla K80\nTesla/Quadro M series\nQuadro M6000\nGeForce 900\nGTX-970\nGTX-980\nGTX Titan X\nGP100/Tesla P100 – DGX-1\nGTX 1080\nGTX 1070\nGTX 1060\nGTX 1050\nGTX 1030\nTitan Xp\nTesla P40\nTesla P4\nTesla V100\nGTX 1180 (GV104)\n"}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[]}},"_type":"markdown","_id":"content:docs:core-tech:Supported-nVidia-cards-for-mining-using-OpenCL-miner.md","_source":"content","_file":"docs/core-tech/Supported-nVidia-cards-for-mining-using-OpenCL-miner.md","_extension":"md"},{"_path":"/docs/core-tech/system-state-in-depth","_dir":"core-tech","_draft":false,"_partial":false,"_locale":"","title":"System State In Depth","description":"So the system state is comprised from the existing UTXOs, Kernels, and inherited system states, each is organized in an appropriate data structure.","body":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"So the system state is comprised from the existing UTXOs, Kernels, and inherited system states, each is organized in an appropriate data structure."}]},{"type":"element","tag":"h1","props":{"id":"utxos"},"children":[{"type":"text","value":"UTXOs"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The Node must track all the existing unspent UTXOs in the system, and the maturity of each one (i.e. the state height from which it can be spent). In addition we support duplicate UTXOs (there's a use-case for this)."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"UTXOs are stored in an "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"UtxoTree"}]},{"type":"text","value":", which is a variant of our "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"RadixTree"}]},{"type":"text","value":". Each UTXO is represented by an "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"UtxoLeaf"}]},{"type":"text","value":", which is a leaf node with a key and additional values."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The key is a 321-bit long bits sequence, consisting of (the order matters):"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"ECC::Point m_Commitment"}]},{"type":"text","value":" 257 bits"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Height m_Maturity"}]},{"type":"text","value":" 64 bits"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The value that is stored for each such a node is:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Input::Count m_Count"}]},{"type":"text","value":" 32 bits"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"So that there is a unique "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"UtxoLeaf"}]},{"type":"text","value":" for each Commitment + Maturity combination. However if several UTXOs happen to have both those parameters identical - the information is stored within a single "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"UtxoLeaf"}]},{"type":"text","value":" (with the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"m_Count"}]},{"type":"text","value":" > 1). This is an intentional design decision. To validate transactions it's essential to know the Commitment and the Maturity of the all the UTXOs, whereas other parameters are not important, and such UTXOs are considered identical."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"When an input UTXO is referenced by the Commitment - the Node always looks for the UTXO with the specified Commitment, and the lowest Maturity, which also must not be higher than the current State Height (recall that "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"RadixTree"}]},{"type":"text","value":" supports search by partially-specified key). So there is no ambiguity with the selection of the input UTXOs."}]},{"type":"element","tag":"h3","props":{"id":"utxo-hash-proof"},"children":[{"type":"text","value":"UTXO Hash, Proof"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"When the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"UtxoTree"}]},{"type":"text","value":" hash is evaluated, the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"UtxoLeaf"}]},{"type":"text","value":" is hashed by the following formula:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"UtxoLeaf.Hash = Hash ( UtxoLeaf.Key | UtxoLeaf.m_Count )"}]},{"type":"text","value":" (the 321-bit key is zero-padded to the byte boundary)"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The client requests a Merkle proof for an UTXO - the following is specified:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Commitment"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"MaturityMin"}]},{"type":"text","value":" - Optionally the minimum Maturity to query (0 by default)"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The Node response includes an "},{"type":"element","tag":"u","props":{},"children":[{"type":"text","value":"array"}]},{"type":"text","value":" of the following:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Maturity"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Count"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Merkle Proof"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"After receiving the result the client evaluates the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"UtxoLeaf.Hash"}]},{"type":"text","value":" according to the same formula, substituting the asserted Maturity and Count, and then verifies the Merkle proof."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Empty array means such an UTXO doesn't exist. The array size is limited to 20 elements, so that if there are more combinations - the client should repeat the query, settings a higher "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"MaturityMin"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Sounds somewhat complicated, but this is the price of the versatility, supporting duplicates. For regular UTXOs, however, where the duplicates are not possible (unless with a negligible probability), the client won't deal with all this. There will either be a single proof, or no proof."}]},{"type":"element","tag":"h1","props":{"id":"kernels"},"children":[{"type":"text","value":"Kernels"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Same idea as with UTXOs, but simpler, because kernels have no Maturity, and duplicates are not supported. So - it's just hashes. The Kernel ID is evaluated, and this is the hash of the leaf node."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"For the Kernel proof the client just sends its ID, and gets a single Proof iff the kernel indeed exists in the System state."}]},{"type":"element","tag":"h3","props":{"id":"why-kernel-proofs-are-important"},"children":[{"type":"text","value":"Why Kernel proofs are important?"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Unlike UTXOs, Kernels don't contain funds, and can't be used in the future transactions, so why would anyone need a proof for it?"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The main reason is that Kernel proof can be used to verify that UTXO is spent. The client may ask for an UTXO proof and get an empty result, but this is not a proof! It's impossible to prove that an object does not exist in the Merkle tree."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"So, Kernel proof is the best verification of the transaction, no matter if UTXOs are received or spent."}]},{"type":"element","tag":"h1","props":{"id":"inherited-states"},"children":[{"type":"text","value":"Inherited states"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Implemented in terms of the "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"D-MMR"}]},{"type":"text","value":" (Distributed MMR). The leaf nodes are the System State Hashes (not to be confused with the System Definition Hashes). Apart from the somewhat sophisticated D-MMR, the rest is straighforward (generating and verifying proofs)."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"They are needed in 2 scenarios:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Simple scenario: a client was offline for a while, then comes back, and wants to ensure the last State that it observed is still a part of the current consensus branch."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"More complex: Client requests a "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"ChainWork Proof"}]},{"type":"text","value":", which is a (relatively) compact proof for all the state headers, without fully downloading them all."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Note"}]},{"type":"text","value":": In contrast to UTXOs and Kernels, the client knows the structure of the Inherited States tree, hence it receives the proof in a form of a "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Hard"}]},{"type":"text","value":" proof, i.e. only the hashes, whereas the hashing direction is deduced automatically."}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"utxo-hash-proof","depth":3,"text":"UTXO Hash, Proof"},{"id":"why-kernel-proofs-are-important","depth":3,"text":"Why Kernel proofs are important?"}]}},"_type":"markdown","_id":"content:docs:core-tech:System-state-in-depth.md","_source":"content","_file":"docs/core-tech/System-state-in-depth.md","_extension":"md"},{"_path":"/docs/core-tech/testing-beam-hard-fork-on-local-testnet","_dir":"core-tech","_draft":false,"_partial":false,"_locale":"","title":"Testing Beam Hard Fork On Local Testnet","description":"Beam Clear Cathode 3.0 version includes a Hard Fork that will be activated in block 321321 (approximately around August 15th, 2019). As part of the fork, the mining algo will be updated to BeamHash II.","body":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Beam Clear Cathode 3.0 version includes a Hard Fork that will be activated in block 321321 (approximately around August 15th, 2019). As part of the fork, the mining algo will be updated to BeamHash II."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Pools and Solo miners are strongly encouraged to test the version before that time using the latest versions of LolMiner and GMiner that already support BeamHash II."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"To test the fork please perform the following steps:"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Download latest Testnet binaries (or build from source)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Follow the instructions on "},{"type":"element","tag":"a","props":{"href":"http://documentation.beam.mw/en/latest/rtd_pages/dev_local_setup.html","rel":["nofollow"]},"children":[{"type":"text","value":"Local Setup"}]},{"type":"text","value":" to create a stand alone network."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Follow the instruction in "},{"type":"element","tag":"a","props":{"href":"http://documentation.beam.mw/en/latest/rtd_pages/user_mining_beam.html","rel":["nofollow"]},"children":[{"type":"text","value":"Mining Beam"}]},{"type":"text","value":" section, to setup the latest version of the miner."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Use Fork1="},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"fork height"}]},{"type":"text","value":" parameter in the configuration file for both node and wallet, to set a fork height."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"IMPORTANT: You have to delete the node.db after the fork happens to repeat the test. Just setting a different fork height would not be enough."}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[]}},"_type":"markdown","_id":"content:docs:core-tech:Testing-Beam-Hard-Fork-on-Local-Testnet.md","_source":"content","_file":"docs/core-tech/Testing-Beam-Hard-Fork-on-Local-Testnet.md","_extension":"md"},{"_path":"/docs/core-tech/testnet-command-line-instructions","_dir":"core-tech","_draft":false,"_partial":false,"_locale":"","title":"Testnet Command Line Instructions","description":"Welcome to Beam Testnet 1","body":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Welcome to Beam Testnet 1"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Node binaries can be downloaded from the Beam website ("},{"type":"element","tag":"a","props":{"href":"http://beam-mw.com/downloads","rel":["nofollow"]},"children":[{"type":"text","value":"http://beam-mw.com/downloads"}]},{"type":"text","value":") or from Github ("},{"type":"element","tag":"a","props":{"href":"https://github.com/beam-mw/beam-builds/tree/master/testnet/release","rel":["nofollow"]},"children":[{"type":"text","value":"https://github.com/beam-mw/beam-builds/tree/master/testnet/release"}]},{"type":"text","value":")"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"You can run the node with command line options, or modify the attached config file. Once you start the node it will create a node.db file in the same folder. This file will store internal state of the node."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Reporting issues"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In case you encounter any problems, please report them via еmail to "},{"type":"element","tag":"a","props":{"href":"mailto:testnet@beam-mw.com"},"children":[{"type":"text","value":"testnet@beam-mw.com"}]},{"type":"text","value":" or open a github ticket at "},{"type":"element","tag":"a","props":{"href":"https://github.com/beam-mw/beam","rel":["nofollow"]},"children":[{"type":"text","value":"https://github.com/beam-mw/beam"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Attach archive with logs, configuration file and command line parameters to allow effective investigation of the issues."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Running a node"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Node parameters can be either passed through command line or written in the beam-node.cfg file."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Example:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"./beam-node --peer 138.68.130.189:8101 --wallet_seed 111 --mining_threads 1 --file_log_level debug"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The --peer parameter specifies a comma separated list of peers that the node will initially connect to. After the connection is established, the node will get an updated list of peers from the nodes, along with peer ratings and from that moment it will manage the connections on its own."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"--wallet_seed - is a secret key for the wallet that will connect to this node to collect mining rewards (if the node is mining)"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"--mining_treads - specifies the number of CPU cores utilized for mining. If set to 0, node acts as validating node only."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"--file_log_level - allows you to see that is going on behind the scenes."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Upon first launch, the node will download current blockchain history in batch mode as one large macroblock. After the initial sync is complete, the node will continue to sync blocks and individual transactions from the current blockchain Tip and onwards. This can be seen in the log entry:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"My Tip: 24704-f2ab414ba6430d85"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Here is the full list of options supported by the node"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"General options:\n-h "},{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":" --help"}]},{"type":"text","value":"                     \tlist of all options\n-p "},{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":" --port"}]},{"type":"text","value":" arg (=10000)        \tport to start the server on\n--wallet_seed arg                 \tsecret key generation seed\n--log_level arg                   \tlog level "},{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"info|debug|verbose"}]},{"type":"text","value":"\n--file_log_level arg              \tfile log level "},{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"info|debug|verbose"}]},{"type":"text","value":"\n-v "},{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":" --version"}]},{"type":"text","value":"               \treturn project version\n--git_commit_hash                 \treturn commit hash"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Node options:\n--storage arg (=node.db)          \tnode storage path\n--history_dir arg (=./)           \tdirectory for compressed history\n--temp_dir arg (=/tmp/)           \ttemp directory for compressed history,\nmust be on the same volume\n--mining_threads arg (=0)         \tnumber of mining threads(there is no\nmining if 0)\n--verification_threads arg (=-1)  \tnumber of threads for cryptographic\nverifications (0 = single thread, -1 =\nauto)\n--miner_id arg (=0)               \tseed for miner nonce generation\n--peer arg                        \tnodes to connect to\n--import arg (=0)                 \tSpecify the blockchain height to\nimport. The compressed history is\nassumed to be downloaded the the\nspecified directory"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Rules configuration:\n--CoinbaseEmission arg (=80000000)\tcoinbase emission in a single block\n--MaturityCoinbase arg (=60)      \tnum of blocks before coinbase UTXO can\nbe spent\n--MaturityStd arg (=0)            \tnum of blocks before non-coinbase UTXO\ncan be spent\n--MaxBodySize arg (=1048576)      \tMax block body size "},{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"bytes"}]},{"type":"text","value":"\n--DesiredRate_s arg (=60)         \tDesired rate of generated blocks\n"},{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"seconds"}]},{"type":"text","value":"\n--DifficultyReviewCycle arg (=1440)   num of blocks after which the mining\ndifficulty can be adjusted\n--MaxDifficultyChange arg (=2)    \tMax difficulty change after each cycle\n(each step is roughly x2 complexity)\n--TimestampAheadThreshold_s arg (=7200)\nBlock timestamp tolerance "},{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"seconds"}]},{"type":"text","value":"\n--WindowForMedian arg (=25)       \tHow many blocks are considered in\ncalculating the timestamp median\n--AllowPublicUtxos arg (=0)       \tset to allow regular (non-coinbase)\nUTXO to have non-confidential signature\n--FakePoW arg (=0)                \tDon't verify PoW. Mining is simulated\nby the timer. For tests only"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Running a command line wallet"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"After extracting the wallet binary to a folder, first we need to initialize the wallet by running:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"./beam-wallet --command init"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"You will be prompted to provide wallet password and then seed. If you are using a miner node, the seed should be the same as was set in the --wallet_seed flag of the node"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Printing wallet information"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"To get the information about the status of the wallet, run:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"./beam-wallet --command info -n 127.0.0.1:10000"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Receiving Beams"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"To receive beams we need to start a wallet in a listening mode by running:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"./beam-wallet --command listen -n 127.0.0.1:10000;"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"After entering the password, wallet will print out the line similar to:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"WalletID 4a0e54b24d5fdf06891a8eaa57b4b3ac16731e932a64da8ec768083495d624f1 subscribes to BBS channel 9"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This show the SBBS address the wallet is listening on. This address can be copied and sent to Sender."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Sending Beams"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"./beam-wallet --command=send -n 127.0.0.1:10000 -r 77de6bd3de40bc58ab7e4fb68d5e0596fd1e72f3c4fb3eb3d106082d89264909 -a 11.3 -f 0.2"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"To send Beams, use 'send' command with the following parameters:\n-r "},{"type":"element","tag":"sbbs","props":{"address":"","of":"","the":"","receiver":"","node":""},"children":[{"type":"text","value":"\n-a "},{"type":"element","tag":"amount","props":{"of":"","beams":"","to":"","send":""},"children":[{"type":"text","value":"\n-f "},{"type":"element","tag":"transaction","props":{"fee":""},"children":[]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Full list of wallet options"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"General options:\n-h "},{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":" --help"}]},{"type":"text","value":"    \t                 list of all options\n-p "},{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":" --port"}]},{"type":"text","value":" arg (=10000)        \tport to start the server on\n--wallet_seed arg                 \tsecret key generation seed\n--log_level arg                   \tlog level "},{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"info|debug|verbose"}]},{"type":"text","value":"\n--file_log_level arg              \tfile log level "},{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"info|debug|verbose"}]},{"type":"text","value":"\n-v "},{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":" --version"}]},{"type":"text","value":"                  \treturn project version\n--git_commit_hash                 \treturn commit hash"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Wallet options:\n--pass arg                        \tpassword for the wallet\n-a "},{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":" --amount"}]},{"type":"text","value":" arg               \tamount to send (in Beams, 1 Beam =\n1000000 chattle)\n-f "},{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":" --fee"}]},{"type":"text","value":" arg (=0)             \tfee (in Beams, 1 Beam = 1000000\nchattle)\n-r "},{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":" --receiver_addr"}]},{"type":"text","value":" arg        \taddress of receiver\n-n "},{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":" --node_addr"}]},{"type":"text","value":" arg            \taddress of node\n--treasury_path arg (=treasury.mw)\tBlock to create/append treasury to\n--wallet_path arg (=wallet.db)    \tpath to wallet file\n--bbs_keystore_path arg (=bbs_keys.db)\npath to file with bbs keys\n--tx_history                      \tprint transacrions' history in info\ncommand\n--tr_Count arg (=30)              \ttreasury UTXO count\n--tr_HeightStep arg (=1440)       \ttreasury UTXO height lock step\n--tr_BeamsPerUtxo arg (=10)       \ttreasury value of each UTXO (in Beams)\n--command arg                     \tcommand to execute "},{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"send|receive|listen\n|init|info|treasury"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Rules configuration:\n--CoinbaseEmission arg (=80000000)\tcoinbase emission in a single block\n--MaturityCoinbase arg (=60)      \tnum of blocks before coinbase UTXO can\nbe spent\n--MaturityStd arg (=0)            \tnum of blocks before non-coinbase UTXO\ncan be spent\n--MaxBodySize arg (=1048576)      \tMax block body size "},{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"bytes"}]},{"type":"text","value":"\n--DesiredRate_s arg (=60)         \tDesired rate of generated blocks\n"},{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"seconds"}]},{"type":"text","value":"\n--DifficultyReviewCycle arg (=1440)   num of blocks after which the mining\ndifficulty can be adjusted\n--MaxDifficultyChange arg (=2)    \tMax difficulty change after each cycle\n(each step is roughly x2 complexity)\n--TimestampAheadThreshold_s arg (=7200)\nBlock timestamp tolerance "},{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"seconds"}]},{"type":"text","value":"\n--WindowForMedian arg (=25)       \tHow many blocks are considered in\ncalculating the timestamp median\n--AllowPublicUtxos arg (=0)       \tset to allow regular (non-coinbase)\nUTXO to have non-confidential signature\n--FakePoW arg (=0)                \tDon't verify PoW. Mining is simulated\nby the timer. For tests only"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"List of testnet 1 nodes"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"142.93.89.204:8101\n188.166.148.169:8101\n206.189.141.171:8101\n138.68.130.189:8101\n178.128.225.252:8101\n128.199.142.41:8101\n139.59.191.116:8101\n206.189.3.9:8101\n206.189.15.198:8101\n204.48.26.118:8101\n174.138.58.140:8101\n142.93.241.66:8101\n188.166.122.215:8101\n142.93.17.121:8101\n104.248.77.220:8101\n104.248.27.246:8101\n188.166.60.223:8101\n128.199.144.164:8101\n104.248.182.148:8101\n104.248.182.152:8101\n159.203.72.8:8101\n178.128.233.252:8101\n104.248.43.86:8101\n104.248.43.99:8101\n178.62.19.156:8101\n104.248.75.183:8101\n206.81.11.82:8101\n206.189.138.82:8101\n178.128.225.8:8101\n142.93.246.182:8101\n104.248.31.169:8101\n128.199.144.48:8101\n178.128.229.48:8101\n128.199.144.196:8101\n159.65.40.42:8101\n178.128.229.50:8101\n138.197.193.229:8101\n128.199.144.206:8101\n178.128.229.65:8101\n159.89.234.65:8101\n104.248.43.120:8101\n104.248.186.25:8101\n128.199.145.212:8101\n188.166.15.205:8101\n138.68.163.99:8101"}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[]}},"_type":"markdown","_id":"content:docs:core-tech:Testnet-Command-Line-Instructions.md","_source":"content","_file":"docs/core-tech/Testnet-Command-Line-Instructions.md","_extension":"md"},{"_path":"/docs/core-tech/thoughts-about-eliminating-transaction-kernels","_dir":"core-tech","_draft":false,"_partial":false,"_locale":"","title":"Thoughts About Eliminating Transaction Kernels","description":"","body":{"type":"root","children":[{"type":"element","tag":"h3","props":{"id":"transaction-and-kernels"},"children":[{"type":"text","value":"Transaction and kernels"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"One of the fundamental features of a MimbleWimble transaction is the "},{"type":"element","tag":"u","props":{},"children":[{"type":"text","value":"irreversibility"}]},{"type":"text","value":". That is, once the transaction enters the blockchain, it can't be reversed, which guarantees that once a user receives the coins, the sender can't \"change his mind\" later."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This is achieved by transaction "},{"type":"element","tag":"u","props":{},"children":[{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"kernels"}]}]},{"type":"text","value":", which are cryptographically signed, and encode (among other things) the total blinding factor of the transaction. While a UTXO can be either consumed or created by the transaction, the kernels can only be created, and never consumed. This guarantees the irreversibility of the transaction."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This leads to the accumulation of the transaction kernels in the system with time. While the UTXOs denote the \"live\" coins, which can be spent by their owners, the transaction kernels are actually \"dead weight\", and play no role in future transactions. OTOH the fully-functional processing node is obliged to keep them forever, in order to allow for new nodes to sync and verify the most recent blockchain state."}]},{"type":"element","tag":"h3","props":{"id":"how-to-consume-the-transaction-kernels-principles"},"children":[{"type":"text","value":"How to consume the transaction kernels - principles"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Let's assume that transaction kernels can also be consumed, and a valid transaction can contain transaction kernels on both input and output sides. In order to keep the irreversibility principle we apply additional restrictions on the output kernels, such that the verifier can:"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Verify that for each input kernel there's a corresponding output kernel, that can only be signed if its creator(s) know the opening of the input kernel."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Such a transaction is irreversible \"on its own\". Means - input and output kernels can't be exchanged."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The above rules must also hold when transactions are merged and intermediate outputs are fully deleted."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"In addition the output kernel should remain compact, and not inflate with every such a transaction. There's no benefit of keeping one large kernel vs many small ones."}]}]},{"type":"element","tag":"h1","props":{"id":"proposal"},"children":[{"type":"text","value":"Proposal"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Kernel consists of the following fields:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Public excess: the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"k*G"}]},{"type":"text","value":" curve point, whereas the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"k"}]},{"type":"text","value":" is the total blinding of the transaction."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Various optional fields (fee, block height, custom co-signed contract, nested kernels)."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Schnorr's signature of the kernel body, whereas the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"k"}]},{"type":"text","value":" is the signature private key."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The blinding factor "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"k"}]},{"type":"text","value":" is the sum of the total blinding factors of all the participants, and the kernel is co-signed collectively."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Let's add additional field to the kernel:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"m"}]},{"type":"text","value":" - Multiplier, a 64-bit integer."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"If not specified - by default it's assumed to be 1. The actual transaction excess is "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"mk*G"}]},{"type":"text","value":", i.e. multiplied by "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"m"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"During the transaction verification, the verifier must ensure that for every input kernel there is a corresponding output kernel, which:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Has the same unmultiplied excess "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"kG"}]},{"type":"text","value":"."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Has a multiplier which is "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"greater"}]},{"type":"text","value":" than that of the input kernel."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"It's easy to see that such a scheme conforms to the rules 1-4."}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"In order to co-sign the new kernel, the participants "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"must"}]},{"type":"text","value":" know the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"mk"}]},{"type":"text","value":", hence they know "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"k"}]},{"type":"text","value":". Means - those are the same participants that signed the input kernel."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Such a transaction is irreversible, since the output multiplier must be (strictly) greater than the input."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"When such a procedure repeated many times, and intermediate outputs are deleted - we have the same "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"kG"}]},{"type":"text","value":" correspondence, and the same inequality for multipliers."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The kernel remains compact, its size is independent of the reuse count (up to order of 2"},{"type":"element","tag":"sup","props":{},"children":[{"type":"text","value":"64"}]},{"type":"text","value":")."}]}]},{"type":"element","tag":"h1","props":{"id":"remarks"},"children":[{"type":"text","value":"Remarks"}]},{"type":"element","tag":"h3","props":{"id":"how-to-encourage-this-scheme"},"children":[{"type":"text","value":"How to encourage this scheme"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Naturally users are not obliged to consume their old kernels, and are free to create new ones (even several kernels) with every transaction.\nHowever we'd like to encourage this scheme. Hence we'll define an "},{"type":"element","tag":"u","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"implicit kernel fee"}]}]},{"type":"text","value":". So that consuming old kernels will be beneficial to the users.\nOptionally this fee may depend on the kernel size (the size of a single kernel is limited, but it may contain arbitrary number of nested kernels)."}]},{"type":"element","tag":"h3","props":{"id":"how-to-use-it-in-practice"},"children":[{"type":"text","value":"How to use it in practice"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This scheme can be used by the same set of users (2 in the most common scenario), which perform several transactions.\nOn the first transaction each peaks a random "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"k"}]},{"type":"text","value":" used to construct the first transaction.\nOn the consequent transactions they decide to reuse the older kernel and increment the multiplier "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"m"}]},{"type":"text","value":" for the new kernel."}]},{"type":"element","tag":"h3","props":{"id":"degrees-of-freedom-for-newly-created-utxos"},"children":[{"type":"text","value":"Degrees of freedom for newly-created UTXOs"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The total blinding factor of each consequent transaction is pre-defined ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"kG"}]},{"type":"text","value":" multiplied by the multiplier difference). It may seem that due to this fact the users are restricted to pick specific blinding factors for their UTXOs (hence - making them less confident and easier to track), but this is not so.\nThe transaction, in addition to the UTXOs and kernels, contains also an arbitrary "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"offset"}]},{"type":"text","value":" - the arbitrary non-encoded blinding factor, which is summed when transactions are combined. Using this degree of freedom users can pick arbitrary blinding factors for the newly-created UTXOs."}]},{"type":"element","tag":"h3","props":{"id":"confidentiality-consideration"},"children":[{"type":"text","value":"Confidentiality consideration"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"One obvious thing is that anyone can see that the same set of users do several transactions. Without dandelion a hostile node can reveal the user identity (IP address) for the specific transaction that it received. If the kernel consuming scheme is used, the hostile node can also detect when the same set of users create more transactions (both in the past and in the future), even if they used another node.\nHowever it will not be able to identify and track the appropriate UTXOs (unless this hostile node actually received all those transactions)."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"With the use of dandelion this risk is reduced (but not removed completely)."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"I can't see other issues, and this specific one is minor IMHO."}]},{"type":"element","tag":"h3","props":{"id":"what-if-the-user-wants-the-kernel-to-remain-forever"},"children":[{"type":"text","value":"What if the user wants the kernel to remain forever?"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"As we said, the kernels are \"dead weight\" that the processing node normally can't get rid of. But in fact kernels may encode some information useful for users. For instance, it may be a co-signed contract, which users may use later to prove the payment."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In this specific case users should wait until the transaction becomes visible in the block, and obtain the "},{"type":"element","tag":"u","props":{},"children":[{"type":"text","value":"Merkle proof"}]},{"type":"text","value":" for this kernel.\nOnce they have it - they can safely reuse it. Whereas the kernel itself will eventually be deleted from the system, they still will be able to prove it was there. The proof consists of two parts:"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Proof that a specific kernel was in the specific system state (blockchain height + hash)."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Proof that this older state is a part of the present blockchain."}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"transaction-and-kernels","depth":3,"text":"Transaction and kernels"},{"id":"how-to-consume-the-transaction-kernels-principles","depth":3,"text":"How to consume the transaction kernels - principles"},{"id":"how-to-encourage-this-scheme","depth":3,"text":"How to encourage this scheme"},{"id":"how-to-use-it-in-practice","depth":3,"text":"How to use it in practice"},{"id":"degrees-of-freedom-for-newly-created-utxos","depth":3,"text":"Degrees of freedom for newly-created UTXOs"},{"id":"confidentiality-consideration","depth":3,"text":"Confidentiality consideration"},{"id":"what-if-the-user-wants-the-kernel-to-remain-forever","depth":3,"text":"What if the user wants the kernel to remain forever?"}]}},"_type":"markdown","_id":"content:docs:core-tech:Thoughts-about-eliminating-transaction-kernels.md","_source":"content","_file":"docs/core-tech/Thoughts-about-eliminating-transaction-kernels.md","_extension":"md"},{"_path":"/docs/core-tech/transaction-creation-protocol","_dir":"core-tech","_draft":false,"_partial":false,"_locale":"","title":"Transaction creation protocol","description":"Creating transactions in Beam (as with other MimbleWimble implementations) is interactive. In order to create a new Beam transaction, the sending and receiving wallets communicate with each other. The wallets exchange parameters which produce the transaction. As a result, the protocol between the wallets is extendable.","body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"transaction-creation-protocol"},"children":[{"type":"text","value":"Transaction creation protocol"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Creating transactions in Beam (as with other MimbleWimble implementations) is interactive. In order to create a new Beam transaction, the sending and receiving wallets communicate with each other. The wallets exchange parameters which produce the transaction. As a result, the protocol between the wallets is extendable."}]},{"type":"element","tag":"h2","props":{"id":"what-is-a-transaction-in-beam"},"children":[{"type":"text","value":"What is a transaction in Beam?"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Any Beam transaction contains the following parameters:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"A Set of input UTXOs (Inputs), which have to already be present in the blockchain."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"A Set of newly created UTXOs (Outputs) and rangeproofs for each output"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The Explicit excess (offset)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The transaction kernel"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The transaction kernel requires the following parameters:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Blinded excess"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Transaction fee"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Minimum height"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Maximum height"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Signature. This is a Schnorr’s multi-signature which signs all the values listed above"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The minimum and maximum height values set the time in which the transaction is valid. Nodes will reject a transaction if its height is below the minimum height and greater than the maximum height"}]},{"type":"element","tag":"h3","props":{"id":"a-simple-transaction-flow"},"children":[{"type":"text","value":"A simple transaction flow."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In the following example, a "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Sender"}]},{"type":"text","value":" makes a payment to a "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Receiver"}]},{"type":"text","value":"."}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Sender"}]},{"type":"text","value":" and "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Receiver"}]},{"type":"text","value":" agree on the "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"amount"}]},{"type":"text","value":" and "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"fee"}]},{"type":"text","value":"."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Sender"}]},{"type":"text","value":" selects input UTXO which allow paying "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"amount + fee"}]},{"type":"text","value":".\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"If the sum of inputs is greater than "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"amount + fee"}]},{"type":"text","value":", "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Sender"}]},{"type":"text","value":" also creates output UTXO for the change."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Sender"}]},{"type":"text","value":" creates overall blinding excess value "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"blindingExcess_S"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"offset_S"}]}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Receiver"}]},{"type":"text","value":" creates outputs for a given amount and calculates blinding excess "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"blindingExcess_R"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"offset_R"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Both parties generate nonces "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"nonce_S"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"nonce_R"}]},{"type":"text","value":" respectively."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Both parties send each other public forms of excesses:\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"publicNonce_S = nonce_S*G"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"publicNonce_R = nonce_R*G"}]},{"type":"text","value":" – public nonces"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"publicExcess_S = blindingExcess_S*G"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"publicExcess_R = blindingExcess_R*G"}]},{"type":"text","value":" – public blinding excessed"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Both parties compute total blinding excess and total public nonce:\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"total blinding excess: "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"X = publicExcess_S + publicExcess_R"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"total public nonce: "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"K = publicNonce_S + publicNonce_R"}]}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Both parties compute a Schnorr’s signature challenge:\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"e = H(K|M)"}]},{"type":"text","value":", where "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"M"}]},{"type":"text","value":" is a signed message, it calculates from kernel and it includes "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"X"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"fee"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"min height"}]},{"type":"text","value":", and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"max height"}]}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Both parties compute and send  to each other partial signatures:\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"S"}]},{"type":"text","value":": "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"partialSignature_S = publicNonce_S + e*publicExcess_S"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"R"}]},{"type":"text","value":": "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"partialSignature_R = publicNonce_R + e*publicExcess_R"}]}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Final signature is computed: "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"signature = partialSignature_S + partialSignature_R"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"[[/images/SimpleTransactionFlow.png]]"}]},{"type":"element","tag":"h2","props":{"id":"wallet-to-wallet-protocol"},"children":[{"type":"text","value":"Wallet-To-Wallet protocol"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The protocol itself consists of a single message and can be implemented in all the possible scenarios and transaction types. This message can be encapsulated and passed to other parties by different protocols, such as a direct message over a peer-to-peer connection, or an indirect message sent through the Secure Bulletin Board System (SBBS), and others."}]},{"type":"element","tag":"h2","props":{"id":"settxparameter"},"children":[{"type":"text","value":"SetTxParameter"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Transfers a bundle of transaction parameters from one wallet to another. This message may initiate a new transaction."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"WalletID m_From"}]},{"type":"text","value":" – The response address set by the wallet, used when sending messages over SBBS. "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"WalletID"}]},{"type":"text","value":" is a packed 8 bytes of the SBBS channel and 32 bytes of the wallet’s public key."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"TxID m_TxID"}]},{"type":"text","value":" – Unique 16-byte transaction identifier. Generated by the transaction initiator."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"TxType m_Type"}]},{"type":"text","value":" – Transaction type (Simple, AtomicSwap etc.) This field is used to create a new transaction object when this message is the first in the line, or for verification purposes otherwise."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"std::vector<std::pair<TxParameterID, ByteBuffer>> m_Parameters"}]},{"type":"text","value":" – Vector of transaction parameter pairs. Each parameter is a pair of IDs from the range "},{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"0...255"}]},{"type":"text","value":" and the value represented as a raw bytes buffer. ID values are separated in two parts: private and public (IDs below "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"PrivateFirstParam == 128"}]},{"type":"text","value":" are private). Public parameters come from outside and they are not allowed to be overridden. Private parameters do not have limitations."}]}]},{"type":"element","tag":"h2","props":{"id":"example-simple-transaction"},"children":[{"type":"text","value":"Example: Simple transaction"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"A simple transaction is a payment from Wallet A to Wallet B, with a change UTXO and a fee."}]},{"type":"element","tag":"h3","props":{"id":"wallet-a-sends-an-invitation"},"children":[{"type":"text","value":"Wallet A sends an invitation."}]},{"type":"element","tag":"pre","props":{"className":["language-javascript"],"code":"SetTxParameter\n{\n    m_From: XXXXXX // response address set by wallet A. \n    m_TxID: 651798 //newly generated random identifier.\n    m_Type: TxType::Simple,\n    [\n        {TxParameterID::Amount, amount},\n        {TxParameterID::Fee, fee},\n        {TxParameterID::MinHeight, minHeight}, \n        {TxParameterID::MaxHeight, maxHeight}, \n        {TxParameterID::IsSender, false}, // flag to distinguish the sender from the receiver \n        {TxParameterID::PeerProtoVersion, protocolVersion}, // current version is 1\n        {TxParameterID::PeerPublicExcess, publicExcess}, \n        {TxParameterID::PeerPublicNonce, publicNonce}\n    ]\n}\n","language":"javascript","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"SetTxParameter\n{\n    m_From: XXXXXX // response address set by wallet A. \n    m_TxID: 651798 //newly generated random identifier.\n    m_Type: TxType::Simple,\n    [\n        {TxParameterID::Amount, amount},\n        {TxParameterID::Fee, fee},\n        {TxParameterID::MinHeight, minHeight}, \n        {TxParameterID::MaxHeight, maxHeight}, \n        {TxParameterID::IsSender, false}, // flag to distinguish the sender from the receiver \n        {TxParameterID::PeerProtoVersion, protocolVersion}, // current version is 1\n        {TxParameterID::PeerPublicExcess, publicExcess}, \n        {TxParameterID::PeerPublicNonce, publicNonce}\n    ]\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"minHeight"}]},{"type":"text","value":" - if the height of the blockchain is less than the specified value, the transaction will not be taken into account"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"maxHeight"}]},{"type":"text","value":" - if the height of the blockchain is greater than the specified then the node will reject the created transaction."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"protocolVersion"}]},{"type":"text","value":" - version of wallet-to-wallet protocol"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"publicExcess"}]},{"type":"text","value":" - the public form of the sender’s excess calculated from blinding factors of inputs and change output."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"publicNonce"}]},{"type":"text","value":" - sender generates a secret nonce, this is its public value."}]}]},{"type":"element","tag":"h3","props":{"id":"wallet-b-confirms-invitation"},"children":[{"type":"text","value":"Wallet B confirms invitation."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Wallet B creates an output for the received amount and generates a nonce to sign the transaction."}]},{"type":"element","tag":"pre","props":{"className":["language-javascript"],"code":"SetTxParameter\n{\n    m_From: YYYYYY  // response address set by wallet B.  \n    m_TxID: 651798, // the ID set by the  sender.\n    m_Type: TxType::Simple,\n    [\n        {TxParameterID::PeerProtoVersion, protocolVersion}\n        {TxParameterID::PeerPublicExcess, peerPublicExcess},\n        {TxParameterID::PeerSignature, receiversPartialSignature},\n        {TxParameterID::PeerPublicNonce, publicNonce},\n        {TxParameterID::PeerOutputs, outputs},\n        {TxParameterID::PeerOffset, offset}\n    ]\n}\n","language":"javascript","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"SetTxParameter\n{\n    m_From: YYYYYY  // response address set by wallet B.  \n    m_TxID: 651798, // the ID set by the  sender.\n    m_Type: TxType::Simple,\n    [\n        {TxParameterID::PeerProtoVersion, protocolVersion}\n        {TxParameterID::PeerPublicExcess, peerPublicExcess},\n        {TxParameterID::PeerSignature, receiversPartialSignature},\n        {TxParameterID::PeerPublicNonce, publicNonce},\n        {TxParameterID::PeerOutputs, outputs},\n        {TxParameterID::PeerOffset, offset}\n    ]\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"protocolVersion"}]},{"type":"text","value":" - version of wallet-to-wallet protocol"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"peerPublicExcess"}]},{"type":"text","value":" - receiver’s public excess, calculated from the output’s blinding factors."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"receiversPartialSignature"}]},{"type":"text","value":" - receiver’s part of Schnorr multi-signature."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"publicNonce"}]},{"type":"text","value":" - the public form of a nonce for signature."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"outputs"}]},{"type":"text","value":" - vector of outputs, created by the receiver."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"offset"}]},{"type":"text","value":" - offset value, randomly taken part of outputs blinding factor."}]}]},{"type":"element","tag":"h3","props":{"id":"wallet-a-confirms-the-transaction"},"children":[{"type":"text","value":"Wallet A confirms the transaction."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"If the receiver’s signature is valid, sender calculates its part of the signature.\nNow Wallet A has all required data to create the transaction and broadcast it to a node."}]},{"type":"element","tag":"h3","props":{"id":"cancellation-or-error"},"children":[{"type":"text","value":"Cancellation or error"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"If any of the participants wish to interrupt the process, they broadcast the following message:"}]},{"type":"element","tag":"pre","props":{"className":["language-javascript"],"code":"SetTxParameter \n{\n    m_From: ZZZZZZ // response address set by the wallet\n    m_TxID: 651798, // the ID set by the sender.    m_Type: TxType::Simple,\n    [\n        {TxParameterID::FailureReason, reason}\n    ]\n}\n","language":"javascript","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"SetTxParameter \n{\n    m_From: ZZZZZZ // response address set by the wallet\n    m_TxID: 651798, // the ID set by the sender.    m_Type: TxType::Simple,\n    [\n        {TxParameterID::FailureReason, reason}\n    ]\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"reason"}]},{"type":"text","value":" - 32 bit code of failure reason"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Note: Cancellation is possible only in specific moments of this flow. Receiver can cancel transaction only during invitation, i.e. after receiver has accepted invitation and sent his data to the sender, he has no guaranties that transactions will not be written into the blockchain. Sender can interrupt transaction only before he sent transaction to the node."}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"what-is-a-transaction-in-beam","depth":2,"text":"What is a transaction in Beam?","children":[{"id":"a-simple-transaction-flow","depth":3,"text":"A simple transaction flow."}]},{"id":"wallet-to-wallet-protocol","depth":2,"text":"Wallet-To-Wallet protocol"},{"id":"settxparameter","depth":2,"text":"SetTxParameter"},{"id":"example-simple-transaction","depth":2,"text":"Example: Simple transaction","children":[{"id":"wallet-a-sends-an-invitation","depth":3,"text":"Wallet A sends an invitation."},{"id":"wallet-b-confirms-invitation","depth":3,"text":"Wallet B confirms invitation."},{"id":"wallet-a-confirms-the-transaction","depth":3,"text":"Wallet A confirms the transaction."},{"id":"cancellation-or-error","depth":3,"text":"Cancellation or error"}]}]}},"_type":"markdown","_id":"content:docs:core-tech:Transaction-creation-protocol.md","_source":"content","_file":"docs/core-tech/Transaction-creation-protocol.md","_extension":"md"},{"_path":"/docs/core-tech/transaction-graph-obfuscation","_dir":"core-tech","_draft":false,"_partial":false,"_locale":"","title":"Transaction Graph Obfuscation","description":"MW offers great anonymity out-of-the-box, because of the following:","body":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"MW offers great anonymity out-of-the-box, because of the following:"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"No addresses"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Transaction values are blinded"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Transaction graph is "},{"type":"element","tag":"u","props":{},"children":[{"type":"text","value":"obfuscated"}]},{"type":"text","value":"."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Now, it may sound surprising, but the (3) is actually a "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"misconception"}]},{"type":"text","value":"."}]},{"type":"element","tag":"h3","props":{"id":"what-why"},"children":[{"type":"text","value":"What? Why?"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"As we know, original transactions are merged in a block non-interactively, so that the block is one big transaction, and there is no feasible way to recover the original transaction graph. All the UTXOs look just as arbitrary EC points, and every input can literally correspond to any output. And the bigger the block is - the higher is the obfuscation degree."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"But let's think how the transactions make their way to the block. First they are prepared by the participants, and then they are "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"broadcasted"}]},{"type":"text","value":" to the network. And the participants are interested to broadcast it to the entire network, to as many nodes as possible, to increase the probability of it being accepted in a block, and the block mined eventually."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"If this is indeed the case, i.e. transactions are just broadcasted as-is to the entire network, then the attacker can easily see the original transaction graph with just a "},{"type":"element","tag":"u","props":{},"children":[{"type":"text","value":"single"}]},{"type":"text","value":" malicious node, and the later obfuscation in the block doesn't matter anymore."}]},{"type":"element","tag":"h3","props":{"id":"so-what-no-addresses-so-why-bother"},"children":[{"type":"text","value":"So what? No addresses, so why bother?"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Is the transaction graph really important? It is. Moreover, in MW hiding the transaction graph seems to be way more important than hiding the user identities."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"MW transaction is anonymous, but it reveals one important thing: there is clearly a "},{"type":"element","tag":"u","props":{},"children":[{"type":"text","value":"relation"}]},{"type":"text","value":" between the users. So looking at the transaction graph attacker sees the \"relation\" graph. If arbitrary user gets revealed (for whatever reason) - he can disclose the related users, and the attacker knows for sure there is a relation."}]},{"type":"element","tag":"h4","props":{"id":"example"},"children":[{"type":"text","value":"Example"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Suppose Bob has a store, and Alice is his rival, she wants to know Bob's supplier. So she pays Bob (buys something from him), then Bob pays his supplier Charlie, later Charlie pays Dan, Dan pays Erin. Alice sees all those transactions, but has no idea of user identities."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Eventually Erin gets revealed - buys something from Alice for instance. Alice kindly asks "},{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"bribes / threatens / tortures"}]},{"type":"text","value":" Erin to tell her who did he get that UTXO from, this way Dan gets revealed. And so on. At every step Alice is certain there is a relation to the next user."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In contrast, if we assume that the user identity are not well concealed, but the transaction graph is obfuscated - then there is almost no problem. Attacker only gathers the information that a specific user performs a transaction, without any knowledge of the transaction amount, and who is that designated for."}]},{"type":"element","tag":"h3","props":{"id":"are-there-existing-solutions"},"children":[{"type":"text","value":"Are there existing solutions?"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Of course. There are known solutions: CoinShuffle, ValueShuffle, but they are not perfect."}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"This requires groups of unrelated people to cooperate"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Attacker may create many malicious users \"for free\", that would pretend to participate in CoinShuffle, but in practice can:\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Learn the transaction graph. Would act as unrelated users, but actually belong to the attacker."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"DoS attack: created invalid transactions (reference non-existing inputs, etc.)"}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Those techniques may be useful, but may cause hassles for the users: more preparation time, higher chance to spoil the transaction.\nThis means in turn that the majority of users may decide to skip this obfuscation, and broadcast the original transaction as-is, because \"they have nothing to hide\". This naturally would affect the privacy of other users (anonymity works best when obeyed by all the users)."}]},{"type":"element","tag":"h2","props":{"id":"proposition-in-node-obfuscation"},"children":[{"type":"text","value":"Proposition: In-Node obfuscation"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Given the fact that MW transactions are merged non-interactively - Nodes can automatically obfuscate the original transaction graph up to some degree. It may not necessarily replace, but complement transparently the obfuscation done by the users."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This can easily be done in a modified Dandelion. Though originally developed to conceal the user identity, it can be adopted to obfuscate transaction graph during the stem phase, where the transactions get passed through several nodes, but before they are broadcasted to the entire network."}]},{"type":"element","tag":"h3","props":{"id":"non-interactive-merge"},"children":[{"type":"text","value":"Non-interactive merge"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"That is, while in the stem phase, instead of immediately passing the transaction to a single peer, the Node may wait for some reasonable timeout to try to merge it with another one. So that the transaction grows like a snowball."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The following however should be taken into consideration"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"To be \"fair\" Node should only merge transactions with comparable fee/size ratio. Otherwise this would reduce the motivation for users to increase the fee (if it'll be diffused anyway)."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"In particular a Node can just  \"hijack\" the fee: append its transaction without any fee to another one.\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"There's nothing can be done to prevent this, but users may see the unfair behavior a-posteriori, and ban that Node."}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Malicious Node can record the transactions that it passes in the stem phase, and then see the difference when they're broadcasted in the fluff phase.\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"To minimize the amount of leaked info Nodes should merge only transactions of comparable size, instead of incrementally add small transactions."}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"To prevent DoS attacks Nodes should ensure there are no conflicts. Means:\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"All the being-merged transactions are valid, and reference existing inputs"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"No double-spends or etc."}]}]}]}]},{"type":"element","tag":"h3","props":{"id":"dummy-utxos"},"children":[{"type":"text","value":"Dummy UTXOs"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Another possibility: any Node can easily \"enlarge\" a transaction by appending one or several dummy outputs to it. By \"dummy\" we mean an UTXO which encodes zero value, but looks just as good as the others."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"For every such an appended dummy UTXO the Node sets a random timer (in terms of blocks num), after which it would append the same UTXO as an input in a random transaction later, which (probably) has no relation to the original one."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"By this the Node creates a \"background activity\", which is mixed with and should be indistinguishable from the real activity."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The obvious disadvantage of this scheme is the creation of dummy UTXOs, waste of the block space, and network traffic + resources for validating it. But the good part is that it won't affect the scalability in the long-run, since kernels aren't created, and all the dummy UTXOs are spent eventually."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In practice it seems that a combination of both schemes should be used: merge real transactions whenever possible, or add dummies."}]},{"type":"element","tag":"h3","props":{"id":"how-much-should-the-transaction-graph-be-obfuscated"},"children":[{"type":"text","value":"How much should the transaction graph be obfuscated"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"No exact numbers yet. But it seems that even a slight obfuscation has a dramatic positive effect on the anonymity. For instance, if we merge just 2 transactions at once, it already creates roughly 1/2 uncertainty for the input-output relation. So that if an attacker reveals a user after 10 hops - there is only roughly a 10^-3 probability for the user relation."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Since the transaction being-passed doesn't have an indication is it original or not, the obfuscation criteria should be based on the visible transaction parameters. Which comes down to the number of inputs and outputs."}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"what-why","depth":3,"text":"What? Why?"},{"id":"so-what-no-addresses-so-why-bother","depth":3,"text":"So what? No addresses, so why bother?"},{"id":"are-there-existing-solutions","depth":3,"text":"Are there existing solutions?"},{"id":"proposition-in-node-obfuscation","depth":2,"text":"Proposition: In-Node obfuscation","children":[{"id":"non-interactive-merge","depth":3,"text":"Non-interactive merge"},{"id":"dummy-utxos","depth":3,"text":"Dummy UTXOs"},{"id":"how-much-should-the-transaction-graph-be-obfuscated","depth":3,"text":"How much should the transaction graph be obfuscated"}]}]}},"_type":"markdown","_id":"content:docs:core-tech:Transaction-graph-obfuscation.md","_source":"content","_file":"docs/core-tech/Transaction-graph-obfuscation.md","_extension":"md"},{"_path":"/docs/core-tech/transaction-ordering-and-front-running-protection","_dir":"core-tech","_draft":false,"_partial":false,"_locale":"","title":"Transaction Ordering And Front Running Protection","description":"The following is a design of a trading system, which aims to achieve 2 goals:","body":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The following is a design of a trading system, which aims to achieve 2 goals:"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Front-running protection."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Provide faster confirmation time."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"It consists of 2 parts that should be implemented:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Layer-1 (contract)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Layer-2 (node/miner, transaction creation)"}]}]},{"type":"element","tag":"h2","props":{"id":"layer-1"},"children":[{"type":"text","value":"Layer-1"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The idea is to enforce strict transaction ordering. The transaction that relies on specific states of the contracts invoked, should only be included at the intended position. Should not be possible to include if other transaction that may have relevant effects is included in front of it."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This is achieved by a special synchronization contract, named "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Semaphore"}]},{"type":"text","value":", designed to be invoked by other contracts. Its state consists of a single hash value, which effectively denotes the current state of the trading system. When a contract that operates in such a synchronized manner is invoked - it in turn invokes the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Semaphore"}]},{"type":"text","value":" contract, which does the following:"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Verifies that its current state is indeed what it should be."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Mutates its state w.r.t. the caller contract, and the details (parameters) of its invocation."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"That is, a pseudo code of the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Semaphore"}]},{"type":"text","value":" looks like this:"}]},{"type":"element","tag":"pre","props":{"className":["language-C++"],"code":"OnSynchronize(Hash initialValue, int iMethod, Blob params)\n{\n    Hash currentValue = LoadState();\n    if (currentValue != initialValue)\n        Halt(); // order violation!\n\n    HashCalculator calc;\n    calc\n        << initialValue\n        << get_CallerContractID()\n        << iMethod\n        << params;\n\n    calc >> currentValue;\n    SaveState(currentValue);\n}\n","language":"C++","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"OnSynchronize(Hash initialValue, int iMethod, Blob params)\n{\n    Hash currentValue = LoadState();\n    if (currentValue != initialValue)\n        Halt(); // order violation!\n\n    HashCalculator calc;\n    calc\n        << initialValue\n        << get_CallerContractID()\n        << iMethod\n        << params;\n\n    calc >> currentValue;\n    SaveState(currentValue);\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Then, any other contract that enforces ordering:"}]},{"type":"element","tag":"pre","props":{"className":["language-C++"],"code":"OnSomeMethod(Hash semaphoreState, Blob params)\n{\n      // ... ensure correct access order\n      CallFar(semaphoreContractID, semaphoreState, methodID, params);\n      // ... continue as usual\n}\n","language":"C++","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"OnSomeMethod(Hash semaphoreState, Blob params)\n{\n      // ... ensure correct access order\n      CallFar(semaphoreContractID, semaphoreState, methodID, params);\n      // ... continue as usual\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"By such strict transaction order is enforced, and any transaction, if accepted, yields exactly the results anticipated by the user."}]},{"type":"element","tag":"h2","props":{"id":"layer-2"},"children":[{"type":"text","value":"Layer 2"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The above solves the front-running problem, but if implemented alone means that only a single "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Semaphore"}]},{"type":"text","value":"-dependent transaction can be mined in a block.\nThe next step is improving the management of the transaction pool. That is pending transactions, that are supposed to be mined at some point, but not mined yet. It consists of the following:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Node should report all the pending transactions in the pool (already implemented)."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Node should support the blockchain state querying (contract variables and etc.), which includes the side effects of the selected transactions.\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"This is needed to create a transaction that is supposed to be included after a specific pending transaction."}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"When transaction is broadcast, it may specify after which other transaction it should be included.\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Then its validation should be done on top of that other transaction respectively."}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"For mining, more sophisticated transaction selection algorithm should be used\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"At the moment, transaction set is considered "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"flat"}]},{"type":"text","value":", the node selects them according to their fee/resources ratio."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"A more correct algorithm should organize transactions in a set of "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"trees"}]},{"type":"text","value":" of dependent transactions."}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Once implemented, this achieves the following:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Many transactions may be included in the block, yet their order is guaranteed."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Public fee market. In case of order conflict, i.e. different users send transactions for the same order, they are encouraged to pay more fees to be selected."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Faster effective confirmation times. Although the average block time remains the same, the transactions are already visible in the pool. The more transactions (and their fees) are placed on top of a user transaction - the more likely it will be included in that order. Users may even send additional dependent transactions on top of their previous ones, before they are finally confirmed in a block."}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"layer-1","depth":2,"text":"Layer-1"},{"id":"layer-2","depth":2,"text":"Layer 2"}]}},"_type":"markdown","_id":"content:docs:core-tech:Transaction-ordering-and-front-running-protection.md","_source":"content","_file":"docs/core-tech/Transaction-ordering-and-front-running-protection.md","_extension":"md"},{"_path":"/docs/core-tech/transactions-with-beam-wallet-cli-over-tor-network","_dir":"core-tech","_draft":false,"_partial":false,"_locale":"","title":"Transactions With Beam Wallet CLI Over TOR Network","description":"You can use the TOR network to hide your real IP during operation on the Beam CLI wallet.\nThis scenario is possible only for the CLI wallet connected to a remote node.\nThe TOR network will act as a proxy between a wallet and node.\nThis lets to anonymize the IP address of the BEAM Wallet machine for Node connected to.\nAt the moment this Tor support is implemented due to SOCKS5 proxy interface of Tor service.","body":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"You can use the TOR network to hide your real IP during operation on the Beam CLI wallet.\nThis scenario is possible only for the CLI wallet connected to a remote node.\nThe TOR network will act as a proxy between a wallet and node.\nThis lets to anonymize the IP address of the BEAM Wallet machine for Node connected to.\nAt the moment this Tor support is implemented due to SOCKS5 proxy interface of Tor service."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Here are a few steps to set up an anonymous connection and hand on Beam:"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Install TOR service on your machine (Browser or dedicated TOR service). The easiest way is to use browser installation."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Run a TOR browser or service. When you run a browser, tor service is started automatically."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Run BEAM Wallet CLI with \"--proxy = true\" and \"--proxy_addr "},{"type":"element","tag":"tor","props":{"service":"","address":""},"children":[{"type":"text","value":"\" arguments added. The wallet will work through the specified proxy server. Default TOR address (localhost: 9150) will be used in case when no \"--proxy_addr\" parameter specified."}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Don't forget that Rescan command works only with its own node and will be impossible to use with TOR anonymization."}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[]}},"_type":"markdown","_id":"content:docs:core-tech:Transactions-with-Beam-Wallet-CLI-over-TOR-network.md","_source":"content","_file":"docs/core-tech/Transactions-with-Beam-Wallet-CLI-over-TOR-network.md","_extension":"md"},{"_path":"/docs/core-tech/unblocking-subsequent-outgoing-transactions","_dir":"core-tech","_draft":false,"_partial":false,"_locale":"","title":"Unblocking Subsequent Outgoing Transactions","description":"Disclaimer: this is a draft proposal to be discussed, no particular implementation is planned yet.","body":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Disclaimer: this is a draft proposal to be discussed, no particular implementation is planned yet."}]},{"type":"element","tag":"h1","props":{"id":"problem-description-explained-by-example"},"children":[{"type":"text","value":"Problem description (explained by example)"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"It's simple: due to atomic UTXO implementation, in case you have 100 Beams in a single UTXO and you want to send 20 Beams to each of the 3 different wallets, the action cannot be completed simultaneously:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The 100 Beams UXTO will be locked being an input for the first transaction, with 20 Beams and 79 Beams as outputs (let's assume that Transaction Fee was 1 Beam for simplicity)."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The 79 Beams UTXO will, in turn, be locked again, splitting into 20 Beams and 59 Beams etc"}]}]},{"type":"element","tag":"h2","props":{"id":"why-its-not-cool"},"children":[{"type":"text","value":"Why it's not cool"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Each subsequent transaction needs to wait till the previous transactions will be completed, the waiting time can be as long as 12 hours when the peer doesn't come online"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Currently, the wallet owner can't even create new transaction when UTXO is locked"}]}]},{"type":"element","tag":"h1","props":{"id":"objective-what-user-wants"},"children":[{"type":"text","value":"Objective (what user wants?)"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Just being able to send any amount up to his maximum balance with the lowest delay time possible"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Similar to other currencies, ordinary user doesn't necessarily needs to be immersed into UTXO complexity"}]}]},{"type":"element","tag":"h1","props":{"id":"what-can-be-possibly-done-manually-by-the-user"},"children":[{"type":"text","value":"What can be possibly done manually by the user"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Option 1: Let user to send to multiple peers in a single transaction. Drawbacks:\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"If one amount was wrong - the entire transaction needs to be restarted - the rest of the peers will wait"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"If one of the peers won't get online - the rest will wait again"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Option 2: Let the user to have a special kind of transaction to split the UTXO he has into UTXO with smaller predefined amounts. Drawbacks:\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"User needs to know about the amounts of his future sends upfront if amounts are predefined"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The actual transactions will be delayed till the split transaction will succeed"}]}]}]}]},{"type":"element","tag":"h1","props":{"id":"how-can-we-facilitate-user-needs-in-more-seamless-way"},"children":[{"type":"text","value":"How can we facilitate user needs in more seamless way?"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Option 1: Have a special \"split change\" checkbox (set to \"on\" by default) for every outgoing transaction that will cause the change to arrive in multiple UTXO to ensure the user can always send the amounts as granular as 10% (configurable parameter, 10% can be a default value) of what the user sends on average. Drawback A: might cause to too much fragmentation of user UTXO, consolidation might be required. Drawback B: too many outputs will take larger space in the blockchain block, much higher transaction fee will be expected. Upside: the transactions are always unblocked, seamlessly."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Option 2: Collect statistics and run some automatic split in the background. Drawbacks and upsides as in the case above. Probably it's always good to have more than a single UTXO (say 50% at most of the current balance if not below 50 Beams)."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Option 3: allow deferred transactions. Assumption: transactions are triggered shortly one after the other (1 minute, configurable parameter). Drawbacks: first transaction might delay others. Upside: less UTXOs are created comparing to the options above, hence less transaction fee should be paid. Point to notice: when UTXO are also received, some of the outgoing transactions can be unblocked immediately. Explained by example:\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"User has 100 Beams and wants to transfer 20, 20 and 20 Beams to different peers"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"User creates the outgoing transaction of 20 Beams. The transaction is not started during 1 minute (configurable parameter). Remark: the transaction could \"fire\" right away if the user had more than a single UTXO."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"User creates another transaction of 20 Beams within 1 minute. The previous transaction is still delayed."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"User creates yet another transaction of 20 Beams within 1 minute. The previous transactions are still delayed."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"After 1 minute, the first transaction \"fires\" and the split will be created exactly for all the subsequent transactions."}]}]}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"why-its-not-cool","depth":2,"text":"Why it's not cool"}]}},"_type":"markdown","_id":"content:docs:core-tech:Unblocking-subsequent-outgoing-transactions.md","_source":"content","_file":"docs/core-tech/Unblocking-subsequent-outgoing-transactions.md","_extension":"md"},{"_path":"/docs/core-tech/using-beamx-faucet-contract-with-cli-wallet","_dir":"core-tech","_draft":false,"_partial":false,"_locale":"","title":"Using BeamX Faucet Contract With CLI Wallet","description":"NOTE: If you have not installed BeamX please follow the instructions in the Getting Started Guide","body":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"NOTE: If you have not installed BeamX please follow the instructions in the "},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/wiki/BeamX-Getting-Started","rel":["nofollow"]},"children":[{"type":"text","value":"Getting Started Guide"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Make sure you have downloaded the latest version of the '"},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/tree/beamX/bvm/Shaders/faucet","rel":["nofollow"]},"children":[{"type":"text","value":"faucet"}]},{"type":"text","value":"' contract folder and put it under the 'shaders' folder as instructed. You need app.wasm to use the faucet and contract.wasm to deploy your own contract."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In this section we will use BeamX Faucet contract to get some coins on the BeamX chain."}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Open the Command Prompt (on Windows), Shell (on Linux) or Terminal (on MacOS) and change directory to the location of your BeamX CLI wallet."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Run the following command (assmuing app.wasm is located in shaders/faucet/app.wasm)"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"beam-wallet-beamx.exe shader --shader_app_file shaders/faucet/app.wasm -n 127.0.0.1:8501 --shader_args=\"role=manager,action=view\""}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"NOTE: We assume that your wallet is initialized and your node is running on local machine at port 8501 and that faucet app.wasm is located in the shaders/faucet folder. If your parameters are different please adjust them accordingly. Follow the "},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/wiki/BeamX-Getting-Started","rel":["nofollow"]},"children":[{"type":"text","value":"Getting Started Guide"}]},{"type":"text","value":" for more detailed instructions."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The result of this command will be the list of "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"contract ids"}]},{"type":"text","value":" of shaders of type 'faucet' that are currently deployed on the network. The reason that there can be more than one such shader is because the same Application Shader (app.wasm) can interact with several different Contract Shaders (contract.wasm) of the same type."}]},{"type":"element","tag":"ol","props":{"start":3},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Now let's try to withdraw 3 beam coins from a specific faucet by running the following command"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"beam-wallet-beamx.exe shader --shader_app_file shaders\\faucet\\app.wasm --shader_args=\"role=my_account,action=withdraw,cid=c327a42e9037d060b8158d635990a53ea4cde2e217ed70eb5faf93cac22e4771,amount=300000000\" -n 127.0.0.1:8501"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"You can replace the cid parameter with a different contract id that you have received as a result of step 2."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This operation can result in several different outcomes:"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Each faucet has a limit on how many Beam coins you can withdraw each time within a give period. Both of these are 'constructor parameters' of the shader that are specified when it is  If you are under that limit for that period you should receive the Beams that you have requested."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"If you are over the limit you will either receive nothing or a Magical Error 17, depending on the contract implementation."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"You will also receive the Magical Error 17 if something else is wrong with the contract."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"But how do I know what are the contract parameters?"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"For that we will run the following command:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"beam-wallet-beamx.exe shader --shader_app_file shaders\\faucet\\app.wasm --shader_args=\"role=manager,action=view_params,cid=c327a42e9037d060b8158d635990a53ea4cde2e217ed70eb5faf93cac22e4771\" -n 127.0.0.1:8501"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"As a result you will get something like this:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Shader output: \"\": {\"params\": {\"backlogPeriod\": 10,\"withdrawLimit\": 500000000}}"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This means that from this faucet, you can extract up to 5 Beam every 10 blocks"}]},{"type":"element","tag":"ol","props":{"start":5},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"But what if I want to create my own faucet?"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"No problem, however there are few things that you need to know:"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Since faucet is not an 'ownable' contract (it will be explained later, but basically it means that it does not have an implicit owner) you can not create another faucet contract with the same parameters (see "},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/wiki/Beam-Smart-Contracts","rel":["nofollow"]},"children":[{"type":"text","value":"BeamX Smart Contracts Guide"}]},{"type":"text","value":" for more details on that). Therefore you should just invent a couple of parameters of your own, which should not be difficult enough in this case."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Since you are deploying a new contract on BeamX blockchain, you need to make sure you have the appropriate contract.wasm file for it. We will assume that you have it in the same folder as the app.wasm"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Now that these two things are out of the way, let's run the following command:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"beam-wallet-beamx.exe shader --shader_app_file shaders/faucet/app.wasm -n 127.0.0.1:8501 --shader_args=\"role=manager,action=create,backlogPeriod=13, withdrawLimit=520000000\" --shader_contract_file shaders/faucet/contract.wasm"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Assuming no one before you deployed a faucet that allowed to get up to 5.2 Beams every 13 blocks, you deployment will be successful and you will get a new contract id in returned value."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"No all that is left to do is to deposit some funds into your faucet and let people of the world know it exists (just give them the id)"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"beam-wallet-beamx.exe shader --shader_app_file shaders\\faucet\\app.wasm --shader_args=\"role=my_account,action=deposit,cid=c327a42e9037d060b8158d635990a53ea4cde2e217ed70eb5faf93cac22e4771,amount=10000000000\" -n 127.0.0.1:8501"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This command will deposit 100 Beams from your wallet, assuming you got them"}]},{"type":"element","tag":"ol","props":{"start":6},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Nice, how can I see all of the commands the Shader supports?"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Good question. Just run the following command:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"beam-wallet-beamx.exe shader --shader_app_file shaders\\faucet\\app.wasm -n 127.0.0.1:8501"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Basically, if you don't provide any shader parameters you will get a JSON describing all parameters and their values."}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[]}},"_type":"markdown","_id":"content:docs:core-tech:Using-BeamX-Faucet-contract-with-CLI-Wallet.md","_source":"content","_file":"docs/core-tech/Using-BeamX-Faucet-contract-with-CLI-Wallet.md","_extension":"md"},{"_path":"/docs/core-tech/using-beamx-roulette-contract-with-cli-wallet","_dir":"core-tech","_draft":false,"_partial":false,"_locale":"","title":"Using BeamX Roulette Contract With CLI Wallet","description":"Let's play some games!","body":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Let's play some games!"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In this example we will interact with the contract that"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"As usual we assume that you have read "},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/wiki/BeamX-Getting-Started","rel":["nofollow"]},"children":[{"type":"text","value":"BeamX Getting Started Guide"}]},{"type":"text","value":" and "},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/wiki/Using-BeamX-Faucet-contract-with-CLI-Wallet","rel":["nofollow"]},"children":[{"type":"text","value":"Using BeamX Faucet contract with CLI Wallet"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"We also assume that you have the app.wasm and contract.was in the shaders/roulette folder under the 'beamx' folder where you keep your wallet binary file."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"If so, we are all set to spin our Roulette."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Well, it's a kind of roulette. In our case your bet is on any number between 0 and 36 (including both 0 and 36). If you guess the number exactly you receive 100 tokens (which are actually new confidential assets on Beam chain). This actually means that in order to create a new Roulette contract you would need to lock the new asset type deposit (which in this chain is configured to be 1000 Beam)"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"How do I play?"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Since Roulette contract has an implicit owner (who is the dealer) there could be many roulettes out there. To find all of them we will run the following command:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"beam-wallet-beamx.exe shader --shader_app_file shaders\\roulette\\app.wasm --shader_args=\"role=player,action=bet,cid=ac16be1cb673ace9423d32fe20893e1639fd560e35e6b3433c77bee831647372,iSector=15\" -n 127.0.0.1:8501"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"To check the status of your bet run"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"beam-wallet-beamx.exe shader --shader_app_file shaders\\roulette\\app.wasm --shader_args=\"role=player,action=check,cid=ac16be1cb673ace9423d32fe20893e1639fd560e35e6b3433c77bee831647372\" -n 127.0.0.1:8501"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"To get your winning run:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"beam-wallet-beamx.exe shader --shader_app_file shaders\\roulette\\app.wasm --shader_args=\"role=player,action=take,cid=ac16be1cb673ace9423d32fe20893e1639fd560e35e6b3433c77bee831647372\" -n 127.0.0.1:8501"}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[]}},"_type":"markdown","_id":"content:docs:core-tech:Using-BeamX-Roulette-contract-with-CLI-Wallet.md","_source":"content","_file":"docs/core-tech/Using-BeamX-Roulette-contract-with-CLI-Wallet.md","_extension":"md"},{"_path":"/docs/core-tech/using-beamx-vault-contract-with-cli-wallet","_dir":"core-tech","_draft":false,"_partial":false,"_locale":"","title":"Using BeamX Vault Contract With CLI Wallet","description":"NOTE: If you haven't already, please review BeamX Getting Started Guide and Using BeamX Faucet contract with CLI Wallet","body":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"NOTE: If you haven't already, please review "},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/wiki/BeamX-Getting-Started","rel":["nofollow"]},"children":[{"type":"text","value":"BeamX Getting Started Guide"}]},{"type":"text","value":" and "},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/wiki/Using-BeamX-Faucet-contract-with-CLI-Wallet","rel":["nofollow"]},"children":[{"type":"text","value":"Using BeamX Faucet contract with CLI Wallet"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In this section we will learn how to use BeamX Vault example. It is very similar to the Faucet example, only there are no limitation on deposits and withdrawals. It's basically just a simple vault contract you can keep money in."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"As usual we assume that you have the app.wasm and contract.was in the shaders/vault folder under the 'beamx' folder where you keep your wallet binary file."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"If so, you can use the following list of commands:"}]},{"type":"element","tag":"h2","props":{"id":"create-contract"},"children":[{"type":"text","value":"Create contract:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"beam-wallet-beamx.exe shader --shader_manager_file shaders/vault/app.wasm --shader_args=\"role=manager,action=create\" --shader_contract_file shaders/vault/contract.wasm -n 127.0.0.1:8501"}]}]},{"type":"element","tag":"h2","props":{"id":"list-all-contracts-of-this-type"},"children":[{"type":"text","value":"List all contracts of this type"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"beam-wallet-beamx.exe shader --shader_app_file shaders/vault/app.wasm --shader_args=\"role=manager,action=view\" -n 127.0.0.1:8501"}]}]},{"type":"element","tag":"h2","props":{"id":"list-all-shader-commands"},"children":[{"type":"text","value":"List all shader commands"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"beam-wallet-beamx.exe shader --shader_app_file shaders/vault/app.wasm -n 127.0.0.1:8501"}]}]},{"type":"element","tag":"h2","props":{"id":"view-my-account"},"children":[{"type":"text","value":"View my account"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"beam-wallet-beamx.exe shader --shader_app_file shaders/vault/app.wasm --shader_args=\"role=my_account,action=view,cid=7965a18aefaf3050ccd404482eb919f6641daaf111c7c4a7787c2e932942aa91\" -n 127.0.0.1:8501"}]}]},{"type":"element","tag":"h2","props":{"id":"deposit-1-beam"},"children":[{"type":"text","value":"Deposit 1 beam"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"beam-wallet-beamx.exe shader --shader_app_file shaders/vault/app.wasm --shader_args=\"role=my_account,action=deposit,cid=7965a18aefaf3050ccd404482eb919f6641daaf111c7c4a7787c2e932942aa91,amount=100000000\" -n 127.0.0.1:8501"}]}]},{"type":"element","tag":"h2","props":{"id":"withdraw"},"children":[{"type":"text","value":"Withdraw"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"beam-wallet-beamx.exe shader --shader_app_file shaders/vault/app.wasm --shader_args=\"role=my_account,action=withdraw,cid=7965a18aefaf3050ccd404482eb919f6641daaf111c7c4a7787c2e932942aa91,amount=100000000\" -n 127.0.0.1:8501"}]}]},{"type":"element","tag":"h2","props":{"id":"view-all-accounts"},"children":[{"type":"text","value":"View all accounts"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"beam-wallet-beamx.exe shader --shader_app_file shaders/vault/app.wasm --shader_args=\"role=all_accounts,action=view,cid=7965a18aefaf3050ccd404482eb919f6641daaf111c7c4a7787c2e932942aa91\" -n 127.0.0.1:8501"}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"create-contract","depth":2,"text":"Create contract:"},{"id":"list-all-contracts-of-this-type","depth":2,"text":"List all contracts of this type"},{"id":"list-all-shader-commands","depth":2,"text":"List all shader commands"},{"id":"view-my-account","depth":2,"text":"View my account"},{"id":"deposit-1-beam","depth":2,"text":"Deposit 1 beam"},{"id":"withdraw","depth":2,"text":"Withdraw"},{"id":"view-all-accounts","depth":2,"text":"View all accounts"}]}},"_type":"markdown","_id":"content:docs:core-tech:Using-BeamX-Vault-contract-with-CLI-Wallet.md","_source":"content","_file":"docs/core-tech/Using-BeamX-Vault-contract-with-CLI-Wallet.md","_extension":"md"},{"_path":"/docs/core-tech/utxo-set-horizons-and-cut-through","_dir":"core-tech","_draft":false,"_partial":false,"_locale":"","title":"UTXO Set, Horizons And Cut Through","description":"One of the MW benefits is the cut-through, i.e. ability to discard the spent TXOs, yet be able to prove the authenticity of the current state.","body":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"One of the MW benefits is the cut-through, i.e. ability to discard the spent TXOs, yet be able to prove the authenticity of the current state."}]},{"type":"element","tag":"h1","props":{"id":"horizons"},"children":[{"type":"text","value":"Horizons"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The term "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"horizon"}]},{"type":"text","value":" in this context denotes a relative distance (in terms of blocks) from the current blockchain tip, subtracting it from the current blockchain height we get the appropriate height that corresponds to this horizon. The blocks and TXOs created/spent below this height are subject to a special processing."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In Beam there are 3 horizons defined:"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Max-rollback distance"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"Fixed, part of the consensus parameters. For mainnet equals to 1440, which corresponds to 1 day for expected block creation rate."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Hi-Horizon"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Lo-Horizon"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The latter 2 horizons can be set to arbitrary values and differ in each node. The following criteria however must be satisfied:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Max-rollback-distance"}]},{"type":"text","value":" <= "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Hi-Horizon"}]},{"type":"text","value":" <= "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Lo-Horizon"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"or in terms of heights:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Max-rollback-Height"}]},{"type":"text","value":" >= "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Hi-Height"}]},{"type":"text","value":" >= "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Lo-Height"}]}]}]},{"type":"element","tag":"h2","props":{"id":"max-rollback-distance"},"children":[{"type":"text","value":"Max-rollback distance"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This horizon, as its name suggests, defines the maximum number of the recent blocks accepted by the node as the current consensus branch, that can potentially be reverted in order to switch to a competing branch. Or, speaking simply, this is how deep the reorg can be."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"So that recent blocks are volatile (subject to potential reorgs), but blocks below this height can be considered stable. This defines the minimum number of the recent blocks that each node is obliged to keep (or be able to re-create)."}]},{"type":"element","tag":"h2","props":{"id":"hi-horizon"},"children":[{"type":"text","value":"Hi-Horizon"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Defines how long the spent TXO must be "},{"type":"element","tag":"u","props":{},"children":[{"type":"text","value":"fully"}]},{"type":"text","value":" kept in the node after it was spent."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"For TXOs that are spent below the current "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Hi-Height"}]},{"type":"text","value":" (which is the current blockchain height minus "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Hi-Horizon"}]},{"type":"text","value":") the node will keep the TXO commitment, but not the signature (bulletproof). This is called "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Reduced TXO"}]},{"type":"text","value":" (a.k.a. naked, diluted, skeleton)."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Since the UTXO signature takes most of its size (~95%), getting rid of it has a dramatic impact on the storage size and the amount of information that should be negotiated when such a reduced TXO sent."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Obviously reduced TXO can't be trusted to be a valid TXO object (well-formed, with unknown positive value restricted to 64 bits). However they play an important role in the synchronization process (as we'll see later), and as long as the UTXO set (i.e. unspent TXOs only) doesn't contain reduced TXOs - there is no problem."}]},{"type":"element","tag":"h2","props":{"id":"lo-horizon"},"children":[{"type":"text","value":"Lo-Horizon"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Defines how long the reduced spent TXO must be kept in the node after it was spent. TXOs that are spent below the current "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Lo-Height"}]},{"type":"text","value":" (which is the current blockchain height minus "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Lo-Horizon"}]},{"type":"text","value":") will be completely erased in the node, without any further trace of existence."}]},{"type":"element","tag":"h1","props":{"id":"synchronization"},"children":[{"type":"text","value":"Synchronization"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"During standard synchronization process blocks are downloaded and verified one by one (as in most of the blockchains). However each node can decide to skip several intermediate steps, and \"jump\" to an arbitrary new height. The goal of the cut-through is to support such jumps with minimal amount of information transferred."}]},{"type":"element","tag":"h2","props":{"id":"sparse-blocks"},"children":[{"type":"text","value":"Sparse blocks"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In Beam this is achieved by using "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"sparse blocks"}]},{"type":"text","value":", that contain only parts of the original blocks that are essential to achieve the requested final state. So that during synchronization the node still downloads individual blocks, but they are reduced to the minimum, their verification is delayed until they are all downloaded, and only the final state is fully verified."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"When requesting the sparse block the following information must be specified:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Block identifier ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Height"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Hash"}]},{"type":"text","value":")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"H0"}]},{"type":"text","value":" - Current height of the requesting node (i.e. start height of the jump)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Lo-Height"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Hi-Height"}]},{"type":"text","value":" that the node wants to achieve "},{"type":"element","tag":"u","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"after"}]}]},{"type":"text","value":" the jump"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The sparse block is generated on-the-fly by the target node. It includes all the original kernels (which are, obviously, not a subject to cut-through), as well as inputs and outputs after the following filtration:"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Remove all the inputs and outputs for TXOs that were created above "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"H0"}]},{"type":"text","value":" and spent below or equal "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Lo-Height"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Reduce outputs (i.e. remove the bulletproof) that are spent below or equal "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Hi-Height"}]},{"type":"text","value":" (unless already removed by (1))"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This comes down to the following processing for every input and output"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Inputs\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"if "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"SpendHeight"}]},{"type":"text","value":" > "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Lo-Height"}]},{"type":"text","value":" then include"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"if "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"CreateHeight"}]},{"type":"text","value":" <= "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"H0"}]},{"type":"text","value":" then include"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"if Otherwise - exclude (skip)"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Outputs\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"if "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"SpendHeight"}]},{"type":"text","value":" > "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Hi-Height"}]},{"type":"text","value":" then include full"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"if "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"SpendHeight"}]},{"type":"text","value":" > "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Lo-Height"}]},{"type":"text","value":" then include reduced"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"if Otherwise - exclude (skip)"}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"pros-and-cons-of-this-scheme"},"children":[{"type":"text","value":"Pros and Cons of this scheme"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The main advantage of the described scheme is its "},{"type":"element","tag":"u","props":{},"children":[{"type":"text","value":"versatility"}]},{"type":"text","value":". Unlike older scheme which supported cut-through only from the genesis, this scheme supports arbitrary height jumps.\nA typical use-case is a node/wallet that was offline for several days/weeks - will be able to download only the minimum info to perform the transition to the most recent state."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Another advantage is that in order to support this the source node doesn't need to \"work hard\", generate a lot of data on-the-fly or prepare in advance (consuming extra storage), which can be exploited by the attacker. With proper data structures generation of sparse blocks can be nearly as fast as retrieving the original blocks."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The price of this versatility is the need to keep the reduced TXOs for reasonably long duration. This is their role. As can be seen, in order to be able to create the sparse block, in particular include all the needed inputs, the target node must keep the information about spent TXOs: their commitment, create and spend heights."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"So that the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Lo-Horizon"}]},{"type":"text","value":" parameter affects the ability of the node to generate the cut-through data for other nodes. A \"selfish\" node may set "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Lo-Horizon"}]},{"type":"text","value":" equal to "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Hi-Horizon"}]},{"type":"text","value":", means it won't keep reduced TXOs at all. Such a node will only be able to provide cut-through info for others from the genesis. But, as, we said, the reduced TXOs are dramatically smaller than full TXOs, so that keeping them for reasonable duration (months) should not affect the storage size significantly."}]},{"type":"element","tag":"h2","props":{"id":"cut-through-verification"},"children":[{"type":"text","value":"Cut-through verification"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"During the synchronization process for each received blocks there's a verification, that checks as much as possible for the moment, whereas the full verification is postponed until all the sparse blocks are downloaded."}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"For each block:\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Kernels are valid. "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Heightlock"}]},{"type":"text","value":" is in agreement with the block height, Schnorr's signature is valid."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Kernel commitment (MMR root of the kernels of this block) corresponds to the header. This is very important, means all the original transactions are included."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"All inputs reference existing UTXOs in the current state (i.e. TXOs that are unspent yet)."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"All non-reduced outputs have valid bulletproofs."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"All inputs and outputs are interpreted, and the UTXO set undergoes appropriate transformation."}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"For each block above or equal "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Lo-Height"}]},{"type":"text","value":" (in addition to the mentioned):\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"UTXO set commitment corresponds to the header.\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"This verification is possible only from "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Lo-Height"}]},{"type":"text","value":" and above, since below this height there may be some TXOs, info about which was totally omitted."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"This verification is not essential to prove the validity of the final state, however it should harden DOS attacks, where the attacker may provide fake inputs and appropriate outputs in later blocks, making this node generate incorrect sparse blocks for others later."}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Overall arithmetics. The sum of all outputs minus inputs corresponds to the overall blockchain subsidy for the specified height range."}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"In addition, after verifying all individual blocks:\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"u","props":{},"children":[{"type":"text","value":"No reduced UTXOs"}]},{"type":"text","value":". The current UTXO set (unspent TXOs) only contains well-formed TXOs with bulletproofs."}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"possible-dos-attack-and-its-mitigation"},"children":[{"type":"text","value":"Possible DoS attack and its mitigation"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Unlike standard synchronization mode, whereas each block is downloaded and fully verified individually, during fast-sync not all such verifications are possible in the middle, hence DoS attacks are theoretically possible. The process however is designed to harden such attacks, while trying to minimize the amount of transferred info in any case."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Many thanks to David Burkett (@DavidBurkett), Grin dev, for discussing such attacks with us."}]},{"type":"element","tag":"h3","props":{"id":"problem-with-lo-horizon"},"children":[{"type":"text","value":"Problem with "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Lo-Horizon"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"As David Burkett pointed-out, the most problematic part of the described scheme is the use of "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Lo-Horizon"}]},{"type":"text","value":". The ever possibility of fully erasing an original TXO from the block means that this block can't be verified on its own, and the attacker can easily modify the in/outs. The node must download all the blocks up to "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Lo-Height"}]},{"type":"text","value":", and only then it's possible to check if this whole block range makes sense. And if it's not - there's no way to find-out which block was incorrect, and where it came from."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"OTOH if "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Lo-Horizon"}]},{"type":"text","value":" is not used, means the Node will have to download all the original commitments, then such an attack becomes infeasible. The attacker can't manipulate the in/outs of the block, because the verifier checks the UTXO set commitment (compares to header) after interpreting every block. It's still possible to craft incorrect blocks (hence full validation at the end is unavoidable), but the attacker would need to craft the appropriate block headers, with valid PoW, which would compete against the honest community."}]},{"type":"element","tag":"h3","props":{"id":"problem-with-hi-horizon"},"children":[{"type":"text","value":"Problem with "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Hi-Horizon"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Another possible attack - inclusion of reduced TXOs (i.e. without the bulletproof) in the block instead of the full ones. That is, making it look like a valid UTXO which would be spent in later blocks, whereas it would not be spent actually. The node can't detect a problem until all the blocks up to "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Hi-Height"}]},{"type":"text","value":" are downloaded. Only after all the blocks were downloaded, the node detects that its UTXO set contains reduced TXOs, which is illegal."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In such a case, however, the node can identify the problematic blocks, the malicious peers, and re-download only the problematic blocks."}]},{"type":"element","tag":"h3","props":{"id":"final-strategy-currently-used"},"children":[{"type":"text","value":"Final strategy currently used"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Minding all the above, the node operates in the following manner"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"During the fast-sync process the node immediately interprets the downloaded blocks and verifies as much as it can to the moment\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Performance impact - verifying many blocks at-once is better than each block individually (related to bulletproof and Schnorr's signature batch verifications).\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"This is compensated by the fact that node still performs a batch verification of many blocks if they all are downloaded from the same peer (then in case of an error they are all considered invalid)."}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Note"}]},{"type":"text","value":": the node during the sync process makes transitions into intermediate states, which can't be fully verified. And since the process may take some time - the node can be \"caught\" in the "},{"type":"element","tag":"u","props":{},"children":[{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"unreliable state"}]}]},{"type":"text","value":".\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Hence during the fast-sync the node doesn't report its tip, and doesn't support generating proofs (for UTXOs, kernels, previous state inclusion and etc.)."}]}]}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"On the first attempt the node tries to sync w.r.t. defined "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Lo-Horizon"}]},{"type":"text","value":". However if the sync attempt fails - the node would retry the sync without it.\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"In the optimistic case the sync should succeed on the first attempt"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"If however it was spoiled by the attacker - it restarts in a more robust mode, at expense of potentially somewhat more data to be downloaded."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"For such a case there's an option in the protocol to re-download the needed blocks without re-downloading kernels"}]}]}]}]},{"type":"element","tag":"h1","props":{"id":"node-configuration-and-synchronization-logic"},"children":[{"type":"text","value":"Node configuration and synchronization logic"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"As we said, the horizons may be set to arbitrary values (as long as "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Max-rollback-distance"}]},{"type":"text","value":" <= "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Hi-Horizon"}]},{"type":"text","value":" <= "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Lo-Horizon"}]},{"type":"text","value":"). But practically we use only the following configurations:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Archiving node\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Hi-Horizon"}]},{"type":"text","value":" is infinite"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Lo-Horizon"}]},{"type":"text","value":" is infinite"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Always performs a comprehensive synchronization, never deletes history, and can generate any sparse block on request."}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Standard node\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Hi-Horizon"}]},{"type":"text","value":" = "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Max-rollback-distance"}]},{"type":"text","value":" = 1440"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Lo-Horizon"}]},{"type":"text","value":" = 1440 * 180"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Keeps the most recent history, plus a half-year backlog in terms of reduced TXOs (very modest size). Supports sparse blocks to other standard nodes, unless they were offline for more than half a year."}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"cut-through-mode-activation"},"children":[{"type":"text","value":"Cut-through mode activation"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Cut-through mode is activated automatically when the following criterias are met:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Node is not already in the cut-through mode"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"There is a "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"proven"}]},{"type":"text","value":" state with height which is at least current node height + "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Hi-Horizon"}]},{"type":"text","value":" * 1.5\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Proven"}]},{"type":"text","value":" means all the headers starting from this one down to the genesis are already downloaded and verified"}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Once this happens - node enters the cut-through mode."}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Target-Hi-Height"}]},{"type":"text","value":" is set to "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"ProvenTip.Height"}]},{"type":"text","value":" - "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Hi-Horizon"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Target-Lo-Height"}]},{"type":"text","value":" is set to "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"ProvenTip.Height"}]},{"type":"text","value":" - "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Lo-Horizon"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Note that once selected the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Target-Lo-Height"}]},{"type":"text","value":" can "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"not"}]},{"type":"text","value":" be changed till the end of the synchronization. The "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Target-Hi-Height"}]},{"type":"text","value":" however can, and will be increased each time the node will see a higher proven tip."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Once all the sparse blocks are downloaded - they are verified (according to the scheme described above). If the verification passes - the node switches to the standard mode of operation. Otherwise all the downloaded sparse blocks are erased, and the process restarts."}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"max-rollback-distance","depth":2,"text":"Max-rollback distance"},{"id":"hi-horizon","depth":2,"text":"Hi-Horizon"},{"id":"lo-horizon","depth":2,"text":"Lo-Horizon"},{"id":"sparse-blocks","depth":2,"text":"Sparse blocks"},{"id":"pros-and-cons-of-this-scheme","depth":2,"text":"Pros and Cons of this scheme"},{"id":"cut-through-verification","depth":2,"text":"Cut-through verification"},{"id":"possible-dos-attack-and-its-mitigation","depth":2,"text":"Possible DoS attack and its mitigation","children":[{"id":"problem-with-lo-horizon","depth":3,"text":"Problem with Lo-Horizon"},{"id":"problem-with-hi-horizon","depth":3,"text":"Problem with Hi-Horizon"},{"id":"final-strategy-currently-used","depth":3,"text":"Final strategy currently used"}]},{"id":"cut-through-mode-activation","depth":2,"text":"Cut-through mode activation"}]}},"_type":"markdown","_id":"content:docs:core-tech:UTXO-set,-horizons-and-cut-through.md","_source":"content","_file":"docs/core-tech/UTXO-set,-horizons-and-cut-through.md","_extension":"md"},{"_path":"/docs/core-tech/wallet-audit","_dir":"core-tech","_draft":false,"_partial":false,"_locale":"","title":"Wallet Audit","description":"Crypto-currencies are often criticized for being used by \"gray market\" and virtually inappropriate for compliant businesses due to their inherent non-transparency.","body":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Crypto-currencies are often criticized for being used by \"gray market\" and virtually inappropriate for compliant businesses due to their inherent non-transparency."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"So we'd like to give compliant businesses appropriate tools to be as transparent as possible for the appropriate authorities, while remaining confident to others. We'll present a scheme how it can be implemented in BEAM, and review it."}]},{"type":"element","tag":"h1","props":{"id":"high-level-design"},"children":[{"type":"text","value":"High-level design"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The wallet used for compliant business (we'll call it a business wallet) should be configured for auditing. It generates a public/private key pair specifically for audit. The public key is given to the appropriate auditor(s). Optionally the business wallet may generate several public/private auditor key pairs for different authorities."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Note: The \"public key\" is actually "},{"type":"element","tag":"u","props":{},"children":[{"type":"text","value":"confidential"}]},{"type":"text","value":", and should not be disclosed by the auditor to others to keep the anonymity of the business."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Every transaction that the business wallet performs is "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"tagged"}]},{"type":"text","value":", such that only the auditor may identify it in the blockchain using the provided public key. The auditor however is unable to create such a "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"tagged"}]},{"type":"text","value":" transaction using the public key alone.\nBy tagging the transaction the "},{"type":"element","tag":"u","props":{},"children":[{"type":"text","value":"business wallet commits to disclose (off-chain) all the relevant info for the auditor, when required to"}]},{"type":"text","value":". After receiving all the information the auditor verifies that it indeed conforms to the original commitment."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The original transaction details the auditor may want are:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Input/Output UTXOs of this business wallet.\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Note: The full transaction contains also the Input/Output UTXOs of other wallets. But those should not be disclosed (unless absolutely required) to keep their anonymity."}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Proof of the ownership and amount of every input/output UTXO which belongs to this business wallet, without disclosing the blinding factors (public signature)."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Optionally any additional information: digital documents, signatures, arbitrary text message, etc."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The task of the auditor is the following:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Run the full Node, which (in particular) downloads the original blocks (this is important!)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Find all the tagged transactions for all the business wallets it's aware of."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Request all the transaction information (off-chain)."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"After receiving the information the following is verified:\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"All the transaction components are valid (signatures and etc.)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The transaction details indeed correspond to the original commitment"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"All the referenced inputs and outputs indeed present in the original block."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Verify the completeness of the transaction graph of this business wallet."}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"By such a scheme the business wallet is enforced to report about the transaction in advance, and to commit to all the details that will be revealed to the auditor later."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The auditor is able to reconstruct the whole business ledger. It should build the transaction graph and verify its completeness, which means that every UTXO that the business wallet spends must have been reported earlier by the same business wallet upon receiving. By such the business wallet will be able to spend legally only what it received legally. So that, unlike traditional ledgers, the auditor can see the life cycle of every UTXO, and not only of the overall balance. So that the \""},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Pecunia non olet"}]},{"type":"text","value":"\" is somewhat less obvious."}]},{"type":"element","tag":"h1","props":{"id":"technical-design"},"children":[{"type":"text","value":"Technical Design."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"All transactions include transaction kernels, and we'll use this for transaction tagging. Each kernel, even \"minimal\", without any optional data, already has two degree of freedom:"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Excess (total blinding factor)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"A "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"nonce"}]},{"type":"text","value":", which is a part of the Schnorr's signature"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"By utilizing those two degrees of freedom it's possible to achieve the two needed effects:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Tag the transaction such that it can be identified using the auditor's public key."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Embed the commitment to the transaction details"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"For every transaction the business wallet will add an extra kernel for the auditor. Moreover, if it's auditable by different authorities who gets different public keys - the business wallet will add such a kernel for every key (in every transaction)."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Note: If the other transaction party is also a business wallet, which is obliged to report to appropriate authorities - it will add its kernel(s) to the transaction as well. There is no collision here (transactions may contain arbitrary number of kernels)."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"First the business wallet collects all the info that it's going to reveal to the auditor, saves it, and computes its Hash. This is the commitment to the transaction details. The kernel "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Excess"}]},{"type":"text","value":" is derived from this value."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Now, to flag the transaction the business wallet signs the kernel in a special way. The "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Nonce"}]},{"type":"text","value":", which is a part if the Schnorr's signature, is derived from the visible "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Excess"}]},{"type":"text","value":" and the auditor's public key, hence the auditor can identify such a kernel. Yet the auditor can't craft such a kernel using only its public key, because in order to create Schnorr's signature it's essential to know the "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Private Nonce"}]},{"type":"text","value":" value (before it's multiplied by G-generator)."}]},{"type":"element","tag":"h2","props":{"id":"flow-diagram"},"children":[{"type":"text","value":"Flow diagram:"}]},{"type":"element","tag":"h3","props":{"id":"business-wallet-transaction-building"},"children":[{"type":"text","value":"Business Wallet, transaction building:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"TxDetails"}]},{"type":"text","value":" = { my Inputs + public signatures, my Outputs + public signatures, Some other arbitrary data (docs and etc.) }"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Save "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"TxDetails"}]},{"type":"text","value":" (locally)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"For each auditor key:\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Nonce1 = HMac(AuditorKey.Private, TxDetails)"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"PrivateKey = Nonce1 * Hash(G * Nonce1 | TxDetails)"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Kernel.Excess = G * PrivateKey"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Nonce2 = Hash(Kernel.Excess | AuditorKey.Public) * AuditorKey.Private"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Kernel.Signature.Nonce = G * Nonce2"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Sign kernel using\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"key = "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"PrivateKey"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Nonce = "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Nonce2"}]}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Add the kernel to the transaction"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Transaction.Offset -= BlindingFactor"}]}]}]}]}]},{"type":"element","tag":"h3","props":{"id":"auditor"},"children":[{"type":"text","value":"Auditor"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Download blocks (as usually Nodes do)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"For every new block, for every kernel, for every known public key\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"ExpectedNonce = Hash(Kernel.Excess | AuditorKey.Public) * AuditorKey.Public"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"If ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Kernel.Signature.Nonce == ExpectedNonce"}]},{"type":"text","value":")\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Save the info: Appropriate business wallet, Block ID (Height + Hash), and the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Kernel.Excess"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Request the transaction info for this kernel, as well as "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"G * Nonce1"}]}]}]}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"After receiving the transaction info for the specified kernel\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Verify that the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"TxDetails"}]},{"type":"text","value":" is sane (correct format, signatures, etc.)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Verify that the presented data corresponds to the original commitment:\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Kernel.Excess == (G * Nonce1) * Hash(G * Nonce1 | TxDetails)"}]}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Verify that the asserted inputs and outputs indeed present in the original block."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Verify that all the referenced inputs were indeed reported earlier"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Mark inputs as consumed, realize the outputs."}]}]}]}]},{"type":"element","tag":"h3","props":{"id":"notes"},"children":[{"type":"text","value":"Notes:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Note: the blockchain may sometimes \"rollback\", and this should be accounted for by the auditor. There are basically two options:"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Complex solution: the auditor must know to undo the changes to the affected ledgers. It may request the transaction details for different history branches, and implement navigation, which involves undo and redo to all the affected ledgers."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Simple solution, which may be practically good enough. There is a maximum threshold for the rollback range, so it is sufficient just to wait for this period before requesting/processing the transaction details. And the auditor may assume that larger rollbacks are impossible, as long as the whole system operates normally."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Minor note: in a highly unlikely case (with probability order of 2"},{"type":"element","tag":"sup","props":{},"children":[{"type":"text","value":"-256"}]},{"type":"text","value":") there may be a false positive when chasing for the auditor kernels, i.e. a kernel that looks like it's an auditor kernel, but it's actually not. Though highly unlikely, perhaps there should be a possibility for the business wallet to deny this transaction? On the other hand false negatives are not possible. I.e. no excuses if the transaction was not flagged in advance."}]},{"type":"element","tag":"h3","props":{"id":"soundness-of-the-scheme"},"children":[{"type":"text","value":"Soundness of the scheme"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"First we'll prove the soundness of the commitment to the transaction details, i.e. that the business wallet will have to reveal the original transaction details when requested."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The auditor verifies the following:\n* "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Kernel.Excess == (G * Nonce1) * Hash(G * Nonce1 | TxDetails)"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"So, in order to substitute a different "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"TxDetails"}]},{"type":"text","value":" the Wallet will have to find a different EC  point "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"G * Nonce1"}]},{"type":"text","value":" that satisfies the above equation. Given there's no direct relation between the hash function, and the EC point multiplication, it seems to be the problem of finding collisions of a composite one-way function, which should not be feasible."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Next we prove that it's impossible (unless with negligible probability) to create such a kernel without the knowledge of the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"AuditorKey.Private"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The auditor checks the following:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Kernel.Signature.Nonce == Hash(Kernel.Excess | AuditorKey.Public) * AuditorKey.Public"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Schnorr's signature"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In order to create Schnorr's signature it's essential to know both the private key, and the preimage of "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Kernel.Signature.Nonce"}]},{"type":"text","value":" (we'll skip the argument here), wherease the preimage is given by "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Hash(Kernel.Excess) * AuditorKey.Private"}]},{"type":"text","value":". Since the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Kernel.Excess"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"AuditorKey.Public"}]},{"type":"text","value":" are known, the auditor private key should be known as well."}]},{"type":"element","tag":"h3","props":{"id":"zero-knowledge-of-the-scheme"},"children":[{"type":"text","value":"Zero-knowledge of the scheme"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"First we'll prove that this kernel is indistinguishable unless "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"AuditorKey.Public"}]},{"type":"text","value":" is known. The following is verified:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Kernel.Signature.Nonce == Hash(Kernel.Excess | AuditorKey.Public) * AuditorKey.Public"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Note that we intentionally substituted the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"AuditorKey.Public"}]},{"type":"text","value":" into the hash function. If that was not the case, the attacker could calculate its value from the visible "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Kernel.Excess"}]},{"type":"text","value":", and then notice the linear dependence of the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Nonce"}]},{"type":"text","value":" by this value (for several kernels tagged for the same auditor).\nBut since "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"AuditorKey.Public"}]},{"type":"text","value":" is included in the hash, its value is obscured, and the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Nonce"}]},{"type":"text","value":" looks like a random EC point."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Let's prove that the auditor private key is not leaked. The auditor verifies the Schnorr's signature. Means:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"G * Preimage = Hash(<some known value>) * AuditorKey.Public + <challenge> * <known EC point> * Hash(<known EC point>)"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Which can be rephrased as:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"G * AuditorKey.Private = G * Preimage * <some value> - <known EC point> = <some EC point>"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"So, it's a pure discrete logarithm problem."}]},{"type":"element","tag":"h1","props":{"id":"review-of-this-scheme"},"children":[{"type":"text","value":"Review of this scheme"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The good:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Strict demand to reveal the fact of the transaction in advance, and commitment to the original transaction details."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The fact of the transaction taking place and the report about the transaction is the same, because the transaction is atomic!\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Means, there is no way the transaction is reported but didn't actually take place, blockchain rolled back, or whatever other reason, or vice versa."}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Inability to use \"gray\" money in compliant transactions. All the inputs must have been reported earlier."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The auditor can fully reconstruct the transaction graph, but it can discover nothing about other transaction parties.\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"This is very valuable feature (perhaps the most valuable)."}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The auditor can actually see when the business wallet spends its UTXOs, even if it doesn't flag the transaction.\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"For this the auditor will have to analyze all the UTXOs being spent in the original block, which is feasible."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Naturally the opposite isn't true: it's possible to receive UTXO without flagging the transaction (but it won't be possible to spend it in a compliant transaction)."}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The bad:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Naturally there is no way to verify there is no \"gray\" ledger of the same business, it may have other wallets, or conceal part of the transactions.\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"This is also not solvable in \"traditional\" world."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"However we guarantee the separation between \"compliant\" transactions and the others."}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"No way to verify that the original transaction actually included the reported inputs/outputs, as well as nothing beyond them.\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"We do verify that they were present in the original block, and that the reporter actually owns them (by demanding signatures), but they may be parts of another transactions."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"This is equivalent (in some sense) to a situation where you report about transaction, but pay to others, or show less money than is actually transferred."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"This is also unsolvable in the \"traditional\" world."}]}]}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"flow-diagram","depth":2,"text":"Flow diagram:","children":[{"id":"business-wallet-transaction-building","depth":3,"text":"Business Wallet, transaction building:"},{"id":"auditor","depth":3,"text":"Auditor"},{"id":"notes","depth":3,"text":"Notes:"},{"id":"soundness-of-the-scheme","depth":3,"text":"Soundness of the scheme"},{"id":"zero-knowledge-of-the-scheme","depth":3,"text":"Zero-knowledge of the scheme"}]}]}},"_type":"markdown","_id":"content:docs:core-tech:Wallet-audit.md","_source":"content","_file":"docs/core-tech/Wallet-audit.md","_extension":"md"},{"_path":"/docs/core-tech/wallet-requirements","_dir":"core-tech","_draft":false,"_partial":false,"_locale":"","title":"Wallet Requirements","description":"","body":{"type":"root","children":[{"type":"element","tag":"h2","props":{"id":"требования-к-приложению-кошелёк"},"children":[{"type":"text","value":"Требования к приложению \"Кошелёк\""}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Приложение \"Кошелёк\" должно иметь установочный файл инсталятор для Windows, Linux, MacOS"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Инсталятор должен/может быть представлен в виде одного-двух(-трёх файлов)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Инсталятор должен иметь лаконичный, понятный, дружелюбный для пользователя интерфейс"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Установка/удаление приложения должна быть простой и прозрачной как для пользователя, так и для ОС:"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Пользователь должен иметь возможность задавать путь к папке для установки"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Пользователь должен иметь возможность легко удалить приложение из ОС со всеми служебными файлами"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"При первом запуске приложения должна быть предоставлена возможность (поле) для ввода секретного ключа пользователя, шифрующего БД с UTXO и инициализирующего генератор ключей"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Приложение должно уведомлять пользователя о крайней степени важности знания секретного ключа в настоящее и будущее время"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"При запуске приложения должно быть поле для введения-идентификации секретного ключа пользователя"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Приложение должно уведомлять пользователя о неверно введённом секретном ключе"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Приложение должно уметь показывать баланс пользователя"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Приложение должно уметь отображать статистику статусов UTXO из БД"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Приложение должно уметь отображать статус соединения с другим \"Кошельком\""}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Приложение должно уметь отображать этапы (в виде статусов) осуществления транзакции между двумя \"Кошельками\""}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Приложение должно предоставлять понятный и дружелюбный интерфейс пользователю для:"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"связи с другим \"Кошельком\""}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"и осуществления транзакции"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Приложение должно уведомлять пользователя:"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"о некорректной транзакции"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"о разрыве соединения с другим \"Кошельком\""}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Приложение должно уметь показывать пользователю\tисторию его транзакциий совместно с историей изменения его баланса"}]}]},{"type":"element","tag":"h2","props":{"id":"вопросы"},"children":[{"type":"text","value":"Вопросы"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Приложение должно быть однопользовательским: один пользователь - одно приложение - один секретный ключ - одна БД для UTXO?"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Или же приложение может быть многопользовательским: много пользователей - одно приложение - много ключей - несколько БД?"}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"требования-к-приложению-кошелёк","depth":2,"text":"Требования к приложению \"Кошелёк\""},{"id":"вопросы","depth":2,"text":"Вопросы"}]}},"_type":"markdown","_id":"content:docs:core-tech:Wallet-requirements.md","_source":"content","_file":"docs/core-tech/Wallet-requirements.md","_extension":"md"},{"_path":"/docs/core-tech/wallet-service","_dir":"core-tech","_draft":false,"_partial":false,"_locale":"","title":"Wallet Service","description":"Beam wallet service allows to implement lightweight wallets using BEAM API.","body":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Beam wallet service allows to implement lightweight wallets using BEAM API."}]},{"type":"element","tag":"h2","props":{"id":"how-to-build"},"children":[{"type":"text","value":"How to build"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Wallet service and related projects are supposed to be run on Linux only. It is possible to build everything for Windows and using Windows but it is not oficially supported. Releases are also provided only for Linux."}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Install required tools to build the generic BEAM project. Refer "},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/wiki/How-to-build","rel":["nofollow"]},"children":[{"type":"text","value":"BEAM build instructions"}]},{"type":"text","value":" for detals. For example if you're using Ubuntu 18.04 Desktop you need to execute steps "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"1. Install dependencies"}]},{"type":"text","value":" & "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"2. Install cmake"}]},{"type":"text","value":" from the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Ubuntu 18.04 Desktop"}]},{"type":"text","value":" section."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Install golang. You need at least v1.13.0 to build the project. If the relevant package is provided with your OS it is better to use it. For example "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"sudo dnf install golang"}]},{"type":"text","value":" on Fedora. If your OS doesn't not provide recent golang packages (like Ubuntu 18.04) use instructions "},{"type":"element","tag":"a","props":{"href":"https://golang.org/doc/install","rel":["nofollow"]},"children":[{"type":"text","value":"from the official website"}]},{"type":"text","value":"."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Clone the repository"},{"type":"element","tag":"pre","props":{"code":"git clone https://github.com/BeamMW/wallet-service.git\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"git clone https://github.com/BeamMW/wallet-service.git\n"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Checkout the necessary branch. We use the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"master"}]},{"type":"text","value":" branch for development. To be able to connect to the testnet you have to checkout the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"testnet"}]},{"type":"text","value":" branch. To be able to connect to the mainnet you have to checkout the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"mainnet"}]},{"type":"text","value":" branch."},{"type":"element","tag":"pre","props":{"code":"cd wallet-service\ngit checkout testnet\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"cd wallet-service\ngit checkout testnet\n"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Init submodules"},{"type":"element","tag":"pre","props":{"code":"git submodule update --init --recursive\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"git submodule update --init --recursive\n"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Build "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"wallet-service"}]},{"type":"text","value":" & "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"sbbs-monitor"}]},{"type":"text","value":". Use build commands from the "},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/wiki/How-to-build","rel":["nofollow"]},"children":[{"type":"text","value":"BEAM build instructions"}]},{"type":"text","value":" according to your OS."},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"For example for Fedora"},{"type":"element","tag":"pre","props":{"code":"cmake -DCMAKE_BUILD_TYPE=Release . && make -j4\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"cmake -DCMAKE_BUILD_TYPE=Release . && make -j4\n"}]}]},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"For Ububtu 18.04 Desktop"},{"type":"element","tag":"pre","props":{"code":"export CC=gcc-8 && export CXX=g++-8\ncmake -DCMAKE_BUILD_TYPE=Release && make -j4\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"export CC=gcc-8 && export CXX=g++-8\ncmake -DCMAKE_BUILD_TYPE=Release && make -j4\n"}]}]},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"After the build process completes you would have "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"wallet-service(-testnet/-masternet)"}]},{"type":"text","value":" & "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"sbbs-monitor(-testnet/-masternet)"}]},{"type":"text","value":" binaries in the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"wallet-service/service"}]},{"type":"text","value":" folder. Mainnet binaries do not have the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-BRANCHNAME"}]},{"type":"text","value":" postfix."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Build "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"service-balancer"}]},{"type":"element","tag":"pre","props":{"code":"cd service-balancer && go build && cd ..\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"cd service-balancer && go build && cd ..\n"}]}]},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"After the build process completes you would have the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"service-balancer"}]},{"type":"text","value":" binary in the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"wallet-service/service-balancer"}]},{"type":"text","value":" folder. N.B. At the moment manual builds do not add "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-masternet/-testnet"}]},{"type":"text","value":" postfix to the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"service-balancer"}]},{"type":"text","value":" executable."}]}]},{"type":"element","tag":"h2","props":{"id":"prebuilt-binaries"},"children":[{"type":"text","value":"Prebuilt binaries"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"You can get the latest prebuilt wallet service binaries here."}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Testnet"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://builds.beam-mw.com/files/testnet/latest/Release/linux/service-balancer-testnet.tar.gz","rel":["nofollow"]},"children":[{"type":"text","value":"https://builds.beam-mw.com/files/testnet/latest/Release/linux/service-balancer-testnet.tar.gz"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://builds.beam-mw.com/files/testnet/latest/Release/linux/wallet-service-testnet.tar.gz","rel":["nofollow"]},"children":[{"type":"text","value":"https://builds.beam-mw.com/files/testnet/latest/Release/linux/wallet-service-testnet.tar.gz"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://builds.beam-mw.com/files/testnet/latest/Release/linux/sbbs-monitor-testnet.tar.gz","rel":["nofollow"]},"children":[{"type":"text","value":"https://builds.beam-mw.com/files/testnet/latest/Release/linux/sbbs-monitor-testnet.tar.gz"}]}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Masternet"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://builds.beam-mw.com/files/masternet/latest/Release/linux/service-balancer-masternet.tar.gz","rel":["nofollow"]},"children":[{"type":"text","value":"https://builds.beam-mw.com/files/masternet/latest/Release/linux/service-balancer-masternet.tar.gz"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://builds.beam-mw.com/files/masternet/latest/Release/linux/wallet-service-masternet.tar.gz","rel":["nofollow"]},"children":[{"type":"text","value":"https://builds.beam-mw.com/files/masternet/latest/Release/linux/wallet-service-masternet.tar.gz"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://builds.beam-mw.com/files/masternet/latest/Release/linux/sbbs-monitor-masternet.tar.gz","rel":["nofollow"]},"children":[{"type":"text","value":"https://builds.beam-mw.com/files/masternet/latest/Release/linux/sbbs-monitor-masternet.tar.gz"}]}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"deployment"},"children":[{"type":"text","value":"Deployment"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"At the moment it is advised to use our public API enpoints until the deployment procedure is stabilized and made public. Docker would be available as well as the detailed deployment guide."}]},{"type":"element","tag":"h2","props":{"id":"how-to-try"},"children":[{"type":"element","tag":"a","props":{"name":"how-to-try"},"children":[{"type":"text","value":"How to try"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Currently the Wallet Service is deployed for masternet & testnet and provides the following public Service Balancer endpoints"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Testnet"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"wss://web-wallet-testnet.beam.mw/ws"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Masternet"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"wss://web-wallet-masternet.beam.mw/ws"}]}]},{"type":"element","tag":"h2","props":{"id":"api-guide"},"children":[{"type":"text","value":"API Guide"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Wallet service exposes its API only via JSONRpc v2.0 over WebSockets. To access the API you should"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Login to the balancer and get the API enpoint. Check the "},{"type":"element","tag":"a","props":{"href":"#how-to-try"},"children":[{"type":"text","value":"how to try section"}]},{"type":"text","value":" for the list of our public balancer endpoints."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Communicate with the API enpoint using the Wallet Service API."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Too keep user 'secrets' at the user's side Wallet Service doesn't ask for the seed phrase. Instead it expects the client to implement a set of methods that deal with secrets/outputs creation/signing, i.e. user-side keykeeper. We provide default WebAssembly implementation of the keykeeper for JS/Web usage. Check the "},{"type":"element","tag":"a","props":{"href":"#wasm-key-keeper"},"children":[{"type":"text","value":"key keeper"}]},{"type":"text","value":" section for details."}]},{"type":"element","tag":"h3","props":{"id":"service-balancer-api"},"children":[{"type":"text","value":"Service Balancer API"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Service Balancer API provides the following methods:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#login"},"children":[{"type":"text","value":"login"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#logout"},"children":[{"type":"text","value":"logout"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#subscribe"},"children":[{"type":"text","value":"subscribe"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#unsubscribe"},"children":[{"type":"text","value":"unsubscribe"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In addition to the Web Sockets API Service Balancer provides the following HTTP(S) endpoints:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#balancer-hello"},"children":[{"type":"text","value":"/"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#balancer-status"},"children":[{"type":"text","value":"/status"}]}]}]},{"type":"element","tag":"h3","props":{"id":"login"},"children":[{"type":"text","value":"login"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Login to the service balancer and get the wallet service endpoint"}]},{"type":"element","tag":"pre","props":{"code":"<--\n{\n    \"jsonrpc\": \"2.0\",\n    \"id\": \"123\",\n    \"method\": \"login\",\n    \"params\":\n    {\n        \"WalletID\": \"wallet id\",\n        \"SbbsAddress\": \"\",\n        \"SbbsAddressPrivate\": \"\"\n    }\n}\n","language":"json","meta":"","className":["language-json"]},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"<--\n{\n    \"jsonrpc\": \"2.0\",\n    \"id\": \"123\",\n    \"method\": \"login\",\n    \"params\":\n    {\n        \"WalletID\": \"wallet id\",\n        \"SbbsAddress\": \"\",\n        \"SbbsAddressPrivate\": \"\"\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"WalletID - wallet id, get it from "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"keykeeper.getWalletID"}]},{"type":"text","value":" method based on the generated seed"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"SbbsAddress - reserved for future use, leave empty for now"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"SbbsAddressPrivate - reserved for future use, leave empty for now"}]}]},{"type":"element","tag":"pre","props":{"code":"-->\n{\n    \"jsonrpc\": \"2.0\",\n    \"id\": \"123\",\n    \"result\": {\n        \"endpoint\": \"web-wallet-testnet.beam.mw?service=30000\"\n    }\n}\n","language":"json","meta":"","className":["language-json"]},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"-->\n{\n    \"jsonrpc\": \"2.0\",\n    \"id\": \"123\",\n    \"result\": {\n        \"endpoint\": \"web-wallet-testnet.beam.mw?service=30000\"\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"endpoint - returns wallet service endpoint used to access Walet Service API & Beam Wallet API. You should manually append the web socket protocol prefix "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"wss://"}]},{"type":"text","value":" in front of it."}]}]},{"type":"element","tag":"h3","props":{"id":"subscribe"},"children":[{"type":"text","value":"subscribe"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Subscribe to the BBS address notifications to be notified about incoming transaction. Reserved for future use"}]},{"type":"element","tag":"h3","props":{"id":"unsubscribe"},"children":[{"type":"text","value":"unsubscribe"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Unsubsribe from the BBS address notifications. Reserved for future use"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"element","tag":"a","props":{"name":"balancer-hello"},"children":[{"type":"text","value":"balancer root (/)"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Just a 'hello world' endpoint. Returns the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Hello! This is the wallet service balancer"}]},{"type":"text","value":" string. It is intended to be used for alive checks."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"element","tag":"a","props":{"name":"balancer-status"},"children":[{"type":"text","value":"/status"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Status endpoint. Returns json with the internal service balancer methods."}]},{"type":"element","tag":"pre","props":{"code":"/status?secret=secret\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"/status?secret=secret\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Expects secret (password) to be provided. Secret is configured in the balancer's "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"config.json"}]},{"type":"text","value":" file. For testent & masternet this endpoint is public and can be accessed by anyone:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://web-wallet-testnet.beam.mw/status?secret=secret","rel":["nofollow"]},"children":[{"type":"text","value":"https://web-wallet-testnet.beam.mw/status?secret=secret"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://web-wallet-masternet.beam.mw/status?secret=secret","rel":["nofollow"]},"children":[{"type":"text","value":"https://web-wallet-masternet.beam.mw/status?secret=secret"}]}]}]},{"type":"element","tag":"h3","props":{"id":"wallet-service-api"},"children":[{"type":"text","value":"Wallet Service API"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Wallet Service API provides the following methods:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#create_wallet"},"children":[{"type":"text","value":"create_wallet"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#open_wallet"},"children":[{"type":"text","value":"open_wallet"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#change_password"},"children":[{"type":"text","value":"change_password"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#calc_change"},"children":[{"type":"text","value":"calc_change"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#release"},"children":[{"type":"text","value":"release"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#ping"},"children":[{"type":"text","value":"ping"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#wallet-api-methods"},"children":[{"type":"text","value":"Wallet API methdos"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Wallet service expect a set of keykeper-related methods to be implemented by the client. Check the "},{"type":"element","tag":"a","props":{"href":"#keykeeper-client-metods"},"children":[{"type":"text","value":"Wallet Service Client keykeeper methods"}]},{"type":"text","value":" for details."}]},{"type":"element","tag":"h3","props":{"id":"create_wallet"},"children":[{"type":"text","value":"create_wallet"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Create new wallet"}]},{"type":"element","tag":"pre","props":{"code":"<--\n{\n    \"jsonrpc\": \"2.0\",\n    \"id\": \"123\",\n    \"method\": \"create_wallet\",\n    \"params\":\n    {\n        \"pass\": \"wallet password\",\n        \"ownerkey\": \"wallet owner key\",\n    }\n}\n","language":"json","meta":"","className":["language-json"]},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"<--\n{\n    \"jsonrpc\": \"2.0\",\n    \"id\": \"123\",\n    \"method\": \"create_wallet\",\n    \"params\":\n    {\n        \"pass\": \"wallet password\",\n        \"ownerkey\": \"wallet owner key\",\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"pass - initial wallet password"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"ownerkey - wallet owner key, get it from key keeper"}]}]},{"type":"element","tag":"pre","props":{"code":"-->\n{\n    \"jsonrpc\": \"2.0\",\n    \"id\": \"123\",\n    \"result\": \"wallet id\"\n}\n","language":"json","meta":"","className":["language-json"]},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"-->\n{\n    \"jsonrpc\": \"2.0\",\n    \"id\": \"123\",\n    \"result\": \"wallet id\"\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"result - returns wallet id used to identify the wallet in other API calls"}]}]},{"type":"element","tag":"h3","props":{"id":"open_wallet"},"children":[{"type":"text","value":"open_wallet"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Open wallet with the given ID and password."}]},{"type":"element","tag":"pre","props":{"code":"<--\n{\n    \"jsonrpc\": \"2.0\",\n    \"id\": \"123\",\n    \"method\": \"open_wallet\",\n    \"params\":\n    {\n        \"id\": \"<wallet ID>\",\n        \"pass\": \"<wallet password>\"\n    }\n}\n","language":"json","meta":"","className":["language-json"]},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"<--\n{\n    \"jsonrpc\": \"2.0\",\n    \"id\": \"123\",\n    \"method\": \"open_wallet\",\n    \"params\":\n    {\n        \"id\": \"<wallet ID>\",\n        \"pass\": \"<wallet password>\"\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"id - wallet id returned by the "},{"type":"element","tag":"a","props":{"href":"#create_wallet"},"children":[{"type":"text","value":"create_wallet"}]},{"type":"text","value":" method or by the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"keykeeper.getWalletID"}]},{"type":"text","value":" method"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"pass - wallet password used to create wallet"}]}]},{"type":"element","tag":"pre","props":{"code":"-->\n{\n    \"jsonrpc\": \"2.0\",\n    \"id\": \"123\",\n    \"result\": \"adc18c1afbb74674b5853fb4350df70a\"\n}\n","language":"json","meta":"","className":["language-json"]},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"-->\n{\n    \"jsonrpc\": \"2.0\",\n    \"id\": \"123\",\n    \"result\": \"adc18c1afbb74674b5853fb4350df70a\"\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"result - unique session id. Reserved for the future use"}]}]},{"type":"element","tag":"h3","props":{"id":"change_password"},"children":[{"type":"text","value":"change_password"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Change wallet password. Wallet must be already opened when this method is called."}]},{"type":"element","tag":"pre","props":{"code":"<--\n{\n    \"jsonrpc\": \"2.0\",\n    \"id\": \"123\",\n    \"method\": \"change_password\",\n    \"params\":\n    {\n        \"new_pass\": \"new password\"\n    }\n}\n","language":"json","meta":"","className":["language-json"]},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"<--\n{\n    \"jsonrpc\": \"2.0\",\n    \"id\": \"123\",\n    \"method\": \"change_password\",\n    \"params\":\n    {\n        \"new_pass\": \"new password\"\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"new_pass - new wallet password"}]}]},{"type":"element","tag":"pre","props":{"code":"-->\n{\n    \"jsonrpc\": \"2.0\",\n    \"id\": \"123\",\n    \"result\": \"done\"\n}\n","language":"json","meta":"","className":["language-json"]},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"-->\n{\n    \"jsonrpc\": \"2.0\",\n    \"id\": \"123\",\n    \"result\": \"done\"\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"result - \"done\" on success"}]}]},{"type":"element","tag":"h3","props":{"id":"release"},"children":[{"type":"text","value":"release"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Close (release) the currently opened wallet. Usually it is not necessary to call this method. Wallet would be automatically closed as soon as the web socket connection is released."}]},{"type":"element","tag":"pre","props":{"code":"<--\n{\n    \"jsonrpc\": \"2.0\",\n    \"id\": \"123\",\n    \"method\": \"release\"\n}\n\n","language":"json","meta":"","className":["language-json"]},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"<--\n{\n    \"jsonrpc\": \"2.0\",\n    \"id\": \"123\",\n    \"method\": \"release\"\n}\n\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This method does not have any parameters."}]},{"type":"element","tag":"pre","props":{"code":"-->\n{\n    \"jsonrpc\": \"2.0\",\n    \"id\": \"123\",\n    \"result\": \"done\"\n}\n","language":"json","meta":"","className":["language-json"]},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"-->\n{\n    \"jsonrpc\": \"2.0\",\n    \"id\": \"123\",\n    \"result\": \"done\"\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"result - \"done\" on success"}]}]},{"type":"element","tag":"h3","props":{"id":"calc_change"},"children":[{"type":"text","value":"calc_change"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Service method used to calculate change for the given transaction amount"}]},{"type":"element","tag":"pre","props":{"code":"<--\n{\n    \"jsonrpc\": \"2.0\",\n    \"id\": \"123\",\n    \"method\": \"calc_change\",\n    \"params\":\n    {\n        \"amount\": 100\n    }\n}\n","language":"json","meta":"","className":["language-json"]},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"<--\n{\n    \"jsonrpc\": \"2.0\",\n    \"id\": \"123\",\n    \"method\": \"calc_change\",\n    \"params\":\n    {\n        \"amount\": 100\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"amount - transaction amount in groth"}]}]},{"type":"element","tag":"pre","props":{"code":"-->\n{\n    \"jsonrpc\": \"2.0\",\n    \"id\": \"123\",\n    \"result\": {\n        \"change\": 499999900,\n        \"change_str\": \"499999900\"\n    }\n}\n","language":"json","meta":"","className":["language-json"]},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"-->\n{\n    \"jsonrpc\": \"2.0\",\n    \"id\": \"123\",\n    \"result\": {\n        \"change\": 499999900,\n        \"change_str\": \"499999900\"\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"change - transaction change in groth"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"change_str - string representation of the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"change"}]},{"type":"text","value":" parameter"}]}]},{"type":"element","tag":"h3","props":{"id":"ping"},"children":[{"type":"text","value":"ping"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Just a convenience ping (are you alive?) method. It is recommended not to use this method but to rely on the underlying websocket infrastructure which already implements ping-pong control frames."}]},{"type":"element","tag":"pre","props":{"code":"<--\n{\n    \"jsonrpc\": \"2.0\",\n    \"id\": \"123\",\n    \"method\": \"ping\"\n}\n\n","language":"json","meta":"","className":["language-json"]},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"<--\n{\n    \"jsonrpc\": \"2.0\",\n    \"id\": \"123\",\n    \"method\": \"ping\"\n}\n\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This method does not have any parameters."}]},{"type":"element","tag":"pre","props":{"code":"-->\n{\n    \"jsonrpc\": \"2.0\",\n    \"id\": \"123\",\n    \"result\": \"pong\"\n}\n","language":"json","meta":"","className":["language-json"]},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"-->\n{\n    \"jsonrpc\": \"2.0\",\n    \"id\": \"123\",\n    \"result\": \"pong\"\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"result - \"pong\" on success"}]}]},{"type":"element","tag":"h3","props":{"id":"wallet-api-methods"},"children":[{"type":"element","tag":"a","props":{"name":"wallet-api-methods"},"children":[{"type":"text","value":"wallet API methods"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Wallet service also implements all the BEAM Wallet Protocol API methods. Please consult the "},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/wiki/Beam-wallet-protocol-API","rel":["nofollow"]},"children":[{"type":"text","value":"Beam wallet protocol API"}]},{"type":"text","value":" section for details."}]},{"type":"element","tag":"h3","props":{"id":"webassembly-keykeeper"},"children":[{"type":"element","tag":"a","props":{"name":"wasm-key-keeper"},"children":[{"type":"text","value":"WebAssembly Keykeeper"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://builds.beam.mw/testnet/2020.06.16/MinSizeRel/wasm/wasm-key-keeper.tar.gz","rel":["nofollow"]},"children":[{"type":"text","value":"Get latest testnet version"}]}]},{"type":"element","tag":"h4","props":{"id":"keykeeper-initialization-example"},"children":[{"type":"text","value":"Keykeeper initialization example:"}]},{"type":"element","tag":"pre","props":{"code":"<!DOCTYPE html>\n<html>\n<script src='wasm-key-keeper.js'></script>\n<script type=\"text/javascript\">\n    Module().then((Module) => console.log(`Key Keeper module successfully loaded.`))\n</script>\n</html>\n","language":"html","meta":"","className":["language-html"]},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"<!DOCTYPE html>\n<html>\n<script src='wasm-key-keeper.js'></script>\n<script type=\"text/javascript\">\n    Module().then((Module) => console.log(`Key Keeper module successfully loaded.`))\n</script>\n</html>\n"}]}]},{"type":"element","tag":"h4","props":{"id":"wallet-service-client-keykeeper-methods"},"children":[{"type":"element","tag":"a","props":{"name":"keykeeper-client-metods"},"children":[{"type":"text","value":"Wallet Service client keykeeper methods"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#keykeeper-methods"},"children":[{"type":"text","value":"get_kdf"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#keykeeper-methods"},"children":[{"type":"text","value":"get_slots"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#keykeeper-methods"},"children":[{"type":"text","value":"create_output"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#keykeeper-methods"},"children":[{"type":"text","value":"sign_receiver"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#keykeeper-methods"},"children":[{"type":"text","value":"sign_sender"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#keykeeper-methods"},"children":[{"type":"text","value":"sign_split"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"These methods are supported by the default WASM keykeeper. Wallet Service Client should just implement a simple proxy:"}]},{"type":"element","tag":"pre","props":{"code":"<!DOCTYPE html>\n<html>\n<script src='wasm-key-keeper.js'></script>\n<script type=\"text/javascript\">\n    Module().then((Module) => {\n        var connection = null;\n        var endpoint = 'ws://url-to-service';\n        var seed = Module.KeyKeeper.GeneratePhrase();\n    var keykeeper = new Module.KeyKeeper(seed);\n        connection = new WebSocket(endpoint);\n        connection.onmessage = e =>  {\n        var data = JSON.parse(e.data);\n            if(data.method) {\n            var res = keykeeper.invokeServiceMethod(e.data);\n        connection.send(res);\n        }\n       }\n    })\n</script>\n</html>\n","language":"html","meta":"","className":["language-html"]},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"<!DOCTYPE html>\n<html>\n<script src='wasm-key-keeper.js'></script>\n<script type=\"text/javascript\">\n    Module().then((Module) => {\n        var connection = null;\n        var endpoint = 'ws://url-to-service';\n        var seed = Module.KeyKeeper.GeneratePhrase();\n    var keykeeper = new Module.KeyKeeper(seed);\n        connection = new WebSocket(endpoint);\n        connection.onmessage = e =>  {\n        var data = JSON.parse(e.data);\n            if(data.method) {\n            var res = keykeeper.invokeServiceMethod(e.data);\n        connection.send(res);\n        }\n       }\n    })\n</script>\n</html>\n"}]}]},{"type":"element","tag":"table","props":{},"children":[{"type":"element","tag":"thead","props":{},"children":[{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"th","props":{},"children":[{"type":"text","value":"Method"}]},{"type":"element","tag":"th","props":{},"children":[{"type":"text","value":"Description"}]},{"type":"element","tag":"th","props":{},"children":[{"type":"text","value":"Arguments"}]},{"type":"element","tag":"th","props":{},"children":[{"type":"text","value":"Return"}]}]}]},{"type":"element","tag":"tbody","props":{},"children":[{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"getOwnerKey"}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"get owner key from password"}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"wallet password (string)"}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"owner key (string)"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"ConvertTokenToJson"}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"get token data"}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"token (string)"}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"PeerID (string), PeerWalletIdentity (string), TransactionType (number), tx_id (number)"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"getSendToken"}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"generate token"}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"sbbsAddressHex (string), identityStrHex (string), amountBase64 (string)"}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"key (string)"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"getWalletID"}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"get wallet id"}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"-"}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"wallet id (string)"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"GeneratePhrase"}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"generate seed phrase"}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"-"}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"seed phrase (string)"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"IsValidPhrase"}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"seed phrase validation"}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"-"}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"is seed valid (boolean)"}]}]}]}]},{"type":"element","tag":"h4","props":{"id":"minimal-wallet-implementation-example"},"children":[{"type":"text","value":"Minimal Wallet implementation example:"}]},{"type":"element","tag":"pre","props":{"code":"﻿<!doctype html>\n<html lang=\"en\">\n<head>\n    <title>Beam Wallet Client</title>\n\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n\n    <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\" integrity=\"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\" crossorigin=\"anonymous\">\n</head>\n\n<body>\n    <div class=\"container\">\n        <h1 class=\"text-center\">Beam Wallet Client</h1>\n        <hr>\n\n        <hr>\n        <div id=\"login-panel\">\n          <span class=\"badge badge-danger\">status: logging in, please wait...</span>\n        </div>\n\n        <div id=\"connecting-panel\" style=\"display: none;\">\n            <span class=\"badge badge-danger\">status: connecting to the Wallet Service, please wait...</span>\n        </div>\n\n        <form id=\"create-wallet-panel\" style=\"display: none;\">\n            <div class=\"form-group\">\n                <span class=\"badge badge-success\">status: connected to the Wallet Service</span>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"seed-phrase-input\">Generated seed phrase:</label>\n                <input disabled type=\"text\" class=\"seed-phrase-input form-control\" placeholder=\"Enter seed phrase\">\n            </div>\n            <div class=\"form-group\">\n                <label for=\"wallet-pass-input\">Enter wallet password:</label>\n                <input type=\"password\" class=\"wallet-pass-input form-control\" placeholder=\"Enter wallet password\" value=\"456\">\n            </div>\n            <div class=\"form-group\">\n                <button type=\"button\" class=\"create-wallet-button btn btn-primary\">\n                    <span class=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\" style=\"display: none;\"></span>\n                    Create new wallet\n                </button>\n            </div>\n        </form>\n\n        <form id=\"open-wallet-panel\" style=\"display: none;\">\n            <div class=\"form-group\">\n                <span class=\"badge badge-success\">status: connected to the Wallet Service</span>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"wallet-pass-input\">Enter wallet password:</label>\n                <input type=\"password\" class=\"wallet-pass-input form-control\" placeholder=\"Enter wallet password\" value=\"456\">\n            </div>\n            <div class=\"form-group\">\n                <button type=\"button\" class=\"open-wallet-button btn btn-primary\">\n                    <span class=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\" style=\"display: none;\"></span>\n                    Open wallet\n                </button>\n                or\n                <button type=\"button\" class=\"delete-wallet-button btn btn-danger\">\n                        <span class=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\" style=\"display: none;\"></span>\n                        Delete wallet\n                </button>\n            </div>\n        </form>\n\n        <form id=\"wallet-panel\" style=\"display: none;\">\n            <div class=\"form-group\">\n                <span class=\"badge badge-success\">status: connected to the Wallet Service</span>\n            </div>\n            <div class=\"form-group\">\n                <div>Available: <span class=\"available\"></span></div>\n                <div>Sending: <span class=\"sending\"></span></div>\n                <div>Receiving: <span class=\"receiving\"></span></div>\n            </div>\n            <div class=\"form-group\">\n                Current height: <span class=\"current_height\"></span>\n            </div>\n            <hr>\n            <h3>Send</h3>\n                <div class=\"form-group\">\n                    <label for=\"receiver-address-input\">Enter receiver address:</label>\n                    <input type=\"text\" class=\"receiver-address-input form-control\" placeholder=\"Enter receiver address\" value=\"19f3b39d925ce49f19f67c3787b54bfe4414d490f0acf42b58527a23608427bbb34\">\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"amount-input\">Enter amount (GROTH):</label>\n                    <input type=\"text\" class=\"amount-input form-control\" placeholder=\"Enter amount\">\n                </div>\n                <button type=\"button\" class=\"send-button btn btn-danger\">\n                    Send\n                </button>               \n            <hr>\n            <h3>Transactions</h3>\n            <table class=\"table transactions\">\n                <thead>\n                    <tr>\n                        <th>#</th>\n                        <th>created</th>\n                        <th>receiver</th>\n                        <th>sender</th>\n                        <th>amount</th>\n                        <th>status</th>\n                    </tr>\n                </thead>\n                <tbody></tbody>\n            </table>\n            <hr>\n            <h3>Addresses</h3>\n            <table class=\"table addresses\">\n                <thead>\n                    <tr>\n                        <th>#</th>\n                        <th>address</th>\n                        <th>comment</th>\n                        <th>create time</th>\n                        <th>duration</th>\n                        <th>expired</th>\n                        <th>own</th>\n                    </tr>\n                </thead>\n                <tbody></tbody>\n            </table>\n            <div id=\"push-panel\" style=\"display:none\">\n            <button class=\"btn btn-secondary\" id=\"push-enable\" style=\"display:none\">Enable Push Notifications</button>\n            <button class=\"btn btn-secondary\" id=\"push-disable\" style=\"display:none\">Disable Push Notifications</button>\n            <span id=\"push-blocked\" style=\"display:none\">Push notifications are blocked by user</span>\n            </div>\n            <hr>\n            <h3>UTXO</h3>\n            <table class=\"table utxo\">\n                <thead>\n                    <tr>\n                        <th>#</th>\n                        <th>amount</th>\n                        <th>id</th>\n                        <th>maturity</th>\n                        <th>status</th>\n                        <th>type</th>\n                    </tr>\n                </thead>\n                <tbody></tbody>\n            </table>\n            <hr>\n            <button type=\"button\" class=\"close-wallet-button btn btn-secondary\">\n                Close wallet\n            </button>\n        </form>     \n    \n    </div>\n</body>\n    <script src='wasm-key-keeper.js'></script>\n    <script src=\"https://code.jquery.com/jquery-3.3.1.slim.min.js\" integrity=\"sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo\" crossorigin=\"anonymous\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js\" integrity=\"sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1\" crossorigin=\"anonymous\"></script>\n    <script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js\" integrity=\"sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM\" crossorigin=\"anonymous\"></script>\n    <script type=\"module\">\n    import WebPush from './webpush.js'\n    Module().then(function(Module) {\n        let keykeeper = null\n        var loginConnection = null\n        var connection = null\n        var webpush = null\n        var defaddr = null\n\n        login()\n\n        // If you change walletID/seed you should ALWAYS relogin\n        // If you lose loginConnection or connection, ALWAYS relogin\n        // Both loginConnection & connection should be active\n        function login() {\n            //keykeeper = initKeyKeeper(\"giraffe usage sad arrest sound chimney file select monster head clown ask\")\n            //localStorage.seed = \"giraffe usage sad arrest sound chimney file select monster head clown ask\"\n            //localStorage.id = keykeeper.getWalletID()\n\n            if (localStorage.id && localStorage.seed) {\n                console.log(`Stored WalletID:${localStorage.id}`)\n                console.log(`Stored Seed: ${localStorage.seed}`)\n                keykeeper = initKeyKeeper(localStorage.seed)\n                console.log(`Keykeeper created`);\n            } else {\n                let seed = Module.KeyKeeper.GeneratePhrase()\n                console.log(`New Seed: ${seed}`)\n                keykeeper = initKeyKeeper(seed)\n                console.log(`New WalletID: ${keykeeper.getWalletID()}`)\n                $('#create-wallet-panel .seed-phrase-input').val(seed)\n            }\n\n            console.log(\"Logging in...\")\n            loginConnection = new WebSocket('ws://127.0.0.1:20000/ws')\n\n            loginConnection.onclose = () => {\n                console.log('login_ws: connection lost')\n                loginConnection = null\n                relogin()\n            }\n\n            loginConnection.onerror = error => {\n                console.log(`login_ws: connection error: ${JSON.stringify(error)}`)\n            }\n\n            loginConnection.onopen = () => {\n                console.log('login_ws: connected...')\n\n                let loginParams = {\n                    WalletID: keykeeper.getWalletID()\n                }\n\n                loginConnection.send(JSON.stringify({\n                    jsonrpc: \"2.0\",\n                    id: 123,\n                    method: \"login\",\n                    params: loginParams\n                }))\n            }\n\n            loginConnection.onmessage = e => {\n                let data = JSON.parse(e.data)\n\n                if (data.result) {\n                    console.log(`login_ws: result is ${JSON.stringify(data.result)}`)\n                    if (data.id === 123) {\n                        console.log(\"login_ws: OK, endpoint is \", data.result.endpoint)\n                        let endpoint = ['ws://', data.result.endpoint].join('');\n                        start(endpoint)\n                    }\n                } else {\n                    console.log(\"login_ws: failed\")\n                    if (data.error) {\n                        console.log(`login_ws: error code:${data.error.code} text:${data.error.data}`)\n                    }\n                }\n            }\n        }\n\n        function relogin () {\n            console.log('relogin in 5 seconds...')\n            setTimeout(() => login(), 5000)\n            showPanel('#connecting-panel')\n        }\n\n        function start(url) {\n            console.log(\"STARTING...\")\n            showPanel('#connecting-panel')\n            connection = new WebSocket(url)\n\n            connection.onerror = error => {\n                console.log(`connection error: ${JSON.stringify(error)}`)\n            }\n\n            connection.onopen = () => {\n                console.log('Connected to the Wallet Servce...')\n                if (localStorage.id) {\n                    showPanel('#open-wallet-panel')\n                } else {\n                    showPanel('#create-wallet-panel')\n                }\n            }\n\n            connection.onclose = () =>\n            {\n                console.log('connection lost...')\n                connection = null\n                loginConnection.close()\n            }\n        }\n\n        function showPanel(id) {\n            ['#login-panel', '#connecting-panel', '#create-wallet-panel', '#open-wallet-panel', '#wallet-panel'].forEach(name => $(name).hide())\n            $(id).show()\n        }\n\n        function initKeyKeeper(seed) {\n            return new Module.KeyKeeper(seed);\n        }\n\n        function onkeykeeper(data) {\n            console.log(`<<< keykeeper request: ${data}`)\n            let res = keykeeper.invokeServiceMethod(data)\n            console.log(`>>> keykeeper response: ${res}`)\n            connection.send(res);\n        }\n\n        /*function refresh()\n        {\n            if(localStorage.id) {\n                showPanel('#open-wallet-panel')\n            }\n            else\n            {\n                $('#create-wallet-panel .seed-phrase-input').val(Module.KeyKeeper.GeneratePhrase())\n                showPanel('#create-wallet-panel')\n            }\n        }*/\n\n        $('#create-wallet-panel .create-wallet-button').click(() =>\n        {\n            let seed = $('#create-wallet-panel .seed-phrase-input').val()\n            console.log(`Creating new wallet with seed phrase: ${seed}`)\n\n            var walletPass = $('#create-wallet-panel .wallet-pass-input').val()\n            var ownerKey = keykeeper.getOwnerKey(walletPass)\n            console.log('ownerKey is: data:application/octet-stream;base64,' + ownerKey)\n\n            $('#create-wallet-panel .create-wallet-button')\n                .attr('disabled', true)\n                .find('.spinner-border').show()\n\n            connection.onmessage = e =>  {\n                console.log(`got response: ${e.data}`)\n\n                var data = JSON.parse(e.data)\n\n                if(data.result && data.result.length)\n                {\n                    console.log(`result is: ${data.result}`)\n\n                    localStorage.clear()\n                    localStorage.seed = seed\n                    localStorage.id = data.result\n\n                    $('#create-wallet-panel .create-wallet-button')\n                        .attr('disabled', false)\n                        .find('.spinner-border').hide()\n\n                    showPanel('#open-wallet-panel')\n                }\n                else if(data.error)\n                    console.log(`error occured, code:${data.error.code} text:${data.error.data}`)\n                else if(data.method)\n                    onkeykeeper(e.data)\n            }\n\n            connection.send(JSON.stringify(\n            {\n                jsonrpc:'2.0',\n                id: 0,\n                method: 'create_wallet',\n                params:\n                {\n                    pass: walletPass,\n                    ownerkey: ownerKey\n                }\n            }))\n        })\n\n        $('#open-wallet-panel .delete-wallet-button').click(() => {\n            if (confirm('Are you sure want do delete current wallet data?')) {\n                pushNotifyUnsub(defaddr)\n                localStorage.clear()\n                connection.close()\n            }\n        })\n\n        $('#wallet-panel .close-wallet-button').click(() => {\n            if (confirm('Are you sure want do close the wallet?')) {\n                connection.close()\n            }\n        })\n\n        $('#open-wallet-panel .open-wallet-button').click(() => {\n            console.log(`Opening wallet with seed phrase: ${localStorage.seed}`)\n            let walletPass = $('#open-wallet-panel .wallet-pass-input').val()\n            let walletID = keykeeper.getWalletID()\n\n            console.log(`walletID: ${walletID}`)\n            connection.onmessage = e => {\n                console.log(`open wallet got response: ${e.data}`)\n                let data = JSON.parse(e.data)\n                if (data.result && data.result.length) {\n                    console.log(`wallet session: ${data.result}`)\n                    showPanel('#wallet-panel')\n                    showWalletStatus()\n                } else if (data.error)\n                    console.log(`error occured, code:${data.error.code} text:${data.error.data}`)\n                else if (data.method)\n                    onkeykeeper(e.data)\n            }\n\n            connection.send(JSON.stringify({\n                jsonrpc: '2.0',\n                id: 0,\n                method: 'open_wallet',\n                params: {\n                    id: localStorage.id,\n                    pass: walletPass\n                }\n            }))\n        })\n\n        function showWalletStatus() {\n            // unsubscribe if any\n            pushNotifyUnsub(defaddr)\n\n            connection.onmessage = e => {\n                let data = JSON.parse(e.data)\n                if (data.result) {\n                    $(\"#wallet-panel .available\").text(data.result.available)\n                    $(\"#wallet-panel .sending\").text(data.result.sending)\n                    $(\"#wallet-panel .receiving\").text(data.result.receiving)\n                    $(\"#wallet-panel .current_height\").text(data.result.current_height)\n                    showAddresses()\n                } else if (data.error)\n                    console.log(`error occured, code:${data.error.code} text:${data.error.data}`)\n                else if (data.method)\n                    onkeykeeper(e.data)\n            }\n            connection.send(JSON.stringify({\n                jsonrpc: '2.0',\n                id: 0,\n                method: 'wallet_status'\n            }))\n        }\n\n        function showAddresses() {\n            connection.onmessage = e => {\n                let data = JSON.parse(e.data)\n                if(data.result) {\n                    let body = $('#wallet-panel .addresses > tbody').empty()\n                    data.result.forEach && data.result.forEach((item, index) => {\n                        if (index === 0) defaddr = item\n                        console.log(JSON.stringify(item))\n                        body.append(`<tr>\n                                        <td>${index+1}</td>\n                                        <td>${item.address}</td>\n                                        <td>${item.comment}</td>\n                                        <td>${item.create_time}</td>\n                                        <td>${item.duration}</td>\n                                        <td>${item.expired}</td>\n                                        <td>${item.own}</td>\n                                    </tr>`)\n                    })\n                    if (defaddr) {\n                        showPush()\n                    }\n                    showUtxo()\n                }\n                else if(data.error)\n                    console.log(`error occured, code:${data.error.code} text:${data.error.data}`)\n                else if(data.method)\n                    onkeykeeper(e.data)\n            }\n\n            connection.send(JSON.stringify({\n                jsonrpc: '2.0',\n                id: 0,\n                method: 'addr_list',\n                params: {\n                    own: true\n                }\n            }))\n        }\n        \n        async function pushNotifySub(addr) {\n            return new Promise((resolve, reject) => {\n                if (!addr) reject()\n                return webpush.notifyServer(true, loginConnection, {\n                    SbbsAddress: keykeeper.getSbbsAddress(addr.own_id_str),\n                    SbbsAddressPrivate: keykeeper.getSbbsAddressPrivate(addr.own_id_str),\n                    ExpiresAt: addr.create_time + addr.duration\n                })\n            })\n        }\n\n        async function pushNotifyUnsub(addr) {\n            return new Promise((resolve, reject) => {\n                if (!addr) reject()\n\n                if (!webpush.userSubscribed) {\n                    console.log('unsub: no previous subscription')\n                    reject()\n                    return\n                }\n                return webpush.notifyServer(false, loginConnection, {\n                    SbbsAddress: keykeeper.getSbbsAddress(addr.own_id_str),\n                    SbbsAddressPrivate: keykeeper.getSbbsAddressPrivate(addr.own_id_str)\n                })\n            })\n        }\n\n        function showPush() {\n            webpush = new Proxy(new WebPush(), {\n                set: function(obj, prop, value) {\n                    if (prop === \"subscription\") {\n                        if (value) {\n                            $(\"#push-enable\").hide()\n                            $(\"#push-disable\").show()\n                        } else {\n                            $(\"#push-enable\").show()\n                            $(\"#push-disable\").hide()\n                        }\n                        $(\"#push-panel\").show()\n                    }\n                    obj[prop] = value\n                    return true\n                }\n            })\n\n            if (webpush.blockedByUser) {\n                console.log(\"notifications blocked by user\")\n                $(\"#push-blocked\").show()\n                $(\"#push-panel\").show()\n                // may be push was disabled in settings\n                // remove any previous subscriptions\n                // TODO: check the same on service worker start (if possible)\n                pushNotifyUnsub(defaddr)\n            } else {\n                console.log(\"notifications enabled, notifying server\");\n                (async () => {\n                    if (await webpush.register(loginConnection)) {\n                        await pushNotifySub(defaddr)\n                        console.log(\"Push notification - OK\")\n                    }\n                })()\n            }\n\n            $(\"#push-enable\").click(() => {\n                (async () => {\n                    if (await webpush.subscribe()) {\n                        await pushNotifySub(defaddr)\n                    }\n                })()\n                return true\n            })\n\n            $(\"#push-disable\").click(() => {\n                (async () => {\n                    await pushNotifyUnsub()\n                    await webpush.unsubscribe()\n                })()\n                return true\n            })\n        }\n\n        function showUtxo() {\n            connection.onmessage = e => {\n                let data = JSON.parse(e.data)\n                if (data.result) {\n                    let body = $('#wallet-panel .utxo > tbody').empty()\n                    data.result.forEach && data.result.forEach((item, index) => body.append(`<tr>\n                            <td>${index + 1}</td>\n                            <td>${item.amount}</td>\n                            <td>${item.id}</td>\n                            <td>${item.maturity}</td>\n                            <td>${item.status_string}</td>\n                            <td>${item.type}</td>\n                            </tr>`))\n                    showTransactions()\n                } else if (data.error)\n                    console.log(`error occured, code:${data.error.code} text:${data.error.data}`)\n                else if (data.method)\n                    onkeykeeper(e.data)\n            }\n\n            connection.send(JSON.stringify({\n                jsonrpc: '2.0',\n                id: 0,\n                method: 'get_utxo'\n            }))\n        }\n\n        function showTransactions() {\n            connection.onmessage = e => {\n                let data = JSON.parse(e.data)\n                if (data.result) {\n                    let body = $('#wallet-panel .transactions > tbody').empty()\n                    data.result.forEach && data.result.forEach((item, index) => {\n                        body.append(`<tr>\n                            <td>${index + 1}</td>\n                            <td>${new Date(item.create_time * 1000).toLocaleString()}</td>\n                            <td>${item.receiver.slice(0, 32)}...</td>\n                            <td>${item.sender.slice(0, 32)}...</td>\n                            <td>${item.value}</td>\n                            <td>${item.status_string}</td>\n                            </tr>`)\n                    })\n                } else onkeykeeper(e.data)\n                if ($('#wallet-panel').is(\":visible\"))\n                    setTimeout(showWalletStatus, 5000)\n            }\n\n            connection.send(JSON.stringify({\n                jsonrpc: '2.0',\n                id: 0,\n                method: 'tx_list'\n            }))\n        }\n\n        $('#wallet-panel .send-button').click(() => {\n            let addr = $('#wallet-panel .receiver-address-input').val()\n            if (addr.length === 0) {\n                alert('Please, enter valid address.')\n                return\n            }\n\n            let amount = $('#wallet-panel .amount-input').val()\n            if (isNaN(parseInt(amount))) {\n                alert('Please, enter valid amount.')\n                return\n            }\n\n            if (confirm(`Are you sure want send ${amount} groth to ${addr}?`)) {\n                $('#wallet-panel .amount-input').val('')\n                send(parseInt(amount), addr)\n            }\n        })\n\n        function send(amount, address) {\n            console.log(`!!! sending ${amount} groth to ${address}...`)\n            connection.onmessage = (e) => {\n                let data = JSON.parse(e.data)\n                if (data.result)\n                    console.log(`result is ${data.result}`)\n                else if (data.error)\n                    console.log(`error occured, code:${data.error.code} text:${data.error.data}`)\n                else if (data.method)\n                    onkeykeeper(e.data)\n            }\n            connection.send(JSON.stringify({\n                jsonrpc: \"2.0\",\n                id: 123,\n                method: \"tx_send\",\n                params: {\n                    value: amount,\n                    fee: 100,\n                    address: address,\n                    comment: \"thank you!\"\n                }\n            }))\n        }\n\n        function createNewTestAddr() {\n            connection.send(JSON.stringify({\n                jsonrpc: '2.0',\n                id: 123,\n                method: 'create_address',\n                params:\n                        {\n                            expiration: '24h',\n                            comment: 'John Smith'\n                        }\n            }))\n        }\n    })\n    </script>\n</html>\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"﻿<!doctype html>\n<html lang=\"en\">\n<head>\n    <title>Beam Wallet Client</title>\n\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n\n    <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\" integrity=\"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\" crossorigin=\"anonymous\">\n</head>\n\n<body>\n    <div class=\"container\">\n        <h1 class=\"text-center\">Beam Wallet Client</h1>\n        <hr>\n\n        <hr>\n        <div id=\"login-panel\">\n          <span class=\"badge badge-danger\">status: logging in, please wait...</span>\n        </div>\n\n        <div id=\"connecting-panel\" style=\"display: none;\">\n            <span class=\"badge badge-danger\">status: connecting to the Wallet Service, please wait...</span>\n        </div>\n\n        <form id=\"create-wallet-panel\" style=\"display: none;\">\n            <div class=\"form-group\">\n                <span class=\"badge badge-success\">status: connected to the Wallet Service</span>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"seed-phrase-input\">Generated seed phrase:</label>\n                <input disabled type=\"text\" class=\"seed-phrase-input form-control\" placeholder=\"Enter seed phrase\">\n            </div>\n            <div class=\"form-group\">\n                <label for=\"wallet-pass-input\">Enter wallet password:</label>\n                <input type=\"password\" class=\"wallet-pass-input form-control\" placeholder=\"Enter wallet password\" value=\"456\">\n            </div>\n            <div class=\"form-group\">\n                <button type=\"button\" class=\"create-wallet-button btn btn-primary\">\n                    <span class=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\" style=\"display: none;\"></span>\n                    Create new wallet\n                </button>\n            </div>\n        </form>\n\n        <form id=\"open-wallet-panel\" style=\"display: none;\">\n            <div class=\"form-group\">\n                <span class=\"badge badge-success\">status: connected to the Wallet Service</span>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"wallet-pass-input\">Enter wallet password:</label>\n                <input type=\"password\" class=\"wallet-pass-input form-control\" placeholder=\"Enter wallet password\" value=\"456\">\n            </div>\n            <div class=\"form-group\">\n                <button type=\"button\" class=\"open-wallet-button btn btn-primary\">\n                    <span class=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\" style=\"display: none;\"></span>\n                    Open wallet\n                </button>\n                or\n                <button type=\"button\" class=\"delete-wallet-button btn btn-danger\">\n                        <span class=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\" style=\"display: none;\"></span>\n                        Delete wallet\n                </button>\n            </div>\n        </form>\n\n        <form id=\"wallet-panel\" style=\"display: none;\">\n            <div class=\"form-group\">\n                <span class=\"badge badge-success\">status: connected to the Wallet Service</span>\n            </div>\n            <div class=\"form-group\">\n                <div>Available: <span class=\"available\"></span></div>\n                <div>Sending: <span class=\"sending\"></span></div>\n                <div>Receiving: <span class=\"receiving\"></span></div>\n            </div>\n            <div class=\"form-group\">\n                Current height: <span class=\"current_height\"></span>\n            </div>\n            <hr>\n            <h3>Send</h3>\n                <div class=\"form-group\">\n                    <label for=\"receiver-address-input\">Enter receiver address:</label>\n                    <input type=\"text\" class=\"receiver-address-input form-control\" placeholder=\"Enter receiver address\" value=\"19f3b39d925ce49f19f67c3787b54bfe4414d490f0acf42b58527a23608427bbb34\">\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"amount-input\">Enter amount (GROTH):</label>\n                    <input type=\"text\" class=\"amount-input form-control\" placeholder=\"Enter amount\">\n                </div>\n                <button type=\"button\" class=\"send-button btn btn-danger\">\n                    Send\n                </button>               \n            <hr>\n            <h3>Transactions</h3>\n            <table class=\"table transactions\">\n                <thead>\n                    <tr>\n                        <th>#</th>\n                        <th>created</th>\n                        <th>receiver</th>\n                        <th>sender</th>\n                        <th>amount</th>\n                        <th>status</th>\n                    </tr>\n                </thead>\n                <tbody></tbody>\n            </table>\n            <hr>\n            <h3>Addresses</h3>\n            <table class=\"table addresses\">\n                <thead>\n                    <tr>\n                        <th>#</th>\n                        <th>address</th>\n                        <th>comment</th>\n                        <th>create time</th>\n                        <th>duration</th>\n                        <th>expired</th>\n                        <th>own</th>\n                    </tr>\n                </thead>\n                <tbody></tbody>\n            </table>\n            <div id=\"push-panel\" style=\"display:none\">\n            <button class=\"btn btn-secondary\" id=\"push-enable\" style=\"display:none\">Enable Push Notifications</button>\n            <button class=\"btn btn-secondary\" id=\"push-disable\" style=\"display:none\">Disable Push Notifications</button>\n            <span id=\"push-blocked\" style=\"display:none\">Push notifications are blocked by user</span>\n            </div>\n            <hr>\n            <h3>UTXO</h3>\n            <table class=\"table utxo\">\n                <thead>\n                    <tr>\n                        <th>#</th>\n                        <th>amount</th>\n                        <th>id</th>\n                        <th>maturity</th>\n                        <th>status</th>\n                        <th>type</th>\n                    </tr>\n                </thead>\n                <tbody></tbody>\n            </table>\n            <hr>\n            <button type=\"button\" class=\"close-wallet-button btn btn-secondary\">\n                Close wallet\n            </button>\n        </form>     \n    \n    </div>\n</body>\n    <script src='wasm-key-keeper.js'></script>\n    <script src=\"https://code.jquery.com/jquery-3.3.1.slim.min.js\" integrity=\"sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo\" crossorigin=\"anonymous\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js\" integrity=\"sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1\" crossorigin=\"anonymous\"></script>\n    <script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js\" integrity=\"sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM\" crossorigin=\"anonymous\"></script>\n    <script type=\"module\">\n    import WebPush from './webpush.js'\n    Module().then(function(Module) {\n        let keykeeper = null\n        var loginConnection = null\n        var connection = null\n        var webpush = null\n        var defaddr = null\n\n        login()\n\n        // If you change walletID/seed you should ALWAYS relogin\n        // If you lose loginConnection or connection, ALWAYS relogin\n        // Both loginConnection & connection should be active\n        function login() {\n            //keykeeper = initKeyKeeper(\"giraffe usage sad arrest sound chimney file select monster head clown ask\")\n            //localStorage.seed = \"giraffe usage sad arrest sound chimney file select monster head clown ask\"\n            //localStorage.id = keykeeper.getWalletID()\n\n            if (localStorage.id && localStorage.seed) {\n                console.log(`Stored WalletID:${localStorage.id}`)\n                console.log(`Stored Seed: ${localStorage.seed}`)\n                keykeeper = initKeyKeeper(localStorage.seed)\n                console.log(`Keykeeper created`);\n            } else {\n                let seed = Module.KeyKeeper.GeneratePhrase()\n                console.log(`New Seed: ${seed}`)\n                keykeeper = initKeyKeeper(seed)\n                console.log(`New WalletID: ${keykeeper.getWalletID()}`)\n                $('#create-wallet-panel .seed-phrase-input').val(seed)\n            }\n\n            console.log(\"Logging in...\")\n            loginConnection = new WebSocket('ws://127.0.0.1:20000/ws')\n\n            loginConnection.onclose = () => {\n                console.log('login_ws: connection lost')\n                loginConnection = null\n                relogin()\n            }\n\n            loginConnection.onerror = error => {\n                console.log(`login_ws: connection error: ${JSON.stringify(error)}`)\n            }\n\n            loginConnection.onopen = () => {\n                console.log('login_ws: connected...')\n\n                let loginParams = {\n                    WalletID: keykeeper.getWalletID()\n                }\n\n                loginConnection.send(JSON.stringify({\n                    jsonrpc: \"2.0\",\n                    id: 123,\n                    method: \"login\",\n                    params: loginParams\n                }))\n            }\n\n            loginConnection.onmessage = e => {\n                let data = JSON.parse(e.data)\n\n                if (data.result) {\n                    console.log(`login_ws: result is ${JSON.stringify(data.result)}`)\n                    if (data.id === 123) {\n                        console.log(\"login_ws: OK, endpoint is \", data.result.endpoint)\n                        let endpoint = ['ws://', data.result.endpoint].join('');\n                        start(endpoint)\n                    }\n                } else {\n                    console.log(\"login_ws: failed\")\n                    if (data.error) {\n                        console.log(`login_ws: error code:${data.error.code} text:${data.error.data}`)\n                    }\n                }\n            }\n        }\n\n        function relogin () {\n            console.log('relogin in 5 seconds...')\n            setTimeout(() => login(), 5000)\n            showPanel('#connecting-panel')\n        }\n\n        function start(url) {\n            console.log(\"STARTING...\")\n            showPanel('#connecting-panel')\n            connection = new WebSocket(url)\n\n            connection.onerror = error => {\n                console.log(`connection error: ${JSON.stringify(error)}`)\n            }\n\n            connection.onopen = () => {\n                console.log('Connected to the Wallet Servce...')\n                if (localStorage.id) {\n                    showPanel('#open-wallet-panel')\n                } else {\n                    showPanel('#create-wallet-panel')\n                }\n            }\n\n            connection.onclose = () =>\n            {\n                console.log('connection lost...')\n                connection = null\n                loginConnection.close()\n            }\n        }\n\n        function showPanel(id) {\n            ['#login-panel', '#connecting-panel', '#create-wallet-panel', '#open-wallet-panel', '#wallet-panel'].forEach(name => $(name).hide())\n            $(id).show()\n        }\n\n        function initKeyKeeper(seed) {\n            return new Module.KeyKeeper(seed);\n        }\n\n        function onkeykeeper(data) {\n            console.log(`<<< keykeeper request: ${data}`)\n            let res = keykeeper.invokeServiceMethod(data)\n            console.log(`>>> keykeeper response: ${res}`)\n            connection.send(res);\n        }\n\n        /*function refresh()\n        {\n            if(localStorage.id) {\n                showPanel('#open-wallet-panel')\n            }\n            else\n            {\n                $('#create-wallet-panel .seed-phrase-input').val(Module.KeyKeeper.GeneratePhrase())\n                showPanel('#create-wallet-panel')\n            }\n        }*/\n\n        $('#create-wallet-panel .create-wallet-button').click(() =>\n        {\n            let seed = $('#create-wallet-panel .seed-phrase-input').val()\n            console.log(`Creating new wallet with seed phrase: ${seed}`)\n\n            var walletPass = $('#create-wallet-panel .wallet-pass-input').val()\n            var ownerKey = keykeeper.getOwnerKey(walletPass)\n            console.log('ownerKey is: data:application/octet-stream;base64,' + ownerKey)\n\n            $('#create-wallet-panel .create-wallet-button')\n                .attr('disabled', true)\n                .find('.spinner-border').show()\n\n            connection.onmessage = e =>  {\n                console.log(`got response: ${e.data}`)\n\n                var data = JSON.parse(e.data)\n\n                if(data.result && data.result.length)\n                {\n                    console.log(`result is: ${data.result}`)\n\n                    localStorage.clear()\n                    localStorage.seed = seed\n                    localStorage.id = data.result\n\n                    $('#create-wallet-panel .create-wallet-button')\n                        .attr('disabled', false)\n                        .find('.spinner-border').hide()\n\n                    showPanel('#open-wallet-panel')\n                }\n                else if(data.error)\n                    console.log(`error occured, code:${data.error.code} text:${data.error.data}`)\n                else if(data.method)\n                    onkeykeeper(e.data)\n            }\n\n            connection.send(JSON.stringify(\n            {\n                jsonrpc:'2.0',\n                id: 0,\n                method: 'create_wallet',\n                params:\n                {\n                    pass: walletPass,\n                    ownerkey: ownerKey\n                }\n            }))\n        })\n\n        $('#open-wallet-panel .delete-wallet-button').click(() => {\n            if (confirm('Are you sure want do delete current wallet data?')) {\n                pushNotifyUnsub(defaddr)\n                localStorage.clear()\n                connection.close()\n            }\n        })\n\n        $('#wallet-panel .close-wallet-button').click(() => {\n            if (confirm('Are you sure want do close the wallet?')) {\n                connection.close()\n            }\n        })\n\n        $('#open-wallet-panel .open-wallet-button').click(() => {\n            console.log(`Opening wallet with seed phrase: ${localStorage.seed}`)\n            let walletPass = $('#open-wallet-panel .wallet-pass-input').val()\n            let walletID = keykeeper.getWalletID()\n\n            console.log(`walletID: ${walletID}`)\n            connection.onmessage = e => {\n                console.log(`open wallet got response: ${e.data}`)\n                let data = JSON.parse(e.data)\n                if (data.result && data.result.length) {\n                    console.log(`wallet session: ${data.result}`)\n                    showPanel('#wallet-panel')\n                    showWalletStatus()\n                } else if (data.error)\n                    console.log(`error occured, code:${data.error.code} text:${data.error.data}`)\n                else if (data.method)\n                    onkeykeeper(e.data)\n            }\n\n            connection.send(JSON.stringify({\n                jsonrpc: '2.0',\n                id: 0,\n                method: 'open_wallet',\n                params: {\n                    id: localStorage.id,\n                    pass: walletPass\n                }\n            }))\n        })\n\n        function showWalletStatus() {\n            // unsubscribe if any\n            pushNotifyUnsub(defaddr)\n\n            connection.onmessage = e => {\n                let data = JSON.parse(e.data)\n                if (data.result) {\n                    $(\"#wallet-panel .available\").text(data.result.available)\n                    $(\"#wallet-panel .sending\").text(data.result.sending)\n                    $(\"#wallet-panel .receiving\").text(data.result.receiving)\n                    $(\"#wallet-panel .current_height\").text(data.result.current_height)\n                    showAddresses()\n                } else if (data.error)\n                    console.log(`error occured, code:${data.error.code} text:${data.error.data}`)\n                else if (data.method)\n                    onkeykeeper(e.data)\n            }\n            connection.send(JSON.stringify({\n                jsonrpc: '2.0',\n                id: 0,\n                method: 'wallet_status'\n            }))\n        }\n\n        function showAddresses() {\n            connection.onmessage = e => {\n                let data = JSON.parse(e.data)\n                if(data.result) {\n                    let body = $('#wallet-panel .addresses > tbody').empty()\n                    data.result.forEach && data.result.forEach((item, index) => {\n                        if (index === 0) defaddr = item\n                        console.log(JSON.stringify(item))\n                        body.append(`<tr>\n                                        <td>${index+1}</td>\n                                        <td>${item.address}</td>\n                                        <td>${item.comment}</td>\n                                        <td>${item.create_time}</td>\n                                        <td>${item.duration}</td>\n                                        <td>${item.expired}</td>\n                                        <td>${item.own}</td>\n                                    </tr>`)\n                    })\n                    if (defaddr) {\n                        showPush()\n                    }\n                    showUtxo()\n                }\n                else if(data.error)\n                    console.log(`error occured, code:${data.error.code} text:${data.error.data}`)\n                else if(data.method)\n                    onkeykeeper(e.data)\n            }\n\n            connection.send(JSON.stringify({\n                jsonrpc: '2.0',\n                id: 0,\n                method: 'addr_list',\n                params: {\n                    own: true\n                }\n            }))\n        }\n        \n        async function pushNotifySub(addr) {\n            return new Promise((resolve, reject) => {\n                if (!addr) reject()\n                return webpush.notifyServer(true, loginConnection, {\n                    SbbsAddress: keykeeper.getSbbsAddress(addr.own_id_str),\n                    SbbsAddressPrivate: keykeeper.getSbbsAddressPrivate(addr.own_id_str),\n                    ExpiresAt: addr.create_time + addr.duration\n                })\n            })\n        }\n\n        async function pushNotifyUnsub(addr) {\n            return new Promise((resolve, reject) => {\n                if (!addr) reject()\n\n                if (!webpush.userSubscribed) {\n                    console.log('unsub: no previous subscription')\n                    reject()\n                    return\n                }\n                return webpush.notifyServer(false, loginConnection, {\n                    SbbsAddress: keykeeper.getSbbsAddress(addr.own_id_str),\n                    SbbsAddressPrivate: keykeeper.getSbbsAddressPrivate(addr.own_id_str)\n                })\n            })\n        }\n\n        function showPush() {\n            webpush = new Proxy(new WebPush(), {\n                set: function(obj, prop, value) {\n                    if (prop === \"subscription\") {\n                        if (value) {\n                            $(\"#push-enable\").hide()\n                            $(\"#push-disable\").show()\n                        } else {\n                            $(\"#push-enable\").show()\n                            $(\"#push-disable\").hide()\n                        }\n                        $(\"#push-panel\").show()\n                    }\n                    obj[prop] = value\n                    return true\n                }\n            })\n\n            if (webpush.blockedByUser) {\n                console.log(\"notifications blocked by user\")\n                $(\"#push-blocked\").show()\n                $(\"#push-panel\").show()\n                // may be push was disabled in settings\n                // remove any previous subscriptions\n                // TODO: check the same on service worker start (if possible)\n                pushNotifyUnsub(defaddr)\n            } else {\n                console.log(\"notifications enabled, notifying server\");\n                (async () => {\n                    if (await webpush.register(loginConnection)) {\n                        await pushNotifySub(defaddr)\n                        console.log(\"Push notification - OK\")\n                    }\n                })()\n            }\n\n            $(\"#push-enable\").click(() => {\n                (async () => {\n                    if (await webpush.subscribe()) {\n                        await pushNotifySub(defaddr)\n                    }\n                })()\n                return true\n            })\n\n            $(\"#push-disable\").click(() => {\n                (async () => {\n                    await pushNotifyUnsub()\n                    await webpush.unsubscribe()\n                })()\n                return true\n            })\n        }\n\n        function showUtxo() {\n            connection.onmessage = e => {\n                let data = JSON.parse(e.data)\n                if (data.result) {\n                    let body = $('#wallet-panel .utxo > tbody').empty()\n                    data.result.forEach && data.result.forEach((item, index) => body.append(`<tr>\n                            <td>${index + 1}</td>\n                            <td>${item.amount}</td>\n                            <td>${item.id}</td>\n                            <td>${item.maturity}</td>\n                            <td>${item.status_string}</td>\n                            <td>${item.type}</td>\n                            </tr>`))\n                    showTransactions()\n                } else if (data.error)\n                    console.log(`error occured, code:${data.error.code} text:${data.error.data}`)\n                else if (data.method)\n                    onkeykeeper(e.data)\n            }\n\n            connection.send(JSON.stringify({\n                jsonrpc: '2.0',\n                id: 0,\n                method: 'get_utxo'\n            }))\n        }\n\n        function showTransactions() {\n            connection.onmessage = e => {\n                let data = JSON.parse(e.data)\n                if (data.result) {\n                    let body = $('#wallet-panel .transactions > tbody').empty()\n                    data.result.forEach && data.result.forEach((item, index) => {\n                        body.append(`<tr>\n                            <td>${index + 1}</td>\n                            <td>${new Date(item.create_time * 1000).toLocaleString()}</td>\n                            <td>${item.receiver.slice(0, 32)}...</td>\n                            <td>${item.sender.slice(0, 32)}...</td>\n                            <td>${item.value}</td>\n                            <td>${item.status_string}</td>\n                            </tr>`)\n                    })\n                } else onkeykeeper(e.data)\n                if ($('#wallet-panel').is(\":visible\"))\n                    setTimeout(showWalletStatus, 5000)\n            }\n\n            connection.send(JSON.stringify({\n                jsonrpc: '2.0',\n                id: 0,\n                method: 'tx_list'\n            }))\n        }\n\n        $('#wallet-panel .send-button').click(() => {\n            let addr = $('#wallet-panel .receiver-address-input').val()\n            if (addr.length === 0) {\n                alert('Please, enter valid address.')\n                return\n            }\n\n            let amount = $('#wallet-panel .amount-input').val()\n            if (isNaN(parseInt(amount))) {\n                alert('Please, enter valid amount.')\n                return\n            }\n\n            if (confirm(`Are you sure want send ${amount} groth to ${addr}?`)) {\n                $('#wallet-panel .amount-input').val('')\n                send(parseInt(amount), addr)\n            }\n        })\n\n        function send(amount, address) {\n            console.log(`!!! sending ${amount} groth to ${address}...`)\n            connection.onmessage = (e) => {\n                let data = JSON.parse(e.data)\n                if (data.result)\n                    console.log(`result is ${data.result}`)\n                else if (data.error)\n                    console.log(`error occured, code:${data.error.code} text:${data.error.data}`)\n                else if (data.method)\n                    onkeykeeper(e.data)\n            }\n            connection.send(JSON.stringify({\n                jsonrpc: \"2.0\",\n                id: 123,\n                method: \"tx_send\",\n                params: {\n                    value: amount,\n                    fee: 100,\n                    address: address,\n                    comment: \"thank you!\"\n                }\n            }))\n        }\n\n        function createNewTestAddr() {\n            connection.send(JSON.stringify({\n                jsonrpc: '2.0',\n                id: 123,\n                method: 'create_address',\n                params:\n                        {\n                            expiration: '24h',\n                            comment: 'John Smith'\n                        }\n            }))\n        }\n    })\n    </script>\n</html>\n"}]}]},{"type":"element","tag":"h2","props":{"id":"reference-wallet-implementation"},"children":[{"type":"text","value":"Reference Wallet Implementation"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"We provide the reference web wallet implementation that combines all the described APIs together and yields the working chrome extension."}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Check out the "},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/web-wallet","rel":["nofollow"]},"children":[{"type":"text","value":"web-wallet repository"}]},{"type":"text","value":" for the source code"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Install the testnet "},{"type":"element","tag":"a","props":{"href":"https://chrome.google.com/webstore/detail/beam-web-wallet-testnet/ilhaljfiglknggcoegeknjghdgampffk?hl=en","rel":["nofollow"]},"children":[{"type":"text","value":"chrome extension"}]}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"how-to-build","depth":2,"text":"How to build"},{"id":"prebuilt-binaries","depth":2,"text":"Prebuilt binaries"},{"id":"deployment","depth":2,"text":"Deployment"},{"id":"how-to-try","depth":2,"text":"How to try"},{"id":"api-guide","depth":2,"text":"API Guide","children":[{"id":"service-balancer-api","depth":3,"text":"Service Balancer API"},{"id":"login","depth":3,"text":"login"},{"id":"subscribe","depth":3,"text":"subscribe"},{"id":"unsubscribe","depth":3,"text":"unsubscribe"},{"id":"wallet-service-api","depth":3,"text":"Wallet Service API"},{"id":"create_wallet","depth":3,"text":"create_wallet"},{"id":"open_wallet","depth":3,"text":"open_wallet"},{"id":"change_password","depth":3,"text":"change_password"},{"id":"release","depth":3,"text":"release"},{"id":"calc_change","depth":3,"text":"calc_change"},{"id":"ping","depth":3,"text":"ping"},{"id":"wallet-api-methods","depth":3,"text":"wallet API methods"},{"id":"webassembly-keykeeper","depth":3,"text":"WebAssembly Keykeeper"}]},{"id":"reference-wallet-implementation","depth":2,"text":"Reference Wallet Implementation"}]}},"_type":"markdown","_id":"content:docs:core-tech:Wallet-Service.md","_source":"content","_file":"docs/core-tech/Wallet-Service.md","_extension":"md"},{"_path":"/docs/core-tech/wallets-discovery-and-dialog-proposal","_dir":"core-tech","_draft":false,"_partial":false,"_locale":"","title":"Wallets Discovery And Dialog Proposal","description":"","body":{"type":"root","children":[{"type":"element","tag":"h2","props":{"id":"wallets-discovery-and-dialog-proposal"},"children":[{"type":"text","value":"Wallets discovery and dialog proposal"}]},{"type":"element","tag":"h3","props":{"id":"общее"},"children":[{"type":"text","value":"Общее"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Для согласования TX между кошельками происходит диалог, согласно протоколу, но туда надо добавить возможность включать произвольную информацию в пределах разумных размеров (например, любой текст, который увидит человек или любые бинарные метаданные, если общается бот или какая-то логика более высокого уровня)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Для шифрования сообщений вполне пойдет принцип PGP, для чего 2м кошелькам достаточно знать публичные ключи друг друга. Рандомный ключ (+ I.V.) для AES например 256 шифруется публичным ключом собеседника (а последний может быть и RSA и EC, не важно), остальное сообщение AESом с помощью зашифрованного ключа."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Главное: публичные ключи, о которых пойдет далее, относятся только к шифрованию диалога, к процессу формирования UTXO и логике самого кошелька в целом они не имеют никакого отношения"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Ситуации, когда одна сторона не знает, кто к ней обращается (например, некий бот собирает пожертвования на храм Бахуса и Венеры, или это обменник (*ниже)). Такой кошель уже по определению теряет часть своей анонимности и может опубликовать свой публичный ключ тем или иным образом. Доверять ли этой публикации решает сам инициатор диалога (ну вот, в качестве примера возьмем имеющиеся монетки с адресацией, когда сам адрес является ПубКл кошелька - слать туда или не слать решаем сами). Этот инициатор тогда посылает свой публичный ключ в первом сообщении"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"В секьюрных случаях Публ ключ может быть передан по какому-либо секьюрному каналу (телеграм и т.п.) между знакомыми и вставлен в кошелек"}]}]},{"type":"element","tag":"h3","props":{"id":"публикация-публичных-ключей-для-диалога-это-все-опции-имеет-смысл-реализовывать-все-что-возможно"},"children":[{"type":"text","value":"Публикация публичных ключей (для диалога!). Это все опции, имеет смысл реализовывать все что возможно"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Есть PGP key services, которые изначально были в помощь шифрованию email, но и тут могут пригодиться. По какому либо идентификатору можно заполучить программно ПублКл"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Децентрализованный вариант, как еще одна опция. Ключи храним на IPFS ("},{"type":"element","tag":"a","props":{"href":"https://ipfs.io","rel":["nofollow"]},"children":[{"type":"text","value":"https://ipfs.io"}]},{"type":"text","value":"), но там имя файла человеческое не задать, поэтому мэппинг имя->ключ можно организовать в виде смартконтракта на Eth (запись будет стоить публикующему немного, ибо это транзакция, чтение бесплатно)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Прям у себя на сайте (зеленый замочек в браузере виден? копируйте-вставляйте в кошель). Или ссылку на ipfs в виде QR кода (сам ключ длинноват для QR)"}]}]},{"type":"element","tag":"h3","props":{"id":"secure-channel-тоже-опции"},"children":[{"type":"text","value":"Secure channel. Тоже опции"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Связь по TCP напрямую. Самое быстрое и простое, оба кошеля должны быть в онлайне. Но все будут знать, что эти 2 IP общались между собой"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Через прокси (ретранслятор). Когда кто-то или оба из кошельков за файрволлом. Тоже должны быть в онлайне, и факт общения может быть установлен. Можно запустить подобные ретрансляторы, а список известных адресов могут выдавать ноды в рамках протокола."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Через инфраструктуру мессенджеров. Надо поизучать вопрос об интеграции с их АПИ. Но тут получается, что пациенты совсем друг друга хорошо знают и имеют в контактах мессенджера. Но зато есть возможность быть в оффлайне во время диалога."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Броадкастить (по крайней мере 1-е сообщение диалога) через инфраструктуру beam nodes. Сообщение распространяется по сети с некоторым убывающим TTL и с высокой вероятностью доходит до кошелька. Почему ноды могут быть заинтересованы в ретрансляции этого хлама? Ну если они майнят, то такое общение может обернуться неким txFee > 0 через какое-то время. Тут проблема как экономически бороться с флудом, поскольку сообщения шифрованные, и ноды их никак валидировать не в состоянии. Может в таких случаях обязать какой-нибудь PoW приделывать к сообщению? При этой схеме тоже все стороны должны быть в онлайне и прицепиться к нодам сети на предмет прослушки таких броадкастов (и фильтрации своих из общего потока с помощью своего приватного ключа)."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"BBS service - это ретранслятор + история. Отдельная сеть из узлов, которые реализуют \"общую шину\" для данного рода сообщений. Клиент может прицепиться к одному или нескольким таким каналам, получать по запросу некоторую историю сообщений и в реальном времени фильтровать входящие. Здесь cons и pros как что в предыдущем пункте, но есть и хорошее: 1) можно слушать из N существующих каналов M<N, сообщение соответственно может быть доставлено в соответствии с какими-то битами публичного ключа в M каналов, а не все N, получатель об этом знает, но факт того, что он переварил то или иное сообщение, скрыт. 2) Оффлайн до определенной глубины времени"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Объединение №4 и №5: сообщение гуляет по сети и попадает в BBS так или иначе. За счет рандомного TTL затирается из истории адрес отправителя, за счет BBS неизвестен получатель."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Случай когда слушатель каналов маломощный вроде мобильного клиента и/или ограничен в трафике: частично жертвуя анонимностью, поручает BBS сервису фильтровать для него канал. Для этого вместо одного публ. ключа нужно 2 штуки: 1) Selector public key, 2) Messaging public key\nСоответственно протокол диалога обогащается еще одним заголовком - некие позывные (не секретные) шифруются ключом селектора, остальное уже секретный канал"}]}]},{"type":"element","tag":"h3","props":{"id":"что-хотелось-бы-в-ui-и-в-целом-в-приложении"},"children":[{"type":"text","value":"Что хотелось бы в UI и в целом в приложении"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Address book - хранилище имен контрагентов и их публичных ключей. Имена уникальные лишь для этого кошелька, никакого центрального хранилища имен не надо"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Возможность ввести публичный ключ из clipboard и придумать для него имя"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Отображение сообщений, которые приходят как мета с сообщениями протокола. В этом случае владелец кошелька (или его бот) подтверждение пусть дает после приема каждой подобной меты, продолжать ли диалог"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Возможность поиска публичных ключей во внешних хранилищах: pgp key services, решения на ipfs и т.д."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Возможность генерации своих ключей для общения, публикации публичной части под каким-либо никнеймом, индивидуальной передачи публичного ключа собеседнику по любому каналу (через telegram secret channel как пример)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"(??? спорный момент) Интеграция кошелька с АПИ мессенджеров"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"(*)(atomic swap отдельная тема, тут надо придумать как можно лочить TX с помощью любых видов хэшей, присутствующих в других блокчейнах, опционально и в дополнение к тому что есть, за большее fee конечно,  ... ...)"}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"wallets-discovery-and-dialog-proposal","depth":2,"text":"Wallets discovery and dialog proposal","children":[{"id":"общее","depth":3,"text":"Общее"},{"id":"публикация-публичных-ключей-для-диалога-это-все-опции-имеет-смысл-реализовывать-все-что-возможно","depth":3,"text":"Публикация публичных ключей (для диалога!). Это все опции, имеет смысл реализовывать все что возможно"},{"id":"secure-channel-тоже-опции","depth":3,"text":"Secure channel. Тоже опции"},{"id":"что-хотелось-бы-в-ui-и-в-целом-в-приложении","depth":3,"text":"Что хотелось бы в UI и в целом в приложении"}]}]}},"_type":"markdown","_id":"content:docs:core-tech:Wallets-discovery-and-dialog-proposal.md","_source":"content","_file":"docs/core-tech/Wallets-discovery-and-dialog-proposal.md","_extension":"md"},{"_path":"/docs/core-tech/wasm-wallet-client","_dir":"core-tech","_draft":false,"_partial":false,"_locale":"","title":"Overview","description":"WASM wallet client is a thin wrapper around Beam client library build into WASM using Emscripten toolchain. This wrapper allows to run BEAM wallet inside any browser supporting WebAssembly and it provides the regular BEAM wallet API to communicated with it from external(javascript) code. It's available via npm for different network types:","body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"overview"},"children":[{"type":"text","value":"Overview"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"WASM wallet client is a thin wrapper around Beam client library build into WASM using Emscripten toolchain. This wrapper allows to run BEAM wallet inside any browser supporting WebAssembly and it provides the regular "},{"type":"element","tag":"a","props":{"href":"Beam-wallet-protocol-API"},"children":[{"type":"text","value":"BEAM wallet API"}]},{"type":"text","value":" to communicated with it from external(javascript) code. It's available via "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"npm"}]},{"type":"text","value":" for different network types:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://www.npmjs.com/package/beam-wasm-client","rel":["nofollow"]},"children":[{"type":"text","value":"mainnet"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://www.npmjs.com/package/beam-wasm-client-testnet","rel":["nofollow"]},"children":[{"type":"text","value":"testnet"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://www.npmjs.com/package/beam-wasm-client-dappnet","rel":["nofollow"]},"children":[{"type":"text","value":"dappnet"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://www.npmjs.com/package/beam-wasm-client-masternet","rel":["nofollow"]},"children":[{"type":"text","value":"masternet (developer)"}]}]}]},{"type":"element","tag":"h1","props":{"id":"api"},"children":[{"type":"text","value":"API"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"WASM wallet client module exports following classes:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#WasmWalletClient"},"children":[{"type":"text","value":"WasmWalletClient"}]},{"type":"text","value":" - the main object provides a set of static and member methods to control the wallet. It could be used to implement BEAM wallet as a browser extension"},{"type":"element","tag":"table","props":{},"children":[{"type":"element","tag":"thead","props":{},"children":[{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"th","props":{},"children":[{"type":"text","value":"Method"}]},{"type":"element","tag":"th","props":{},"children":[{"type":"text","value":"Description"}]}]}]},{"type":"element","tag":"tbody","props":{},"children":[{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#Constructor"},"children":[{"type":"text","value":"Constructor"}]}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"Creates new regular wallet object"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#Headless-constructor"},"children":[{"type":"text","value":"Headless constructor"}]}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"Creates new headless wallet object"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#startWallet"},"children":[{"type":"text","value":"startWallet"}]}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"Starts the wallet in the background thread"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#stopWallet"},"children":[{"type":"text","value":"stopWallet"}]}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"Asynchronously stops the wallet running in the background"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#isRunning"},"children":[{"type":"text","value":"isRunning"}]}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"Checks if the wallet is running"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#isHeadless"},"children":[{"type":"text","value":"isHeadless"}]}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"Checks if the wallet is "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"headless"}]},{"type":"text","value":", i.e. without master and owner keys"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#sendRequest"},"children":[{"type":"text","value":"sendRequest"}]}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"Sends "},{"type":"element","tag":"a","props":{"href":"Beam-wallet-protocol-API"},"children":[{"type":"text","value":"API"}]},{"type":"text","value":" request to the wallet"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#subscribe"},"children":[{"type":"text","value":"subscribe"}]}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"Subscribes for API responses"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#unsubscribe"},"children":[{"type":"text","value":"unsubscribe"}]}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"Unsubscribes from response notifications"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#setSyncHandler"},"children":[{"type":"text","value":"setSyncHandler"}]}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"Sets synchronization handler, allows to track sync progress"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#setApproveSendHandler"},"children":[{"type":"text","value":"setApproveSendHandler"}]}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"Sets handler which allows to approve or reject any send operation initiated by DAPPs"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#setApproveContractInfoHandler"},"children":[{"type":"text","value":"setApproveContractInfoHandler"}]}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"Sets handler which allows to approve or reject any operation which requires user's attention from application shader"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#createAppAPI"},"children":[{"type":"text","value":"createAppAPI"}]}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"Asynchronously creates new application wallet API for given application"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#importRecovery"},"children":[{"type":"text","value":"importRecovery"}]}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"Asynchronously imports recovery data"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#GeneratePhrase"},"children":[{"type":"text","value":"GeneratePhrase"}]}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"Generates new seed phrase"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#IsAllowedWord"},"children":[{"type":"text","value":"IsAllowedWord"}]}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"Checks if given word is in the dictionary of the words allowed to be used in seed phrases"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#IsValidPhrase"},"children":[{"type":"text","value":"IsValidPhrase"}]}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"Validates given seed phrase"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#ConvertTokenToJson"},"children":[{"type":"text","value":"ConvertTokenToJson"}]}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"Converts given BEAM address to json"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#ConvertJsonToToken"},"children":[{"type":"text","value":"ConvertJsonToToken"}]}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"Packs transaction parameters presented as JSON object into BEAM address"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#MountFS"},"children":[{"type":"text","value":"MountFS"}]}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"Asynchronously mounts WASM filesystem to the roor of IndexDB"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#CreateWallet"},"children":[{"type":"text","value":"CreateWallet"}]}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"Creates new wallet database"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#DeleteWallet"},"children":[{"type":"text","value":"DeleteWallet"}]}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"Deletes given wallet database from IndexDB"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#IsInitialized"},"children":[{"type":"text","value":"IsInitialized"}]}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"Ensures that database was created"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#CheckPassword"},"children":[{"type":"text","value":"CheckPassword"}]}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"Tests if given password fits to the database"}]}]}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#AppAPI"},"children":[{"type":"text","value":"AppAPI"}]},{"type":"text","value":" - a proxy API object, it gives limited wallet API for external web applications, which want to work with BEAM wallet"},{"type":"element","tag":"table","props":{},"children":[{"type":"element","tag":"thead","props":{},"children":[{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"th","props":{},"children":[{"type":"text","value":"Method"}]},{"type":"element","tag":"th","props":{},"children":[{"type":"text","value":"Description"}]}]}]},{"type":"element","tag":"tbody","props":{},"children":[{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#callWalletApi"},"children":[{"type":"text","value":"callWalletApi"}]}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"Allows to call wallet API methods from application"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#setHandler"},"children":[{"type":"text","value":"setHandler"}]}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"Sets handler to receive response for API request"}]}]}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#AppAPICallback"},"children":[{"type":"text","value":"AppAPICallback"}]},{"type":"text","value":" - a callback object for applications, it allows the wallet to control the action which application want to perform."},{"type":"element","tag":"table","props":{},"children":[{"type":"element","tag":"thead","props":{},"children":[{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"th","props":{},"children":[{"type":"text","value":"Method"}]},{"type":"element","tag":"th","props":{},"children":[{"type":"text","value":"Description"}]}]}]},{"type":"element","tag":"tbody","props":{},"children":[{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#sendApproved"},"children":[{"type":"text","value":"sendApproved"}]}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"Approves send request from application"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#sendRejected"},"children":[{"type":"text","value":"sendRejected"}]}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"Rejects send request from application"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#contractInfoApproved"},"children":[{"type":"text","value":"contractInfoApproved"}]}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"Approves contract call"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#contractInfoRejected"},"children":[{"type":"text","value":"contractInfoRejected"}]}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"Rejects contract call"}]}]}]}]}]}]},{"type":"element","tag":"h1","props":{"id":"wasmwalletclient"},"children":[{"type":"text","value":"WasmWalletClient"}]},{"type":"element","tag":"h2","props":{"id":"generatephrase"},"children":[{"type":"text","value":"GeneratePhrase"}]},{"type":"element","tag":"pre","props":{"className":["language-javascript"],"code":"WasmWalletClient.GeneratePhrase()\n","language":"javascript","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"WasmWalletClient.GeneratePhrase()\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Generates new seed phrase"}]},{"type":"element","tag":"h3","props":{"id":"return-value"},"children":[{"type":"text","value":"Return value"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"seed phrase, a string of 12 words from the dictionary separated separated by "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":" "}]}]}]},{"type":"element","tag":"h3","props":{"id":"example"},"children":[{"type":"text","value":"Example"}]},{"type":"element","tag":"pre","props":{"className":["language-javascript"],"code":" var phrase = Module.WasmWalletClient.GeneratePhrase()\n console.log('seed phrase is: ', phrase);\n // OUTPUT: seed phrase is:  legend hurdle erode ribbon pass exit basket doll sorry version muscle brain\n","language":"javascript","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":" var phrase = Module.WasmWalletClient.GeneratePhrase()\n console.log('seed phrase is: ', phrase);\n // OUTPUT: seed phrase is:  legend hurdle erode ribbon pass exit basket doll sorry version muscle brain\n"}]}]},{"type":"element","tag":"h2","props":{"id":"isallowedword"},"children":[{"type":"text","value":"IsAllowedWord"}]},{"type":"element","tag":"pre","props":{"className":["language-javascript"],"code":"WasmWalletClient.IsAllowedWord(word : String)\n","language":"javascript","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"WasmWalletClient.IsAllowedWord(word : String)\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Checks if given word is in the dictionary of the words allowed to be used in seed phrases"}]},{"type":"element","tag":"h3","props":{"id":"parameters"},"children":[{"type":"text","value":"Parameters"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"word"}]},{"type":"text","value":" : the word to be checked"}]}]},{"type":"element","tag":"h3","props":{"id":"return-value-1"},"children":[{"type":"text","value":"Return value"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"true"}]},{"type":"text","value":" if "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"word"}]},{"type":"text","value":" is in the dictionary otherwise "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"false"}]}]}]},{"type":"element","tag":"h3","props":{"id":"example-1"},"children":[{"type":"text","value":"Example"}]},{"type":"element","tag":"pre","props":{"className":["language-javascript"],"code":"  if (Module.WasmWalletClient.IsAllowedWord('hurdle')) {\n      console.log(\"Word is allowed\");\n  }\n","language":"javascript","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"  if (Module.WasmWalletClient.IsAllowedWord('hurdle')) {\n      console.log(\"Word is allowed\");\n  }\n"}]}]},{"type":"element","tag":"h2","props":{"id":"isvalidphrase"},"children":[{"type":"text","value":"IsValidPhrase"}]},{"type":"element","tag":"pre","props":{"className":["language-javascript"],"code":"WasmWalletClient.IsValidPhrase(phrase : String)\n","language":"javascript","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"WasmWalletClient.IsValidPhrase(phrase : String)\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Validates given seed "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"phrase"}]}]},{"type":"element","tag":"h3","props":{"id":"parameters-1"},"children":[{"type":"text","value":"Parameters"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"phrase"}]},{"type":"text","value":" : a string of the words separated by "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":" "}]}]}]},{"type":"element","tag":"h3","props":{"id":"return-value-2"},"children":[{"type":"text","value":"Return value"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"true"}]},{"type":"text","value":" if seed "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"phrase"}]},{"type":"text","value":" is valid otherwise "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"false"}]}]}]},{"type":"element","tag":"h2","props":{"id":"converttokentojson"},"children":[{"type":"text","value":"ConvertTokenToJson"}]},{"type":"element","tag":"pre","props":{"className":["language-javascript"],"code":"WasmWalletClient.ConvertTokenToJson(token : String)\n","language":"javascript","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"WasmWalletClient.ConvertTokenToJson(token : String)\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Converts given BEAM address to json"}]},{"type":"element","tag":"h3","props":{"id":"parameters-2"},"children":[{"type":"text","value":"Parameters"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"token"}]},{"type":"text","value":" : address to to unpack data"}]}]},{"type":"element","tag":"h3","props":{"id":"return-value-3"},"children":[{"type":"text","value":"Return value"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"json object with address parameters unpacked from given string"}]}]},{"type":"element","tag":"h3","props":{"id":"notes"},"children":[{"type":"text","value":"Notes"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"in beam address(token) is binary packed set the key-value parameters presented as "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"base58"}]},{"type":"text","value":" string"}]}]},{"type":"element","tag":"h2","props":{"id":"convertjsontotoken"},"children":[{"type":"text","value":"ConvertJsonToToken"}]},{"type":"element","tag":"pre","props":{"className":["language-javascript"],"code":"WasmWalletClient.ConvertJsonToToken(json : String)\n","language":"javascript","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"WasmWalletClient.ConvertJsonToToken(json : String)\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Packs transaction parameters presented as JSON object into BEAM address"}]},{"type":"element","tag":"h3","props":{"id":"parameters-3"},"children":[{"type":"text","value":"Parameters"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"json"}]},{"type":"text","value":" : parameters of the transaction"}]}]},{"type":"element","tag":"h3","props":{"id":"return-value-4"},"children":[{"type":"text","value":"Return value"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"base58"}]},{"type":"text","value":" encoded string of packed parameters"}]}]},{"type":"element","tag":"h2","props":{"id":"mountfs"},"children":[{"type":"text","value":"MountFS"}]},{"type":"element","tag":"pre","props":{"className":["language-javascript"],"code":"WasmWalletClient.MountFS(callback : function)\n","language":"javascript","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"WasmWalletClient.MountFS(callback : function)\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Asynchronously mounts WASM filesystem to the roor of IndexDB"}]},{"type":"element","tag":"h3","props":{"id":"parameters-4"},"children":[{"type":"text","value":"Parameters"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"callback"}]},{"type":"text","value":" : mounting completion handler, if an error occurred, it will be provided as a parameter to this function."}]}]},{"type":"element","tag":"h3","props":{"id":"return-value-5"},"children":[{"type":"text","value":"Return value"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"none"}]}]},{"type":"element","tag":"h3","props":{"id":"notes-1"},"children":[{"type":"text","value":"Notes"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"This method should be called before any action which implies work with filesystem"}]}]},{"type":"element","tag":"h3","props":{"id":"example-2"},"children":[{"type":"text","value":"Example"}]},{"type":"element","tag":"pre","props":{"className":["language-javascript"],"code":" Module.WasmWalletClient.MountFS(function(error) {\n   if (error != null) {\n     console.log(\"mounted\");\n     var walletClient = new Module.WasmWalletClient(\"/beam_wallet/wallet.db\",\n                                                  \"123\",\n                                                  \"eu-node01.masternet.beam.mw:8200\");\n   }\n }\n","language":"javascript","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":" Module.WasmWalletClient.MountFS(function(error) {\n   if (error != null) {\n     console.log(\"mounted\");\n     var walletClient = new Module.WasmWalletClient(\"/beam_wallet/wallet.db\",\n                                                  \"123\",\n                                                  \"eu-node01.masternet.beam.mw:8200\");\n   }\n }\n"}]}]},{"type":"element","tag":"h2","props":{"id":"createwallet"},"children":[{"type":"text","value":"CreateWallet"}]},{"type":"element","tag":"pre","props":{"className":["language-javascript"],"code":"WasmWalletClient.CreateWallet(seedPhrase : String, database : String, password : String)\n","language":"javascript","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"WasmWalletClient.CreateWallet(seedPhrase : String, database : String, password : String)\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Creates new wallet database"}]},{"type":"element","tag":"h3","props":{"id":"parameters-5"},"children":[{"type":"text","value":"Parameters"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"seedPhrase"}]},{"type":"text","value":": seed pharse for the wallet"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"database"}]},{"type":"text","value":" : path to the database in IndexedDB"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"password"}]},{"type":"text","value":" : password to the new wallet database"}]}]},{"type":"element","tag":"h3","props":{"id":"return-value-6"},"children":[{"type":"text","value":"Return value"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"none"}]}]},{"type":"element","tag":"h3","props":{"id":"notes-2"},"children":[{"type":"text","value":"Notes"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Ensure that "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"MountFS()"}]},{"type":"text","value":" has been called before"}]}]},{"type":"element","tag":"h3","props":{"id":"example-3"},"children":[{"type":"text","value":"Example"}]},{"type":"element","tag":"pre","props":{"className":["language-javascript"],"code":" let phrase = Module.WasmWalletClient.GeneratePhrase();\n Module.WasmWalletClient.CreateWallet(phrase, \"/beam_wallet/wallet.db\", \"123\");\n","language":"javascript","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":" let phrase = Module.WasmWalletClient.GeneratePhrase();\n Module.WasmWalletClient.CreateWallet(phrase, \"/beam_wallet/wallet.db\", \"123\");\n"}]}]},{"type":"element","tag":"h2","props":{"id":"deletewallet"},"children":[{"type":"text","value":"DeleteWallet"}]},{"type":"element","tag":"pre","props":{"className":["language-javascript"],"code":"WasmWalletClient.DeleteWallet(database : String)\n","language":"javascript","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"WasmWalletClient.DeleteWallet(database : String)\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Deletes given wallet database from IndexDB"}]},{"type":"element","tag":"h3","props":{"id":"parameters-6"},"children":[{"type":"text","value":"Parameters"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"database"}]},{"type":"text","value":" : path to the database file"}]}]},{"type":"element","tag":"h3","props":{"id":"return-value-7"},"children":[{"type":"text","value":"Return value"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"none"}]}]},{"type":"element","tag":"h3","props":{"id":"notes-3"},"children":[{"type":"text","value":"Notes"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Ensure that "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"MountFS()"}]},{"type":"text","value":" has been called before"}]}]},{"type":"element","tag":"h2","props":{"id":"isinitialized"},"children":[{"type":"text","value":"IsInitialized"}]},{"type":"element","tag":"pre","props":{"className":["language-javascript"],"code":"WasmWalletClient.IsInitialized(database : String)\n","language":"javascript","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"WasmWalletClient.IsInitialized(database : String)\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Ensures that database was created"}]},{"type":"element","tag":"h3","props":{"id":"parameters-7"},"children":[{"type":"text","value":"Parameters"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"database"}]},{"type":"text","value":" : the path to the database"}]}]},{"type":"element","tag":"h3","props":{"id":"return-value-8"},"children":[{"type":"text","value":"Return value"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"true"}]},{"type":"text","value":" if database is created and initialized, otherwise "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"false"}]}]}]},{"type":"element","tag":"h3","props":{"id":"notes-4"},"children":[{"type":"text","value":"Notes"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Ensure that "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"MountFS()"}]},{"type":"text","value":" has been called before"}]}]},{"type":"element","tag":"h2","props":{"id":"checkpassword"},"children":[{"type":"text","value":"CheckPassword"}]},{"type":"element","tag":"pre","props":{"className":["language-javascript"],"code":"WasmWalletClient.CheckPassword(database : String, password : String, callback : function)\n","language":"javascript","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"WasmWalletClient.CheckPassword(database : String, password : String, callback : function)\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Tests asynchronously if given password fits to the database"}]},{"type":"element","tag":"h3","props":{"id":"parameters-8"},"children":[{"type":"text","value":"Parameters"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"database"}]},{"type":"text","value":" : path to the database"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"password"}]},{"type":"text","value":" : password to test"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"callback"}]},{"type":"text","value":" : asynchronously returns the result of the test"}]}]},{"type":"element","tag":"h3","props":{"id":"return-value-9"},"children":[{"type":"text","value":"Return value"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"none"}]}]},{"type":"element","tag":"h3","props":{"id":"notes-5"},"children":[{"type":"text","value":"Notes"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Ensure that "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"MountFS()"}]},{"type":"text","value":" has been called before"}]}]},{"type":"element","tag":"h3","props":{"id":"example-4"},"children":[{"type":"text","value":"Example"}]},{"type":"element","tag":"pre","props":{"className":["language-javascript"],"code":"  Module.WasmWalletClient.CheckPassword(\"/beam_wallet/wallet.db\", \"13\", (res) => {\n  if (res)\n    console.log(\"Password is correct\")\n  else\n    console.log(\"Password is not correct\")\n  })\n","language":"javascript","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"  Module.WasmWalletClient.CheckPassword(\"/beam_wallet/wallet.db\", \"13\", (res) => {\n  if (res)\n    console.log(\"Password is correct\")\n  else\n    console.log(\"Password is not correct\")\n  })\n"}]}]},{"type":"element","tag":"h2","props":{"id":"constructor"},"children":[{"type":"text","value":"Constructor"}]},{"type":"element","tag":"pre","props":{"className":["language-javascript"],"code":"WasmWalletClient(database : String, password : String, nodeURL : String)\n","language":"javascript","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"WasmWalletClient(database : String, password : String, nodeURL : String)\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Creates new wallet client object"}]},{"type":"element","tag":"h3","props":{"id":"parameters-9"},"children":[{"type":"text","value":"Parameters"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"database"}]},{"type":"text","value":" : path to encrypted database in browser's IndexDB"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"password"}]},{"type":"text","value":" : password to the database"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"nodeURL"}]},{"type":"text","value":" : URL to BEAM node to communicate with"}]}]},{"type":"element","tag":"h3","props":{"id":"return-value-10"},"children":[{"type":"text","value":"Return value"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"object of the wallet client"}]}]},{"type":"element","tag":"h3","props":{"id":"notes-6"},"children":[{"type":"text","value":"Notes"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"wallet client can communicate with node over Web Sockets only, ensure that node located by "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"nodeURL"}]},{"type":"text","value":" has WebSocket proxy enabled"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"ensure that "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"MountFS()"}]},{"type":"text","value":" has been called before"}]}]},{"type":"element","tag":"h3","props":{"id":"example-5"},"children":[{"type":"text","value":"Example"}]},{"type":"element","tag":"pre","props":{"className":["language-javascript"],"code":" var walletClient = new Module.WasmWalletClient(\"/beam_wallet/wallet.db\",\n                                                \"123\",\n\n                                                \"eu-node01.masternet.beam.mw:8200\");\n","language":"javascript","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":" var walletClient = new Module.WasmWalletClient(\"/beam_wallet/wallet.db\",\n                                                \"123\",\n\n                                                \"eu-node01.masternet.beam.mw:8200\");\n"}]}]},{"type":"element","tag":"h2","props":{"id":"headless-constructor"},"children":[{"type":"text","value":"Headless constructor"}]},{"type":"element","tag":"pre","props":{"className":["language-javascript"],"code":"WasmWalletClient(nodeURL : String)\n","language":"javascript","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"WasmWalletClient(nodeURL : String)\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Creates new headless wallet client object. It doesn't have a master key. The wallet with such a database can communicate with the node, but cannot make transactions or detect any UTXO event. It can generate public keys, but they all are temporary and provided only for the reason to have viewer access to dapps"}]},{"type":"element","tag":"h3","props":{"id":"parameters-10"},"children":[{"type":"text","value":"Parameters"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"nodeURL"}]},{"type":"text","value":" : URL to BEAM node to communicate with"}]}]},{"type":"element","tag":"h3","props":{"id":"return-value-11"},"children":[{"type":"text","value":"Return value"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"object of the wallet client"}]}]},{"type":"element","tag":"h3","props":{"id":"notes-7"},"children":[{"type":"text","value":"Notes"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"wallet client can communicate with node over Web Sockets only, ensure that node located by "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"nodeURL"}]},{"type":"text","value":" has WebSocket proxy enabled"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"headless wallet doesn't require "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"MountFS()"}]},{"type":"text","value":" to be called before"}]}]},{"type":"element","tag":"h3","props":{"id":"example-6"},"children":[{"type":"text","value":"Example"}]},{"type":"element","tag":"pre","props":{"className":["language-javascript"],"code":" var walletClient = new Module.WasmWalletClient(\"eu-node01.masternet.beam.mw:8200\");\n","language":"javascript","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":" var walletClient = new Module.WasmWalletClient(\"eu-node01.masternet.beam.mw:8200\");\n"}]}]},{"type":"element","tag":"h2","props":{"id":"startwallet"},"children":[{"type":"text","value":"startWallet"}]},{"type":"element","tag":"pre","props":{"className":["language-javascript"],"code":"function startWallet()\n","language":"javascript","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"function startWallet()\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Starts the wallet in the background thread"}]},{"type":"element","tag":"h3","props":{"id":"notes-8"},"children":[{"type":"text","value":"Notes"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"wallet client can communicate with node over Web Sockets only, ensure that node located by "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"nodeURL"}]},{"type":"text","value":" has WebSocket proxy enabled"}]}]},{"type":"element","tag":"h2","props":{"id":"stopwallet"},"children":[{"type":"text","value":"stopWallet"}]},{"type":"element","tag":"pre","props":{"className":["language-javascript"],"code":"function stopWallet(callback : function)\n","language":"javascript","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"function stopWallet(callback : function)\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Asynchronously stops the wallet running in the background"}]},{"type":"element","tag":"h3","props":{"id":"parameters-11"},"children":[{"type":"text","value":"Parameters"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"callback"}]},{"type":"text","value":" : calls when wallet has stopped. In this callback it is safe to delete the wallet database"}]}]},{"type":"element","tag":"h3","props":{"id":"return-value-12"},"children":[{"type":"text","value":"Return value"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"none"}]}]},{"type":"element","tag":"h3","props":{"id":"example-7"},"children":[{"type":"text","value":"Example"}]},{"type":"element","tag":"pre","props":{"className":["language-javascript"],"code":"  wc.stopWallet(()=> {\n    console.log(\"is running: \" + wc.isRunning()) // false\n  }\n","language":"javascript","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"  wc.stopWallet(()=> {\n    console.log(\"is running: \" + wc.isRunning()) // false\n  }\n"}]}]},{"type":"element","tag":"h2","props":{"id":"isrunning"},"children":[{"type":"text","value":"isRunning"}]},{"type":"element","tag":"pre","props":{"className":["language-javascript"],"code":"function isRunning()\n","language":"javascript","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"function isRunning()\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Checks if the wallet is running"}]},{"type":"element","tag":"h3","props":{"id":"parameters-12"},"children":[{"type":"text","value":"Parameters"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"none"}]}]},{"type":"element","tag":"h3","props":{"id":"return-value-13"},"children":[{"type":"text","value":"Return value"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"true"}]},{"type":"text","value":" if the wallet is running, "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"false"}]},{"type":"text","value":" otherwise"}]}]},{"type":"element","tag":"h2","props":{"id":"isheadless"},"children":[{"type":"text","value":"isHeadless"}]},{"type":"element","tag":"pre","props":{"className":["language-javascript"],"code":"function isHeadless()\n","language":"javascript","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"function isHeadless()\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Checks if the wallet is "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"headless"}]},{"type":"text","value":", i.e. without master and owner keys"}]},{"type":"element","tag":"h3","props":{"id":"parameters-13"},"children":[{"type":"text","value":"Parameters"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"none"}]}]},{"type":"element","tag":"h3","props":{"id":"return-value-14"},"children":[{"type":"text","value":"Return value"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"true"}]},{"type":"text","value":" if the wallet is headless, "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"false"}]},{"type":"text","value":" otherwise"}]}]},{"type":"element","tag":"h2","props":{"id":"sendrequest"},"children":[{"type":"text","value":"sendRequest"}]},{"type":"element","tag":"pre","props":{"className":["language-javascript"],"code":"function sendRequest(jsonRequest : String)\n","language":"javascript","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"function sendRequest(jsonRequest : String)\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Sends "},{"type":"element","tag":"a","props":{"href":"Beam-wallet-protocol-API"},"children":[{"type":"text","value":"API"}]},{"type":"text","value":" request to the wallet"}]},{"type":"element","tag":"h3","props":{"id":"parameters-14"},"children":[{"type":"text","value":"Parameters"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"jsonRequest"}]},{"type":"text","value":" : API request"}]}]},{"type":"element","tag":"h3","props":{"id":"return-value-15"},"children":[{"type":"text","value":"Return value"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"none"}]}]},{"type":"element","tag":"h3","props":{"id":"notes-9"},"children":[{"type":"text","value":"Notes"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"to get response you have to "},{"type":"element","tag":"a","props":{"href":"#subscribe"},"children":[{"type":"text","value":"subscribe"}]},{"type":"text","value":" before"}]}]},{"type":"element","tag":"h3","props":{"id":"example-8"},"children":[{"type":"text","value":"Example"}]},{"type":"element","tag":"pre","props":{"className":["language-javascript"],"code":" walletClient.sendRequest(JSON.stringify({\n     jsonrpc: '2.0',\n     id: 5,\n     method: 'wallet_status'\n }));\n","language":"javascript","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":" walletClient.sendRequest(JSON.stringify({\n     jsonrpc: '2.0',\n     id: 5,\n     method: 'wallet_status'\n }));\n"}]}]},{"type":"element","tag":"h2","props":{"id":"subscribe"},"children":[{"type":"text","value":"subscribe"}]},{"type":"element","tag":"pre","props":{"className":["language-javascript"],"code":"function subscribe(callback : function)\n","language":"javascript","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"function subscribe(callback : function)\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Subscribes for API responses"}]},{"type":"element","tag":"h3","props":{"id":"parameters-15"},"children":[{"type":"text","value":"Parameters"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"callback"}]},{"type":"text","value":" : function which is called when response arrived"}]}]},{"type":"element","tag":"h3","props":{"id":"return-value-16"},"children":[{"type":"text","value":"Return value"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"index of the subscription"}]}]},{"type":"element","tag":"h3","props":{"id":"example-9"},"children":[{"type":"text","value":"Example"}]},{"type":"element","tag":"pre","props":{"className":["language-javascript"],"code":"  var i = walletClient.subscribe((r)=> {\n      console.log(\"response: \" + r)\n  });\n","language":"javascript","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"  var i = walletClient.subscribe((r)=> {\n      console.log(\"response: \" + r)\n  });\n"}]}]},{"type":"element","tag":"h2","props":{"id":"unsubscribe"},"children":[{"type":"text","value":"unsubscribe"}]},{"type":"element","tag":"pre","props":{"className":["language-javascript"],"code":"function unsubscribe(index : Number)\n","language":"javascript","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"function unsubscribe(index : Number)\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Unsubscribes from response notifications"}]},{"type":"element","tag":"h3","props":{"id":"parameters-16"},"children":[{"type":"text","value":"Parameters"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"index"}]},{"type":"text","value":" : index of the subscription"}]}]},{"type":"element","tag":"h3","props":{"id":"return-value-17"},"children":[{"type":"text","value":"Return value"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"none"}]}]},{"type":"element","tag":"h2","props":{"id":"setsynchandler"},"children":[{"type":"text","value":"setSyncHandler"}]},{"type":"element","tag":"pre","props":{"className":["language-javascript"],"code":"function setSyncHandler(handler : function)\n","language":"javascript","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"function setSyncHandler(handler : function)\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Sets synchronization handler, allows to track sync progress"}]},{"type":"element","tag":"h3","props":{"id":"parameters-17"},"children":[{"type":"text","value":"Parameters"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"handler"}]},{"type":"text","value":" : called each time wallet notifies about sync progress"}]}]},{"type":"element","tag":"h3","props":{"id":"return-value-18"},"children":[{"type":"text","value":"Return value"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"none"}]}]},{"type":"element","tag":"h3","props":{"id":"example-10"},"children":[{"type":"text","value":"Example"}]},{"type":"element","tag":"pre","props":{"className":["language-javascript"],"code":" walletClient.setSyncHandler((done, total) => {\n    console.log(\"sync [\" + done + \"/\" + total + \"]\");\n });\n","language":"javascript","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":" walletClient.setSyncHandler((done, total) => {\n    console.log(\"sync [\" + done + \"/\" + total + \"]\");\n });\n"}]}]},{"type":"element","tag":"h2","props":{"id":"setapprovesendhandler"},"children":[{"type":"text","value":"setApproveSendHandler"}]},{"type":"element","tag":"pre","props":{"className":["language-javascript"],"code":"function setApproveSendHandler(handler : function)\n","language":"javascript","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"function setApproveSendHandler(handler : function)\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Sets handler which allows to approve or reject any send operation initiated by DAPPs"}]},{"type":"element","tag":"h3","props":{"id":"parameters-18"},"children":[{"type":"text","value":"Parameters"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"handler"}]},{"type":"text","value":" : function called each time application wants to send assets from the wallet"}]}]},{"type":"element","tag":"h3","props":{"id":"return-value-19"},"children":[{"type":"text","value":"Return value"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"none"}]}]},{"type":"element","tag":"h3","props":{"id":"example-11"},"children":[{"type":"text","value":"Example"}]},{"type":"element","tag":"pre","props":{"className":["language-javascript"],"code":" walletClient.setApproveSendHandler((request, info, cb)=>{\n     console.log(\"Request: \" + request);\n     console.log(\"Info: \" + info);\n     cb.sendApproved(request);\n     //cb.sendRejected(request);\n }) \n","language":"javascript","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":" walletClient.setApproveSendHandler((request, info, cb)=>{\n     console.log(\"Request: \" + request);\n     console.log(\"Info: \" + info);\n     cb.sendApproved(request);\n     //cb.sendRejected(request);\n }) \n"}]}]},{"type":"element","tag":"h2","props":{"id":"setapprovecontractinfohandler"},"children":[{"type":"text","value":"setApproveContractInfoHandler"}]},{"type":"element","tag":"pre","props":{"className":["language-javascript"],"code":"function setApproveContractInfoHandler(handler : function)\n","language":"javascript","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"function setApproveContractInfoHandler(handler : function)\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Sets handler which allows to approve or reject any operation which requires user's attention from application shader"}]},{"type":"element","tag":"h3","props":{"id":"parameters-19"},"children":[{"type":"text","value":"Parameters"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"handler"}]}]}]},{"type":"element","tag":"h3","props":{"id":"return-value-20"},"children":[{"type":"text","value":"Return value"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"none"}]}]},{"type":"element","tag":"h3","props":{"id":"example-12"},"children":[{"type":"text","value":"Example"}]},{"type":"element","tag":"pre","props":{"className":["language-javascript"],"code":" walletClient.setApproveContractInfoHandler((request, info, amounts, cb)=>{\n     console.log(\"Request: \" + request);\n     console.log(\"Info: \" + info);\n     cb.contractInfoApproved(request);\n     //cb.contractInfoRejected(request);\n }) \n","language":"javascript","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":" walletClient.setApproveContractInfoHandler((request, info, amounts, cb)=>{\n     console.log(\"Request: \" + request);\n     console.log(\"Info: \" + info);\n     cb.contractInfoApproved(request);\n     //cb.contractInfoRejected(request);\n }) \n"}]}]},{"type":"element","tag":"h2","props":{"id":"createappapi"},"children":[{"type":"text","value":"createAppAPI"}]},{"type":"element","tag":"pre","props":{"className":["language-javascript"],"code":"function createAppAPI(appid : String, appname : String, callback : function)\n","language":"javascript","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"function createAppAPI(appid : String, appname : String, callback : function)\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Asynchronously creates new application wallet API for given application"}]},{"type":"element","tag":"h3","props":{"id":"parameters-20"},"children":[{"type":"text","value":"Parameters"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"appid"}]},{"type":"text","value":" : ID of the application"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"appname"}]},{"type":"text","value":" : the name of the app"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"callback"}]},{"type":"text","value":" : the callback with API object in the case of success"}]}]},{"type":"element","tag":"h3","props":{"id":"example-13"},"children":[{"type":"text","value":"Example"}]},{"type":"element","tag":"pre","props":{"className":["language-javascript"],"code":" console.log(\"calling API...\");\n wc.createAppAPI(\"appid\", \"appname\", (api)=>{\n    api.setHandler((r)=> {\n       console.log(\"API response: \" + r)\n    })\n    api.callWalletApi(JSON.stringify({\n       jsonrpc: '2.0',\n        id: 5,\n        method: 'wallet_status'\n    }));        \n });\n","language":"javascript","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":" console.log(\"calling API...\");\n wc.createAppAPI(\"appid\", \"appname\", (api)=>{\n    api.setHandler((r)=> {\n       console.log(\"API response: \" + r)\n    })\n    api.callWalletApi(JSON.stringify({\n       jsonrpc: '2.0',\n        id: 5,\n        method: 'wallet_status'\n    }));        \n });\n"}]}]},{"type":"element","tag":"h2","props":{"id":"importrecovery"},"children":[{"type":"text","value":"importRecovery"}]},{"type":"element","tag":"pre","props":{"className":["language-javascript"],"code":"function importRecovery(recoveryData: Uint8Array, callback: function(error, done, total))\n","language":"javascript","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"function importRecovery(recoveryData: Uint8Array, callback: function(error, done, total))\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Asynchronously imports recovery data"}]},{"type":"element","tag":"h3","props":{"id":"parameters-21"},"children":[{"type":"text","value":"Parameters"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"recoveryData"}]},{"type":"text","value":" : downloaded recovery data"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"callback"}]},{"type":"text","value":" : callback function, which allows to handle errors via "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"error"}]},{"type":"text","value":" parameter and to report progress using "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"done"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"total"}]}]}]},{"type":"element","tag":"h3","props":{"id":"example-14"},"children":[{"type":"text","value":"Example"}]},{"type":"element","tag":"pre","props":{"className":["language-javascript"],"code":" // download function should be defined by user\n download(\"recovery.bin\", function(error, data) {\n    if (error == null) {\n        console.log(\"downloaded recovery\")\n        walletClient.importRecovery(data, function(error, done, total) {\n            if (error == null) {\n                console.log(`Restoring ${done}/${total}`)\n            } else {\n                console.log(`Failed to recover: ${error}`)\n            }\n        });\n        \n    } else {\n        console.log(\"failed to download recovery\")\n    }\n\n});\n","language":"javascript","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":" // download function should be defined by user\n download(\"recovery.bin\", function(error, data) {\n    if (error == null) {\n        console.log(\"downloaded recovery\")\n        walletClient.importRecovery(data, function(error, done, total) {\n            if (error == null) {\n                console.log(`Restoring ${done}/${total}`)\n            } else {\n                console.log(`Failed to recover: ${error}`)\n            }\n        });\n        \n    } else {\n        console.log(\"failed to download recovery\")\n    }\n\n});\n"}]}]},{"type":"element","tag":"h1","props":{"id":"appapi"},"children":[{"type":"text","value":"AppAPI"}]},{"type":"element","tag":"h2","props":{"id":"callwalletapi"},"children":[{"type":"text","value":"callWalletApi"}]},{"type":"element","tag":"h2","props":{"id":"sethandler"},"children":[{"type":"text","value":"setHandler"}]},{"type":"element","tag":"h1","props":{"id":"appapicallback"},"children":[{"type":"text","value":"AppAPICallback"}]},{"type":"element","tag":"h2","props":{"id":"sendapproved"},"children":[{"type":"text","value":"sendApproved"}]},{"type":"element","tag":"h2","props":{"id":"sendrejected"},"children":[{"type":"text","value":"sendRejected"}]},{"type":"element","tag":"h2","props":{"id":"contractinfoapproved"},"children":[{"type":"text","value":"contractInfoApproved"}]},{"type":"element","tag":"h2","props":{"id":"contractinforejected"},"children":[{"type":"text","value":"contractInfoRejected"}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"generatephrase","depth":2,"text":"GeneratePhrase","children":[{"id":"return-value","depth":3,"text":"Return value"},{"id":"example","depth":3,"text":"Example"}]},{"id":"isallowedword","depth":2,"text":"IsAllowedWord","children":[{"id":"parameters","depth":3,"text":"Parameters"},{"id":"return-value-1","depth":3,"text":"Return value"},{"id":"example-1","depth":3,"text":"Example"}]},{"id":"isvalidphrase","depth":2,"text":"IsValidPhrase","children":[{"id":"parameters-1","depth":3,"text":"Parameters"},{"id":"return-value-2","depth":3,"text":"Return value"}]},{"id":"converttokentojson","depth":2,"text":"ConvertTokenToJson","children":[{"id":"parameters-2","depth":3,"text":"Parameters"},{"id":"return-value-3","depth":3,"text":"Return value"},{"id":"notes","depth":3,"text":"Notes"}]},{"id":"convertjsontotoken","depth":2,"text":"ConvertJsonToToken","children":[{"id":"parameters-3","depth":3,"text":"Parameters"},{"id":"return-value-4","depth":3,"text":"Return value"}]},{"id":"mountfs","depth":2,"text":"MountFS","children":[{"id":"parameters-4","depth":3,"text":"Parameters"},{"id":"return-value-5","depth":3,"text":"Return value"},{"id":"notes-1","depth":3,"text":"Notes"},{"id":"example-2","depth":3,"text":"Example"}]},{"id":"createwallet","depth":2,"text":"CreateWallet","children":[{"id":"parameters-5","depth":3,"text":"Parameters"},{"id":"return-value-6","depth":3,"text":"Return value"},{"id":"notes-2","depth":3,"text":"Notes"},{"id":"example-3","depth":3,"text":"Example"}]},{"id":"deletewallet","depth":2,"text":"DeleteWallet","children":[{"id":"parameters-6","depth":3,"text":"Parameters"},{"id":"return-value-7","depth":3,"text":"Return value"},{"id":"notes-3","depth":3,"text":"Notes"}]},{"id":"isinitialized","depth":2,"text":"IsInitialized","children":[{"id":"parameters-7","depth":3,"text":"Parameters"},{"id":"return-value-8","depth":3,"text":"Return value"},{"id":"notes-4","depth":3,"text":"Notes"}]},{"id":"checkpassword","depth":2,"text":"CheckPassword","children":[{"id":"parameters-8","depth":3,"text":"Parameters"},{"id":"return-value-9","depth":3,"text":"Return value"},{"id":"notes-5","depth":3,"text":"Notes"},{"id":"example-4","depth":3,"text":"Example"}]},{"id":"constructor","depth":2,"text":"Constructor","children":[{"id":"parameters-9","depth":3,"text":"Parameters"},{"id":"return-value-10","depth":3,"text":"Return value"},{"id":"notes-6","depth":3,"text":"Notes"},{"id":"example-5","depth":3,"text":"Example"}]},{"id":"headless-constructor","depth":2,"text":"Headless constructor","children":[{"id":"parameters-10","depth":3,"text":"Parameters"},{"id":"return-value-11","depth":3,"text":"Return value"},{"id":"notes-7","depth":3,"text":"Notes"},{"id":"example-6","depth":3,"text":"Example"}]},{"id":"startwallet","depth":2,"text":"startWallet","children":[{"id":"notes-8","depth":3,"text":"Notes"}]},{"id":"stopwallet","depth":2,"text":"stopWallet","children":[{"id":"parameters-11","depth":3,"text":"Parameters"},{"id":"return-value-12","depth":3,"text":"Return value"},{"id":"example-7","depth":3,"text":"Example"}]},{"id":"isrunning","depth":2,"text":"isRunning","children":[{"id":"parameters-12","depth":3,"text":"Parameters"},{"id":"return-value-13","depth":3,"text":"Return value"}]},{"id":"isheadless","depth":2,"text":"isHeadless","children":[{"id":"parameters-13","depth":3,"text":"Parameters"},{"id":"return-value-14","depth":3,"text":"Return value"}]},{"id":"sendrequest","depth":2,"text":"sendRequest","children":[{"id":"parameters-14","depth":3,"text":"Parameters"},{"id":"return-value-15","depth":3,"text":"Return value"},{"id":"notes-9","depth":3,"text":"Notes"},{"id":"example-8","depth":3,"text":"Example"}]},{"id":"subscribe","depth":2,"text":"subscribe","children":[{"id":"parameters-15","depth":3,"text":"Parameters"},{"id":"return-value-16","depth":3,"text":"Return value"},{"id":"example-9","depth":3,"text":"Example"}]},{"id":"unsubscribe","depth":2,"text":"unsubscribe","children":[{"id":"parameters-16","depth":3,"text":"Parameters"},{"id":"return-value-17","depth":3,"text":"Return value"}]},{"id":"setsynchandler","depth":2,"text":"setSyncHandler","children":[{"id":"parameters-17","depth":3,"text":"Parameters"},{"id":"return-value-18","depth":3,"text":"Return value"},{"id":"example-10","depth":3,"text":"Example"}]},{"id":"setapprovesendhandler","depth":2,"text":"setApproveSendHandler","children":[{"id":"parameters-18","depth":3,"text":"Parameters"},{"id":"return-value-19","depth":3,"text":"Return value"},{"id":"example-11","depth":3,"text":"Example"}]},{"id":"setapprovecontractinfohandler","depth":2,"text":"setApproveContractInfoHandler","children":[{"id":"parameters-19","depth":3,"text":"Parameters"},{"id":"return-value-20","depth":3,"text":"Return value"},{"id":"example-12","depth":3,"text":"Example"}]},{"id":"createappapi","depth":2,"text":"createAppAPI","children":[{"id":"parameters-20","depth":3,"text":"Parameters"},{"id":"example-13","depth":3,"text":"Example"}]},{"id":"importrecovery","depth":2,"text":"importRecovery","children":[{"id":"parameters-21","depth":3,"text":"Parameters"},{"id":"example-14","depth":3,"text":"Example"}]},{"id":"callwalletapi","depth":2,"text":"callWalletApi"},{"id":"sethandler","depth":2,"text":"setHandler"},{"id":"sendapproved","depth":2,"text":"sendApproved"},{"id":"sendrejected","depth":2,"text":"sendRejected"},{"id":"contractinfoapproved","depth":2,"text":"contractInfoApproved"},{"id":"contractinforejected","depth":2,"text":"contractInfoRejected"}]}},"_type":"markdown","_id":"content:docs:core-tech:WASM-wallet-client.md","_source":"content","_file":"docs/core-tech/WASM-wallet-client.md","_extension":"md"}]