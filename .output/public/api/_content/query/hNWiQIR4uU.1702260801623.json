[{"_path":"/docs/core-tech/confidential-assets-(historical)","_dir":"core-tech","_draft":false,"_partial":false,"_locale":"","title":"Confidential Assets (historical)","description":"Consult the MW CLA section for Confidential Assets implementation details","body":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Consult the "},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/wiki/MW-CLA","rel":["nofollow"]},"children":[{"type":"text","value":"MW CLA"}]},{"type":"text","value":" section for Confidential Assets implementation details"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Consult the "},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/wiki/Confidential-assets-(BETA)","rel":["nofollow"]},"children":[{"type":"text","value":"Confidential assets (BETA)\n"}]},{"type":"text","value":" section for the Confidential Assets tutorial"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"THE TEXT BELOW IS KEPT FOR HISTORICAL REASONS"}]}]},{"type":"element","tag":"hr","props":{},"children":[]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"MW can be extended to allows encoding multiple types of assets to be traded on the same blockchain. And it will only need a slight modifications to actually allow this.\nThere are two types of assets that can be implemented: "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"predefined"}]},{"type":"text","value":" and "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"custom"}]},{"type":"text","value":". Each type has its advantages and limitations."}]},{"type":"element","tag":"h2","props":{"id":"basic-idea"},"children":[{"type":"text","value":"Basic idea"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The UTXO is an EC point, which is a linear combination of two nums (nothing-up-my-sleeve) generators: "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"G"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"H"}]},{"type":"text","value":", whereas "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"G"}]},{"type":"text","value":" is multiplied by the secret key (blinding factor), and the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"H"}]},{"type":"text","value":" - by the value."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"To allow multiple types of assets it's sufficient to use different generators (one per asset type) instead of the single "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"H"}]},{"type":"text","value":". There may be different schemes to represent such UTXOs, but in any of them the following should be taken into consideration:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Those "},{"type":"element","tag":"u","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"must"}]}]},{"type":"text","value":" be nums-generators, and the verifier should be able to verify this."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The verifier should be able to verify the rangeproof. Means - the bulletproof should be adjusted accordingly."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"There should be a brief scheme for the emission of the assets."}]}]},{"type":"element","tag":"h2","props":{"id":"predefined-asset-types"},"children":[{"type":"text","value":"Predefined asset types"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This idea belongs to Andrew Poelstra. Described "},{"type":"element","tag":"a","props":{"href":"https://blockstream.com/2017/04/03/blockstream-releases-elements-confidential-assets.html","rel":["nofollow"]},"children":[{"type":"text","value":"here"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Each UTXO should carry a "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"tag"}]},{"type":"text","value":", which is an EC point, which defines the asset type. The great advantage of this scheme is that all the tags are "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"blinded"}]},{"type":"text","value":". Means - anyone can verify that this tag corresponds to one of the defined asset types, but not to which of them exactly. This is achieved by using Andrew Poelstra's "},{"type":"element","tag":"u","props":{},"children":[{"type":"text","value":"Asset Surjection Proof"}]},{"type":"text","value":", which has a modest size compared to the bulletproof for a reasonably-small set of asset types."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The set of the asset types, as well as their emission schedule, must be defined for the blockchain. Any change to this will require a fork."}]},{"type":"element","tag":"h3","props":{"id":"another-variant"},"children":[{"type":"text","value":"Another variant"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Another possible way to implement this is to encode all the asset types within a single UTXO. That is, each UTXO is presumably a linear combination of all the generators at once. In this design "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"tags"}]},{"type":"text","value":" are not needed."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The drawback here is the increased complexity and size of the bulletproofs, which seem to be dramatic. So that the idea with "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"tags"}]},{"type":"text","value":", whereas an UTXO encodes only a single asset type - seems to be better."}]},{"type":"element","tag":"h2","props":{"id":"custom-asset-types"},"children":[{"type":"text","value":"Custom asset types"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In addition there is a possibility to allow "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"custom"}]},{"type":"text","value":" assets, which any user can emit and trade. As in the previous scheme, such UTXOs should carry a "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"tag"}]},{"type":"text","value":", which corresponds to the asset type. But this time those tags can't be blinded perfectly. All the user can do is present a set of tags, and prove that the used tag is one of them."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"So that custom tags should either be visible, or partially obfuscated. The encoded amount, naturally, is fully concealed."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Now, since there are no predefined generators used for custom asset types, there should be a way for the verified to make sure each such a generator is actually a nums-generator. This is addressed by the following scheme."}]},{"type":"element","tag":"h3","props":{"id":"asset-control"},"children":[{"type":"text","value":"Asset control"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"To create a custom asset type the user generates a public/private key pair. The public key serves as an "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Asset ID"}]},{"type":"text","value":", and the generator used for this asset type is derived from the ID via hashing, so that it may be considered as a sound nums-generator."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The user controls the emission and collection of the asset. The user can "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"convert"}]},{"type":"text","value":" some amount of the master asset type (i.e. BEAM) into his/her type by a special instruction, which is signed by the corresponding "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"private"}]},{"type":"text","value":" key. For convenience it can be embedded into the transaction kernel."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Note:"}]},{"type":"text","value":" The conversion is only needed to prevent bloat. The user effectively "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"buys"}]},{"type":"text","value":" his/her coins, but they are refundable. Only the user is be able to trade the unspent assets back to collect the refund. If the bloat is not an issue - it's possible to allow the emission for free."}]},{"type":"element","tag":"h1","props":{"id":"final-design"},"children":[{"type":"text","value":"Final design"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The BEAM should support both the predefined and custom assets."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"There should be several predefined asset types, which are automatically emitted by every new block. Their difference is the "},{"type":"element","tag":"u","props":{},"children":[{"type":"text","value":"emission schedule"}]},{"type":"text","value":". There should be one with constant emission, one with capped emission. Possibly another one with declining but non-converging (e.i. not capped) emission."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This is equivalent to having several coin types suitable for instant payment, store of value, and etc."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Custom asset tags are not emitted automatically, they're explicitly traded for one of the predefined types."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The modifications needed to support all this is considerable, but straightforward. The following should be modified:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Tags should be added to UTXOs"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"For predefined types: Assert Surjection proofs should be added to UTXOs"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"For custom types:\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Assert Surjection proofs may optionally be used, in addition to a list of the possible asset types."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Another possibility - they should not be blinded, and contain the "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Asset ID"}]},{"type":"text","value":" explicitly."}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Transaction/Block verification:\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Bulletproof code should be modified to support custom generators (probably slight performance degradation)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Custom type conversion instruction should be supported, but this is straightforward (only alters the summation to zero criteria)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Block emission should be handled w.r.t. predefined types and their emission schedule."}]}]}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"basic-idea","depth":2,"text":"Basic idea"},{"id":"predefined-asset-types","depth":2,"text":"Predefined asset types","children":[{"id":"another-variant","depth":3,"text":"Another variant"}]},{"id":"custom-asset-types","depth":2,"text":"Custom asset types","children":[{"id":"asset-control","depth":3,"text":"Asset control"}]}]}},"_type":"markdown","_id":"content:docs:core-tech:Confidential-assets-(historical).md","_source":"content","_file":"docs/core-tech/Confidential-assets-(historical).md","_extension":"md"}]