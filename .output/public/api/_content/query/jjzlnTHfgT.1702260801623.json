[{"_path":"/docs/dev/using-beam-shaders-with-cli-wallet","_dir":"dev","_draft":false,"_partial":false,"_locale":"","title":"Using Beam Shaders with CLI wallet","description":"This document describes how to use Beam Shaders with CLI wallet running on a local network","body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"using-beam-shaders-with-cli-wallet"},"children":[{"type":"text","value":"Using Beam Shaders with CLI wallet"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"{% hint style=\"danger\" %}\nThis page is somewhat obsolete, and is replaced with "},{"type":"element","tag":"a","props":{"href":"using-beam-shaders"},"children":[{"type":"text","value":"Using Beam Shaders"}]},{"type":"text","value":" tutorial\n{% endhint %}"}]},{"type":"element","tag":"h3","props":{"id":"prerequisites"},"children":[{"type":"text","value":"Prerequisites"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Make sure you have "},{"type":"element","tag":"a","props":{"href":"broken-reference"},"children":[{"type":"text","value":"node running"}]},{"type":"text","value":" and connected to local network."},{"type":"element","tag":"br","props":{},"children":[]},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Notice:"}]},{"type":"text","value":" Shaders are applied after the third fork with height 1500. Therefore, for faster testing, we recommend to define lower heights using the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--Fork1"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--Fork2"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--Fork3"}]},{"type":"text","value":" attributes."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Create at least one Beam node[link] with "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--peer=<ip:port of the first node>"}]},{"type":"text","value":" for the transaction replication."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Make sure you have Beam "},{"type":"element","tag":"a","props":{"href":"beam-wallets/command-line-wallet"},"children":[{"type":"text","value":"CLI wallet connected to your Beam node"}]},{"type":"text","value":" or to one of the Beam bootstrap nodes."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"You must have funds in your wallet to pay the fee."}]}]},{"type":"element","tag":"h3","props":{"id":"shaders"},"children":[{"type":"text","value":"Shaders"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"There are two types of Shaders in Beam:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Contract Shader"}]},{"type":"text","value":" - implements Smart Contract functionality, is stored on the blockchain and are running on Beam nodes."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"App Shaders"}]},{"type":"text","value":" - implements Smart Contract API and is running in Beam wallet."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"All examples refer to a sample application 'mydapp' which has two"}]},{"type":"text","value":" "},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/tree/master/bvm/Shaders/vault","rel":["nofollow"]},"children":[{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Vault"}]}]},{"type":"text","value":" "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Shaders: App Shader(app.wasm) and Contract Shader(contract.wasm)."}]}]},{"type":"element","tag":"h3","props":{"id":"shader-api"},"children":[{"type":"text","value":"Shader API"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"First of all, you need to know the available actions of a contract. To see all commands supported by the App Shader enter the following command:"}]},{"type":"element","tag":"pre","props":{"code":"./beam-wallet-masternet shader --shader_app_file=mydapp/app.wasm -n <node>\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"./beam-wallet-masternet shader --shader_app_file=mydapp/app.wasm -n <node>\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"\nThe output is a json format line:"}]},{"type":"element","tag":"pre","props":{"code":"Shader output: {\"roles\": {\"manager\": {\"create\": {},\"destroy\": {\"cid\": \"ContractID\"},\"view\": {},\"view_logs\": {\"cid\": \"ContractID\"},\"view_accounts\": {\"cid\": \"ContractID\"},\"view_account\": {\"cid\": \"ContractID\",\"pubKey\": \"PubKey\"}},\"my_account\": {\"view\": {\"cid\": \"ContractID\"},\"get_key\": {\"cid\": \"ContractID\"},\"get_proof\": {\"cid\": \"ContractID\",\"aid\": \"AssetID\"},\"deposit\": {\"cid\": \"ContractID\",\"pkForeign\": \"PubKey\",\"bCoSigner\": \"uint32_t\",\"amount\": \"Amount\",\"aid\": \"AssetID\"},\"withdraw\": {\"cid\": \"ContractID\",\"pkForeign\": \"PubKey\",\"bCoSigner\": \"uint32_t\",\"amount\": \"Amount\",\"aid\": \"AssetID\"}}}}\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"Shader output: {\"roles\": {\"manager\": {\"create\": {},\"destroy\": {\"cid\": \"ContractID\"},\"view\": {},\"view_logs\": {\"cid\": \"ContractID\"},\"view_accounts\": {\"cid\": \"ContractID\"},\"view_account\": {\"cid\": \"ContractID\",\"pubKey\": \"PubKey\"}},\"my_account\": {\"view\": {\"cid\": \"ContractID\"},\"get_key\": {\"cid\": \"ContractID\"},\"get_proof\": {\"cid\": \"ContractID\",\"aid\": \"AssetID\"},\"deposit\": {\"cid\": \"ContractID\",\"pkForeign\": \"PubKey\",\"bCoSigner\": \"uint32_t\",\"amount\": \"Amount\",\"aid\": \"AssetID\"},\"withdraw\": {\"cid\": \"ContractID\",\"pkForeign\": \"PubKey\",\"bCoSigner\": \"uint32_t\",\"amount\": \"Amount\",\"aid\": \"AssetID\"}}}}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"\nFor convenience, let's put it this way:"}]},{"type":"element","tag":"pre","props":{"code":"{\n  \"roles\": {\n    \"manager\": {\n      \"create\": {},\n      \"destroy\": { \"cid\": \"ContractID\" },\n      \"view\": {},\n      \"view_logs\": { \"cid\": \"ContractID\" },\n      \"view_accounts\": { \"cid\": \"ContractID\" },\n      \"view_account\": { \"cid\": \"ContractID\", \"pubKey\": \"PubKey\" }\n    },\n    \"my_account\": {\n      \"view\": { \"cid\": \"ContractID\" },\n      \"get_key\": { \"cid\": \"ContractID\" },\n      \"get_proof\": { \"cid\": \"ContractID\", \"aid\": \"AssetID\" },\n      \"deposit\": {\n        \"cid\": \"ContractID\",\n        \"pkForeign\": \"PubKey\",\n        \"bCoSigner\": \"uint32_t\",\n        \"amount\": \"Amount\",\n        \"aid\": \"AssetID\"\n      },\n      \"withdraw\": {\n        \"cid\": \"ContractID\",\n        \"pkForeign\": \"PubKey\",\n        \"bCoSigner\": \"uint32_t\",\n        \"amount\": \"Amount\",\n        \"aid\": \"AssetID\"\n      }\n    }\n  }\n}\n","language":"json","meta":"","className":["language-json"]},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n  \"roles\": {\n    \"manager\": {\n      \"create\": {},\n      \"destroy\": { \"cid\": \"ContractID\" },\n      \"view\": {},\n      \"view_logs\": { \"cid\": \"ContractID\" },\n      \"view_accounts\": { \"cid\": \"ContractID\" },\n      \"view_account\": { \"cid\": \"ContractID\", \"pubKey\": \"PubKey\" }\n    },\n    \"my_account\": {\n      \"view\": { \"cid\": \"ContractID\" },\n      \"get_key\": { \"cid\": \"ContractID\" },\n      \"get_proof\": { \"cid\": \"ContractID\", \"aid\": \"AssetID\" },\n      \"deposit\": {\n        \"cid\": \"ContractID\",\n        \"pkForeign\": \"PubKey\",\n        \"bCoSigner\": \"uint32_t\",\n        \"amount\": \"Amount\",\n        \"aid\": \"AssetID\"\n      },\n      \"withdraw\": {\n        \"cid\": \"ContractID\",\n        \"pkForeign\": \"PubKey\",\n        \"bCoSigner\": \"uint32_t\",\n        \"amount\": \"Amount\",\n        \"aid\": \"AssetID\"\n      }\n    }\n  }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"As you can see above, there are two roles in this example: "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"manager"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"my_account"}]},{"type":"text","value":". Each role has its own actions with or without required attributes. In this example, role "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"manager"}]},{"type":"text","value":" has the following actions:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"create"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"destroy"}]},{"type":"text","value":", requires the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"cid"}]},{"type":"text","value":" attribute"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"view"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"view_logs"}]},{"type":"text","value":", requires the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"cid"}]},{"type":"text","value":" attribute"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"view_accounts"}]},{"type":"text","value":", requires the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"cid"}]},{"type":"text","value":" attribute"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"view_account"}]},{"type":"text","value":", requires "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"cid"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"pubKey"}]},{"type":"text","value":" attributes"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"em","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"cid"}]},{"type":"text","value":"(i.e. "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"contract id"}]},{"type":"text","value":"), is the frequently required attribute. We get it after our contract has been deployed. The same contract which has been deployed with different attributes, will have different values."}]}]},{"type":"element","tag":"h3","props":{"id":"commands"},"children":[{"type":"text","value":"Commands"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"All command start with "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"./beam-wallet-masternet shader"}]},{"type":"text","value":"."},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"\nThere are required flags that need to be passed to work with the contract:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--shader_app_file=<app.wasm>"}]},{"type":"text","value":" - for application shader"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--shader_contract_file=<contract.wasm>"}]},{"type":"text","value":" - for contract shader"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--shader_args=\"role=<role>,action=<action>\""}]},{"type":"text","value":" - shader arguments"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-n <node>"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Notice:"}]},{"type":"text","value":" "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"All arguments are passed separated by commas. For example:"}]}]},{"type":"element","tag":"pre","props":{"code":"--shader_args=\"role=manager,action=view\"\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"--shader_args=\"role=manager,action=view\"\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"If the action has additional attributes, they also are separated by commas:"}]}]},{"type":"element","tag":"pre","props":{"code":"--shader_args=\"role=manager,action=view_logs,cid=d9c5d1782b2d2b6f733486be480bb0d8bcf34d5fdc63bbac996ed76af541cc14\"\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"--shader_args=\"role=manager,action=view_logs,cid=d9c5d1782b2d2b6f733486be480bb0d8bcf34d5fdc63bbac996ed76af541cc14\"\n"}]}]},{"type":"element","tag":"h3","props":{"id":"deploy-contract"},"children":[{"type":"text","value":"Deploy contract"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"To work with the contract, it needs to be deployed. In our Vault example contract, the deployment corresponds to the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"manager"}]},{"type":"text","value":" role and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"create"}]},{"type":"text","value":" action. Based on our knowledge, we got the following command to "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"deploy contract"}]},{"type":"text","value":":"}]},{"type":"element","tag":"pre","props":{"code":"./beam-wallet-masternet shader --shader_app_file=mydapp/app.wasm --shader_args=\"role=manager,action=create\" --shader_contract_file=mydapp/contract.wasm -n <node>\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"./beam-wallet-masternet shader --shader_app_file=mydapp/app.wasm --shader_args=\"role=manager,action=create\" --shader_contract_file=mydapp/contract.wasm -n <node>\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Output example:"}]},{"type":"element","tag":"pre","props":{"code":"Creating new contract invocation tx on behalf of the shader\nContract ID: d9c5d1782b2d2b6f733486be480bb0d8bcf34d5fdc63bbac996ed76af541cc14\n        Comment: create Vault contract  Total fee: 1100000 GROTH\nI 2022-06-06.11:43:08.288 [ac09d5dc897647bf876b7d17d8219a77][1] Get proof for kernel: 6625e9f7756a98eb\nI 2022-06-06.11:43:08.289 Synchronizing with node: 100% (1/1)\nI 2022-06-06.11:43:08.289 Current state is 8-65a2ecdf447ad942\nI 2022-06-06.11:43:18.354 Sync up to 9-7d15da24d2717100\nI 2022-06-06.11:43:18.354 Synchronizing with node: 0% (0/2)\nI 2022-06-06.11:43:18.355 CoinID: Key=mine-1:1:1, Value=8000000000 Maturity=6 Spent, Height=9\nI 2022-06-06.11:43:18.356 CoinID: Key=chng-1:0:3958598515398969808, Value=7998900000 Maturity=9 Confirmed, Height=9\nI 2022-06-06.11:43:18.356 Synchronizing with node: 50% (1/2)\nI 2022-06-06.11:43:18.356 Synchronizing with node: 100% (2/2)\nI 2022-06-06.11:43:18.356 Current state is 9-7d15da24d2717100\nI 2022-06-06.11:43:18.356 [ac09d5dc897647bf876b7d17d8219a77][1] Get proof for kernel: 6625e9f7756a98eb\nI 2022-06-06.11:43:18.357 [ac09d5dc897647bf876b7d17d8219a77] Transaction completed\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"Creating new contract invocation tx on behalf of the shader\nContract ID: d9c5d1782b2d2b6f733486be480bb0d8bcf34d5fdc63bbac996ed76af541cc14\n        Comment: create Vault contract  Total fee: 1100000 GROTH\nI 2022-06-06.11:43:08.288 [ac09d5dc897647bf876b7d17d8219a77][1] Get proof for kernel: 6625e9f7756a98eb\nI 2022-06-06.11:43:08.289 Synchronizing with node: 100% (1/1)\nI 2022-06-06.11:43:08.289 Current state is 8-65a2ecdf447ad942\nI 2022-06-06.11:43:18.354 Sync up to 9-7d15da24d2717100\nI 2022-06-06.11:43:18.354 Synchronizing with node: 0% (0/2)\nI 2022-06-06.11:43:18.355 CoinID: Key=mine-1:1:1, Value=8000000000 Maturity=6 Spent, Height=9\nI 2022-06-06.11:43:18.356 CoinID: Key=chng-1:0:3958598515398969808, Value=7998900000 Maturity=9 Confirmed, Height=9\nI 2022-06-06.11:43:18.356 Synchronizing with node: 50% (1/2)\nI 2022-06-06.11:43:18.356 Synchronizing with node: 100% (2/2)\nI 2022-06-06.11:43:18.356 Current state is 9-7d15da24d2717100\nI 2022-06-06.11:43:18.356 [ac09d5dc897647bf876b7d17d8219a77][1] Get proof for kernel: 6625e9f7756a98eb\nI 2022-06-06.11:43:18.357 [ac09d5dc897647bf876b7d17d8219a77] Transaction completed\n"}]}]},{"type":"element","tag":"h3","props":{"id":"command-examples"},"children":[{"type":"text","value":"Command examples"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"View deployed contracts:"},{"type":"element","tag":"pre","props":{"code":"./beam-wallet-masternet shader --shader_app_file=mydapp/app.wasm --shader_args=\"role=manager,action=view\" --shader_contract_file=mydapp/contract.wasm -n <node>\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"./beam-wallet-masternet shader --shader_app_file=mydapp/app.wasm --shader_args=\"role=manager,action=view\" --shader_contract_file=mydapp/contract.wasm -n <node>\n"}]}]},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"The output could be like this:"},{"type":"element","tag":"pre","props":{"code":"Shader output: {\"contracts\": [{\"cid\": \"d9c5d1782b2d2b6f733486be480bb0d8bcf34d5fdc63bbac996ed76af541cc14\",\"Height\": 9}]}\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"Shader output: {\"contracts\": [{\"cid\": \"d9c5d1782b2d2b6f733486be480bb0d8bcf34d5fdc63bbac996ed76af541cc14\",\"Height\": 9}]}\n"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Destroy contract (with "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"cid"}]},{"type":"text","value":" from the example above)"},{"type":"element","tag":"pre","props":{"code":"./beam-wallet-masternet shader --shader_app_file=mydapp/app.wasm --shader_contract_file=mydapp/contract.wasm --shader_args=\"role=manager,action=destroy,cid=d9c5d1782b2d2b6f733486be480bb0d8bcf34d5fdc63bbac996ed76af541cc14\" -n localhost:10000\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"./beam-wallet-masternet shader --shader_app_file=mydapp/app.wasm --shader_contract_file=mydapp/contract.wasm --shader_args=\"role=manager,action=destroy,cid=d9c5d1782b2d2b6f733486be480bb0d8bcf34d5fdc63bbac996ed76af541cc14\" -n localhost:10000\n"}]}]},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"Output example:"},{"type":"element","tag":"pre","props":{"code":"Creating new contract invocation tx on behalf of the shader\nContract ID: d9c5d1782b2d2b6f733486be480bb0d8bcf34d5fdc63bbac996ed76af541cc14\n      Comment: destroy Vault contract   Total fee: 1100000 GROTH\nI 2022-06-06.12:34:15.962 Sync up to 311-788f821396683a25\nI 2022-06-06.12:34:15.962 Synchronizing with node: 0% (0/2)\nI 2022-06-06.12:34:15.967 Synchronizing with node: 0% (0/2)\nI 2022-06-06.12:34:15.967 CoinID: Key=mine-1:1:307, Value=8000000000 Maturity=312 Confirmed, Height=307\nI 2022-06-06.12:34:15.968 CoinID: Key=mine-1:1:308, Value=8000000000 Maturity=313 Confirmed, Height=308\nI 2022-06-06.12:34:15.968 CoinID: Key=mine-1:1:309, Value=8000000000 Maturity=314 Confirmed, Height=309\nI 2022-06-06.12:34:15.968 CoinID: Key=mine-1:1:310, Value=8000000000 Maturity=315 Confirmed, Height=310\nI 2022-06-06.12:34:15.969 CoinID: Key=mine-1:1:311, Value=8000000000 Maturity=316 Confirmed, Height=311\nI 2022-06-06.12:34:15.969 Synchronizing with node: 50% (1/2)\nI 2022-06-06.12:34:15.969 Synchronizing with node: 100% (2/2)\nI 2022-06-06.12:34:15.969 Current state is 311-788f821396683a25\nI 2022-06-06.12:34:15.969 [7b8eb0b0bd2340529996c7598d3ebaff][1] Get proof for kernel: eb45c335bca2e17c\nI 2022-06-06.12:34:15.970 Synchronizing with node: 100% (1/1)\nI 2022-06-06.12:34:15.970 Current state is 311-788f821396683a25\nI 2022-06-06.12:34:26.111 Rolled back to 306-910bc6ca48d05757\nI 2022-06-06.12:34:26.112 Sync up to 312-d156e1bf16939393\nI 2022-06-06.12:34:26.113 Synchronizing with node: 0% (0/2)\nI 2022-06-06.12:34:26.113 CoinID: Key=mine-1:1:307, Value=8000000000 Maturity=312 Confirmed, Height=307\nI 2022-06-06.12:34:26.113 CoinID: Key=mine-1:1:308, Value=8000000000 Maturity=313 Confirmed, Height=308\nI 2022-06-06.12:34:26.114 CoinID: Key=chng-1:0:3958598515398969808, Value=7998900000 Maturity=9 Spent, Height=312\nI 2022-06-06.12:34:26.114 CoinID: Key=chng-1:0:12345322638362229725, Value=7997800000 Maturity=312 Confirmed, Height=312\nI 2022-06-06.12:34:26.115 Synchronizing with node: 50% (1/2)\nI 2022-06-06.12:34:26.115 Synchronizing with node: 100% (2/2)\nI 2022-06-06.12:34:26.115 Current state is 312-d156e1bf16939393\nI 2022-06-06.12:34:26.115 [7b8eb0b0bd2340529996c7598d3ebaff][1] Get proof for kernel: eb45c335bca2e17c\nI 2022-06-06.12:34:26.116 [7b8eb0b0bd2340529996c7598d3ebaff] Transaction completed\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"Creating new contract invocation tx on behalf of the shader\nContract ID: d9c5d1782b2d2b6f733486be480bb0d8bcf34d5fdc63bbac996ed76af541cc14\n      Comment: destroy Vault contract   Total fee: 1100000 GROTH\nI 2022-06-06.12:34:15.962 Sync up to 311-788f821396683a25\nI 2022-06-06.12:34:15.962 Synchronizing with node: 0% (0/2)\nI 2022-06-06.12:34:15.967 Synchronizing with node: 0% (0/2)\nI 2022-06-06.12:34:15.967 CoinID: Key=mine-1:1:307, Value=8000000000 Maturity=312 Confirmed, Height=307\nI 2022-06-06.12:34:15.968 CoinID: Key=mine-1:1:308, Value=8000000000 Maturity=313 Confirmed, Height=308\nI 2022-06-06.12:34:15.968 CoinID: Key=mine-1:1:309, Value=8000000000 Maturity=314 Confirmed, Height=309\nI 2022-06-06.12:34:15.968 CoinID: Key=mine-1:1:310, Value=8000000000 Maturity=315 Confirmed, Height=310\nI 2022-06-06.12:34:15.969 CoinID: Key=mine-1:1:311, Value=8000000000 Maturity=316 Confirmed, Height=311\nI 2022-06-06.12:34:15.969 Synchronizing with node: 50% (1/2)\nI 2022-06-06.12:34:15.969 Synchronizing with node: 100% (2/2)\nI 2022-06-06.12:34:15.969 Current state is 311-788f821396683a25\nI 2022-06-06.12:34:15.969 [7b8eb0b0bd2340529996c7598d3ebaff][1] Get proof for kernel: eb45c335bca2e17c\nI 2022-06-06.12:34:15.970 Synchronizing with node: 100% (1/1)\nI 2022-06-06.12:34:15.970 Current state is 311-788f821396683a25\nI 2022-06-06.12:34:26.111 Rolled back to 306-910bc6ca48d05757\nI 2022-06-06.12:34:26.112 Sync up to 312-d156e1bf16939393\nI 2022-06-06.12:34:26.113 Synchronizing with node: 0% (0/2)\nI 2022-06-06.12:34:26.113 CoinID: Key=mine-1:1:307, Value=8000000000 Maturity=312 Confirmed, Height=307\nI 2022-06-06.12:34:26.113 CoinID: Key=mine-1:1:308, Value=8000000000 Maturity=313 Confirmed, Height=308\nI 2022-06-06.12:34:26.114 CoinID: Key=chng-1:0:3958598515398969808, Value=7998900000 Maturity=9 Spent, Height=312\nI 2022-06-06.12:34:26.114 CoinID: Key=chng-1:0:12345322638362229725, Value=7997800000 Maturity=312 Confirmed, Height=312\nI 2022-06-06.12:34:26.115 Synchronizing with node: 50% (1/2)\nI 2022-06-06.12:34:26.115 Synchronizing with node: 100% (2/2)\nI 2022-06-06.12:34:26.115 Current state is 312-d156e1bf16939393\nI 2022-06-06.12:34:26.115 [7b8eb0b0bd2340529996c7598d3ebaff][1] Get proof for kernel: eb45c335bca2e17c\nI 2022-06-06.12:34:26.116 [7b8eb0b0bd2340529996c7598d3ebaff] Transaction completed\n"}]}]}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"prerequisites","depth":3,"text":"Prerequisites"},{"id":"shaders","depth":3,"text":"Shaders"},{"id":"shader-api","depth":3,"text":"Shader API"},{"id":"commands","depth":3,"text":"Commands"},{"id":"deploy-contract","depth":3,"text":"Deploy contract"},{"id":"command-examples","depth":3,"text":"Command examples"}]}},"_type":"markdown","_id":"content:docs:dev:using-beam-shaders-with-cli-wallet.md","_source":"content","_file":"docs/dev/using-beam-shaders-with-cli-wallet.md","_extension":"md"},{"_path":"/docs/dev/using-beam-shaders","_dir":"dev","_draft":false,"_partial":false,"_locale":"","title":"Using Beam Shaders","description":"This tutorial describes using Beam Shaders on DAppnet","body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"using-beam-shaders"},"children":[{"type":"text","value":"Using Beam Shaders"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"{% hint style=\"success\" %}\n"},{"type":"element","tag":"a","props":{"href":"https://dappnet.beam.mw/downloads/","rel":["nofollow"]},"children":[{"type":"text","value":"Why DAppnet"}]},{"type":"text","value":"? "}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Beam consists of three public networks: "}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"DAppnet:"}]},{"type":"text","value":" a testing sandbox that produces a pseudo-mining block every 15 seconds. "}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Testnet:"}]},{"type":"text","value":" produces genuine mining blocks but is mostly a testing site before Mainnet deployment."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Mainnet:"}]},{"type":"text","value":" the living Beam network with real assets.\n{% endhint %}"}]}]},{"type":"element","tag":"h3","props":{"id":"install-dappnet-wallet"},"children":[{"type":"text","value":"Install DAppnet wallet"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The latest version of the Beam DAppnet Wallet is on our "},{"type":"element","tag":"a","props":{"href":"https://dappnet.beam.mw/downloads/","rel":["nofollow"]},"children":[{"type":"text","value":"website"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"When "},{"type":"element","tag":"a","props":{"href":"https://beamx.gitbook.io/dappnet-user-guide/settings","rel":["nofollow"]},"children":[{"type":"text","value":"installing DAppnet"}]},{"type":"text","value":", choose the default settings to operate the local node (required) to run Beam Shader contracts.  Create a new wallet (save the seed phrase). "}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"{% hint style=\"info\" %}\nBeam Shaders require the use of the integrated node found in the DAppnet Wallet and must remain open for this tutorial.\n{% endhint %}"}]},{"type":"element","tag":"h3","props":{"id":"withdraw-from-the-faucet"},"children":[{"type":"text","value":"Withdraw from the Faucet"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"All DAppnet transactions (including Beam Shader deployment) contain transaction fees that are paid in Beam coins, and require a positive wallet balance."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Launch "},{"type":"element","tag":"a","props":{"href":"https://beamx.gitbook.io/dappnet-user-guide/my-dapp-store","rel":["nofollow"]},"children":[{"type":"text","value":"My DApp Store"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"src":".gitbook/assets/Screen Shot 2023-05-10 at 10.27.02 PM.png","alt":"","dataSize":"line"},"children":[]},{"type":"text","value":" and find the "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Faucet Application"}]},{"type":"text","value":" "},{"type":"element","tag":"img","props":{"src":".gitbook/assets/Screen Shot 2023-05-11 at 5.38.24 PM.png","alt":"","dataSize":"line"},"children":[]},{"type":"text","value":". "}]},{"type":"element","tag":"figure","props":{},"children":[{"type":"element","tag":"img","props":{"src":".gitbook/assets/image (2).png","alt":""},"children":[]},{"type":"element","tag":"figcaption","props":{},"children":[]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Launch "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Faucet >>> Get your first Beam >>> Confirm,"}]},{"type":"text","value":"  and Beam coins will deposit into your wallet after the next mining block."}]},{"type":"element","tag":"figure","props":{},"children":[{"type":"element","tag":"img","props":{"src":".gitbook/assets/image (16).png","alt":""},"children":[]},{"type":"element","tag":"figcaption","props":{},"children":[]}]},{"type":"element","tag":"h3","props":{"id":"configuring-your-cli-wallet"},"children":[{"type":"text","value":"Configuring your CLI wallet"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Beam shaders are deployed via CLI wallet which can be found on our "},{"type":"element","tag":"a","props":{"href":"https://dappnet.beam.mw/downloads/","rel":["nofollow"]},"children":[{"type":"text","value":"website"}]},{"type":"text","value":". This tutorial uses Windows Command Prompt, but users can substitute "},{"type":"element","tag":"a","props":{"href":"shader-sdk-mac"},"children":[{"type":"text","value":"Mac"}]},{"type":"text","value":" and Linux commands if desired."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Create a "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"shader"}]},{"type":"text","value":" folder in your hard drive, and transfer CLI wallet archive. The "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"shader"}]},{"type":"text","value":" folder should contain two files: two files: the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"CLI wallet archive"}]},{"type":"text","value":" and wallet "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"config"}]},{"type":"text","value":" file. "}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"{% hint style=\"danger\" %}\nFor this tutorial, we will use our DAppnet's "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"wallet.db"}]},{"type":"text","value":"(for testing purposes only. This practice is not recommended with wallets containing real assets).\n{% endhint %}"}]},{"type":"element","tag":"h3","props":{"id":"copy-walletdb-from-dappnet-wallet"},"children":[{"type":"text","value":"Copy "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"wallet.db"}]},{"type":"text","value":" from DAppnet Wallet"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Beam wallets store wallet metadata (transaction history, balance, etc) locally on your hard drive in the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"wallet.db"}]},{"type":"text","value":" file. "}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Locate your DAppnet "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"wallet.db"}]},{"type":"text","value":" in the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"%LOCALAPPDATA%\\Beam Wallet folder"}]},{"type":"text","value":". Transfer the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"wallet.db"}]},{"type":"text","value":" in the same "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"shader"}]},{"type":"text","value":" folder."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"{% hint style=\"info\" %}\nRefer to our "},{"type":"element","tag":"a","props":{"href":"beam-wallets/desktop-wallet"},"children":[{"type":"text","value":"Desktop Wallet guide"}]},{"type":"text","value":" for "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"wallet.db"}]},{"type":"text","value":" file location for macOS and Linux operating systems.\n{% endhint %}"}]},{"type":"element","tag":"figure","props":{},"children":[{"type":"element","tag":"img","props":{"src":".gitbook/assets/image (11).png","alt":""},"children":[]},{"type":"element","tag":"figcaption","props":{},"children":[]}]},{"type":"element","tag":"h3","props":{"id":"configure-cli-wallet-settings"},"children":[{"type":"text","value":"Configure CLI wallet settings"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"One more crucial step before running Shader contracts involves configuring the CLI wallet settings to simplify and shorten commands. "}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"To connect CLI wallet's to the built-in node, first edit the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"config"}]},{"type":"text","value":" file using text editor (such as "},{"type":"element","tag":"a","props":{"href":"https://code.visualstudio.com/","rel":["nofollow"]},"children":[{"type":"text","value":"Visual Studio Code"}]},{"type":"text","value":") and enter the following:"}]},{"type":"element","tag":"pre","props":{"code":"log_level=debug\npass=<your wallet password>\nnode_addr=127.0.0.1:10005\nwallet_path=wallet.db\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"log_level=debug\npass=<your wallet password>\nnode_addr=127.0.0.1:10005\nwallet_path=wallet.db\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"config"}]},{"type":"text","value":" file should resemble the following:"}]},{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"################################################################################\n"}]},{"type":"text","value":"# General options:\n################################################################################\n\n# log level [info|debug|verbose]\nlog_level=debug\n\n# file log level [info|debug|verbose]\n# file_log_level=debug\n\n# old logs cleanup period (days)\n# log_cleanup_days=5\n\n################################################################################\n# Wallet options:\n################################################################################\n\n# password for the wallet\npass=123\n\n# phrase to generate secret key according to BIP-39.\n# seed_phrase=\n\n# address of node\nnode_addr=127.0.0.1:10005\n\n# path to wallet file\nwallet_path=wallet.db\n\n# command to execute [new_addr|send|receive|listen|init|info|export_miner_key|export_owner_key|generate_phrase]\n# command=listen\n\n\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The testing environment is ready to deploy Shaders, all that remains is selecting the Shader contract."}]},{"type":"element","tag":"h3","props":{"id":"choosing-a-shader-application"},"children":[{"type":"text","value":"Choosing a  Shader application "}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The "},{"type":"element","tag":"a","props":{"href":"https://dappnet.explorer.beam.mw/","rel":["nofollow"]},"children":[{"type":"text","value":"Dappnet Blockchain Explorer"}]},{"type":"text","value":" (see "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Contracts"}]},{"type":"text","value":" tab) contains a list of Shader contract applications ready for testing. "}]},{"type":"element","tag":"figure","props":{},"children":[{"type":"element","tag":"img","props":{"src":".gitbook/assets/image (6).png","alt":""},"children":[]},{"type":"element","tag":"figcaption","props":{},"children":[]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"For the purposes of this tutorial, we will select the "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Vault"}]},{"type":"text","value":" Shader application (copy the Vault Contract ID -- we will use this later)."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"{% hint style=\"info\" %}\nAt thid time, the list of available contracts is DAppnet. The majority of deployed contracts don't contain a contract description. These features will be adjusted with future iterations of DAppnet.\n{% endhint %}"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Please download the Vault application Shader from our"}]},{"type":"text","value":" "},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/tree/master/bvm/Shaders/vault","rel":["nofollow"]},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Beam repository."}]},{"type":"text","value":" "}]},{"type":"text","value":"The Shader contract will not respond to CLI commands without the precompiled source code."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Download "},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/blob/master/bvm/Shaders/vault/app.wasm","rel":["nofollow"]},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"app.wasm"}]}]},{"type":"text","value":" and copy it to your "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"shader"}]},{"type":"text","value":" folder. "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Note"}]},{"type":"text","value":": if you are testing several applications, create a folder for each Shader application so each application contains a separate "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"app.wasm"}]},{"type":"text","value":" file."}]},{"type":"element","tag":"h3","props":{"id":"running-shader-commands"},"children":[{"type":"text","value":"Running Shader commands"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Open as command line interface and change directory to the location of the CLI wallet executable. "}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"First, print the contract API with the following command:"}]},{"type":"element","tag":"pre","props":{"code":"beam-wallet-dappnet.exe shader --shader_app_file vault\\app.wasm\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"beam-wallet-dappnet.exe shader --shader_app_file vault\\app.wasm\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Note, we have provided only a single parameter ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--shader_app_file"}]},{"type":"text","value":") since it's assume all other parameters are set in the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"config"}]},{"type":"text","value":" file and a separate path to the application Shader is found in the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"shader"}]},{"type":"text","value":"  folder (with the Vault contract)."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The output should resemble the following (debug logs are found in this example):"}]},{"type":"element","tag":"figure","props":{},"children":[{"type":"element","tag":"img","props":{"src":".gitbook/assets/image (21).png","alt":""},"children":[]},{"type":"element","tag":"figcaption","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"--shader_app_file method"}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Copy the Shader output (see below) into your text editor, (following JSON format)."}]},{"type":"element","tag":"pre","props":{"code":" {\n     \"roles\":\n     {\n         \"manager\":\n         {\n             \"create\":\n             {},\n             \"destroy\":\n             {\n                 \"cid\": \"ContractID\"\n             },\n             \"view\":\n             {},\n             \"view_logs\":\n             {\n                 \"cid\": \"ContractID\"\n             },\n             \"view_accounts\":\n             {\n                 \"cid\": \"ContractID\"\n             },\n             \"view_account\":\n             {\n                 \"cid\": \"ContractID\",\n                 \"pubKey\": \"PubKey\"\n             }\n         },\n         \"my_account\":\n         {\n             \"view\":\n             {\n                 \"cid\": \"ContractID\"\n             },\n             \"get_key\":\n             {\n                 \"cid\": \"ContractID\"\n             },\n             \"get_proof\":\n             {\n                 \"cid\": \"ContractID\",\n                 \"aid\": \"AssetID\"\n             },\n             \"deposit\":\n             {\n                 \"cid\": \"ContractID\",\n                 \"pkForeign\": \"PubKey\",\n                 \"bCoSigner\": \"uint32_t\",\n                 \"amount\": \"Amount\",\n                 \"aid\": \"AssetID\"\n             },\n             \"withdraw\":\n             {\n                 \"cid\": \"ContractID\",\n                 \"pkForeign\": \"PubKey\",\n                 \"bCoSigner\": \"uint32_t\",\n                 \"amount\": \"Amount\",\n                 \"aid\": \"AssetID\",\n                 \"amountCoSigner\": \"Amount\"\n             }\n         }\n     }\n }\n","language":"json","meta":"","className":["language-json"]},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":" {\n     \"roles\":\n     {\n         \"manager\":\n         {\n             \"create\":\n             {},\n             \"destroy\":\n             {\n                 \"cid\": \"ContractID\"\n             },\n             \"view\":\n             {},\n             \"view_logs\":\n             {\n                 \"cid\": \"ContractID\"\n             },\n             \"view_accounts\":\n             {\n                 \"cid\": \"ContractID\"\n             },\n             \"view_account\":\n             {\n                 \"cid\": \"ContractID\",\n                 \"pubKey\": \"PubKey\"\n             }\n         },\n         \"my_account\":\n         {\n             \"view\":\n             {\n                 \"cid\": \"ContractID\"\n             },\n             \"get_key\":\n             {\n                 \"cid\": \"ContractID\"\n             },\n             \"get_proof\":\n             {\n                 \"cid\": \"ContractID\",\n                 \"aid\": \"AssetID\"\n             },\n             \"deposit\":\n             {\n                 \"cid\": \"ContractID\",\n                 \"pkForeign\": \"PubKey\",\n                 \"bCoSigner\": \"uint32_t\",\n                 \"amount\": \"Amount\",\n                 \"aid\": \"AssetID\"\n             },\n             \"withdraw\":\n             {\n                 \"cid\": \"ContractID\",\n                 \"pkForeign\": \"PubKey\",\n                 \"bCoSigner\": \"uint32_t\",\n                 \"amount\": \"Amount\",\n                 \"aid\": \"AssetID\",\n                 \"amountCoSigner\": \"Amount\"\n             }\n         }\n     }\n }\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The Vault contract API (as retrieved from the Vault Shader contract) separates the API actions into roles, ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"manager"}]},{"type":"text","value":" , "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"my_account"}]},{"type":"text","value":") following semantic structure."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"view_accounts"}]},{"type":"text","value":" method will list all Vault accounts present and were we can can plug the Valut Shader (found in the "},{"type":"element","tag":"a","props":{"href":"https://dappnet.explorer.beam.mw/","rel":["nofollow"]},"children":[{"type":"text","value":"DAppnet explorer"}]},{"type":"text","value":") contract ID into the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"view_accounts"}]},{"type":"text","value":" parameter."}]},{"type":"element","tag":"pre","props":{"code":"d9c5d1782b2d2b6f733486be480bb0d8bcf34d5fdc63bbac996ed76af541cc14\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"d9c5d1782b2d2b6f733486be480bb0d8bcf34d5fdc63bbac996ed76af541cc14\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Enter the following command:"}]},{"type":"element","tag":"pre","props":{"code":"beam-wallet-dappnet.exe shader --shader_app_file vault\\app.wasm --shader_args=cid=d9c5d1782b2d2b6f733486be480bb0d8bcf34d5fdc63bbac996ed76af541cc14,role=manager,action=view_accounts\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"beam-wallet-dappnet.exe shader --shader_app_file vault\\app.wasm --shader_args=cid=d9c5d1782b2d2b6f733486be480bb0d8bcf34d5fdc63bbac996ed76af541cc14,role=manager,action=view_accounts\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The output should resemble the following:"}]},{"type":"element","tag":"figure","props":{},"children":[{"type":"element","tag":"img","props":{"src":".gitbook/assets/image (17).png","alt":""},"children":[]},{"type":"element","tag":"figcaption","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"View_accounts method"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In the above example, there are currently no accounts within the contract. To create an account, utilize "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"deposit"}]},{"type":"text","value":" method and deposit one Beam coin with the following command:"}]},{"type":"element","tag":"pre","props":{"code":"beam-wallet-dappnet.exe shader --shader_app_file vault\\app.wasm --shader_args=\"cid=d9c5d1782b2d2b6f733486be480bb0d8bcf34d5fdc63bbac996ed76af541cc14,role=my_account,action=deposit,amount=100000000\"\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"beam-wallet-dappnet.exe shader --shader_app_file vault\\app.wasm --shader_args=\"cid=d9c5d1782b2d2b6f733486be480bb0d8bcf34d5fdc63bbac996ed76af541cc14,role=my_account,action=deposit,amount=100000000\"\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Note:"}]},{"type":"text","value":" "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"amount"}]},{"type":"text","value":" is set in Groth, which is $$1^10-8$$  of Beam. "}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The above action creates and sends the transaction to the network (so it will take a moment). When completed, the output should resemble the following:"}]},{"type":"element","tag":"figure","props":{},"children":[{"type":"element","tag":"img","props":{"src":".gitbook/assets/image (5).png","alt":""},"children":[]},{"type":"element","tag":"figcaption","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"Deposit"}]},{"type":"text","value":" Method"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The response generated (see below) clarfies the API response:"}]},{"type":"element","tag":"figure","props":{},"children":[{"type":"element","tag":"img","props":{"src":".gitbook/assets/image (18).png","alt":""},"children":[]},{"type":"element","tag":"figcaption","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Deposit successful"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"To confirm the transaction was successful, re-enter the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"accounts"}]},{"type":"text","value":" command:"}]},{"type":"element","tag":"figure","props":{},"children":[{"type":"element","tag":"img","props":{"src":".gitbook/assets/image (7).png","alt":""},"children":[]},{"type":"element","tag":"figcaption","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"New account creation"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The response generated confirms a new account is identified by your wallet public key and has a balance of one Beams. To get aquainted with the API function, try depositing and withdrawing Beam's into your account. Users can also attempt to retrieve Beam's from a seperate account ("},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"spoiler: it won't work"}]},{"type":"text","value":")."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"To learn how to code your own Shader application contract and deploy it chain, please refer to our "},{"type":"element","tag":"a","props":{"href":"shader-sdk-win"},"children":[{"type":"text","value":"Shader SDK tutorial"}]},{"type":"text","value":"."}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"install-dappnet-wallet","depth":3,"text":"Install DAppnet wallet"},{"id":"withdraw-from-the-faucet","depth":3,"text":"Withdraw from the Faucet"},{"id":"configuring-your-cli-wallet","depth":3,"text":"Configuring your CLI wallet"},{"id":"copy-walletdb-from-dappnet-wallet","depth":3,"text":"Copy wallet.db from DAppnet Wallet"},{"id":"configure-cli-wallet-settings","depth":3,"text":"Configure CLI wallet settings"},{"id":"choosing-a-shader-application","depth":3,"text":"Choosing a  Shader application "},{"id":"running-shader-commands","depth":3,"text":"Running Shader commands"}]}},"_type":"markdown","_id":"content:docs:dev:using-beam-shaders.md","_source":"content","_file":"docs/dev/using-beam-shaders.md","_extension":"md"}]