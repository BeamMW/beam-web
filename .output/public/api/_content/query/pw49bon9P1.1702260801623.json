[{"_path":"/docs/dev/beam-shaders/using-beam-shaders-with-cli-wallet-masternet","_dir":"beam-shaders","_draft":false,"_partial":false,"_locale":"","title":"Using Beam Shaders with CLI Wallet (masternet)","description":"This document describes how to use Beam Shaders with CLI wallet running on a local network.","body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"using-beam-shaders-with-cli-wallet-masternet"},"children":[{"type":"text","value":"Using Beam Shaders with CLI Wallet (masternet)"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"{% hint style=\"info\" %}\n"},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"All examples refer to a sample application \"mydapp\" which has two"}]},{"type":"text","value":" "},{"type":"element","tag":"a","props":{"href":"https://github.com/BeamMW/beam/tree/master/bvm/Shaders/vault","rel":["nofollow"]},"children":[{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Vault"}]}]},{"type":"text","value":" "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Shaders: App Shader ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"app.wasm"}]},{"type":"text","value":") and Contract Shader ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"contract.wasm"}]},{"type":"text","value":")."}]},{"type":"text","value":"\n{% endhint %}"}]},{"type":"element","tag":"h3","props":{"id":"overview"},"children":[{"type":"text","value":"Overview"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Beam shaders support requires "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Fork3"}]},{"type":"text","value":" and at least "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"v6.0"}]},{"type":"text","value":" CLI."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"There are two types of Shaders in Beam:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Contract Shader"}]},{"type":"text","value":" - implements Smart Contract functionality, is stored on the blockchain and are running on Beam nodes."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"App Shader"}]},{"type":"text","value":" - implements Smart Contract API and is running in Beam wallet."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"To perform any transactions with shaders, you must specify the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"shader"}]},{"type":"text","value":" command."}]},{"type":"element","tag":"h3","props":{"id":"prerequisites"},"children":[{"type":"text","value":"Prerequisites"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Make sure you have node running and connected to "},{"type":"element","tag":"a","props":{"href":"broken-reference"},"children":[{"type":"text","value":"local network"}]},{"type":"text","value":"."},{"type":"element","tag":"br","props":{},"children":[]},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Notice:"}]},{"type":"text","value":" Shaders are applied after the third fork with height 1500. Therefore, for faster testing, we recommend to define lower heights using the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Fork1"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Fork2"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Fork3"}]},{"type":"text","value":" attributes."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Create at least one Beam node with "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--peer=<ip:port of the first node>"}]},{"type":"text","value":" for the transaction replication."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Make sure you have Beam "},{"type":"element","tag":"a","props":{"href":"../beam-wallets/command-line-wallet"},"children":[{"type":"text","value":"CLI wallet"}]},{"type":"text","value":" connected to your Beam node."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"You must have funds in your wallet to pay the fee."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"{% hint style=\"warning\" %}\nSince this tutorial is based on a local network, each command must be specified with the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--FakePoW=1"}]},{"type":"text","value":" flag. For convenience we recommend adding this flag to your "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"beam-node.cfg"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"beam-wallet.cfg"}]},{"type":"text","value":" files.\n{% endhint %}"}]},{"type":"element","tag":"h3","props":{"id":"shader-api"},"children":[{"type":"text","value":"Shader API"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"First of all, you need to know the available actions of a contract. To see all commands supported by the App Shader enter the following command with "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"shader"}]},{"type":"text","value":" command:"}]},{"type":"element","tag":"pre","props":{"code":"./beam-wallet-masternet shader --pass=1 --shader_app_file=mydapp/app.wasm -n localhost:10000\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"./beam-wallet-masternet shader --pass=1 --shader_app_file=mydapp/app.wasm -n localhost:10000\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"You need to specify your wallet password, shader application file and node address."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The output is a json format line:"}]},{"type":"element","tag":"pre","props":{"code":"Shader output: {\"roles\": {\"manager\": {\"create\": {},\"destroy\": {\"cid\": \"ContractID\"},\"view\": {},\"view_logs\": {\"cid\": \"ContractID\"},\"view_accounts\": {\"cid\": \"ContractID\"},\"view_account\": {\"cid\": \"ContractID\",\"pubKey\": \"PubKey\"}},\"my_account\": {\"view\": {\"cid\": \"ContractID\"},\"get_key\": {\"cid\": \"ContractID\"},\"get_proof\": {\"cid\": \"ContractID\",\"aid\": \"AssetID\"},\"deposit\": {\"cid\": \"ContractID\",\"pkForeign\": \"PubKey\",\"bCoSigner\": \"uint32_t\",\"amount\": \"Amount\",\"aid\": \"AssetID\"},\"withdraw\": {\"cid\": \"ContractID\",\"pkForeign\": \"PubKey\",\"bCoSigner\": \"uint32_t\",\"amount\": \"Amount\",\"aid\": \"AssetID\"}}}}\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"Shader output: {\"roles\": {\"manager\": {\"create\": {},\"destroy\": {\"cid\": \"ContractID\"},\"view\": {},\"view_logs\": {\"cid\": \"ContractID\"},\"view_accounts\": {\"cid\": \"ContractID\"},\"view_account\": {\"cid\": \"ContractID\",\"pubKey\": \"PubKey\"}},\"my_account\": {\"view\": {\"cid\": \"ContractID\"},\"get_key\": {\"cid\": \"ContractID\"},\"get_proof\": {\"cid\": \"ContractID\",\"aid\": \"AssetID\"},\"deposit\": {\"cid\": \"ContractID\",\"pkForeign\": \"PubKey\",\"bCoSigner\": \"uint32_t\",\"amount\": \"Amount\",\"aid\": \"AssetID\"},\"withdraw\": {\"cid\": \"ContractID\",\"pkForeign\": \"PubKey\",\"bCoSigner\": \"uint32_t\",\"amount\": \"Amount\",\"aid\": \"AssetID\"}}}}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"For convenience, let's put it this way:"}]},{"type":"element","tag":"pre","props":{"code":"{\n  \"roles\": {\n    \"manager\": {\n      \"create\": {},\n      \"destroy\": { \"cid\": \"ContractID\" },\n      \"view\": {},\n      \"view_logs\": { \"cid\": \"ContractID\" },\n      \"view_accounts\": { \"cid\": \"ContractID\" },\n      \"view_account\": { \"cid\": \"ContractID\", \"pubKey\": \"PubKey\" }\n    },\n    \"my_account\": {\n      \"view\": { \"cid\": \"ContractID\" },\n      \"get_key\": { \"cid\": \"ContractID\" },\n      \"get_proof\": { \"cid\": \"ContractID\", \"aid\": \"AssetID\" },\n      \"deposit\": {\n        \"cid\": \"ContractID\",\n        \"pkForeign\": \"PubKey\",\n        \"bCoSigner\": \"uint32_t\",\n        \"amount\": \"Amount\",\n        \"aid\": \"AssetID\"\n      },\n      \"withdraw\": {\n        \"cid\": \"ContractID\",\n        \"pkForeign\": \"PubKey\",\n        \"bCoSigner\": \"uint32_t\",\n        \"amount\": \"Amount\",\n        \"aid\": \"AssetID\"\n      }\n    }\n  }\n}\n","language":"json","meta":"","className":["language-json"]},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n  \"roles\": {\n    \"manager\": {\n      \"create\": {},\n      \"destroy\": { \"cid\": \"ContractID\" },\n      \"view\": {},\n      \"view_logs\": { \"cid\": \"ContractID\" },\n      \"view_accounts\": { \"cid\": \"ContractID\" },\n      \"view_account\": { \"cid\": \"ContractID\", \"pubKey\": \"PubKey\" }\n    },\n    \"my_account\": {\n      \"view\": { \"cid\": \"ContractID\" },\n      \"get_key\": { \"cid\": \"ContractID\" },\n      \"get_proof\": { \"cid\": \"ContractID\", \"aid\": \"AssetID\" },\n      \"deposit\": {\n        \"cid\": \"ContractID\",\n        \"pkForeign\": \"PubKey\",\n        \"bCoSigner\": \"uint32_t\",\n        \"amount\": \"Amount\",\n        \"aid\": \"AssetID\"\n      },\n      \"withdraw\": {\n        \"cid\": \"ContractID\",\n        \"pkForeign\": \"PubKey\",\n        \"bCoSigner\": \"uint32_t\",\n        \"amount\": \"Amount\",\n        \"aid\": \"AssetID\"\n      }\n    }\n  }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"As you can see above, there are two roles in this example: "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"manager"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"my_account"}]},{"type":"text","value":". Each role has its own available actions with or without required attributes. Consider the role "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"manager"}]},{"type":"text","value":" , it has the following actions:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"create"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"destroy"}]},{"type":"text","value":", requires the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"cid"}]},{"type":"text","value":" attribute"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"view"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"view_logs"}]},{"type":"text","value":", requires the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"cid"}]},{"type":"text","value":" attribute"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"view_accounts"}]},{"type":"text","value":", requires the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"cid"}]},{"type":"text","value":" attribute"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"view_account"}]},{"type":"text","value":", requires "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"cid"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"pubKey"}]},{"type":"text","value":" attributes"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This means that if, for example, we want to deploy a contract (in Vault, deployment is "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"create"}]},{"type":"text","value":" argument), we must specify "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"shader_args"}]},{"type":"text","value":"(consider below) with the role "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"manager"}]},{"type":"text","value":" and the action "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"create"}]},{"type":"text","value":":"}]},{"type":"element","tag":"pre","props":{"code":"--shader_args=\"role=manager,action=create\"\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"--shader_args=\"role=manager,action=create\"\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"{% hint style=\"warning\" %}\nSpecifying a "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"role"}]},{"type":"text","value":" and an "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"action"}]},{"type":"text","value":" in a "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"key=value"}]},{"type":"text","value":" pair representation is a requirement for working with shaders. But each contract has its own API and the arguments can be different.\n{% endhint %}"}]},{"type":"element","tag":"h3","props":{"id":"cid"},"children":[{"type":"text","value":"Cid"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"cid"}]},{"type":"text","value":" (i.e. "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"contract id"}]},{"type":"text","value":") is the frequently required attribute. We get it after our contract has been deployed. The same contract which has been deployed with different attributes, will have different values."}]},{"type":"element","tag":"h3","props":{"id":"working-with-shaders"},"children":[{"type":"text","value":"Working with shaders"}]},{"type":"element","tag":"h4","props":{"id":"commands-rules"},"children":[{"type":"text","value":"Commands rules"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"There are required flags that need to be passed in the wallet CLI to work with the contract:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--shader_app_file=<app.wasm>"}]},{"type":"text","value":" - for application shader"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--shader_contract_file=<contract.wasm>"}]},{"type":"text","value":" - for contract shader"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--shader_args=\"role=<role>,action=<action>\""}]},{"type":"text","value":" - shader arguments"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"-n <node address>"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"All arguments in "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"shader_args"}]},{"type":"text","value":" are passed separated by commas without spaces. For example:"}]},{"type":"element","tag":"pre","props":{"code":"--shader_args=\"role=manager,action=view\"\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"--shader_args=\"role=manager,action=view\"\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"If the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"action"}]},{"type":"text","value":" has additional attributes, they also are separated by commas without spaces:"}]},{"type":"element","tag":"pre","props":{"code":"--shader_args=\"role=manager,action=view_logs,cid=d9c5d1782b2d2b6f733486be480bb0d8bcf34d5fdc63bbac996ed76af541cc14\"\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"--shader_args=\"role=manager,action=view_logs,cid=d9c5d1782b2d2b6f733486be480bb0d8bcf34d5fdc63bbac996ed76af541cc14\"\n"}]}]},{"type":"element","tag":"h4","props":{"id":"deploy-contract"},"children":[{"type":"text","value":"Deploy contract"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"To work with the contract, you first need to deploy it. As we said, in our Vault example contract, the deployment corresponds to the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"manager"}]},{"type":"text","value":" role and "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"create"}]},{"type":"text","value":" action."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Based on our knowledge, we got the following command to "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"deploy contract"}]},{"type":"text","value":":"}]},{"type":"element","tag":"pre","props":{"code":"./beam-wallet-masternet shader --shader_app_file=mydapp/app.wasm --shader_args=\"role=manager,action=create\" --shader_contract_file=mydapp/contract.wasm -n localhost:10000\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"./beam-wallet-masternet shader --shader_app_file=mydapp/app.wasm --shader_args=\"role=manager,action=create\" --shader_contract_file=mydapp/contract.wasm -n localhost:10000\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Output example:"}]},{"type":"element","tag":"pre","props":{"code":"Creating new contract invocation tx on behalf of the shader\nContract ID: d9c5d1782b2d2b6f733486be480bb0d8bcf34d5fdc63bbac996ed76af541cc14\n        Comment: create Vault contract  Total fee: 1100000 GROTH\nI 2022-06-06.11:43:08.288 [ac09d5dc897647bf876b7d17d8219a77][1] Get proof for kernel: 6625e9f7756a98eb\nI 2022-06-06.11:43:08.289 Synchronizing with node: 100% (1/1)\nI 2022-06-06.11:43:08.289 Current state is 8-65a2ecdf447ad942\nI 2022-06-06.11:43:18.354 Sync up to 9-7d15da24d2717100\nI 2022-06-06.11:43:18.354 Synchronizing with node: 0% (0/2)\nI 2022-06-06.11:43:18.355 CoinID: Key=mine-1:1:1, Value=8000000000 Maturity=6 Spent, Height=9\nI 2022-06-06.11:43:18.356 CoinID: Key=chng-1:0:3958598515398969808, Value=7998900000 Maturity=9 Confirmed, Height=9\nI 2022-06-06.11:43:18.356 Synchronizing with node: 50% (1/2)\nI 2022-06-06.11:43:18.356 Synchronizing with node: 100% (2/2)\nI 2022-06-06.11:43:18.356 Current state is 9-7d15da24d2717100\nI 2022-06-06.11:43:18.356 [ac09d5dc897647bf876b7d17d8219a77][1] Get proof for kernel: 6625e9f7756a98eb\nI 2022-06-06.11:43:18.357 [ac09d5dc897647bf876b7d17d8219a77] Transaction completed\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"Creating new contract invocation tx on behalf of the shader\nContract ID: d9c5d1782b2d2b6f733486be480bb0d8bcf34d5fdc63bbac996ed76af541cc14\n        Comment: create Vault contract  Total fee: 1100000 GROTH\nI 2022-06-06.11:43:08.288 [ac09d5dc897647bf876b7d17d8219a77][1] Get proof for kernel: 6625e9f7756a98eb\nI 2022-06-06.11:43:08.289 Synchronizing with node: 100% (1/1)\nI 2022-06-06.11:43:08.289 Current state is 8-65a2ecdf447ad942\nI 2022-06-06.11:43:18.354 Sync up to 9-7d15da24d2717100\nI 2022-06-06.11:43:18.354 Synchronizing with node: 0% (0/2)\nI 2022-06-06.11:43:18.355 CoinID: Key=mine-1:1:1, Value=8000000000 Maturity=6 Spent, Height=9\nI 2022-06-06.11:43:18.356 CoinID: Key=chng-1:0:3958598515398969808, Value=7998900000 Maturity=9 Confirmed, Height=9\nI 2022-06-06.11:43:18.356 Synchronizing with node: 50% (1/2)\nI 2022-06-06.11:43:18.356 Synchronizing with node: 100% (2/2)\nI 2022-06-06.11:43:18.356 Current state is 9-7d15da24d2717100\nI 2022-06-06.11:43:18.356 [ac09d5dc897647bf876b7d17d8219a77][1] Get proof for kernel: 6625e9f7756a98eb\nI 2022-06-06.11:43:18.357 [ac09d5dc897647bf876b7d17d8219a77] Transaction completed\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Contract ID"}]},{"type":"text","value":" line we got the "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"cid"}]},{"type":"text","value":" for this deployed contract."}]},{"type":"element","tag":"h4","props":{"id":"command-examples"},"children":[{"type":"text","value":"Command examples"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"View"}]},{"type":"text","value":" deployed contracts:"},{"type":"element","tag":"pre","props":{"code":"./beam-wallet-masternet shader --shader_app_file=mydapp/app.wasm --shader_args=\"role=manager,action=view\" --shader_contract_file=mydapp/contract.wasm -n localhost:10000\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"./beam-wallet-masternet shader --shader_app_file=mydapp/app.wasm --shader_args=\"role=manager,action=view\" --shader_contract_file=mydapp/contract.wasm -n localhost:10000\n"}]}]},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"The output could be like this:"},{"type":"element","tag":"pre","props":{"code":"Shader output: {\"contracts\": [{\"cid\": \"d9c5d1782b2d2b6f733486be480bb0d8bcf34d5fdc63bbac996ed76af541cc14\",\"Height\": 9}]}\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"Shader output: {\"contracts\": [{\"cid\": \"d9c5d1782b2d2b6f733486be480bb0d8bcf34d5fdc63bbac996ed76af541cc14\",\"Height\": 9}]}\n"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Destroy"}]},{"type":"text","value":" contract (with "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"cid"}]},{"type":"text","value":" from the example above)"},{"type":"element","tag":"pre","props":{"code":"./beam-wallet-masternet shader --shader_app_file=mydapp/app.wasm --shader_contract_file=mydapp/contract.wasm --shader_args=\"role=manager,action=destroy,cid=d9c5d1782b2d2b6f733486be480bb0d8bcf34d5fdc63bbac996ed76af541cc14\" -n localhost:10000\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"./beam-wallet-masternet shader --shader_app_file=mydapp/app.wasm --shader_contract_file=mydapp/contract.wasm --shader_args=\"role=manager,action=destroy,cid=d9c5d1782b2d2b6f733486be480bb0d8bcf34d5fdc63bbac996ed76af541cc14\" -n localhost:10000\n"}]}]},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"Output example:"},{"type":"element","tag":"pre","props":{"code":"Creating new contract invocation tx on behalf of the shader\nContract ID: d9c5d1782b2d2b6f733486be480bb0d8bcf34d5fdc63bbac996ed76af541cc14\n      Comment: destroy Vault contract   Total fee: 1100000 GROTH\nI 2022-06-06.12:34:15.962 Sync up to 311-788f821396683a25\nI 2022-06-06.12:34:15.962 Synchronizing with node: 0% (0/2)\nI 2022-06-06.12:34:15.967 Synchronizing with node: 0% (0/2)\nI 2022-06-06.12:34:15.967 CoinID: Key=mine-1:1:307, Value=8000000000 Maturity=312 Confirmed, Height=307\nI 2022-06-06.12:34:15.968 CoinID: Key=mine-1:1:308, Value=8000000000 Maturity=313 Confirmed, Height=308\nI 2022-06-06.12:34:15.968 CoinID: Key=mine-1:1:309, Value=8000000000 Maturity=314 Confirmed, Height=309\nI 2022-06-06.12:34:15.968 CoinID: Key=mine-1:1:310, Value=8000000000 Maturity=315 Confirmed, Height=310\nI 2022-06-06.12:34:15.969 CoinID: Key=mine-1:1:311, Value=8000000000 Maturity=316 Confirmed, Height=311\nI 2022-06-06.12:34:15.969 Synchronizing with node: 50% (1/2)\nI 2022-06-06.12:34:15.969 Synchronizing with node: 100% (2/2)\nI 2022-06-06.12:34:15.969 Current state is 311-788f821396683a25\nI 2022-06-06.12:34:15.969 [7b8eb0b0bd2340529996c7598d3ebaff][1] Get proof for kernel: eb45c335bca2e17c\nI 2022-06-06.12:34:15.970 Synchronizing with node: 100% (1/1)\nI 2022-06-06.12:34:15.970 Current state is 311-788f821396683a25\nI 2022-06-06.12:34:26.111 Rolled back to 306-910bc6ca48d05757\nI 2022-06-06.12:34:26.112 Sync up to 312-d156e1bf16939393\nI 2022-06-06.12:34:26.113 Synchronizing with node: 0% (0/2)\nI 2022-06-06.12:34:26.113 CoinID: Key=mine-1:1:307, Value=8000000000 Maturity=312 Confirmed, Height=307\nI 2022-06-06.12:34:26.113 CoinID: Key=mine-1:1:308, Value=8000000000 Maturity=313 Confirmed, Height=308\nI 2022-06-06.12:34:26.114 CoinID: Key=chng-1:0:3958598515398969808, Value=7998900000 Maturity=9 Spent, Height=312\nI 2022-06-06.12:34:26.114 CoinID: Key=chng-1:0:12345322638362229725, Value=7997800000 Maturity=312 Confirmed, Height=312\nI 2022-06-06.12:34:26.115 Synchronizing with node: 50% (1/2)\nI 2022-06-06.12:34:26.115 Synchronizing with node: 100% (2/2)\nI 2022-06-06.12:34:26.115 Current state is 312-d156e1bf16939393\nI 2022-06-06.12:34:26.115 [7b8eb0b0bd2340529996c7598d3ebaff][1] Get proof for kernel: eb45c335bca2e17c\nI 2022-06-06.12:34:26.116 [7b8eb0b0bd2340529996c7598d3ebaff] Transaction completed\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"Creating new contract invocation tx on behalf of the shader\nContract ID: d9c5d1782b2d2b6f733486be480bb0d8bcf34d5fdc63bbac996ed76af541cc14\n      Comment: destroy Vault contract   Total fee: 1100000 GROTH\nI 2022-06-06.12:34:15.962 Sync up to 311-788f821396683a25\nI 2022-06-06.12:34:15.962 Synchronizing with node: 0% (0/2)\nI 2022-06-06.12:34:15.967 Synchronizing with node: 0% (0/2)\nI 2022-06-06.12:34:15.967 CoinID: Key=mine-1:1:307, Value=8000000000 Maturity=312 Confirmed, Height=307\nI 2022-06-06.12:34:15.968 CoinID: Key=mine-1:1:308, Value=8000000000 Maturity=313 Confirmed, Height=308\nI 2022-06-06.12:34:15.968 CoinID: Key=mine-1:1:309, Value=8000000000 Maturity=314 Confirmed, Height=309\nI 2022-06-06.12:34:15.968 CoinID: Key=mine-1:1:310, Value=8000000000 Maturity=315 Confirmed, Height=310\nI 2022-06-06.12:34:15.969 CoinID: Key=mine-1:1:311, Value=8000000000 Maturity=316 Confirmed, Height=311\nI 2022-06-06.12:34:15.969 Synchronizing with node: 50% (1/2)\nI 2022-06-06.12:34:15.969 Synchronizing with node: 100% (2/2)\nI 2022-06-06.12:34:15.969 Current state is 311-788f821396683a25\nI 2022-06-06.12:34:15.969 [7b8eb0b0bd2340529996c7598d3ebaff][1] Get proof for kernel: eb45c335bca2e17c\nI 2022-06-06.12:34:15.970 Synchronizing with node: 100% (1/1)\nI 2022-06-06.12:34:15.970 Current state is 311-788f821396683a25\nI 2022-06-06.12:34:26.111 Rolled back to 306-910bc6ca48d05757\nI 2022-06-06.12:34:26.112 Sync up to 312-d156e1bf16939393\nI 2022-06-06.12:34:26.113 Synchronizing with node: 0% (0/2)\nI 2022-06-06.12:34:26.113 CoinID: Key=mine-1:1:307, Value=8000000000 Maturity=312 Confirmed, Height=307\nI 2022-06-06.12:34:26.113 CoinID: Key=mine-1:1:308, Value=8000000000 Maturity=313 Confirmed, Height=308\nI 2022-06-06.12:34:26.114 CoinID: Key=chng-1:0:3958598515398969808, Value=7998900000 Maturity=9 Spent, Height=312\nI 2022-06-06.12:34:26.114 CoinID: Key=chng-1:0:12345322638362229725, Value=7997800000 Maturity=312 Confirmed, Height=312\nI 2022-06-06.12:34:26.115 Synchronizing with node: 50% (1/2)\nI 2022-06-06.12:34:26.115 Synchronizing with node: 100% (2/2)\nI 2022-06-06.12:34:26.115 Current state is 312-d156e1bf16939393\nI 2022-06-06.12:34:26.115 [7b8eb0b0bd2340529996c7598d3ebaff][1] Get proof for kernel: eb45c335bca2e17c\nI 2022-06-06.12:34:26.116 [7b8eb0b0bd2340529996c7598d3ebaff] Transaction completed\n"}]}]}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"overview","depth":3,"text":"Overview"},{"id":"prerequisites","depth":3,"text":"Prerequisites"},{"id":"shader-api","depth":3,"text":"Shader API"},{"id":"cid","depth":3,"text":"Cid"},{"id":"working-with-shaders","depth":3,"text":"Working with shaders"}]}},"_type":"markdown","_id":"content:docs:dev:beam-shaders:using-beam-shaders-with-cli-wallet-masternet.md","_source":"content","_file":"docs/dev/beam-shaders/using-beam-shaders-with-cli-wallet-masternet.md","_extension":"md"}]