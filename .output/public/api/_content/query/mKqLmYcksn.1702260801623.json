[{"_path":"/docs/core-tech/node-initial-synchronization-(deprecated)","_dir":"core-tech","_draft":false,"_partial":false,"_locale":"","title":"-- DEPRECATED --","description":"BEAM Node initially operates in Sync mode, then eventually it switches to the Standard mode.","body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"deprecated"},"children":[{"type":"text","value":"-- DEPRECATED --"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"BEAM Node initially operates in "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Sync"}]},{"type":"text","value":" mode, then eventually it switches to the "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Standard"}]},{"type":"text","value":" mode."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Initial state selection is performed according to the following logic:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"If the current blockchain tip is non-empty, i.e. contains at least the genesis block "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Standard"}]},{"type":"text","value":" mode is selected."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"If there is a "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Treasury"}]},{"type":"text","value":" block(s) defined - the Node is supposed to create the genesis block. It switches to the "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Standard"}]},{"type":"text","value":" mode, mines the genesis block(s), and eventually broadcasts it to the network."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Otherwise "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Sync"}]},{"type":"text","value":" mode is activated."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The goal of the "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Sync"}]},{"type":"text","value":" mode is to allow the fast-Sync via "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Macroblock"}]},{"type":"text","value":" whenever possible. It consists of three phases."}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Detection phase"}]},{"type":"text","value":". Node analyzes its peers, and selects the most suitable "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Macroblock"}]},{"type":"text","value":" to download."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Download phase"}]},{"type":"text","value":". Node downloads the "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Macroblock"}]},{"type":"text","value":" (by portions), from one or several peers."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Import phase"}]},{"type":"text","value":". Once fully downloaded - the Node uses it to import, and then switches to the "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Standard"}]},{"type":"text","value":" mode."}]}]},{"type":"element","tag":"h3","props":{"id":"synchronization-via-macroblock"},"children":[{"type":"text","value":"Synchronization via Macroblock"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Macroblock"}]},{"type":"text","value":" is a \"compressed\" blockchain history, which includes the following:"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"All the block headers, with PoW."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"All the transaction kernels."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The unspent UTXO set."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In contrast to the original blocks the macroblock doesn't contain any info about spent UTXOs. Once downloaded, the Node verifies the following:"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"All the headers are valid (sane, have valid PoW, form a valid blockchain)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"All the original kernels are included in the macroblock\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"This is done by verifying groups of kernels corresponding to a specific block w.r.t. kernel commitment in the appropriate header."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"This proves that all the original transactions are included."}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The resulting state of the system is valid:\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Unspent UTXOs with all the kernels form a valid transformation from the genesis to the asserted height."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The overall value equals what it should be according to the emission schedule."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Recent coinbase UTXOs are time-locked, according to the system rules."}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"detection-phase"},"children":[{"type":"text","value":"Detection phase"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"For each peer with non-empty tip the Node requests the following:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Chainwork proof"}]},{"type":"text","value":" (to ensure the credibility of the reported tip)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Information about the most recently generated "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Macroblock"}]},{"type":"text","value":" (its State ID)."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This continues until either enough such peers are examined, or the timeout expires (since the first suitable peer was found). The macroblock of the peer with the highest "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Chainwork"}]},{"type":"text","value":" is selected.\nIf there is no macroblock to download (which is typically the case until blockchain height is low) - the Node switches to the "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Standard"}]},{"type":"text","value":" mode, otherwise the "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Download phase"}]},{"type":"text","value":" is activated."}]},{"type":"element","tag":"h2","props":{"id":"download-phase"},"children":[{"type":"text","value":"Download phase"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"During this phase the "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Macroblock"}]},{"type":"text","value":" is downloaded by portions. Each time it gets a portion - the next portion is requested from the same peer. In case the peer goes down or has no macroblock for upload - another peer is selected."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In case of shutdown/restart - the Node will continue the download from where it stopped."}]},{"type":"element","tag":"h2","props":{"id":"import-phase"},"children":[{"type":"text","value":"Import phase"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The Node performs the import from the downloaded "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Macroblock"}]},{"type":"text","value":", and then switches to the "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Standard"}]},{"type":"text","value":" mode."}]},{"type":"element","tag":"h1","props":{"id":"notes"},"children":[{"type":"text","value":"Notes"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In case something goes wrong during the "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Sync"}]},{"type":"text","value":" mode - there is no automatic retry/restart. User intervention is required. Whereas in typical scenarios problems are unlikely, possible abnormal cases are:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"No Macroblock detected. Can happen if the peer with the highest (proven) chainwork reports than it has no "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Macroblock"}]},{"type":"text","value":". In this case Node goes straight to the "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Standard"}]},{"type":"text","value":" mode to sync, which is slower, and may not succeed in case old original blocks are already deleted in all peers."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Macroblock download stuck: Node attempts to download a "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Macroblock"}]},{"type":"text","value":" which no more exists in any of its peers. Can happen if the download takes insanely long, and during this time all the peers generated many newer "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Macroblocks"}]},{"type":"text","value":". Typically each node keeps several most recently-generated "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Macroblocks"}]},{"type":"text","value":" (7 by default), and eventually deletes older ones."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Macroblock import error (data corruped, inconsistent state). Most probably the result of DoS attack,  or less probably - some bug or the storage corruption."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In case of an error it's possible to reset the Node state, and retry the synchronization. Or, alternatively, the most recent "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Macroblock"}]},{"type":"text","value":" may be downloaded manually, and given to the Node for explicit initialization"}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"synchronization-via-macroblock","depth":3,"text":"Synchronization via Macroblock"},{"id":"detection-phase","depth":2,"text":"Detection phase"},{"id":"download-phase","depth":2,"text":"Download phase"},{"id":"import-phase","depth":2,"text":"Import phase"}]}},"_type":"markdown","_id":"content:docs:core-tech:Node-initial-synchronization-(DEPRECATED).md","_source":"content","_file":"docs/core-tech/Node-initial-synchronization-(DEPRECATED).md","_extension":"md"}]