[{"_path":"/docs/core-tech/proposal-for-i-o-layer-and-p2p","_dir":"core-tech","_draft":false,"_partial":false,"_locale":"","title":"Proposal For I O Layer And P2P","description":"","body":{"type":"root","children":[{"type":"element","tag":"h2","props":{"id":"нынешнее-видение-по-организации-сетевого-в-тч-p2p-модуля"},"children":[{"type":"text","value":"Нынешнее видение по организации сетевого (в т.ч. p2p) модуля"}]},{"type":"element","tag":"h3","props":{"id":"несколько-уровней-внутри-самого-модуля"},"children":[{"type":"text","value":"Несколько уровней внутри самого модуля"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Для тестирования самое то. Код понятный, кусок логики не придется искать в других директориях. Снизу наверх:"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"IO уровень: оперирует соединениями, сырыми байтами, реконнектами, таймаутами и асинхронностью (там поллинг самого общего плана)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Peer уровень:"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"протокол и сериализация,"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"коллекция peers,"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"броадкасты,"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"персистентное хранилище, связанное с peers (пусть отдельно будет от хранилища блокчейна),"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"ban/unban"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Dandelion (да, он здесь, а не в уровне 3)"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Integration layer:"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"фильтр и cache (это множество хешей, которые позволят не отправлять TX или блок в узел, у которого он есть, а также не отсылать в другие модули то, что им уже известно)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"бридж с основной системой, т.е. формирование и трансляция запросов/ответов между ней (API модулей) и уровнем 2"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"межпоточное взаимодействие"}]}]}]}]},{"type":"element","tag":"h3","props":{"id":"основные-моменты-подробнее"},"children":[{"type":"text","value":"Основные моменты подробнее"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Один поток на все вышесказанное (сетевая логика, а также уровни 2 и 3)"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Тут логика, которая не требует вычислений, можно иметь очень много активных соединений, пределом может стать только сеть или память, но не cpu"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Исключение: может понадобиться отдельный поток, который зипует громоздкие ответы. Пусть они асинхронно формируются по мере надобности в них"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Взаимодействие с другими потоками или через очереди (если это запросы/ответы) или напрямую (явно сделать, чтоб было понятно, что это константный кусок памяти). Мьютексы ставить на небольшие кусочки обновляемых данных (ну например { total_difficulty, total_height }), которые можно быстро прочитать"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"В очередях только что-то легко копируемое или immutable data, напр. { Type type; shared_ptr"},{"type":"element","tag":"const","props":{"tx":""},"children":[{"type":"text","value":" и т.п.}"}]}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Сетевое хозяйство и протокол"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Ограничиваемся TCP и IPv4. Потом успеем добавить если что понадобится, а так пусть меньше сначала кода будет"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"В качестве библиотеки по сетевым вещам и асинхронности очень желаю libuv. Обоснование ниже."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Можно взять за основу протокол из grin, что-то убрать/добавить проблем не составит"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Dandelion: надо определиться с одной из 2х схем, прописанных в документации по grin"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Peers"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Логику взять у grin, для начала"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Для хранилища (не блокчейн, только для peers, оно отдельное должно быть) взять sqlite как наиболее проверенную временем штуку. Она гибкая (индексы и т.д.). Кстати, in-memory sqlite тоже хорошо себя зарекомендовало как штука для работы с табличными данными и сложными индексами. Когда/если будут видны ограничения по performance или станет ясно, что не нужно индексирование, можно быдет подобрать key-value storage побыстрее"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Кэши и фильтры"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"То же, что и у grin для начала. Можно будет какой-нибудь bloom filter попробовать, чтоб избежать ограничений, которые мы в этой части видим у grin"}]}]}]}]},{"type":"element","tag":"h3","props":{"id":"доводы-в-пользу-libuv"},"children":[{"type":"text","value":"Доводы в пользу libuv"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Оно здесь: "},{"type":"element","tag":"a","props":{"href":"http://docs.libuv.org/en/v1.x/","rel":["nofollow"]},"children":[{"type":"text","value":"http://docs.libuv.org/en/v1.x/"}]},{"type":"text","value":", "},{"type":"element","tag":"a","props":{"href":"https://github.com/libuv/libuv","rel":["nofollow"]},"children":[{"type":"text","value":"https://github.com/libuv/libuv"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Качественная и компактная вещь. На ней весь node.js и его асинхронность и "},{"type":"element","tag":"a","props":{"href":"https://github.com/libuv/libuv/wiki/Projects-that-use-libuv","rel":["nofollow"]},"children":[{"type":"text","value":"много еще чего"}]},{"type":"text","value":"."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Можно зафиксировать версию и исходники встроить в build system"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"У меня с ней очень положительный опыт и не один. Вообще могу всю эту часть взять на себя и гарантировать хороший результат, и быстрый, т.к. изнутри знаю, что там"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Будет на несколько % медленнее самописного решения на epoll, но зато mature и не один линукс"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Туда же приделывается асинхронность и таймеры, API можно вывести приличное, на std::function, например"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Также можно приделать, когда понадобится, http и TLS"}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"нынешнее-видение-по-организации-сетевого-в-тч-p2p-модуля","depth":2,"text":"Нынешнее видение по организации сетевого (в т.ч. p2p) модуля","children":[{"id":"несколько-уровней-внутри-самого-модуля","depth":3,"text":"Несколько уровней внутри самого модуля"},{"id":"основные-моменты-подробнее","depth":3,"text":"Основные моменты подробнее"},{"id":"доводы-в-пользу-libuv","depth":3,"text":"Доводы в пользу libuv"}]}]}},"_type":"markdown","_id":"content:docs:core-tech:Proposal-for-I-O-layer-and-P2P.md","_source":"content","_file":"docs/core-tech/Proposal-for-I-O-layer-and-P2P.md","_extension":"md"}]