[{"data":1,"prerenderedAt":459},["Reactive",2],{"content-query-uulftos6k5":3},{"_path":4,"_dir":5,"_draft":6,"_partial":6,"_locale":7,"title":8,"description":9,"body":10,"_type":454,"_id":455,"_source":456,"_file":457,"_extension":458},"/docs/core-tech/testnet-command-line-instructions","core-tech",false,"","Testnet Command Line Instructions","Welcome to Beam Testnet 1",{"type":11,"children":12,"toc":451},"root",[13,24,47,52,60,79,84,92,97,102,111,116,121,126,131,136,144,149,189,194,219,227,232,240,245,253,258,266,274,279,287,292,300,305,313,321,342,350,381,419,438,446],{"type":14,"tag":15,"props":16,"children":17},"element","p",{},[18],{"type":14,"tag":19,"props":20,"children":21},"strong",{},[22],{"type":23,"value":9},"text",{"type":14,"tag":15,"props":25,"children":26},{},[27,29,37,39,45],{"type":23,"value":28},"Node binaries can be downloaded from the Beam website (",{"type":14,"tag":30,"props":31,"children":35},"a",{"href":32,"rel":33},"http://beam-mw.com/downloads",[34],"nofollow",[36],{"type":23,"value":32},{"type":23,"value":38},") or from Github (",{"type":14,"tag":30,"props":40,"children":43},{"href":41,"rel":42},"https://github.com/beam-mw/beam-builds/tree/master/testnet/release",[34],[44],{"type":23,"value":41},{"type":23,"value":46},")",{"type":14,"tag":15,"props":48,"children":49},{},[50],{"type":23,"value":51},"You can run the node with command line options, or modify the attached config file. Once you start the node it will create a node.db file in the same folder. This file will store internal state of the node.",{"type":14,"tag":15,"props":53,"children":54},{},[55],{"type":14,"tag":19,"props":56,"children":57},{},[58],{"type":23,"value":59},"Reporting issues",{"type":14,"tag":15,"props":61,"children":62},{},[63,65,71,73],{"type":23,"value":64},"In case you encounter any problems, please report them via Ðµmail to ",{"type":14,"tag":30,"props":66,"children":68},{"href":67},"mailto:testnet@beam-mw.com",[69],{"type":23,"value":70},"testnet@beam-mw.com",{"type":23,"value":72}," or open a github ticket at ",{"type":14,"tag":30,"props":74,"children":77},{"href":75,"rel":76},"https://github.com/beam-mw/beam",[34],[78],{"type":23,"value":75},{"type":14,"tag":15,"props":80,"children":81},{},[82],{"type":23,"value":83},"Attach archive with logs, configuration file and command line parameters to allow effective investigation of the issues.",{"type":14,"tag":15,"props":85,"children":86},{},[87],{"type":14,"tag":19,"props":88,"children":89},{},[90],{"type":23,"value":91},"Running a node",{"type":14,"tag":15,"props":93,"children":94},{},[95],{"type":23,"value":96},"Node parameters can be either passed through command line or written in the beam-node.cfg file.",{"type":14,"tag":15,"props":98,"children":99},{},[100],{"type":23,"value":101},"Example:",{"type":14,"tag":15,"props":103,"children":104},{},[105],{"type":14,"tag":106,"props":107,"children":108},"em",{},[109],{"type":23,"value":110},"./beam-node --peer 138.68.130.189:8101 --wallet_seed 111 --mining_threads 1 --file_log_level debug",{"type":14,"tag":15,"props":112,"children":113},{},[114],{"type":23,"value":115},"The --peer parameter specifies a comma separated list of peers that the node will initially connect to. After the connection is established, the node will get an updated list of peers from the nodes, along with peer ratings and from that moment it will manage the connections on its own.",{"type":14,"tag":15,"props":117,"children":118},{},[119],{"type":23,"value":120},"--wallet_seed - is a secret key for the wallet that will connect to this node to collect mining rewards (if the node is mining)",{"type":14,"tag":15,"props":122,"children":123},{},[124],{"type":23,"value":125},"--mining_treads - specifies the number of CPU cores utilized for mining. If set to 0, node acts as validating node only.",{"type":14,"tag":15,"props":127,"children":128},{},[129],{"type":23,"value":130},"--file_log_level - allows you to see that is going on behind the scenes.",{"type":14,"tag":15,"props":132,"children":133},{},[134],{"type":23,"value":135},"Upon first launch, the node will download current blockchain history in batch mode as one large macroblock. After the initial sync is complete, the node will continue to sync blocks and individual transactions from the current blockchain Tip and onwards. This can be seen in the log entry:",{"type":14,"tag":15,"props":137,"children":138},{},[139],{"type":14,"tag":106,"props":140,"children":141},{},[142],{"type":23,"value":143},"My Tip: 24704-f2ab414ba6430d85",{"type":14,"tag":15,"props":145,"children":146},{},[147],{"type":23,"value":148},"Here is the full list of options supported by the node",{"type":14,"tag":15,"props":150,"children":151},{},[152,154,160,162,167,169,174,176,180,182,187],{"type":23,"value":153},"General options:\n-h ",{"type":14,"tag":155,"props":156,"children":157},"span",{},[158],{"type":23,"value":159}," --help",{"type":23,"value":161},"                     \tlist of all options\n-p ",{"type":14,"tag":155,"props":163,"children":164},{},[165],{"type":23,"value":166}," --port",{"type":23,"value":168}," arg (=10000)        \tport to start the server on\n--wallet_seed arg                 \tsecret key generation seed\n--log_level arg                   \tlog level ",{"type":14,"tag":155,"props":170,"children":171},{},[172],{"type":23,"value":173},"info|debug|verbose",{"type":23,"value":175},"\n--file_log_level arg              \tfile log level ",{"type":14,"tag":155,"props":177,"children":178},{},[179],{"type":23,"value":173},{"type":23,"value":181},"\n-v ",{"type":14,"tag":155,"props":183,"children":184},{},[185],{"type":23,"value":186}," --version",{"type":23,"value":188},"               \treturn project version\n--git_commit_hash                 \treturn commit hash",{"type":14,"tag":15,"props":190,"children":191},{},[192],{"type":23,"value":193},"Node options:\n--storage arg (=node.db)          \tnode storage path\n--history_dir arg (=./)           \tdirectory for compressed history\n--temp_dir arg (=/tmp/)           \ttemp directory for compressed history,\nmust be on the same volume\n--mining_threads arg (=0)         \tnumber of mining threads(there is no\nmining if 0)\n--verification_threads arg (=-1)  \tnumber of threads for cryptographic\nverifications (0 = single thread, -1 =\nauto)\n--miner_id arg (=0)               \tseed for miner nonce generation\n--peer arg                        \tnodes to connect to\n--import arg (=0)                 \tSpecify the blockchain height to\nimport. The compressed history is\nassumed to be downloaded the the\nspecified directory",{"type":14,"tag":15,"props":195,"children":196},{},[197,199,204,206,211,213,217],{"type":23,"value":198},"Rules configuration:\n--CoinbaseEmission arg (=80000000)\tcoinbase emission in a single block\n--MaturityCoinbase arg (=60)      \tnum of blocks before coinbase UTXO can\nbe spent\n--MaturityStd arg (=0)            \tnum of blocks before non-coinbase UTXO\ncan be spent\n--MaxBodySize arg (=1048576)      \tMax block body size ",{"type":14,"tag":155,"props":200,"children":201},{},[202],{"type":23,"value":203},"bytes",{"type":23,"value":205},"\n--DesiredRate_s arg (=60)         \tDesired rate of generated blocks\n",{"type":14,"tag":155,"props":207,"children":208},{},[209],{"type":23,"value":210},"seconds",{"type":23,"value":212},"\n--DifficultyReviewCycle arg (=1440)   num of blocks after which the mining\ndifficulty can be adjusted\n--MaxDifficultyChange arg (=2)    \tMax difficulty change after each cycle\n(each step is roughly x2 complexity)\n--TimestampAheadThreshold_s arg (=7200)\nBlock timestamp tolerance ",{"type":14,"tag":155,"props":214,"children":215},{},[216],{"type":23,"value":210},{"type":23,"value":218},"\n--WindowForMedian arg (=25)       \tHow many blocks are considered in\ncalculating the timestamp median\n--AllowPublicUtxos arg (=0)       \tset to allow regular (non-coinbase)\nUTXO to have non-confidential signature\n--FakePoW arg (=0)                \tDon't verify PoW. Mining is simulated\nby the timer. For tests only",{"type":14,"tag":15,"props":220,"children":221},{},[222],{"type":14,"tag":19,"props":223,"children":224},{},[225],{"type":23,"value":226},"Running a command line wallet",{"type":14,"tag":15,"props":228,"children":229},{},[230],{"type":23,"value":231},"After extracting the wallet binary to a folder, first we need to initialize the wallet by running:",{"type":14,"tag":15,"props":233,"children":234},{},[235],{"type":14,"tag":106,"props":236,"children":237},{},[238],{"type":23,"value":239},"./beam-wallet --command init",{"type":14,"tag":15,"props":241,"children":242},{},[243],{"type":23,"value":244},"You will be prompted to provide wallet password and then seed. If you are using a miner node, the seed should be the same as was set in the --wallet_seed flag of the node",{"type":14,"tag":15,"props":246,"children":247},{},[248],{"type":14,"tag":19,"props":249,"children":250},{},[251],{"type":23,"value":252},"Printing wallet information",{"type":14,"tag":15,"props":254,"children":255},{},[256],{"type":23,"value":257},"To get the information about the status of the wallet, run:",{"type":14,"tag":15,"props":259,"children":260},{},[261],{"type":14,"tag":106,"props":262,"children":263},{},[264],{"type":23,"value":265},"./beam-wallet --command info -n 127.0.0.1:10000",{"type":14,"tag":15,"props":267,"children":268},{},[269],{"type":14,"tag":19,"props":270,"children":271},{},[272],{"type":23,"value":273},"Receiving Beams",{"type":14,"tag":15,"props":275,"children":276},{},[277],{"type":23,"value":278},"To receive beams we need to start a wallet in a listening mode by running:",{"type":14,"tag":15,"props":280,"children":281},{},[282],{"type":14,"tag":106,"props":283,"children":284},{},[285],{"type":23,"value":286},"./beam-wallet --command listen -n 127.0.0.1:10000;",{"type":14,"tag":15,"props":288,"children":289},{},[290],{"type":23,"value":291},"After entering the password, wallet will print out the line similar to:",{"type":14,"tag":15,"props":293,"children":294},{},[295],{"type":14,"tag":106,"props":296,"children":297},{},[298],{"type":23,"value":299},"WalletID 4a0e54b24d5fdf06891a8eaa57b4b3ac16731e932a64da8ec768083495d624f1 subscribes to BBS channel 9",{"type":14,"tag":15,"props":301,"children":302},{},[303],{"type":23,"value":304},"This show the SBBS address the wallet is listening on. This address can be copied and sent to Sender.",{"type":14,"tag":15,"props":306,"children":307},{},[308],{"type":14,"tag":19,"props":309,"children":310},{},[311],{"type":23,"value":312},"Sending Beams",{"type":14,"tag":15,"props":314,"children":315},{},[316],{"type":14,"tag":106,"props":317,"children":318},{},[319],{"type":23,"value":320},"./beam-wallet --command=send -n 127.0.0.1:10000 -r 77de6bd3de40bc58ab7e4fb68d5e0596fd1e72f3c4fb3eb3d106082d89264909 -a 11.3 -f 0.2",{"type":14,"tag":15,"props":322,"children":323},{},[324,326],{"type":23,"value":325},"To send Beams, use 'send' command with the following parameters:\n-r ",{"type":14,"tag":327,"props":328,"children":329},"sbbs",{"address":7,"of":7,"the":7,"receiver":7,"node":7},[330,332],{"type":23,"value":331},"\n-a ",{"type":14,"tag":333,"props":334,"children":335},"amount",{"of":7,"beams":7,"to":7,"send":7},[336,338],{"type":23,"value":337},"\n-f ",{"type":14,"tag":339,"props":340,"children":341},"transaction",{"fee":7},[],{"type":14,"tag":15,"props":343,"children":344},{},[345],{"type":14,"tag":19,"props":346,"children":347},{},[348],{"type":23,"value":349},"Full list of wallet options",{"type":14,"tag":15,"props":351,"children":352},{},[353,354,358,360,364,365,369,370,374,375,379],{"type":23,"value":153},{"type":14,"tag":155,"props":355,"children":356},{},[357],{"type":23,"value":159},{"type":23,"value":359},"    \t                 list of all options\n-p ",{"type":14,"tag":155,"props":361,"children":362},{},[363],{"type":23,"value":166},{"type":23,"value":168},{"type":14,"tag":155,"props":366,"children":367},{},[368],{"type":23,"value":173},{"type":23,"value":175},{"type":14,"tag":155,"props":371,"children":372},{},[373],{"type":23,"value":173},{"type":23,"value":181},{"type":14,"tag":155,"props":376,"children":377},{},[378],{"type":23,"value":186},{"type":23,"value":380},"                  \treturn project version\n--git_commit_hash                 \treturn commit hash",{"type":14,"tag":15,"props":382,"children":383},{},[384,386,391,393,398,400,405,407,412,414],{"type":23,"value":385},"Wallet options:\n--pass arg                        \tpassword for the wallet\n-a ",{"type":14,"tag":155,"props":387,"children":388},{},[389],{"type":23,"value":390}," --amount",{"type":23,"value":392}," arg               \tamount to send (in Beams, 1 Beam =\n1000000 chattle)\n-f ",{"type":14,"tag":155,"props":394,"children":395},{},[396],{"type":23,"value":397}," --fee",{"type":23,"value":399}," arg (=0)             \tfee (in Beams, 1 Beam = 1000000\nchattle)\n-r ",{"type":14,"tag":155,"props":401,"children":402},{},[403],{"type":23,"value":404}," --receiver_addr",{"type":23,"value":406}," arg        \taddress of receiver\n-n ",{"type":14,"tag":155,"props":408,"children":409},{},[410],{"type":23,"value":411}," --node_addr",{"type":23,"value":413}," arg            \taddress of node\n--treasury_path arg (=treasury.mw)\tBlock to create/append treasury to\n--wallet_path arg (=wallet.db)    \tpath to wallet file\n--bbs_keystore_path arg (=bbs_keys.db)\npath to file with bbs keys\n--tx_history                      \tprint transacrions' history in info\ncommand\n--tr_Count arg (=30)              \ttreasury UTXO count\n--tr_HeightStep arg (=1440)       \ttreasury UTXO height lock step\n--tr_BeamsPerUtxo arg (=10)       \ttreasury value of each UTXO (in Beams)\n--command arg                     \tcommand to execute ",{"type":14,"tag":155,"props":415,"children":416},{},[417],{"type":23,"value":418},"send|receive|listen\n|init|info|treasury",{"type":14,"tag":15,"props":420,"children":421},{},[422,423,427,428,432,433,437],{"type":23,"value":198},{"type":14,"tag":155,"props":424,"children":425},{},[426],{"type":23,"value":203},{"type":23,"value":205},{"type":14,"tag":155,"props":429,"children":430},{},[431],{"type":23,"value":210},{"type":23,"value":212},{"type":14,"tag":155,"props":434,"children":435},{},[436],{"type":23,"value":210},{"type":23,"value":218},{"type":14,"tag":15,"props":439,"children":440},{},[441],{"type":14,"tag":19,"props":442,"children":443},{},[444],{"type":23,"value":445},"List of testnet 1 nodes",{"type":14,"tag":15,"props":447,"children":448},{},[449],{"type":23,"value":450},"142.93.89.204:8101\n188.166.148.169:8101\n206.189.141.171:8101\n138.68.130.189:8101\n178.128.225.252:8101\n128.199.142.41:8101\n139.59.191.116:8101\n206.189.3.9:8101\n206.189.15.198:8101\n204.48.26.118:8101\n174.138.58.140:8101\n142.93.241.66:8101\n188.166.122.215:8101\n142.93.17.121:8101\n104.248.77.220:8101\n104.248.27.246:8101\n188.166.60.223:8101\n128.199.144.164:8101\n104.248.182.148:8101\n104.248.182.152:8101\n159.203.72.8:8101\n178.128.233.252:8101\n104.248.43.86:8101\n104.248.43.99:8101\n178.62.19.156:8101\n104.248.75.183:8101\n206.81.11.82:8101\n206.189.138.82:8101\n178.128.225.8:8101\n142.93.246.182:8101\n104.248.31.169:8101\n128.199.144.48:8101\n178.128.229.48:8101\n128.199.144.196:8101\n159.65.40.42:8101\n178.128.229.50:8101\n138.197.193.229:8101\n128.199.144.206:8101\n178.128.229.65:8101\n159.89.234.65:8101\n104.248.43.120:8101\n104.248.186.25:8101\n128.199.145.212:8101\n188.166.15.205:8101\n138.68.163.99:8101",{"title":7,"searchDepth":452,"depth":452,"links":453},2,[],"markdown","content:docs:core-tech:Testnet-Command-Line-Instructions.md","content","docs/core-tech/Testnet-Command-Line-Instructions.md","md",1702260907904]