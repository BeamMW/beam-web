[{"data":1,"prerenderedAt":557},["Reactive",2],{"content-query-XQcxwCxkqi":3},{"_path":4,"_dir":5,"_draft":6,"_partial":6,"_locale":7,"title":8,"description":9,"body":10,"_type":552,"_id":553,"_source":554,"_file":555,"_extension":556},"/docs/core-tech/mimblewimble-whitepaper-(june-2016)","core-tech",false,"","Mimblewimble Whitepaper (June 2016)","MIMBLEWIMBLE\nTom Elvis Jedusor\n19 July, 2016",{"type":11,"children":12,"toc":549},"root",[13,20,33,38,43,48,53,80,85,97,109,120,130,135,140,150,155,167,172,185,190,195,234,252,257,280,285,290,300,312,317,329,334,352,357,367,372,377,389,394,399,407,417,422,453],{"type":14,"tag":15,"props":16,"children":17},"element","p",{},[18],{"type":19,"value":9},"text",{"type":14,"tag":15,"props":21,"children":22},{},[23,25,31],{"type":19,"value":24},"**",{"type":14,"tag":26,"props":27,"children":28},"strong",{},[29],{"type":19,"value":30},"/\nIntroduction\n/",{"type":19,"value":32},"**\\",{"type":14,"tag":15,"props":34,"children":35},{},[36],{"type":19,"value":37},"Bitcoin is the first widely used financial system for which all the necessary\ndata to validate the system status can be cryptographically verified by anyone.\nHowever, it accomplishes this feat by storing all transactions in a public\ndatabase called \"the blockchain\" and someone who genuinely wishes to check\nthis state must download the whole thing and basically replay each transaction,\ncheck each one as they go. Meanwhile, most of these transactions have not\naffected the actual final state (they create outputs that are destroyed\na transaction later).",{"type":14,"tag":15,"props":39,"children":40},{},[41],{"type":19,"value":42},"At the time of this writing, there were nearly 150 million transactions\ncommitted in the blockchain, which must be replayed to produce a set of\nonly 4 million unspent outputs.",{"type":14,"tag":15,"props":44,"children":45},{},[46],{"type":19,"value":47},"It would be better if an auditor needed only to check data on the outputs\nthemselves, but this is impossible because they are valid if and only if the\noutput is at the end of a chain of previous outputs, each signs the next. In\nother words, the whole blockchain must be validated to confirm the final\nstate.",{"type":14,"tag":15,"props":49,"children":50},{},[51],{"type":19,"value":52},"Add to this that these transactions are cryptographically atomic, it is clear\nwhat outputs go into every transaction and what emerges. The \"transaction graph\"\nresulting reveals a lot of information and is subjected to analysis by many\ncompanies whose business model is to monitor and control the lower classes.\nThis makes it very non-private and even dangerous for people to use.",{"type":14,"tag":15,"props":54,"children":55},{},[56,58,64,66,71,73,78],{"type":19,"value":57},"Some solutions to this have been proposed. Greg Maxwell discovered to encrypt\nthe amounts, so that the graph of the transaction is faceless but still allow\nvalidation that the sums are correct ",{"type":14,"tag":59,"props":60,"children":61},"span",{},[62],{"type":19,"value":63},"1",{"type":19,"value":65},". Dr Maxwell also produced CoinJoin,\na system for Bitcoin users to combine interactively transactions, confusing\nthe transaction graph. Nicolas van Saberhagen has developed a system to blind\nthe transaction entries, goes much further to cloud the transaction graph (as\nwell as not needed the user interaction) ",{"type":14,"tag":59,"props":67,"children":68},{},[69],{"type":19,"value":70},"3",{"type":19,"value":72},". Later, Shen Noether combined\nthe two approaches to obtain \"confidential transactions\" of Maxwell AND the\ndarkening of van Saberhagen ",{"type":14,"tag":59,"props":74,"children":75},{},[76],{"type":19,"value":77},"4",{"type":19,"value":79},".",{"type":14,"tag":15,"props":81,"children":82},{},[83],{"type":19,"value":84},"These solutions are very good and would make Bitcoin very safe to use. But\nthe problem of too much data is made even worse. Confidential transactions\nrequire multi-kilobyte proofs on every output, and van Saberhagen signatures\nrequire every output to be stored for ever, since it is not possible to tell\nwhen they are truly spent.",{"type":14,"tag":15,"props":86,"children":87},{},[88,90,95],{"type":19,"value":89},"Dr. Maxwell's CoinJoin has the problem of needing interactivity. Dr. Yuan Horas\nMouton fixed this by making transactions freely mergeable ",{"type":14,"tag":59,"props":91,"children":92},{},[93],{"type":19,"value":94},"5",{"type":19,"value":96},", but he needed to\nuse pairing-based cryptography, which is potentially slower and more difficult\nto trust. He called this \"one-way aggregate signatures\" (OWAS).",{"type":14,"tag":15,"props":98,"children":99},{},[100,102,107],{"type":19,"value":101},"OWAS had the good idea to combine the transactions in blocks. Imagine that we\ncan combine across blocks (perhaps with some glue data) so that when the outputs\nare created and destroyed, it is the same as if they never existed. Then, to\nvalidate the entire chain, users only need to know when money is entered into\nthe system (new money in each block as in Bitcoin or Monero or peg-ins for\nsidechains ",{"type":14,"tag":59,"props":103,"children":104},{},[105],{"type":19,"value":106},"6",{"type":19,"value":108},") and final unspent outputs, the rest can be removed and forgotten.\nThen we can have Confidential Transactions to hide the amounts and OWAS to blur\nthe transaction graph, and use LESS space than Bitcoin to allow users to fully\nverify the blockchain. And also imagine that we must not pairing-based cryptography\nor new hypotheses, just regular discrete logarithms signatures like Bitcoin.\nHere is what I propose.",{"type":14,"tag":15,"props":110,"children":111},{},[112,114,119],{"type":19,"value":113},"I call my creation Mimblewimble because it is used to prevent the blockchain from\ntalking about all user's information ",{"type":14,"tag":59,"props":115,"children":116},{},[117],{"type":19,"value":118},"7",{"type":19,"value":79},{"type":14,"tag":15,"props":121,"children":122},{},[123,124,129],{"type":19,"value":24},{"type":14,"tag":26,"props":125,"children":126},{},[127],{"type":19,"value":128},"/\nConfidential Transactions and OWAS\n/",{"type":19,"value":32},{"type":14,"tag":15,"props":131,"children":132},{},[133],{"type":19,"value":134},"The first thing we need to do is remove Bitcoin Script. This is sad, but it is too\npowerful so it is impossible to merge transactions using general scripts. We will\ndemonstrate that confidential transactions of Dr. Maxwell are enough (after some\nsmall modification) to authorize spending of outputs and also allows to make\ncombined transactions without interaction. This is in fact identical to OWAS,\nand allows relaying nodes take some transaction fee or the recipient to change\nthe transaction fees. These additional things Bitcoin can not do, we get for free.",{"type":14,"tag":15,"props":136,"children":137},{},[138],{"type":19,"value":139},"We start by reminding the reader how confidential transactions work. First, the\namounts are coded by the following equation:",{"type":14,"tag":141,"props":142,"children":144},"pre",{"code":143},"C = r*G + v*H\n",[145],{"type":14,"tag":146,"props":147,"children":148},"code",{"__ignoreMap":7},[149],{"type":19,"value":143},{"type":14,"tag":15,"props":151,"children":152},{},[153],{"type":19,"value":154},"where C is a Pedersen commitment, G and H are fixed nothing-up-my-sleeve elliptic\ncurve group generators, v is the amount, and r is a secret random blinding key.",{"type":14,"tag":15,"props":156,"children":157},{},[158,160,165],{"type":19,"value":159},"Attached to this output is a rangeproof which proves that v is in ",{"type":14,"tag":59,"props":161,"children":162},{},[163],{"type":19,"value":164},"0, 2^64",{"type":19,"value":166},", so\nthat user cannot exploit the blinding to produce overflow attacks, etc.",{"type":14,"tag":15,"props":168,"children":169},{},[170],{"type":19,"value":171},"To validate a transaction, the verifer will add commitments for all outputs, plus\nf*H (f here is the transaction fee which is given explicitly) and subtracts all\ninput commitments. The result must be 0, which proves that no amount was created\nor destroyed overall.",{"type":14,"tag":15,"props":173,"children":174},{},[175,177,183],{"type":19,"value":176},"We note that to create such a transaction, the user must know the sum of all the\nvalues of r for commitments entries. Therefore, the r-values (and their sums) act\nas secret keys. If we can make the r output values known only to the recipient,\nthen we have an authentication system! Unfortunately, if we keep the rule that\ncommits all add to 0, this is impossible, because the sender knows the sum of\nall ",{"type":14,"tag":178,"props":179,"children":180},"em",{},[181],{"type":19,"value":182},"his",{"type":19,"value":184}," r values, and therefore knows the receipient's r values sum to the\nnegative of that. So instead, we allow the transaction to sum to a nonzero value\nk*G, and require a signature of an empty string with this as key, to prove its\namount component is zero.",{"type":14,"tag":15,"props":186,"children":187},{},[188],{"type":19,"value":189},"We let transactions have as many k*G values as they want, each with a signature,\nand sum them during verification.",{"type":14,"tag":15,"props":191,"children":192},{},[193],{"type":19,"value":194},"To create transactions sender and recipient do following ritual:",{"type":14,"tag":196,"props":197,"children":198},"ol",{},[199,205,217,229],{"type":14,"tag":200,"props":201,"children":202},"li",{},[203],{"type":19,"value":204},"Sender and recipient agree on amount to be sent. Call this b.",{"type":14,"tag":200,"props":206,"children":207},{},[208,210,215],{"type":19,"value":209},"Sender creates transaction with all inputs and change output(s), and gives\nrecipient the total blinding factor (r-value of change minus r-values of\ninputs) along with this transaction. So the commitments sum to r",{"type":14,"tag":178,"props":211,"children":212},{},[213],{"type":19,"value":214},"G - b",{"type":19,"value":216},"H.",{"type":14,"tag":200,"props":218,"children":219},{},[220,222,227],{"type":19,"value":221},"Recipient chooses random r-values for his outputs, and values that sum\nto b minus fee, and adds these to transaction (including range proof).\nNow the commitments sum to k",{"type":14,"tag":178,"props":223,"children":224},{},[225],{"type":19,"value":226},"G - fee",{"type":19,"value":228},"H for some k that only recipient\nknows.",{"type":14,"tag":200,"props":230,"children":231},{},[232],{"type":19,"value":233},"Recipient attaches signature with k to the transaction, and the explicit\nfee. It has done.",{"type":14,"tag":15,"props":235,"children":236},{},[237,239,244,246,250],{"type":19,"value":238},"Now, creating transactions in this manner supports OWAS already. To show this,\nsuppose we have two transactions that have a surplus k1",{"type":14,"tag":178,"props":240,"children":241},{},[242],{"type":19,"value":243},"G and k2",{"type":19,"value":245},"G, and the\nattached signatures with these. Then you can combine the lists of inputs and\noutputs of the two transactions, with both k1",{"type":14,"tag":178,"props":247,"children":248},{},[249],{"type":19,"value":243},{"type":19,"value":251},"G to the mix, and\nvoilá! is again a valid transaction. From the combination, it is impossible to\nsay which outputs or inputs are from which original transaction.",{"type":14,"tag":15,"props":253,"children":254},{},[255],{"type":19,"value":256},"Because of this, we change our block format from Bitcoin to this information:",{"type":14,"tag":196,"props":258,"children":259},{},[260,265,270,275],{"type":14,"tag":200,"props":261,"children":262},{},[263],{"type":19,"value":264},"Explicit amounts for new money (block subsidy or sidechain peg-ins) with\nwhatever else data this needs. For a sidechain peg-in maybe it references\na Bitcoin transaction that commits to a specific excess k*G value?",{"type":14,"tag":200,"props":266,"children":267},{},[268],{"type":19,"value":269},"Inputs of all transactions",{"type":14,"tag":200,"props":271,"children":272},{},[273],{"type":19,"value":274},"Outputs of all transactions",{"type":14,"tag":200,"props":276,"children":277},{},[278],{"type":19,"value":279},"Excess k*G values for all transactions",{"type":14,"tag":15,"props":281,"children":282},{},[283],{"type":19,"value":284},"Each of these are grouped together because it do not matter what the transaction\nboundaries are originally. In addition, Lists 2 3 and 4 should be required to be\ncoded in alphabetical order, since it is quick to check and prevents the block\ncreator of leaking any information about the original transactions.",{"type":14,"tag":15,"props":286,"children":287},{},[288],{"type":19,"value":289},"Note that the outputs are now identified by their hash, and not by their position\nin a transaction that could easily change. Therefore, it should be banned to have\ntwo unspent outputs are equal at the same time, to avoid confusion.",{"type":14,"tag":15,"props":291,"children":292},{},[293,294,299],{"type":19,"value":24},{"type":14,"tag":26,"props":295,"children":296},{},[297],{"type":19,"value":298},"/\nMerging Transactions Across Blocks\n/",{"type":19,"value":32},{"type":14,"tag":15,"props":301,"children":302},{},[303,305,310],{"type":19,"value":304},"Now, we have used Dr. Maxwell's Confidential Transactions to create a noninteractive\nversion of Dr. Maxwell's CoinJoin, but we have not seen the last of marvelous Dr. Maxwell!\nWe need another idea, transaction cut-through, he described in ",{"type":14,"tag":59,"props":306,"children":307},{},[308],{"type":19,"value":309},"8",{"type":19,"value":311},". Again, we create a\nnoninteractive version of this, and to show how it is used with several blocks.",{"type":14,"tag":15,"props":313,"children":314},{},[315],{"type":19,"value":316},"We can imagine now each block as one large transaction. To validate it, we add all the\noutput commitments together, then subtracts all input commitments, k*G values, and all\nexplicit input amounts times H. We find that we could combine transactions from two\nblocks, as we combined transactions to form a single block, and the result is again\na valid transaction. Except now, some output commitments have an input commitment exactly\nequal to it, where the first block's output was spent in the second block. We could\nremove both commitments and still have a valid transaction. In fact, there is not even\nneed to check the rangeproof of the deleted output.",{"type":14,"tag":15,"props":318,"children":319},{},[320,322,327],{"type":19,"value":321},"The extension of this idea all the way from the genesis block to the latest block, we\nsee that EVERY nonexplicit input is deleted along with its referenced output. What\nremains are only the unspent outputs, explicit input amounts and every k",{"type":14,"tag":178,"props":323,"children":324},{},[325],{"type":19,"value":326},"G value.\nAnd this whole mess can be validated as if it were one transaction: add all unspent\ncommitments output, subtract the values k",{"type":19,"value":328},"G, validate explicit input amounts (if there\nis anything to validate) then subtract them times H. If the sum is 0, the entire\nchain is good.",{"type":14,"tag":15,"props":330,"children":331},{},[332],{"type":19,"value":333},"What is this mean? When a user starts up and downloads the chain he needs the following\ndata from each block:",{"type":14,"tag":196,"props":335,"children":336},{},[337,342,347],{"type":14,"tag":200,"props":338,"children":339},{},[340],{"type":19,"value":341},"Explicit amounts for new money (block subsidy or sidechain peg-ins) with\nwhatever else data this needs.",{"type":14,"tag":200,"props":343,"children":344},{},[345],{"type":19,"value":346},"Unspent outputs of all transactions, along with a merkle proof that each\noutput appeared in the original block.",{"type":14,"tag":200,"props":348,"children":349},{},[350],{"type":19,"value":351},"Excess k*G values for all transactions.",{"type":14,"tag":15,"props":353,"children":354},{},[355],{"type":19,"value":356},"Bitcoin today there are about 423000 blocks, totaling 80GB or so of data on the hard\ndrive to validate everything. These data are about 150 million transactions and 5 million\nunspent nonconfidential outputs. Estimate how much space the number of transactions\ntake on a Mimblewimble chain. Each unspent output is around 3Kb for rangeproof and\nMerkle proof. Each transaction also adds about 100 bytes: a k*G value and a signature.\nThe block headers and explicit amounts are negligible. Add this together and get\n30Gb -- with a confidential transaction and obscured transaction graph!",{"type":14,"tag":15,"props":358,"children":359},{},[360,361,366],{"type":19,"value":24},{"type":14,"tag":26,"props":362,"children":363},{},[364],{"type":19,"value":365},"/\nQuestions and Intuition\n/",{"type":19,"value":32},{"type":14,"tag":15,"props":368,"children":369},{},[370],{"type":19,"value":371},"Here are some questions that since these weeks, dreams asked me and I woke up sweating.\nBut in fact it is OK.",{"type":14,"tag":15,"props":373,"children":374},{},[375],{"type":19,"value":376},"Q. If you delete the transaction outputs, user cannot verify the rangeproof and maybe\na negative amount is created.",{"type":14,"tag":15,"props":378,"children":379},{},[380,382,387],{"type":19,"value":381},"A. This is OK. For the entire transaction to validate all negative amounts must have\nbeen destroyed. User have SPV security only that no illegal inflation happened in\nthe past, but the user knows that ",{"type":14,"tag":178,"props":383,"children":384},{},[385],{"type":19,"value":386},"at this time",{"type":19,"value":388}," no inflation occurred.",{"type":14,"tag":15,"props":390,"children":391},{},[392],{"type":19,"value":393},"Q. If you delete the inputs, double spending can happen.",{"type":14,"tag":15,"props":395,"children":396},{},[397],{"type":19,"value":398},"A. In fact, this means: maybe someone claims that some unspent output was spent\nin the old days. But this is impossible, otherwise the sum of the combined transaction\ncould not be zero.",{"type":14,"tag":141,"props":400,"children":402},{"code":401}," An exception is that if the outputs are amount zero, it is possible to make two that\n are negatives of each other, and the pair can be revived without anything breaks. So to\n prevent consensus problems, outputs 0-amount should be banned. Just add H at each output,\n now they all amount to at least 1.\n",[403],{"type":14,"tag":146,"props":404,"children":405},{"__ignoreMap":7},[406],{"type":19,"value":401},{"type":14,"tag":15,"props":408,"children":409},{},[410,411,416],{"type":19,"value":24},{"type":14,"tag":26,"props":412,"children":413},{},[414],{"type":19,"value":415},"/\nFuture Research\n/",{"type":19,"value":32},{"type":14,"tag":15,"props":418,"children":419},{},[420],{"type":19,"value":421},"Here are some questions I can not answer at the time of this writing.",{"type":14,"tag":196,"props":423,"children":424},{},[425,430,442],{"type":14,"tag":200,"props":426,"children":427},{},[428],{"type":19,"value":429},"What script support is possible? We would need to translate script operations into\nsome sort of discrete logarithm information.",{"type":14,"tag":200,"props":431,"children":432},{},[433,435,440],{"type":19,"value":434},"We require user to check all k",{"type":14,"tag":178,"props":436,"children":437},{},[438],{"type":19,"value":439},"G values, when in fact all that is needed is that their\nsum is of the form k",{"type":19,"value":441},"G. Instead of using signatures is there another proof of discrete\nlogarithm that could be combined?",{"type":14,"tag":200,"props":443,"children":444},{},[445,447,451],{"type":19,"value":446},"There is a denial-of-service option when a user downloads the chain, the peer can give\ngigabytes of data and list the wrong unspent outputs. The user will see that the result\ndo not add up to 0, but cannot tell where the problem is.",{"type":14,"tag":448,"props":449,"children":450},"br",{},[],{"type":19,"value":452},"For now maybe the user should just download the blockchain from a Torrent or something\nwhere the data is shared between many users and is reasonably likely to be correct.",{"type":14,"tag":15,"props":454,"children":455},{},[456,460,462,470,475,476,482,486,487,493,497,498,504,508,509,515,519,520,526,530,531,538,542,543],{"type":14,"tag":59,"props":457,"children":458},{},[459],{"type":19,"value":63},{"type":19,"value":461}," ",{"type":14,"tag":463,"props":464,"children":468},"a",{"href":465,"rel":466},"https://people.xiph.org/~greg/confidential_values.txt",[467],"nofollow",[469],{"type":19,"value":465},{"type":14,"tag":59,"props":471,"children":472},{},[473],{"type":19,"value":474},"2",{"type":19,"value":461},{"type":14,"tag":463,"props":477,"children":480},{"href":478,"rel":479},"https://bitcointalk.org/index.php?topic=279249.0",[467],[481],{"type":19,"value":478},{"type":14,"tag":59,"props":483,"children":484},{},[485],{"type":19,"value":70},{"type":19,"value":461},{"type":14,"tag":463,"props":488,"children":491},{"href":489,"rel":490},"https://cryptonote.org/whitepaper.pdf",[467],[492],{"type":19,"value":489},{"type":14,"tag":59,"props":494,"children":495},{},[496],{"type":19,"value":77},{"type":19,"value":461},{"type":14,"tag":463,"props":499,"children":502},{"href":500,"rel":501},"https://eprint.iacr.org/2015/1098.pdf",[467],[503],{"type":19,"value":500},{"type":14,"tag":59,"props":505,"children":506},{},[507],{"type":19,"value":94},{"type":19,"value":461},{"type":14,"tag":463,"props":510,"children":513},{"href":511,"rel":512},"https://download.wpsoftware.net/bitcoin/wizardry/horasyuanmouton-owas.pdf",[467],[514],{"type":19,"value":511},{"type":14,"tag":59,"props":516,"children":517},{},[518],{"type":19,"value":106},{"type":19,"value":461},{"type":14,"tag":463,"props":521,"children":524},{"href":522,"rel":523},"http://blockstream.com/sidechains.pdf",[467],[525],{"type":19,"value":522},{"type":14,"tag":59,"props":527,"children":528},{},[529],{"type":19,"value":118},{"type":19,"value":461},{"type":14,"tag":463,"props":532,"children":535},{"href":533,"rel":534},"http://fr.harrypotter.wikia.com/wiki/Sortil%C3%A8ge_de_Langue_de_Plomb",[467],[536],{"type":19,"value":537},"http://fr.harrypotter.wikia.com/wiki/Sortilège_de_Langue_de_Plomb",{"type":14,"tag":59,"props":539,"children":540},{},[541],{"type":19,"value":309},{"type":19,"value":461},{"type":14,"tag":463,"props":544,"children":547},{"href":545,"rel":546},"https://bitcointalk.org/index.php?topic=281848.0",[467],[548],{"type":19,"value":545},{"title":7,"searchDepth":550,"depth":550,"links":551},2,[],"markdown","content:docs:core-tech:Mimblewimble-Whitepaper-(June-2016).md","content","docs/core-tech/Mimblewimble-Whitepaper-(June-2016).md","md",1702260902892]