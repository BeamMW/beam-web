[{"data":1,"prerenderedAt":289},["Reactive",2],{"content-query-3R1DUaZ78P":3},{"_path":4,"_dir":5,"_draft":6,"_partial":6,"_locale":7,"title":8,"description":9,"body":10,"_type":284,"_id":285,"_source":286,"_file":287,"_extension":288},"/docs/core-tech/beam-web-wallet-starter-kit","core-tech",false,"","Beam Web Wallet Starter Kit working draft","Web wallet starter allows you easily integrate Beam with your service, create a bunch of wallets and manage them... (TODO)",{"type":11,"children":12,"toc":274},"root",[13,28,33,40,45,50,56,71,96,102,113,125,137,143,155,164,169,175,184,190,215,226,231,240,254,260,265],{"type":14,"tag":15,"props":16,"children":18},"element","h1",{"id":17},"beam-web-wallet-starter-kit-working-draft",[19,22],{"type":20,"value":21},"text","Beam Web Wallet Starter Kit ",{"type":14,"tag":23,"props":24,"children":25},"span",{},[26],{"type":20,"value":27},"working draft",{"type":14,"tag":29,"props":30,"children":31},"p",{},[32],{"type":20,"value":9},{"type":14,"tag":34,"props":35,"children":37},"h2",{"id":36},"web-wallet-scheme",[38],{"type":20,"value":39},"Web wallet scheme",{"type":14,"tag":29,"props":41,"children":42},{},[43],{"type":20,"value":44},"Browser + Key Keeper \u003C==> Web Service\n(TODO: here will be detailed scheme).",{"type":14,"tag":29,"props":46,"children":47},{},[48],{"type":20,"value":49},"Let's do a simple integration step by step with the examples.",{"type":14,"tag":34,"props":51,"children":53},{"id":52},"obtain-binaries",[54],{"type":20,"value":55},"Obtain binaries",{"type":14,"tag":29,"props":57,"children":58},{},[59,61,69],{"type":20,"value":60},"You can download prebuild binaries from our server with nightly builds ",{"type":14,"tag":62,"props":63,"children":67},"a",{"href":64,"rel":65},"https://builds.beam-mw.com/master/",[66],"nofollow",[68],{"type":20,"value":64},{"type":20,"value":70}," or you can build all the parts yourself, here are build instructions (TODO)",{"type":14,"tag":29,"props":72,"children":73},{},[74,76,82,84,89,91],{"type":20,"value":75},"At the end, you need ",{"type":14,"tag":77,"props":78,"children":79},"code",{"className":7},[80],{"type":20,"value":81},"wallet-service-masternet",{"type":20,"value":83},", ",{"type":14,"tag":77,"props":85,"children":86},{"className":7},[87],{"type":20,"value":88},"wasm-key-keeper.js",{"type":20,"value":90}," and ",{"type":14,"tag":77,"props":92,"children":93},{"className":7},[94],{"type":20,"value":95},"wasm-key-keeper.wasm",{"type":14,"tag":34,"props":97,"children":99},{"id":98},"load-key-keeper-to-the-client",[100],{"type":20,"value":101},"Load Key Keeper to the client",{"type":14,"tag":29,"props":103,"children":104},{},[105,107,111],{"type":20,"value":106},"Put the code near ",{"type":14,"tag":77,"props":108,"children":109},{"className":7},[110],{"type":20,"value":88},{"type":20,"value":112}," and start any static server.",{"type":14,"tag":114,"props":115,"children":120},"pre",{"className":116,"code":118,"language":119,"meta":7},[117],"language-html","\u003C!DOCTYPE html>\n\u003Chtml>\n\u003Cscript src='wasm-key-keeper.js'>\u003C/script>\n\u003Cscript type=\"text/javascript\">\n    Module().then(() => console.log(`Key Keeper module successfully loaded.`))\n\u003C/script>\n\u003C/html>\n","html",[121],{"type":14,"tag":77,"props":122,"children":123},{"__ignoreMap":7},[124],{"type":20,"value":118},{"type":14,"tag":29,"props":126,"children":127},{},[128,130,135],{"type":20,"value":129},"If all is OK you will see ",{"type":14,"tag":77,"props":131,"children":132},{"className":7},[133],{"type":20,"value":134},"Key Keeper module successfully loaded.",{"type":20,"value":136}," message in the browser console.",{"type":14,"tag":34,"props":138,"children":140},{"id":139},"connect-to-the-wallet-service",[141],{"type":20,"value":142},"Connect to the Wallet Service",{"type":14,"tag":29,"props":144,"children":145},{},[146,148,153],{"type":20,"value":147},"Run the service with the following parameters ",{"type":14,"tag":77,"props":149,"children":150},{"className":7},[151],{"type":20,"value":152},"wallet-service-masternet -n eu-node04.masternet.beam.mw:8100 --port 8080",{"type":20,"value":154},".",{"type":14,"tag":114,"props":156,"children":159},{"className":157,"code":158,"language":119,"meta":7},[117],"\u003C!DOCTYPE html>\n\u003Chtml>\n\u003Cscript src='wasm-key-keeper.js'>\u003C/script>\n\u003Cscript type=\"text/javascript\">\n    Module().then(() => \n    {\n        console.log(`Key Keeper module successfully loaded.`)\n        \n        let connection = new WebSocket('ws://127.0.0.1:8080')\n        connection.onopen = () => console.log(`Connected to the Wallet Servce.`)\n    })\n\u003C/script>\n\u003C/html>\n",[160],{"type":14,"tag":77,"props":161,"children":162},{"__ignoreMap":7},[163],{"type":20,"value":158},{"type":14,"tag":29,"props":165,"children":166},{},[167],{"type":20,"value":168},"We are using WebSockets here, because we need two-way communication with the service and service can request any keykeeper method, to sign transaction for example.",{"type":14,"tag":34,"props":170,"children":172},{"id":171},"init-key-keeper-with-a-seed-phase",[173],{"type":20,"value":174},"Init Key Keeper with a seed phase",{"type":14,"tag":114,"props":176,"children":179},{"className":177,"code":178,"language":119,"meta":7},[117],"\u003C!DOCTYPE html>\n\u003Chtml>\n\u003Cscript src='wasm-key-keeper.js'>\u003C/script>\n\u003Cscript type=\"text/javascript\">\n    Module().then(Module => \n    {\n        console.log(`Key Keeper module successfully loaded.`)\n        \n        let connection = new WebSocket('ws://127.0.0.1:8080')\n        connection.onopen = () => \n        {\n            console.log(`Connected to the Wallet Service.`)\n\n            // generate seed phrase\n            let seed = Module.KeyKeeper.GeneratePhrase()\n            console.log(`New Seed: ${seed}`)\n\n            // init Key Keeper with the seed phrase\n            let keykeeper = new Module.KeyKeeper(seed)\n        }\n    })\n\u003C/script>\n\u003C/html>\n",[180],{"type":14,"tag":77,"props":181,"children":182},{"__ignoreMap":7},[183],{"type":20,"value":178},{"type":14,"tag":34,"props":185,"children":187},{"id":186},"create-wallet",[188],{"type":20,"value":189},"Create wallet",{"type":14,"tag":29,"props":191,"children":192},{},[193,195,200,202,207,208,213],{"type":20,"value":194},"To create wallet you have to call ",{"type":14,"tag":77,"props":196,"children":197},{"className":7},[198],{"type":20,"value":199},"create_wallet",{"type":20,"value":201}," jsonrpc api method with ",{"type":14,"tag":77,"props":203,"children":204},{"className":7},[205],{"type":20,"value":206},"pass",{"type":20,"value":90},{"type":14,"tag":77,"props":209,"children":210},{"className":7},[211],{"type":20,"value":212},"ownerkey",{"type":20,"value":214}," parameters.",{"type":14,"tag":114,"props":216,"children":221},{"className":217,"code":219,"language":220,"meta":7},[218],"language-js","{\n    jsonrpc:'2.0',\n    id:'\u003Crequest ID>',\n    method:'create_wallet',\n    params:\n    {\n        pass:'\u003Cwallet password>'\n        ownerkey:'\u003Cowner key>',\n    }\n}\n","js",[222],{"type":14,"tag":77,"props":223,"children":224},{"__ignoreMap":7},[225],{"type":20,"value":219},{"type":14,"tag":29,"props":227,"children":228},{},[229],{"type":20,"value":230},"Here is an example:",{"type":14,"tag":114,"props":232,"children":235},{"className":233,"code":234,"language":119,"meta":7},[117],"\u003C!DOCTYPE html>\n\u003Chtml>\n\u003Cscript src='wasm-key-keeper.js'>\u003C/script>\n\u003Cscript type=\"text/javascript\">\n    Module().then(Module => \n    {\n        console.log(`Key Keeper module successfully loaded.`)\n        \n        let connection = new WebSocket('ws://127.0.0.1:8080')\n        connection.onopen = () => \n        {\n            console.log(`Connected to the Wallet Service.`)\n\n            // generate seed phrase\n            let seed = Module.KeyKeeper.GeneratePhrase()\n            console.log(`New Seed: ${seed}`)\n\n            // init Key Keeper with the seed phrase\n            let keykeeper = new Module.KeyKeeper(seed)\n\n            connection.onmessage = e => \n            {\n\n                let data = JSON.parse(e.data)\n\n                if(data.result)     console.log(`Wallet is successfully created, your ID: ${data.result}`)\n                else if(data.error) console.log(`error occured, code:${data.error.code} text:${data.error.data}`)\n                else if(data.method) connection.send(keykeeper.invokeServiceMethod(e.data))\n            }\n\n            let walletPassword = '12345678'\n            let ownerKey = keykeeper.getOwnerKey(walletPassword)\n            console.log(`Owner Key: ${ownerKey}`)\n\n            // create a wallet request\n            connection.send(JSON.stringify({\n                jsonrpc: '2.0',\n                id: 0,\n                method: 'create_wallet',\n                params:\n                {\n                    pass: walletPassword,\n                    ownerkey: ownerKey\n                }\n            }))\n        }\n    })\n\u003C/script>\n\u003C/html>\n",[236],{"type":14,"tag":77,"props":237,"children":238},{"__ignoreMap":7},[239],{"type":20,"value":234},{"type":14,"tag":29,"props":241,"children":242},{},[243,245,252],{"type":20,"value":244},"Now, when you got your wallet ID, you can call any ",{"type":14,"tag":62,"props":246,"children":249},{"href":247,"rel":248},"https://github.com/BeamMW/beam/wiki/Beam-wallet-protocol-API#api",[66],[250],{"type":20,"value":251},"Wallet API",{"type":20,"value":253}," method, like check status, create an address or do a transaction.",{"type":14,"tag":34,"props":255,"children":257},{"id":256},"open-wallet",[258],{"type":20,"value":259},"Open wallet",{"type":14,"tag":29,"props":261,"children":262},{},[263],{"type":20,"value":264},"Open wallet with given ID and password.",{"type":14,"tag":114,"props":266,"children":269},{"className":267,"code":268,"language":220,"meta":7},[218],"{\n    jsonrpc:'2.0',\n    id:'\u003Crequest ID>',\n    method:'open_wallet',\n    params:\n    {\n        id:'\u003Cwallet ID>',\n        pass:'\u003Cwallet password>'\n    }\n}\n",[270],{"type":14,"tag":77,"props":271,"children":272},{"__ignoreMap":7},[273],{"type":20,"value":268},{"title":7,"searchDepth":275,"depth":275,"links":276},2,[277,278,279,280,281,282,283],{"id":36,"depth":275,"text":39},{"id":52,"depth":275,"text":55},{"id":98,"depth":275,"text":101},{"id":139,"depth":275,"text":142},{"id":171,"depth":275,"text":174},{"id":186,"depth":275,"text":189},{"id":256,"depth":275,"text":259},"markdown","content:docs:core-tech:Beam-Web-Wallet-Starter-Kit.md","content","docs/core-tech/Beam-Web-Wallet-Starter-Kit.md","md",1702260894037]