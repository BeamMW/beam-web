[{"data":1,"prerenderedAt":763},["Reactive",2],{"content-query-NHbz7JZJD1":3},{"_path":4,"_dir":5,"_draft":6,"_partial":6,"_locale":7,"title":8,"description":9,"body":10,"_type":758,"_id":759,"_source":760,"_file":761,"_extension":762},"/docs/dev/beam-shaders/using-beam-shaders-with-cli-wallet-masternet","beam-shaders",false,"","Using Beam Shaders with CLI Wallet (masternet)","This document describes how to use Beam Shaders with CLI wallet running on a local network.",{"type":11,"children":12,"toc":749},"root",[13,21,70,77,96,101,127,139,145,222,248,254,265,274,279,284,292,297,308,332,418,448,456,482,487,503,509,516,521,562,573,581,592,600,606,623,634,642,647,655,673,679],{"type":14,"tag":15,"props":16,"children":18},"element","h1",{"id":17},"using-beam-shaders-with-cli-wallet-masternet",[19],{"type":20,"value":8},"text",{"type":14,"tag":22,"props":23,"children":24},"p",{},[25,27,33,35,47,48,68],{"type":20,"value":26},"{% hint style=\"info\" %}\n",{"type":14,"tag":28,"props":29,"children":30},"em",{},[31],{"type":20,"value":32},"All examples refer to a sample application \"mydapp\" which has two",{"type":20,"value":34}," ",{"type":14,"tag":36,"props":37,"children":41},"a",{"href":38,"rel":39},"https://github.com/BeamMW/beam/tree/master/bvm/Shaders/vault",[40],"nofollow",[42],{"type":14,"tag":28,"props":43,"children":44},{},[45],{"type":20,"value":46},"Vault",{"type":20,"value":34},{"type":14,"tag":28,"props":49,"children":50},{},[51,53,59,61,66],{"type":20,"value":52},"Shaders: App Shader (",{"type":14,"tag":54,"props":55,"children":56},"code",{"className":7},[57],{"type":20,"value":58},"app.wasm",{"type":20,"value":60},") and Contract Shader (",{"type":14,"tag":54,"props":62,"children":63},{"className":7},[64],{"type":20,"value":65},"contract.wasm",{"type":20,"value":67},").",{"type":20,"value":69},"\n{% endhint %}",{"type":14,"tag":71,"props":72,"children":74},"h3",{"id":73},"overview",[75],{"type":20,"value":76},"Overview",{"type":14,"tag":22,"props":78,"children":79},{},[80,82,87,89,94],{"type":20,"value":81},"Beam shaders support requires ",{"type":14,"tag":54,"props":83,"children":84},{"className":7},[85],{"type":20,"value":86},"Fork3",{"type":20,"value":88}," and at least ",{"type":14,"tag":54,"props":90,"children":91},{"className":7},[92],{"type":20,"value":93},"v6.0",{"type":20,"value":95}," CLI.",{"type":14,"tag":22,"props":97,"children":98},{},[99],{"type":20,"value":100},"There are two types of Shaders in Beam:",{"type":14,"tag":102,"props":103,"children":104},"ul",{},[105,117],{"type":14,"tag":106,"props":107,"children":108},"li",{},[109,115],{"type":14,"tag":110,"props":111,"children":112},"strong",{},[113],{"type":20,"value":114},"Contract Shader",{"type":20,"value":116}," - implements Smart Contract functionality, is stored on the blockchain and are running on Beam nodes.",{"type":14,"tag":106,"props":118,"children":119},{},[120,125],{"type":14,"tag":110,"props":121,"children":122},{},[123],{"type":20,"value":124},"App Shader",{"type":20,"value":126}," - implements Smart Contract API and is running in Beam wallet.",{"type":14,"tag":22,"props":128,"children":129},{},[130,132,137],{"type":20,"value":131},"To perform any transactions with shaders, you must specify the ",{"type":14,"tag":54,"props":133,"children":134},{"className":7},[135],{"type":20,"value":136},"shader",{"type":20,"value":138}," command.",{"type":14,"tag":71,"props":140,"children":142},{"id":141},"prerequisites",[143],{"type":20,"value":144},"Prerequisites",{"type":14,"tag":146,"props":147,"children":148},"ol",{},[149,192,204,217],{"type":14,"tag":106,"props":150,"children":151},{},[152,154,160,162,166,171,173,178,180,185,186,190],{"type":20,"value":153},"Make sure you have node running and connected to ",{"type":14,"tag":36,"props":155,"children":157},{"href":156},"broken-reference",[158],{"type":20,"value":159},"local network",{"type":20,"value":161},".",{"type":14,"tag":163,"props":164,"children":165},"br",{},[],{"type":14,"tag":110,"props":167,"children":168},{},[169],{"type":20,"value":170},"Notice:",{"type":20,"value":172}," Shaders are applied after the third fork with height 1500. Therefore, for faster testing, we recommend to define lower heights using the ",{"type":14,"tag":54,"props":174,"children":175},{"className":7},[176],{"type":20,"value":177},"Fork1",{"type":20,"value":179},", ",{"type":14,"tag":54,"props":181,"children":182},{"className":7},[183],{"type":20,"value":184},"Fork2",{"type":20,"value":179},{"type":14,"tag":54,"props":187,"children":188},{"className":7},[189],{"type":20,"value":86},{"type":20,"value":191}," attributes.",{"type":14,"tag":106,"props":193,"children":194},{},[195,197,202],{"type":20,"value":196},"Create at least one Beam node with ",{"type":14,"tag":54,"props":198,"children":199},{"className":7},[200],{"type":20,"value":201},"--peer=\u003Cip:port of the first node>",{"type":20,"value":203}," for the transaction replication.",{"type":14,"tag":106,"props":205,"children":206},{},[207,209,215],{"type":20,"value":208},"Make sure you have Beam ",{"type":14,"tag":36,"props":210,"children":212},{"href":211},"../beam-wallets/command-line-wallet",[213],{"type":20,"value":214},"CLI wallet",{"type":20,"value":216}," connected to your Beam node.",{"type":14,"tag":106,"props":218,"children":219},{},[220],{"type":20,"value":221},"You must have funds in your wallet to pay the fee.",{"type":14,"tag":22,"props":223,"children":224},{},[225,227,232,234,239,241,246],{"type":20,"value":226},"{% hint style=\"warning\" %}\nSince this tutorial is based on a local network, each command must be specified with the ",{"type":14,"tag":54,"props":228,"children":229},{"className":7},[230],{"type":20,"value":231},"--FakePoW=1",{"type":20,"value":233}," flag. For convenience we recommend adding this flag to your ",{"type":14,"tag":54,"props":235,"children":236},{"className":7},[237],{"type":20,"value":238},"beam-node.cfg",{"type":20,"value":240}," and ",{"type":14,"tag":54,"props":242,"children":243},{"className":7},[244],{"type":20,"value":245},"beam-wallet.cfg",{"type":20,"value":247}," files.\n{% endhint %}",{"type":14,"tag":71,"props":249,"children":251},{"id":250},"shader-api",[252],{"type":20,"value":253},"Shader API",{"type":14,"tag":22,"props":255,"children":256},{},[257,259,263],{"type":20,"value":258},"First of all, you need to know the available actions of a contract. To see all commands supported by the App Shader enter the following command with ",{"type":14,"tag":54,"props":260,"children":261},{"className":7},[262],{"type":20,"value":136},{"type":20,"value":264}," command:",{"type":14,"tag":266,"props":267,"children":269},"pre",{"code":268},"./beam-wallet-masternet shader --pass=1 --shader_app_file=mydapp/app.wasm -n localhost:10000\n",[270],{"type":14,"tag":54,"props":271,"children":272},{"__ignoreMap":7},[273],{"type":20,"value":268},{"type":14,"tag":22,"props":275,"children":276},{},[277],{"type":20,"value":278},"You need to specify your wallet password, shader application file and node address.",{"type":14,"tag":22,"props":280,"children":281},{},[282],{"type":20,"value":283},"The output is a json format line:",{"type":14,"tag":266,"props":285,"children":287},{"code":286},"Shader output: {\"roles\": {\"manager\": {\"create\": {},\"destroy\": {\"cid\": \"ContractID\"},\"view\": {},\"view_logs\": {\"cid\": \"ContractID\"},\"view_accounts\": {\"cid\": \"ContractID\"},\"view_account\": {\"cid\": \"ContractID\",\"pubKey\": \"PubKey\"}},\"my_account\": {\"view\": {\"cid\": \"ContractID\"},\"get_key\": {\"cid\": \"ContractID\"},\"get_proof\": {\"cid\": \"ContractID\",\"aid\": \"AssetID\"},\"deposit\": {\"cid\": \"ContractID\",\"pkForeign\": \"PubKey\",\"bCoSigner\": \"uint32_t\",\"amount\": \"Amount\",\"aid\": \"AssetID\"},\"withdraw\": {\"cid\": \"ContractID\",\"pkForeign\": \"PubKey\",\"bCoSigner\": \"uint32_t\",\"amount\": \"Amount\",\"aid\": \"AssetID\"}}}}\n",[288],{"type":14,"tag":54,"props":289,"children":290},{"__ignoreMap":7},[291],{"type":20,"value":286},{"type":14,"tag":22,"props":293,"children":294},{},[295],{"type":20,"value":296},"For convenience, let's put it this way:",{"type":14,"tag":266,"props":298,"children":303},{"code":299,"language":300,"meta":7,"className":301},"{\n  \"roles\": {\n    \"manager\": {\n      \"create\": {},\n      \"destroy\": { \"cid\": \"ContractID\" },\n      \"view\": {},\n      \"view_logs\": { \"cid\": \"ContractID\" },\n      \"view_accounts\": { \"cid\": \"ContractID\" },\n      \"view_account\": { \"cid\": \"ContractID\", \"pubKey\": \"PubKey\" }\n    },\n    \"my_account\": {\n      \"view\": { \"cid\": \"ContractID\" },\n      \"get_key\": { \"cid\": \"ContractID\" },\n      \"get_proof\": { \"cid\": \"ContractID\", \"aid\": \"AssetID\" },\n      \"deposit\": {\n        \"cid\": \"ContractID\",\n        \"pkForeign\": \"PubKey\",\n        \"bCoSigner\": \"uint32_t\",\n        \"amount\": \"Amount\",\n        \"aid\": \"AssetID\"\n      },\n      \"withdraw\": {\n        \"cid\": \"ContractID\",\n        \"pkForeign\": \"PubKey\",\n        \"bCoSigner\": \"uint32_t\",\n        \"amount\": \"Amount\",\n        \"aid\": \"AssetID\"\n      }\n    }\n  }\n}\n","json",[302],"language-json",[304],{"type":14,"tag":54,"props":305,"children":306},{"__ignoreMap":7},[307],{"type":20,"value":299},{"type":14,"tag":22,"props":309,"children":310},{},[311,313,318,319,324,326,330],{"type":20,"value":312},"As you can see above, there are two roles in this example: ",{"type":14,"tag":54,"props":314,"children":315},{"className":7},[316],{"type":20,"value":317},"manager",{"type":20,"value":240},{"type":14,"tag":54,"props":320,"children":321},{"className":7},[322],{"type":20,"value":323},"my_account",{"type":20,"value":325},". Each role has its own available actions with or without required attributes. Consider the role ",{"type":14,"tag":54,"props":327,"children":328},{"className":7},[329],{"type":20,"value":317},{"type":20,"value":331}," , it has the following actions:",{"type":14,"tag":102,"props":333,"children":334},{},[335,343,360,368,382,396],{"type":14,"tag":106,"props":336,"children":337},{},[338],{"type":14,"tag":54,"props":339,"children":340},{"className":7},[341],{"type":20,"value":342},"create",{"type":14,"tag":106,"props":344,"children":345},{},[346,351,353,358],{"type":14,"tag":54,"props":347,"children":348},{"className":7},[349],{"type":20,"value":350},"destroy",{"type":20,"value":352},", requires the ",{"type":14,"tag":54,"props":354,"children":355},{"className":7},[356],{"type":20,"value":357},"cid",{"type":20,"value":359}," attribute",{"type":14,"tag":106,"props":361,"children":362},{},[363],{"type":14,"tag":54,"props":364,"children":365},{"className":7},[366],{"type":20,"value":367},"view",{"type":14,"tag":106,"props":369,"children":370},{},[371,376,377,381],{"type":14,"tag":54,"props":372,"children":373},{"className":7},[374],{"type":20,"value":375},"view_logs",{"type":20,"value":352},{"type":14,"tag":54,"props":378,"children":379},{"className":7},[380],{"type":20,"value":357},{"type":20,"value":359},{"type":14,"tag":106,"props":383,"children":384},{},[385,390,391,395],{"type":14,"tag":54,"props":386,"children":387},{"className":7},[388],{"type":20,"value":389},"view_accounts",{"type":20,"value":352},{"type":14,"tag":54,"props":392,"children":393},{"className":7},[394],{"type":20,"value":357},{"type":20,"value":359},{"type":14,"tag":106,"props":397,"children":398},{},[399,404,406,410,411,416],{"type":14,"tag":54,"props":400,"children":401},{"className":7},[402],{"type":20,"value":403},"view_account",{"type":20,"value":405},", requires ",{"type":14,"tag":54,"props":407,"children":408},{"className":7},[409],{"type":20,"value":357},{"type":20,"value":240},{"type":14,"tag":54,"props":412,"children":413},{"className":7},[414],{"type":20,"value":415},"pubKey",{"type":20,"value":417}," attributes",{"type":14,"tag":22,"props":419,"children":420},{},[421,423,427,429,434,436,440,442,446],{"type":20,"value":422},"This means that if, for example, we want to deploy a contract (in Vault, deployment is ",{"type":14,"tag":54,"props":424,"children":425},{"className":7},[426],{"type":20,"value":342},{"type":20,"value":428}," argument), we must specify ",{"type":14,"tag":54,"props":430,"children":431},{"className":7},[432],{"type":20,"value":433},"shader_args",{"type":20,"value":435},"(consider below) with the role ",{"type":14,"tag":54,"props":437,"children":438},{"className":7},[439],{"type":20,"value":317},{"type":20,"value":441}," and the action ",{"type":14,"tag":54,"props":443,"children":444},{"className":7},[445],{"type":20,"value":342},{"type":20,"value":447},":",{"type":14,"tag":266,"props":449,"children":451},{"code":450},"--shader_args=\"role=manager,action=create\"\n",[452],{"type":14,"tag":54,"props":453,"children":454},{"__ignoreMap":7},[455],{"type":20,"value":450},{"type":14,"tag":22,"props":457,"children":458},{},[459,461,466,468,473,475,480],{"type":20,"value":460},"{% hint style=\"warning\" %}\nSpecifying a ",{"type":14,"tag":54,"props":462,"children":463},{"className":7},[464],{"type":20,"value":465},"role",{"type":20,"value":467}," and an ",{"type":14,"tag":54,"props":469,"children":470},{"className":7},[471],{"type":20,"value":472},"action",{"type":20,"value":474}," in a ",{"type":14,"tag":54,"props":476,"children":477},{"className":7},[478],{"type":20,"value":479},"key=value",{"type":20,"value":481}," pair representation is a requirement for working with shaders. But each contract has its own API and the arguments can be different.\n{% endhint %}",{"type":14,"tag":71,"props":483,"children":484},{"id":357},[485],{"type":20,"value":486},"Cid",{"type":14,"tag":22,"props":488,"children":489},{},[490,494,496,501],{"type":14,"tag":110,"props":491,"children":492},{},[493],{"type":20,"value":357},{"type":20,"value":495}," (i.e. ",{"type":14,"tag":110,"props":497,"children":498},{},[499],{"type":20,"value":500},"contract id",{"type":20,"value":502},") is the frequently required attribute. We get it after our contract has been deployed. The same contract which has been deployed with different attributes, will have different values.",{"type":14,"tag":71,"props":504,"children":506},{"id":505},"working-with-shaders",[507],{"type":20,"value":508},"Working with shaders",{"type":14,"tag":510,"props":511,"children":513},"h4",{"id":512},"commands-rules",[514],{"type":20,"value":515},"Commands rules",{"type":14,"tag":22,"props":517,"children":518},{},[519],{"type":20,"value":520},"There are required flags that need to be passed in the wallet CLI to work with the contract:",{"type":14,"tag":102,"props":522,"children":523},{},[524,534,544,554],{"type":14,"tag":106,"props":525,"children":526},{},[527,532],{"type":14,"tag":54,"props":528,"children":529},{"className":7},[530],{"type":20,"value":531},"--shader_app_file=\u003Capp.wasm>",{"type":20,"value":533}," - for application shader",{"type":14,"tag":106,"props":535,"children":536},{},[537,542],{"type":14,"tag":54,"props":538,"children":539},{"className":7},[540],{"type":20,"value":541},"--shader_contract_file=\u003Ccontract.wasm>",{"type":20,"value":543}," - for contract shader",{"type":14,"tag":106,"props":545,"children":546},{},[547,552],{"type":14,"tag":54,"props":548,"children":549},{"className":7},[550],{"type":20,"value":551},"--shader_args=\"role=\u003Crole>,action=\u003Caction>\"",{"type":20,"value":553}," - shader arguments",{"type":14,"tag":106,"props":555,"children":556},{},[557],{"type":14,"tag":54,"props":558,"children":559},{"className":7},[560],{"type":20,"value":561},"-n \u003Cnode address>",{"type":14,"tag":22,"props":563,"children":564},{},[565,567,571],{"type":20,"value":566},"All arguments in ",{"type":14,"tag":54,"props":568,"children":569},{"className":7},[570],{"type":20,"value":433},{"type":20,"value":572}," are passed separated by commas without spaces. For example:",{"type":14,"tag":266,"props":574,"children":576},{"code":575},"--shader_args=\"role=manager,action=view\"\n",[577],{"type":14,"tag":54,"props":578,"children":579},{"__ignoreMap":7},[580],{"type":20,"value":575},{"type":14,"tag":22,"props":582,"children":583},{},[584,586,590],{"type":20,"value":585},"If the ",{"type":14,"tag":54,"props":587,"children":588},{"className":7},[589],{"type":20,"value":472},{"type":20,"value":591}," has additional attributes, they also are separated by commas without spaces:",{"type":14,"tag":266,"props":593,"children":595},{"code":594},"--shader_args=\"role=manager,action=view_logs,cid=d9c5d1782b2d2b6f733486be480bb0d8bcf34d5fdc63bbac996ed76af541cc14\"\n",[596],{"type":14,"tag":54,"props":597,"children":598},{"__ignoreMap":7},[599],{"type":20,"value":594},{"type":14,"tag":510,"props":601,"children":603},{"id":602},"deploy-contract",[604],{"type":20,"value":605},"Deploy contract",{"type":14,"tag":22,"props":607,"children":608},{},[609,611,615,617,621],{"type":20,"value":610},"To work with the contract, you first need to deploy it. As we said, in our Vault example contract, the deployment corresponds to the ",{"type":14,"tag":54,"props":612,"children":613},{"className":7},[614],{"type":20,"value":317},{"type":20,"value":616}," role and ",{"type":14,"tag":54,"props":618,"children":619},{"className":7},[620],{"type":20,"value":342},{"type":20,"value":622}," action.",{"type":14,"tag":22,"props":624,"children":625},{},[626,628,633],{"type":20,"value":627},"Based on our knowledge, we got the following command to ",{"type":14,"tag":110,"props":629,"children":630},{},[631],{"type":20,"value":632},"deploy contract",{"type":20,"value":447},{"type":14,"tag":266,"props":635,"children":637},{"code":636},"./beam-wallet-masternet shader --shader_app_file=mydapp/app.wasm --shader_args=\"role=manager,action=create\" --shader_contract_file=mydapp/contract.wasm -n localhost:10000\n",[638],{"type":14,"tag":54,"props":639,"children":640},{"__ignoreMap":7},[641],{"type":20,"value":636},{"type":14,"tag":22,"props":643,"children":644},{},[645],{"type":20,"value":646},"Output example:",{"type":14,"tag":266,"props":648,"children":650},{"code":649},"Creating new contract invocation tx on behalf of the shader\nContract ID: d9c5d1782b2d2b6f733486be480bb0d8bcf34d5fdc63bbac996ed76af541cc14\n        Comment: create Vault contract  Total fee: 1100000 GROTH\nI 2022-06-06.11:43:08.288 [ac09d5dc897647bf876b7d17d8219a77][1] Get proof for kernel: 6625e9f7756a98eb\nI 2022-06-06.11:43:08.289 Synchronizing with node: 100% (1/1)\nI 2022-06-06.11:43:08.289 Current state is 8-65a2ecdf447ad942\nI 2022-06-06.11:43:18.354 Sync up to 9-7d15da24d2717100\nI 2022-06-06.11:43:18.354 Synchronizing with node: 0% (0/2)\nI 2022-06-06.11:43:18.355 CoinID: Key=mine-1:1:1, Value=8000000000 Maturity=6 Spent, Height=9\nI 2022-06-06.11:43:18.356 CoinID: Key=chng-1:0:3958598515398969808, Value=7998900000 Maturity=9 Confirmed, Height=9\nI 2022-06-06.11:43:18.356 Synchronizing with node: 50% (1/2)\nI 2022-06-06.11:43:18.356 Synchronizing with node: 100% (2/2)\nI 2022-06-06.11:43:18.356 Current state is 9-7d15da24d2717100\nI 2022-06-06.11:43:18.356 [ac09d5dc897647bf876b7d17d8219a77][1] Get proof for kernel: 6625e9f7756a98eb\nI 2022-06-06.11:43:18.357 [ac09d5dc897647bf876b7d17d8219a77] Transaction completed\n",[651],{"type":14,"tag":54,"props":652,"children":653},{"__ignoreMap":7},[654],{"type":20,"value":649},{"type":14,"tag":22,"props":656,"children":657},{},[658,660,665,667,671],{"type":20,"value":659},"In the ",{"type":14,"tag":54,"props":661,"children":662},{"className":7},[663],{"type":20,"value":664},"Contract ID",{"type":20,"value":666}," line we got the ",{"type":14,"tag":54,"props":668,"children":669},{"className":7},[670],{"type":20,"value":357},{"type":20,"value":672}," for this deployed contract.",{"type":14,"tag":510,"props":674,"children":676},{"id":675},"command-examples",[677],{"type":20,"value":678},"Command examples",{"type":14,"tag":102,"props":680,"children":681},{},[682,713],{"type":14,"tag":106,"props":683,"children":684},{},[685,690,692,700,703,705],{"type":14,"tag":110,"props":686,"children":687},{},[688],{"type":20,"value":689},"View",{"type":20,"value":691}," deployed contracts:",{"type":14,"tag":266,"props":693,"children":695},{"code":694},"./beam-wallet-masternet shader --shader_app_file=mydapp/app.wasm --shader_args=\"role=manager,action=view\" --shader_contract_file=mydapp/contract.wasm -n localhost:10000\n",[696],{"type":14,"tag":54,"props":697,"children":698},{"__ignoreMap":7},[699],{"type":20,"value":694},{"type":14,"tag":163,"props":701,"children":702},{},[],{"type":20,"value":704},"The output could be like this:",{"type":14,"tag":266,"props":706,"children":708},{"code":707},"Shader output: {\"contracts\": [{\"cid\": \"d9c5d1782b2d2b6f733486be480bb0d8bcf34d5fdc63bbac996ed76af541cc14\",\"Height\": 9}]}\n",[709],{"type":14,"tag":54,"props":710,"children":711},{"__ignoreMap":7},[712],{"type":20,"value":707},{"type":14,"tag":106,"props":714,"children":715},{},[716,721,723,727,729,737,740,741],{"type":14,"tag":110,"props":717,"children":718},{},[719],{"type":20,"value":720},"Destroy",{"type":20,"value":722}," contract (with ",{"type":14,"tag":54,"props":724,"children":725},{"className":7},[726],{"type":20,"value":357},{"type":20,"value":728}," from the example above)",{"type":14,"tag":266,"props":730,"children":732},{"code":731},"./beam-wallet-masternet shader --shader_app_file=mydapp/app.wasm --shader_contract_file=mydapp/contract.wasm --shader_args=\"role=manager,action=destroy,cid=d9c5d1782b2d2b6f733486be480bb0d8bcf34d5fdc63bbac996ed76af541cc14\" -n localhost:10000\n",[733],{"type":14,"tag":54,"props":734,"children":735},{"__ignoreMap":7},[736],{"type":20,"value":731},{"type":14,"tag":163,"props":738,"children":739},{},[],{"type":20,"value":646},{"type":14,"tag":266,"props":742,"children":744},{"code":743},"Creating new contract invocation tx on behalf of the shader\nContract ID: d9c5d1782b2d2b6f733486be480bb0d8bcf34d5fdc63bbac996ed76af541cc14\n      Comment: destroy Vault contract   Total fee: 1100000 GROTH\nI 2022-06-06.12:34:15.962 Sync up to 311-788f821396683a25\nI 2022-06-06.12:34:15.962 Synchronizing with node: 0% (0/2)\nI 2022-06-06.12:34:15.967 Synchronizing with node: 0% (0/2)\nI 2022-06-06.12:34:15.967 CoinID: Key=mine-1:1:307, Value=8000000000 Maturity=312 Confirmed, Height=307\nI 2022-06-06.12:34:15.968 CoinID: Key=mine-1:1:308, Value=8000000000 Maturity=313 Confirmed, Height=308\nI 2022-06-06.12:34:15.968 CoinID: Key=mine-1:1:309, Value=8000000000 Maturity=314 Confirmed, Height=309\nI 2022-06-06.12:34:15.968 CoinID: Key=mine-1:1:310, Value=8000000000 Maturity=315 Confirmed, Height=310\nI 2022-06-06.12:34:15.969 CoinID: Key=mine-1:1:311, Value=8000000000 Maturity=316 Confirmed, Height=311\nI 2022-06-06.12:34:15.969 Synchronizing with node: 50% (1/2)\nI 2022-06-06.12:34:15.969 Synchronizing with node: 100% (2/2)\nI 2022-06-06.12:34:15.969 Current state is 311-788f821396683a25\nI 2022-06-06.12:34:15.969 [7b8eb0b0bd2340529996c7598d3ebaff][1] Get proof for kernel: eb45c335bca2e17c\nI 2022-06-06.12:34:15.970 Synchronizing with node: 100% (1/1)\nI 2022-06-06.12:34:15.970 Current state is 311-788f821396683a25\nI 2022-06-06.12:34:26.111 Rolled back to 306-910bc6ca48d05757\nI 2022-06-06.12:34:26.112 Sync up to 312-d156e1bf16939393\nI 2022-06-06.12:34:26.113 Synchronizing with node: 0% (0/2)\nI 2022-06-06.12:34:26.113 CoinID: Key=mine-1:1:307, Value=8000000000 Maturity=312 Confirmed, Height=307\nI 2022-06-06.12:34:26.113 CoinID: Key=mine-1:1:308, Value=8000000000 Maturity=313 Confirmed, Height=308\nI 2022-06-06.12:34:26.114 CoinID: Key=chng-1:0:3958598515398969808, Value=7998900000 Maturity=9 Spent, Height=312\nI 2022-06-06.12:34:26.114 CoinID: Key=chng-1:0:12345322638362229725, Value=7997800000 Maturity=312 Confirmed, Height=312\nI 2022-06-06.12:34:26.115 Synchronizing with node: 50% (1/2)\nI 2022-06-06.12:34:26.115 Synchronizing with node: 100% (2/2)\nI 2022-06-06.12:34:26.115 Current state is 312-d156e1bf16939393\nI 2022-06-06.12:34:26.115 [7b8eb0b0bd2340529996c7598d3ebaff][1] Get proof for kernel: eb45c335bca2e17c\nI 2022-06-06.12:34:26.116 [7b8eb0b0bd2340529996c7598d3ebaff] Transaction completed\n",[745],{"type":14,"tag":54,"props":746,"children":747},{"__ignoreMap":7},[748],{"type":20,"value":743},{"title":7,"searchDepth":750,"depth":750,"links":751},2,[752,754,755,756,757],{"id":73,"depth":753,"text":76},3,{"id":141,"depth":753,"text":144},{"id":250,"depth":753,"text":253},{"id":357,"depth":753,"text":486},{"id":505,"depth":753,"text":508},"markdown","content:docs:dev:beam-shaders:using-beam-shaders-with-cli-wallet-masternet.md","content","docs/dev/beam-shaders/using-beam-shaders-with-cli-wallet-masternet.md","md",1702260837762]