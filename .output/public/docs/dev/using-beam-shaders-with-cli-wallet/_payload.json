[{"data":1,"prerenderedAt":605},["Reactive",2],{"content-query-QS5Nnyl6nB":3},{"_path":4,"_dir":5,"_draft":6,"_partial":6,"_locale":7,"title":8,"description":9,"body":10,"_type":600,"_id":601,"_source":602,"_file":603,"_extension":604},"/docs/dev/using-beam-shaders-with-cli-wallet","dev",false,"","Using Beam Shaders with CLI wallet","This document describes how to use Beam Shaders with CLI wallet running on a local network",{"type":11,"children":12,"toc":590},"root",[13,21,36,43,124,130,135,159,187,193,198,207,215,223,231,242,267,353,372,378,395,436,449,457,465,473,479,503,511,516,524,530],{"type":14,"tag":15,"props":16,"children":18},"element","h1",{"id":17},"using-beam-shaders-with-cli-wallet",[19],{"type":20,"value":8},"text",{"type":14,"tag":22,"props":23,"children":24},"p",{},[25,27,34],{"type":20,"value":26},"{% hint style=\"danger\" %}\nThis page is somewhat obsolete, and is replaced with ",{"type":14,"tag":28,"props":29,"children":31},"a",{"href":30},"using-beam-shaders",[32],{"type":20,"value":33},"Using Beam Shaders",{"type":20,"value":35}," tutorial\n{% endhint %}",{"type":14,"tag":37,"props":38,"children":40},"h3",{"id":39},"prerequisites",[41],{"type":20,"value":42},"Prerequisites",{"type":14,"tag":44,"props":45,"children":46},"ol",{},[47,94,106,119],{"type":14,"tag":48,"props":49,"children":50},"li",{},[51,53,59,61,65,71,73,79,81,86,87,92],{"type":20,"value":52},"Make sure you have ",{"type":14,"tag":28,"props":54,"children":56},{"href":55},"broken-reference",[57],{"type":20,"value":58},"node running",{"type":20,"value":60}," and connected to local network.",{"type":14,"tag":62,"props":63,"children":64},"br",{},[],{"type":14,"tag":66,"props":67,"children":68},"strong",{},[69],{"type":20,"value":70},"Notice:",{"type":20,"value":72}," Shaders are applied after the third fork with height 1500. Therefore, for faster testing, we recommend to define lower heights using the ",{"type":14,"tag":74,"props":75,"children":76},"code",{"className":7},[77],{"type":20,"value":78},"--Fork1",{"type":20,"value":80},", ",{"type":14,"tag":74,"props":82,"children":83},{"className":7},[84],{"type":20,"value":85},"--Fork2",{"type":20,"value":80},{"type":14,"tag":74,"props":88,"children":89},{"className":7},[90],{"type":20,"value":91},"--Fork3",{"type":20,"value":93}," attributes.",{"type":14,"tag":48,"props":95,"children":96},{},[97,99,104],{"type":20,"value":98},"Create at least one Beam node[link] with ",{"type":14,"tag":74,"props":100,"children":101},{"className":7},[102],{"type":20,"value":103},"--peer=\u003Cip:port of the first node>",{"type":20,"value":105}," for the transaction replication.",{"type":14,"tag":48,"props":107,"children":108},{},[109,111,117],{"type":20,"value":110},"Make sure you have Beam ",{"type":14,"tag":28,"props":112,"children":114},{"href":113},"beam-wallets/command-line-wallet",[115],{"type":20,"value":116},"CLI wallet connected to your Beam node",{"type":20,"value":118}," or to one of the Beam bootstrap nodes.",{"type":14,"tag":48,"props":120,"children":121},{},[122],{"type":20,"value":123},"You must have funds in your wallet to pay the fee.",{"type":14,"tag":37,"props":125,"children":127},{"id":126},"shaders",[128],{"type":20,"value":129},"Shaders",{"type":14,"tag":22,"props":131,"children":132},{},[133],{"type":20,"value":134},"There are two types of Shaders in Beam:",{"type":14,"tag":136,"props":137,"children":138},"ul",{},[139,149],{"type":14,"tag":48,"props":140,"children":141},{},[142,147],{"type":14,"tag":66,"props":143,"children":144},{},[145],{"type":20,"value":146},"Contract Shader",{"type":20,"value":148}," - implements Smart Contract functionality, is stored on the blockchain and are running on Beam nodes.",{"type":14,"tag":48,"props":150,"children":151},{},[152,157],{"type":14,"tag":66,"props":153,"children":154},{},[155],{"type":20,"value":156},"App Shaders",{"type":20,"value":158}," - implements Smart Contract API and is running in Beam wallet.",{"type":14,"tag":22,"props":160,"children":161},{},[162,168,170,181,182],{"type":14,"tag":163,"props":164,"children":165},"em",{},[166],{"type":20,"value":167},"All examples refer to a sample application 'mydapp' which has two",{"type":20,"value":169}," ",{"type":14,"tag":28,"props":171,"children":175},{"href":172,"rel":173},"https://github.com/BeamMW/beam/tree/master/bvm/Shaders/vault",[174],"nofollow",[176],{"type":14,"tag":163,"props":177,"children":178},{},[179],{"type":20,"value":180},"Vault",{"type":20,"value":169},{"type":14,"tag":163,"props":183,"children":184},{},[185],{"type":20,"value":186},"Shaders: App Shader(app.wasm) and Contract Shader(contract.wasm).",{"type":14,"tag":37,"props":188,"children":190},{"id":189},"shader-api",[191],{"type":20,"value":192},"Shader API",{"type":14,"tag":22,"props":194,"children":195},{},[196],{"type":20,"value":197},"First of all, you need to know the available actions of a contract. To see all commands supported by the App Shader enter the following command:",{"type":14,"tag":199,"props":200,"children":202},"pre",{"code":201},"./beam-wallet-masternet shader --shader_app_file=mydapp/app.wasm -n \u003Cnode>\n",[203],{"type":14,"tag":74,"props":204,"children":205},{"__ignoreMap":7},[206],{"type":20,"value":201},{"type":14,"tag":22,"props":208,"children":209},{},[210,213],{"type":14,"tag":62,"props":211,"children":212},{},[],{"type":20,"value":214},"\nThe output is a json format line:",{"type":14,"tag":199,"props":216,"children":218},{"code":217},"Shader output: {\"roles\": {\"manager\": {\"create\": {},\"destroy\": {\"cid\": \"ContractID\"},\"view\": {},\"view_logs\": {\"cid\": \"ContractID\"},\"view_accounts\": {\"cid\": \"ContractID\"},\"view_account\": {\"cid\": \"ContractID\",\"pubKey\": \"PubKey\"}},\"my_account\": {\"view\": {\"cid\": \"ContractID\"},\"get_key\": {\"cid\": \"ContractID\"},\"get_proof\": {\"cid\": \"ContractID\",\"aid\": \"AssetID\"},\"deposit\": {\"cid\": \"ContractID\",\"pkForeign\": \"PubKey\",\"bCoSigner\": \"uint32_t\",\"amount\": \"Amount\",\"aid\": \"AssetID\"},\"withdraw\": {\"cid\": \"ContractID\",\"pkForeign\": \"PubKey\",\"bCoSigner\": \"uint32_t\",\"amount\": \"Amount\",\"aid\": \"AssetID\"}}}}\n",[219],{"type":14,"tag":74,"props":220,"children":221},{"__ignoreMap":7},[222],{"type":20,"value":217},{"type":14,"tag":22,"props":224,"children":225},{},[226,229],{"type":14,"tag":62,"props":227,"children":228},{},[],{"type":20,"value":230},"\nFor convenience, let's put it this way:",{"type":14,"tag":199,"props":232,"children":237},{"code":233,"language":234,"meta":7,"className":235},"{\n  \"roles\": {\n    \"manager\": {\n      \"create\": {},\n      \"destroy\": { \"cid\": \"ContractID\" },\n      \"view\": {},\n      \"view_logs\": { \"cid\": \"ContractID\" },\n      \"view_accounts\": { \"cid\": \"ContractID\" },\n      \"view_account\": { \"cid\": \"ContractID\", \"pubKey\": \"PubKey\" }\n    },\n    \"my_account\": {\n      \"view\": { \"cid\": \"ContractID\" },\n      \"get_key\": { \"cid\": \"ContractID\" },\n      \"get_proof\": { \"cid\": \"ContractID\", \"aid\": \"AssetID\" },\n      \"deposit\": {\n        \"cid\": \"ContractID\",\n        \"pkForeign\": \"PubKey\",\n        \"bCoSigner\": \"uint32_t\",\n        \"amount\": \"Amount\",\n        \"aid\": \"AssetID\"\n      },\n      \"withdraw\": {\n        \"cid\": \"ContractID\",\n        \"pkForeign\": \"PubKey\",\n        \"bCoSigner\": \"uint32_t\",\n        \"amount\": \"Amount\",\n        \"aid\": \"AssetID\"\n      }\n    }\n  }\n}\n","json",[236],"language-json",[238],{"type":14,"tag":74,"props":239,"children":240},{"__ignoreMap":7},[241],{"type":20,"value":233},{"type":14,"tag":22,"props":243,"children":244},{},[245,247,252,254,259,261,265],{"type":20,"value":246},"As you can see above, there are two roles in this example: ",{"type":14,"tag":74,"props":248,"children":249},{"className":7},[250],{"type":20,"value":251},"manager",{"type":20,"value":253}," and ",{"type":14,"tag":74,"props":255,"children":256},{"className":7},[257],{"type":20,"value":258},"my_account",{"type":20,"value":260},". Each role has its own actions with or without required attributes. In this example, role ",{"type":14,"tag":74,"props":262,"children":263},{"className":7},[264],{"type":20,"value":251},{"type":20,"value":266}," has the following actions:",{"type":14,"tag":136,"props":268,"children":269},{},[270,278,295,303,317,331],{"type":14,"tag":48,"props":271,"children":272},{},[273],{"type":14,"tag":74,"props":274,"children":275},{"className":7},[276],{"type":20,"value":277},"create",{"type":14,"tag":48,"props":279,"children":280},{},[281,286,288,293],{"type":14,"tag":74,"props":282,"children":283},{"className":7},[284],{"type":20,"value":285},"destroy",{"type":20,"value":287},", requires the ",{"type":14,"tag":74,"props":289,"children":290},{"className":7},[291],{"type":20,"value":292},"cid",{"type":20,"value":294}," attribute",{"type":14,"tag":48,"props":296,"children":297},{},[298],{"type":14,"tag":74,"props":299,"children":300},{"className":7},[301],{"type":20,"value":302},"view",{"type":14,"tag":48,"props":304,"children":305},{},[306,311,312,316],{"type":14,"tag":74,"props":307,"children":308},{"className":7},[309],{"type":20,"value":310},"view_logs",{"type":20,"value":287},{"type":14,"tag":74,"props":313,"children":314},{"className":7},[315],{"type":20,"value":292},{"type":20,"value":294},{"type":14,"tag":48,"props":318,"children":319},{},[320,325,326,330],{"type":14,"tag":74,"props":321,"children":322},{"className":7},[323],{"type":20,"value":324},"view_accounts",{"type":20,"value":287},{"type":14,"tag":74,"props":327,"children":328},{"className":7},[329],{"type":20,"value":292},{"type":20,"value":294},{"type":14,"tag":48,"props":332,"children":333},{},[334,339,341,345,346,351],{"type":14,"tag":74,"props":335,"children":336},{"className":7},[337],{"type":20,"value":338},"view_account",{"type":20,"value":340},", requires ",{"type":14,"tag":74,"props":342,"children":343},{"className":7},[344],{"type":20,"value":292},{"type":20,"value":253},{"type":14,"tag":74,"props":347,"children":348},{"className":7},[349],{"type":20,"value":350},"pubKey",{"type":20,"value":352}," attributes",{"type":14,"tag":22,"props":354,"children":355},{},[356],{"type":14,"tag":163,"props":357,"children":358},{},[359,363,365,370],{"type":14,"tag":66,"props":360,"children":361},{},[362],{"type":20,"value":292},{"type":20,"value":364},"(i.e. ",{"type":14,"tag":66,"props":366,"children":367},{},[368],{"type":20,"value":369},"contract id",{"type":20,"value":371},"), is the frequently required attribute. We get it after our contract has been deployed. The same contract which has been deployed with different attributes, will have different values.",{"type":14,"tag":37,"props":373,"children":375},{"id":374},"commands",[376],{"type":20,"value":377},"Commands",{"type":14,"tag":22,"props":379,"children":380},{},[381,383,388,390,393],{"type":20,"value":382},"All command start with ",{"type":14,"tag":74,"props":384,"children":385},{"className":7},[386],{"type":20,"value":387},"./beam-wallet-masternet shader",{"type":20,"value":389},".",{"type":14,"tag":62,"props":391,"children":392},{},[],{"type":20,"value":394},"\nThere are required flags that need to be passed to work with the contract:",{"type":14,"tag":136,"props":396,"children":397},{},[398,408,418,428],{"type":14,"tag":48,"props":399,"children":400},{},[401,406],{"type":14,"tag":74,"props":402,"children":403},{"className":7},[404],{"type":20,"value":405},"--shader_app_file=\u003Capp.wasm>",{"type":20,"value":407}," - for application shader",{"type":14,"tag":48,"props":409,"children":410},{},[411,416],{"type":14,"tag":74,"props":412,"children":413},{"className":7},[414],{"type":20,"value":415},"--shader_contract_file=\u003Ccontract.wasm>",{"type":20,"value":417}," - for contract shader",{"type":14,"tag":48,"props":419,"children":420},{},[421,426],{"type":14,"tag":74,"props":422,"children":423},{"className":7},[424],{"type":20,"value":425},"--shader_args=\"role=\u003Crole>,action=\u003Caction>\"",{"type":20,"value":427}," - shader arguments",{"type":14,"tag":48,"props":429,"children":430},{},[431],{"type":14,"tag":74,"props":432,"children":433},{"className":7},[434],{"type":20,"value":435},"-n \u003Cnode>",{"type":14,"tag":22,"props":437,"children":438},{},[439,443,444],{"type":14,"tag":66,"props":440,"children":441},{},[442],{"type":20,"value":70},{"type":20,"value":169},{"type":14,"tag":163,"props":445,"children":446},{},[447],{"type":20,"value":448},"All arguments are passed separated by commas. For example:",{"type":14,"tag":199,"props":450,"children":452},{"code":451},"--shader_args=\"role=manager,action=view\"\n",[453],{"type":14,"tag":74,"props":454,"children":455},{"__ignoreMap":7},[456],{"type":20,"value":451},{"type":14,"tag":22,"props":458,"children":459},{},[460],{"type":14,"tag":163,"props":461,"children":462},{},[463],{"type":20,"value":464},"If the action has additional attributes, they also are separated by commas:",{"type":14,"tag":199,"props":466,"children":468},{"code":467},"--shader_args=\"role=manager,action=view_logs,cid=d9c5d1782b2d2b6f733486be480bb0d8bcf34d5fdc63bbac996ed76af541cc14\"\n",[469],{"type":14,"tag":74,"props":470,"children":471},{"__ignoreMap":7},[472],{"type":20,"value":467},{"type":14,"tag":37,"props":474,"children":476},{"id":475},"deploy-contract",[477],{"type":20,"value":478},"Deploy contract",{"type":14,"tag":22,"props":480,"children":481},{},[482,484,488,490,494,496,501],{"type":20,"value":483},"To work with the contract, it needs to be deployed. In our Vault example contract, the deployment corresponds to the ",{"type":14,"tag":74,"props":485,"children":486},{"className":7},[487],{"type":20,"value":251},{"type":20,"value":489}," role and ",{"type":14,"tag":74,"props":491,"children":492},{"className":7},[493],{"type":20,"value":277},{"type":20,"value":495}," action. Based on our knowledge, we got the following command to ",{"type":14,"tag":66,"props":497,"children":498},{},[499],{"type":20,"value":500},"deploy contract",{"type":20,"value":502},":",{"type":14,"tag":199,"props":504,"children":506},{"code":505},"./beam-wallet-masternet shader --shader_app_file=mydapp/app.wasm --shader_args=\"role=manager,action=create\" --shader_contract_file=mydapp/contract.wasm -n \u003Cnode>\n",[507],{"type":14,"tag":74,"props":508,"children":509},{"__ignoreMap":7},[510],{"type":20,"value":505},{"type":14,"tag":22,"props":512,"children":513},{},[514],{"type":20,"value":515},"Output example:",{"type":14,"tag":199,"props":517,"children":519},{"code":518},"Creating new contract invocation tx on behalf of the shader\nContract ID: d9c5d1782b2d2b6f733486be480bb0d8bcf34d5fdc63bbac996ed76af541cc14\n        Comment: create Vault contract  Total fee: 1100000 GROTH\nI 2022-06-06.11:43:08.288 [ac09d5dc897647bf876b7d17d8219a77][1] Get proof for kernel: 6625e9f7756a98eb\nI 2022-06-06.11:43:08.289 Synchronizing with node: 100% (1/1)\nI 2022-06-06.11:43:08.289 Current state is 8-65a2ecdf447ad942\nI 2022-06-06.11:43:18.354 Sync up to 9-7d15da24d2717100\nI 2022-06-06.11:43:18.354 Synchronizing with node: 0% (0/2)\nI 2022-06-06.11:43:18.355 CoinID: Key=mine-1:1:1, Value=8000000000 Maturity=6 Spent, Height=9\nI 2022-06-06.11:43:18.356 CoinID: Key=chng-1:0:3958598515398969808, Value=7998900000 Maturity=9 Confirmed, Height=9\nI 2022-06-06.11:43:18.356 Synchronizing with node: 50% (1/2)\nI 2022-06-06.11:43:18.356 Synchronizing with node: 100% (2/2)\nI 2022-06-06.11:43:18.356 Current state is 9-7d15da24d2717100\nI 2022-06-06.11:43:18.356 [ac09d5dc897647bf876b7d17d8219a77][1] Get proof for kernel: 6625e9f7756a98eb\nI 2022-06-06.11:43:18.357 [ac09d5dc897647bf876b7d17d8219a77] Transaction completed\n",[520],{"type":14,"tag":74,"props":521,"children":522},{"__ignoreMap":7},[523],{"type":20,"value":518},{"type":14,"tag":37,"props":525,"children":527},{"id":526},"command-examples",[528],{"type":20,"value":529},"Command examples",{"type":14,"tag":136,"props":531,"children":532},{},[533,559],{"type":14,"tag":48,"props":534,"children":535},{},[536,538,546,549,551],{"type":20,"value":537},"View deployed contracts:",{"type":14,"tag":199,"props":539,"children":541},{"code":540},"./beam-wallet-masternet shader --shader_app_file=mydapp/app.wasm --shader_args=\"role=manager,action=view\" --shader_contract_file=mydapp/contract.wasm -n \u003Cnode>\n",[542],{"type":14,"tag":74,"props":543,"children":544},{"__ignoreMap":7},[545],{"type":20,"value":540},{"type":14,"tag":62,"props":547,"children":548},{},[],{"type":20,"value":550},"The output could be like this:",{"type":14,"tag":199,"props":552,"children":554},{"code":553},"Shader output: {\"contracts\": [{\"cid\": \"d9c5d1782b2d2b6f733486be480bb0d8bcf34d5fdc63bbac996ed76af541cc14\",\"Height\": 9}]}\n",[555],{"type":14,"tag":74,"props":556,"children":557},{"__ignoreMap":7},[558],{"type":20,"value":553},{"type":14,"tag":48,"props":560,"children":561},{},[562,564,568,570,578,581,582],{"type":20,"value":563},"Destroy contract (with ",{"type":14,"tag":74,"props":565,"children":566},{"className":7},[567],{"type":20,"value":292},{"type":20,"value":569}," from the example above)",{"type":14,"tag":199,"props":571,"children":573},{"code":572},"./beam-wallet-masternet shader --shader_app_file=mydapp/app.wasm --shader_contract_file=mydapp/contract.wasm --shader_args=\"role=manager,action=destroy,cid=d9c5d1782b2d2b6f733486be480bb0d8bcf34d5fdc63bbac996ed76af541cc14\" -n localhost:10000\n",[574],{"type":14,"tag":74,"props":575,"children":576},{"__ignoreMap":7},[577],{"type":20,"value":572},{"type":14,"tag":62,"props":579,"children":580},{},[],{"type":20,"value":515},{"type":14,"tag":199,"props":583,"children":585},{"code":584},"Creating new contract invocation tx on behalf of the shader\nContract ID: d9c5d1782b2d2b6f733486be480bb0d8bcf34d5fdc63bbac996ed76af541cc14\n      Comment: destroy Vault contract   Total fee: 1100000 GROTH\nI 2022-06-06.12:34:15.962 Sync up to 311-788f821396683a25\nI 2022-06-06.12:34:15.962 Synchronizing with node: 0% (0/2)\nI 2022-06-06.12:34:15.967 Synchronizing with node: 0% (0/2)\nI 2022-06-06.12:34:15.967 CoinID: Key=mine-1:1:307, Value=8000000000 Maturity=312 Confirmed, Height=307\nI 2022-06-06.12:34:15.968 CoinID: Key=mine-1:1:308, Value=8000000000 Maturity=313 Confirmed, Height=308\nI 2022-06-06.12:34:15.968 CoinID: Key=mine-1:1:309, Value=8000000000 Maturity=314 Confirmed, Height=309\nI 2022-06-06.12:34:15.968 CoinID: Key=mine-1:1:310, Value=8000000000 Maturity=315 Confirmed, Height=310\nI 2022-06-06.12:34:15.969 CoinID: Key=mine-1:1:311, Value=8000000000 Maturity=316 Confirmed, Height=311\nI 2022-06-06.12:34:15.969 Synchronizing with node: 50% (1/2)\nI 2022-06-06.12:34:15.969 Synchronizing with node: 100% (2/2)\nI 2022-06-06.12:34:15.969 Current state is 311-788f821396683a25\nI 2022-06-06.12:34:15.969 [7b8eb0b0bd2340529996c7598d3ebaff][1] Get proof for kernel: eb45c335bca2e17c\nI 2022-06-06.12:34:15.970 Synchronizing with node: 100% (1/1)\nI 2022-06-06.12:34:15.970 Current state is 311-788f821396683a25\nI 2022-06-06.12:34:26.111 Rolled back to 306-910bc6ca48d05757\nI 2022-06-06.12:34:26.112 Sync up to 312-d156e1bf16939393\nI 2022-06-06.12:34:26.113 Synchronizing with node: 0% (0/2)\nI 2022-06-06.12:34:26.113 CoinID: Key=mine-1:1:307, Value=8000000000 Maturity=312 Confirmed, Height=307\nI 2022-06-06.12:34:26.113 CoinID: Key=mine-1:1:308, Value=8000000000 Maturity=313 Confirmed, Height=308\nI 2022-06-06.12:34:26.114 CoinID: Key=chng-1:0:3958598515398969808, Value=7998900000 Maturity=9 Spent, Height=312\nI 2022-06-06.12:34:26.114 CoinID: Key=chng-1:0:12345322638362229725, Value=7997800000 Maturity=312 Confirmed, Height=312\nI 2022-06-06.12:34:26.115 Synchronizing with node: 50% (1/2)\nI 2022-06-06.12:34:26.115 Synchronizing with node: 100% (2/2)\nI 2022-06-06.12:34:26.115 Current state is 312-d156e1bf16939393\nI 2022-06-06.12:34:26.115 [7b8eb0b0bd2340529996c7598d3ebaff][1] Get proof for kernel: eb45c335bca2e17c\nI 2022-06-06.12:34:26.116 [7b8eb0b0bd2340529996c7598d3ebaff] Transaction completed\n",[586],{"type":14,"tag":74,"props":587,"children":588},{"__ignoreMap":7},[589],{"type":20,"value":584},{"title":7,"searchDepth":591,"depth":591,"links":592},2,[593,595,596,597,598,599],{"id":39,"depth":594,"text":42},3,{"id":126,"depth":594,"text":129},{"id":189,"depth":594,"text":192},{"id":374,"depth":594,"text":377},{"id":475,"depth":594,"text":478},{"id":526,"depth":594,"text":529},"markdown","content:docs:dev:using-beam-shaders-with-cli-wallet.md","content","docs/dev/using-beam-shaders-with-cli-wallet.md","md",1702260830668]