[{"data":1,"prerenderedAt":1477},["Reactive",2],{"content-query-1PBe3k8A2v":3},{"_path":4,"_dir":5,"_draft":6,"_partial":6,"_locale":7,"title":8,"description":9,"body":10,"_type":1472,"_id":1473,"_source":1474,"_file":1475,"_extension":1476},"/docs/core-tech/wallet-service","core-tech",false,"","Wallet Service","Beam wallet service allows to implement lightweight wallets using BEAM API.",{"type":11,"children":12,"toc":1448},"root",[13,20,27,32,289,295,300,374,380,385,394,399,420,426,431,452,465,472,477,516,521,542,546,551,562,587,596,611,615,620,624,629,642,654,665,670,678,690,711,717,722,788,801,805,810,819,832,841,849,853,858,867,892,901,909,913,918,927,935,944,952,956,961,970,975,983,990,994,999,1008,1016,1025,1045,1049,1054,1063,1067,1076,1084,1093,1106,1116,1126,1133,1144,1154,1206,1211,1220,1394,1400,1408,1414,1419],{"type":14,"tag":15,"props":16,"children":17},"element","p",{},[18],{"type":19,"value":9},"text",{"type":14,"tag":21,"props":22,"children":24},"h2",{"id":23},"how-to-build",[25],{"type":19,"value":26},"How to build",{"type":14,"tag":15,"props":28,"children":29},{},[30],{"type":19,"value":31},"Wallet service and related projects are supposed to be run on Linux only. It is possible to build everything for Windows and using Windows but it is not oficially supported. Releases are also provided only for Linux.",{"type":14,"tag":33,"props":34,"children":35},"ol",{},[36,75,96,110,144,157,241],{"type":14,"tag":37,"props":38,"children":39},"li",{},[40,42,51,53,59,61,66,68,73],{"type":19,"value":41},"Install required tools to build the generic BEAM project. Refer ",{"type":14,"tag":43,"props":44,"children":48},"a",{"href":45,"rel":46},"https://github.com/BeamMW/beam/wiki/How-to-build",[47],"nofollow",[49],{"type":19,"value":50},"BEAM build instructions",{"type":19,"value":52}," for detals. For example if you're using Ubuntu 18.04 Desktop you need to execute steps ",{"type":14,"tag":54,"props":55,"children":56},"code",{"className":7},[57],{"type":19,"value":58},"1. Install dependencies",{"type":19,"value":60}," & ",{"type":14,"tag":54,"props":62,"children":63},{"className":7},[64],{"type":19,"value":65},"2. Install cmake",{"type":19,"value":67}," from the ",{"type":14,"tag":54,"props":69,"children":70},{"className":7},[71],{"type":19,"value":72},"Ubuntu 18.04 Desktop",{"type":19,"value":74}," section.",{"type":14,"tag":37,"props":76,"children":77},{},[78,80,85,87,94],{"type":19,"value":79},"Install golang. You need at least v1.13.0 to build the project. If the relevant package is provided with your OS it is better to use it. For example ",{"type":14,"tag":54,"props":81,"children":82},{"className":7},[83],{"type":19,"value":84},"sudo dnf install golang",{"type":19,"value":86}," on Fedora. If your OS doesn't not provide recent golang packages (like Ubuntu 18.04) use instructions ",{"type":14,"tag":43,"props":88,"children":91},{"href":89,"rel":90},"https://golang.org/doc/install",[47],[92],{"type":19,"value":93},"from the official website",{"type":19,"value":95},".",{"type":14,"tag":37,"props":97,"children":98},{},[99,101],{"type":19,"value":100},"Clone the repository",{"type":14,"tag":102,"props":103,"children":105},"pre",{"code":104},"git clone https://github.com/BeamMW/wallet-service.git\n",[106],{"type":14,"tag":54,"props":107,"children":108},{"__ignoreMap":7},[109],{"type":19,"value":104},{"type":14,"tag":37,"props":111,"children":112},{},[113,115,120,122,127,129,134,136],{"type":19,"value":114},"Checkout the necessary branch. We use the ",{"type":14,"tag":54,"props":116,"children":117},{"className":7},[118],{"type":19,"value":119},"master",{"type":19,"value":121}," branch for development. To be able to connect to the testnet you have to checkout the ",{"type":14,"tag":54,"props":123,"children":124},{"className":7},[125],{"type":19,"value":126},"testnet",{"type":19,"value":128}," branch. To be able to connect to the mainnet you have to checkout the ",{"type":14,"tag":54,"props":130,"children":131},{"className":7},[132],{"type":19,"value":133},"mainnet",{"type":19,"value":135}," branch.",{"type":14,"tag":102,"props":137,"children":139},{"code":138},"cd wallet-service\ngit checkout testnet\n",[140],{"type":14,"tag":54,"props":141,"children":142},{"__ignoreMap":7},[143],{"type":19,"value":138},{"type":14,"tag":37,"props":145,"children":146},{},[147,149],{"type":19,"value":148},"Init submodules",{"type":14,"tag":102,"props":150,"children":152},{"code":151},"git submodule update --init --recursive\n",[153],{"type":14,"tag":54,"props":154,"children":155},{"__ignoreMap":7},[156],{"type":19,"value":151},{"type":14,"tag":37,"props":158,"children":159},{},[160,162,167,168,173,175,180,182,186,188,196,199,201,209,212,214,219,220,225,227,232,234,239],{"type":19,"value":161},"Build ",{"type":14,"tag":54,"props":163,"children":164},{"className":7},[165],{"type":19,"value":166},"wallet-service",{"type":19,"value":60},{"type":14,"tag":54,"props":169,"children":170},{"className":7},[171],{"type":19,"value":172},"sbbs-monitor",{"type":19,"value":174},". Use build commands from the ",{"type":14,"tag":43,"props":176,"children":178},{"href":45,"rel":177},[47],[179],{"type":19,"value":50},{"type":19,"value":181}," according to your OS.",{"type":14,"tag":183,"props":184,"children":185},"br",{},[],{"type":19,"value":187},"For example for Fedora",{"type":14,"tag":102,"props":189,"children":191},{"code":190},"cmake -DCMAKE_BUILD_TYPE=Release . && make -j4\n",[192],{"type":14,"tag":54,"props":193,"children":194},{"__ignoreMap":7},[195],{"type":19,"value":190},{"type":14,"tag":183,"props":197,"children":198},{},[],{"type":19,"value":200},"For Ububtu 18.04 Desktop",{"type":14,"tag":102,"props":202,"children":204},{"code":203},"export CC=gcc-8 && export CXX=g++-8\ncmake -DCMAKE_BUILD_TYPE=Release && make -j4\n",[205],{"type":14,"tag":54,"props":206,"children":207},{"__ignoreMap":7},[208],{"type":19,"value":203},{"type":14,"tag":183,"props":210,"children":211},{},[],{"type":19,"value":213},"After the build process completes you would have ",{"type":14,"tag":54,"props":215,"children":216},{"className":7},[217],{"type":19,"value":218},"wallet-service(-testnet/-masternet)",{"type":19,"value":60},{"type":14,"tag":54,"props":221,"children":222},{"className":7},[223],{"type":19,"value":224},"sbbs-monitor(-testnet/-masternet)",{"type":19,"value":226}," binaries in the ",{"type":14,"tag":54,"props":228,"children":229},{"className":7},[230],{"type":19,"value":231},"wallet-service/service",{"type":19,"value":233}," folder. Mainnet binaries do not have the ",{"type":14,"tag":54,"props":235,"children":236},{"className":7},[237],{"type":19,"value":238},"-BRANCHNAME",{"type":19,"value":240}," postfix.",{"type":14,"tag":37,"props":242,"children":243},{},[244,245,250,258,261,263,267,269,274,276,281,283,287],{"type":19,"value":161},{"type":14,"tag":54,"props":246,"children":247},{"className":7},[248],{"type":19,"value":249},"service-balancer",{"type":14,"tag":102,"props":251,"children":253},{"code":252},"cd service-balancer && go build && cd ..\n",[254],{"type":14,"tag":54,"props":255,"children":256},{"__ignoreMap":7},[257],{"type":19,"value":252},{"type":14,"tag":183,"props":259,"children":260},{},[],{"type":19,"value":262},"After the build process completes you would have the ",{"type":14,"tag":54,"props":264,"children":265},{"className":7},[266],{"type":19,"value":249},{"type":19,"value":268}," binary in the ",{"type":14,"tag":54,"props":270,"children":271},{"className":7},[272],{"type":19,"value":273},"wallet-service/service-balancer",{"type":19,"value":275}," folder. N.B. At the moment manual builds do not add ",{"type":14,"tag":54,"props":277,"children":278},{"className":7},[279],{"type":19,"value":280},"-masternet/-testnet",{"type":19,"value":282}," postfix to the ",{"type":14,"tag":54,"props":284,"children":285},{"className":7},[286],{"type":19,"value":249},{"type":19,"value":288}," executable.",{"type":14,"tag":21,"props":290,"children":292},{"id":291},"prebuilt-binaries",[293],{"type":19,"value":294},"Prebuilt binaries",{"type":14,"tag":15,"props":296,"children":297},{},[298],{"type":19,"value":299},"You can get the latest prebuilt wallet service binaries here.",{"type":14,"tag":33,"props":301,"children":302},{},[303,339],{"type":14,"tag":37,"props":304,"children":305},{},[306,308],{"type":19,"value":307},"Testnet",{"type":14,"tag":309,"props":310,"children":311},"ul",{},[312,321,330],{"type":14,"tag":37,"props":313,"children":314},{},[315],{"type":14,"tag":43,"props":316,"children":319},{"href":317,"rel":318},"https://builds.beam-mw.com/files/testnet/latest/Release/linux/service-balancer-testnet.tar.gz",[47],[320],{"type":19,"value":317},{"type":14,"tag":37,"props":322,"children":323},{},[324],{"type":14,"tag":43,"props":325,"children":328},{"href":326,"rel":327},"https://builds.beam-mw.com/files/testnet/latest/Release/linux/wallet-service-testnet.tar.gz",[47],[329],{"type":19,"value":326},{"type":14,"tag":37,"props":331,"children":332},{},[333],{"type":14,"tag":43,"props":334,"children":337},{"href":335,"rel":336},"https://builds.beam-mw.com/files/testnet/latest/Release/linux/sbbs-monitor-testnet.tar.gz",[47],[338],{"type":19,"value":335},{"type":14,"tag":37,"props":340,"children":341},{},[342,344],{"type":19,"value":343},"Masternet",{"type":14,"tag":309,"props":345,"children":346},{},[347,356,365],{"type":14,"tag":37,"props":348,"children":349},{},[350],{"type":14,"tag":43,"props":351,"children":354},{"href":352,"rel":353},"https://builds.beam-mw.com/files/masternet/latest/Release/linux/service-balancer-masternet.tar.gz",[47],[355],{"type":19,"value":352},{"type":14,"tag":37,"props":357,"children":358},{},[359],{"type":14,"tag":43,"props":360,"children":363},{"href":361,"rel":362},"https://builds.beam-mw.com/files/masternet/latest/Release/linux/wallet-service-masternet.tar.gz",[47],[364],{"type":19,"value":361},{"type":14,"tag":37,"props":366,"children":367},{},[368],{"type":14,"tag":43,"props":369,"children":372},{"href":370,"rel":371},"https://builds.beam-mw.com/files/masternet/latest/Release/linux/sbbs-monitor-masternet.tar.gz",[47],[373],{"type":19,"value":370},{"type":14,"tag":21,"props":375,"children":377},{"id":376},"deployment",[378],{"type":19,"value":379},"Deployment",{"type":14,"tag":15,"props":381,"children":382},{},[383],{"type":19,"value":384},"At the moment it is advised to use our public API enpoints until the deployment procedure is stabilized and made public. Docker would be available as well as the detailed deployment guide.",{"type":14,"tag":21,"props":386,"children":388},{"id":387},"how-to-try",[389],{"type":14,"tag":43,"props":390,"children":391},{"name":387},[392],{"type":19,"value":393},"How to try",{"type":14,"tag":15,"props":395,"children":396},{},[397],{"type":19,"value":398},"Currently the Wallet Service is deployed for masternet & testnet and provides the following public Service Balancer endpoints",{"type":14,"tag":33,"props":400,"children":401},{},[402,411],{"type":14,"tag":37,"props":403,"children":404},{},[405,406,409],{"type":19,"value":307},{"type":14,"tag":183,"props":407,"children":408},{},[],{"type":19,"value":410},"wss://web-wallet-testnet.beam.mw/ws",{"type":14,"tag":37,"props":412,"children":413},{},[414,415,418],{"type":19,"value":343},{"type":14,"tag":183,"props":416,"children":417},{},[],{"type":19,"value":419},"wss://web-wallet-masternet.beam.mw/ws",{"type":14,"tag":21,"props":421,"children":423},{"id":422},"api-guide",[424],{"type":19,"value":425},"API Guide",{"type":14,"tag":15,"props":427,"children":428},{},[429],{"type":19,"value":430},"Wallet service exposes its API only via JSONRpc v2.0 over WebSockets. To access the API you should",{"type":14,"tag":33,"props":432,"children":433},{},[434,447],{"type":14,"tag":37,"props":435,"children":436},{},[437,439,445],{"type":19,"value":438},"Login to the balancer and get the API enpoint. Check the ",{"type":14,"tag":43,"props":440,"children":442},{"href":441},"#how-to-try",[443],{"type":19,"value":444},"how to try section",{"type":19,"value":446}," for the list of our public balancer endpoints.",{"type":14,"tag":37,"props":448,"children":449},{},[450],{"type":19,"value":451},"Communicate with the API enpoint using the Wallet Service API.",{"type":14,"tag":15,"props":453,"children":454},{},[455,457,463],{"type":19,"value":456},"Too keep user 'secrets' at the user's side Wallet Service doesn't ask for the seed phrase. Instead it expects the client to implement a set of methods that deal with secrets/outputs creation/signing, i.e. user-side keykeeper. We provide default WebAssembly implementation of the keykeeper for JS/Web usage. Check the ",{"type":14,"tag":43,"props":458,"children":460},{"href":459},"#wasm-key-keeper",[461],{"type":19,"value":462},"key keeper",{"type":19,"value":464}," section for details.",{"type":14,"tag":466,"props":467,"children":469},"h3",{"id":468},"service-balancer-api",[470],{"type":19,"value":471},"Service Balancer API",{"type":14,"tag":15,"props":473,"children":474},{},[475],{"type":19,"value":476},"Service Balancer API provides the following methods:",{"type":14,"tag":309,"props":478,"children":479},{},[480,489,498,507],{"type":14,"tag":37,"props":481,"children":482},{},[483],{"type":14,"tag":43,"props":484,"children":486},{"href":485},"#login",[487],{"type":19,"value":488},"login",{"type":14,"tag":37,"props":490,"children":491},{},[492],{"type":14,"tag":43,"props":493,"children":495},{"href":494},"#logout",[496],{"type":19,"value":497},"logout",{"type":14,"tag":37,"props":499,"children":500},{},[501],{"type":14,"tag":43,"props":502,"children":504},{"href":503},"#subscribe",[505],{"type":19,"value":506},"subscribe",{"type":14,"tag":37,"props":508,"children":509},{},[510],{"type":14,"tag":43,"props":511,"children":513},{"href":512},"#unsubscribe",[514],{"type":19,"value":515},"unsubscribe",{"type":14,"tag":15,"props":517,"children":518},{},[519],{"type":19,"value":520},"In addition to the Web Sockets API Service Balancer provides the following HTTP(S) endpoints:",{"type":14,"tag":309,"props":522,"children":523},{},[524,533],{"type":14,"tag":37,"props":525,"children":526},{},[527],{"type":14,"tag":43,"props":528,"children":530},{"href":529},"#balancer-hello",[531],{"type":19,"value":532},"/",{"type":14,"tag":37,"props":534,"children":535},{},[536],{"type":14,"tag":43,"props":537,"children":539},{"href":538},"#balancer-status",[540],{"type":19,"value":541},"/status",{"type":14,"tag":466,"props":543,"children":544},{"id":488},[545],{"type":19,"value":488},{"type":14,"tag":15,"props":547,"children":548},{},[549],{"type":19,"value":550},"Login to the service balancer and get the wallet service endpoint",{"type":14,"tag":102,"props":552,"children":557},{"code":553,"language":554,"meta":7,"className":555},"\u003C--\n{\n    \"jsonrpc\": \"2.0\",\n    \"id\": \"123\",\n    \"method\": \"login\",\n    \"params\":\n    {\n        \"WalletID\": \"wallet id\",\n        \"SbbsAddress\": \"\",\n        \"SbbsAddressPrivate\": \"\"\n    }\n}\n","json",[556],"language-json",[558],{"type":14,"tag":54,"props":559,"children":560},{"__ignoreMap":7},[561],{"type":19,"value":553},{"type":14,"tag":309,"props":563,"children":564},{},[565,577,582],{"type":14,"tag":37,"props":566,"children":567},{},[568,570,575],{"type":19,"value":569},"WalletID - wallet id, get it from ",{"type":14,"tag":54,"props":571,"children":572},{"className":7},[573],{"type":19,"value":574},"keykeeper.getWalletID",{"type":19,"value":576}," method based on the generated seed",{"type":14,"tag":37,"props":578,"children":579},{},[580],{"type":19,"value":581},"SbbsAddress - reserved for future use, leave empty for now",{"type":14,"tag":37,"props":583,"children":584},{},[585],{"type":19,"value":586},"SbbsAddressPrivate - reserved for future use, leave empty for now",{"type":14,"tag":102,"props":588,"children":591},{"code":589,"language":554,"meta":7,"className":590},"-->\n{\n    \"jsonrpc\": \"2.0\",\n    \"id\": \"123\",\n    \"result\": {\n        \"endpoint\": \"web-wallet-testnet.beam.mw?service=30000\"\n    }\n}\n",[556],[592],{"type":14,"tag":54,"props":593,"children":594},{"__ignoreMap":7},[595],{"type":19,"value":589},{"type":14,"tag":309,"props":597,"children":598},{},[599],{"type":14,"tag":37,"props":600,"children":601},{},[602,604,609],{"type":19,"value":603},"endpoint - returns wallet service endpoint used to access Walet Service API & Beam Wallet API. You should manually append the web socket protocol prefix ",{"type":14,"tag":54,"props":605,"children":606},{"className":7},[607],{"type":19,"value":608},"wss://",{"type":19,"value":610}," in front of it.",{"type":14,"tag":466,"props":612,"children":613},{"id":506},[614],{"type":19,"value":506},{"type":14,"tag":15,"props":616,"children":617},{},[618],{"type":19,"value":619},"Subscribe to the BBS address notifications to be notified about incoming transaction. Reserved for future use",{"type":14,"tag":466,"props":621,"children":622},{"id":515},[623],{"type":19,"value":515},{"type":14,"tag":15,"props":625,"children":626},{},[627],{"type":19,"value":628},"Unsubsribe from the BBS address notifications. Reserved for future use",{"type":14,"tag":15,"props":630,"children":631},{},[632],{"type":14,"tag":633,"props":634,"children":635},"strong",{},[636],{"type":14,"tag":43,"props":637,"children":639},{"name":638},"balancer-hello",[640],{"type":19,"value":641},"balancer root (/)",{"type":14,"tag":15,"props":643,"children":644},{},[645,647,652],{"type":19,"value":646},"Just a 'hello world' endpoint. Returns the ",{"type":14,"tag":54,"props":648,"children":649},{"className":7},[650],{"type":19,"value":651},"Hello! This is the wallet service balancer",{"type":19,"value":653}," string. It is intended to be used for alive checks.",{"type":14,"tag":15,"props":655,"children":656},{},[657],{"type":14,"tag":633,"props":658,"children":659},{},[660],{"type":14,"tag":43,"props":661,"children":663},{"name":662},"balancer-status",[664],{"type":19,"value":541},{"type":14,"tag":15,"props":666,"children":667},{},[668],{"type":19,"value":669},"Status endpoint. Returns json with the internal service balancer methods.",{"type":14,"tag":102,"props":671,"children":673},{"code":672},"/status?secret=secret\n",[674],{"type":14,"tag":54,"props":675,"children":676},{"__ignoreMap":7},[677],{"type":19,"value":672},{"type":14,"tag":15,"props":679,"children":680},{},[681,683,688],{"type":19,"value":682},"Expects secret (password) to be provided. Secret is configured in the balancer's ",{"type":14,"tag":54,"props":684,"children":685},{"className":7},[686],{"type":19,"value":687},"config.json",{"type":19,"value":689}," file. For testent & masternet this endpoint is public and can be accessed by anyone:",{"type":14,"tag":309,"props":691,"children":692},{},[693,702],{"type":14,"tag":37,"props":694,"children":695},{},[696],{"type":14,"tag":43,"props":697,"children":700},{"href":698,"rel":699},"https://web-wallet-testnet.beam.mw/status?secret=secret",[47],[701],{"type":19,"value":698},{"type":14,"tag":37,"props":703,"children":704},{},[705],{"type":14,"tag":43,"props":706,"children":709},{"href":707,"rel":708},"https://web-wallet-masternet.beam.mw/status?secret=secret",[47],[710],{"type":19,"value":707},{"type":14,"tag":466,"props":712,"children":714},{"id":713},"wallet-service-api",[715],{"type":19,"value":716},"Wallet Service API",{"type":14,"tag":15,"props":718,"children":719},{},[720],{"type":19,"value":721},"Wallet Service API provides the following methods:",{"type":14,"tag":309,"props":723,"children":724},{},[725,734,743,752,761,770,779],{"type":14,"tag":37,"props":726,"children":727},{},[728],{"type":14,"tag":43,"props":729,"children":731},{"href":730},"#create_wallet",[732],{"type":19,"value":733},"create_wallet",{"type":14,"tag":37,"props":735,"children":736},{},[737],{"type":14,"tag":43,"props":738,"children":740},{"href":739},"#open_wallet",[741],{"type":19,"value":742},"open_wallet",{"type":14,"tag":37,"props":744,"children":745},{},[746],{"type":14,"tag":43,"props":747,"children":749},{"href":748},"#change_password",[750],{"type":19,"value":751},"change_password",{"type":14,"tag":37,"props":753,"children":754},{},[755],{"type":14,"tag":43,"props":756,"children":758},{"href":757},"#calc_change",[759],{"type":19,"value":760},"calc_change",{"type":14,"tag":37,"props":762,"children":763},{},[764],{"type":14,"tag":43,"props":765,"children":767},{"href":766},"#release",[768],{"type":19,"value":769},"release",{"type":14,"tag":37,"props":771,"children":772},{},[773],{"type":14,"tag":43,"props":774,"children":776},{"href":775},"#ping",[777],{"type":19,"value":778},"ping",{"type":14,"tag":37,"props":780,"children":781},{},[782],{"type":14,"tag":43,"props":783,"children":785},{"href":784},"#wallet-api-methods",[786],{"type":19,"value":787},"Wallet API methdos",{"type":14,"tag":15,"props":789,"children":790},{},[791,793,799],{"type":19,"value":792},"Wallet service expect a set of keykeper-related methods to be implemented by the client. Check the ",{"type":14,"tag":43,"props":794,"children":796},{"href":795},"#keykeeper-client-metods",[797],{"type":19,"value":798},"Wallet Service Client keykeeper methods",{"type":19,"value":800}," for details.",{"type":14,"tag":466,"props":802,"children":803},{"id":733},[804],{"type":19,"value":733},{"type":14,"tag":15,"props":806,"children":807},{},[808],{"type":19,"value":809},"Create new wallet",{"type":14,"tag":102,"props":811,"children":814},{"code":812,"language":554,"meta":7,"className":813},"\u003C--\n{\n    \"jsonrpc\": \"2.0\",\n    \"id\": \"123\",\n    \"method\": \"create_wallet\",\n    \"params\":\n    {\n        \"pass\": \"wallet password\",\n        \"ownerkey\": \"wallet owner key\",\n    }\n}\n",[556],[815],{"type":14,"tag":54,"props":816,"children":817},{"__ignoreMap":7},[818],{"type":19,"value":812},{"type":14,"tag":309,"props":820,"children":821},{},[822,827],{"type":14,"tag":37,"props":823,"children":824},{},[825],{"type":19,"value":826},"pass - initial wallet password",{"type":14,"tag":37,"props":828,"children":829},{},[830],{"type":19,"value":831},"ownerkey - wallet owner key, get it from key keeper",{"type":14,"tag":102,"props":833,"children":836},{"code":834,"language":554,"meta":7,"className":835},"-->\n{\n    \"jsonrpc\": \"2.0\",\n    \"id\": \"123\",\n    \"result\": \"wallet id\"\n}\n",[556],[837],{"type":14,"tag":54,"props":838,"children":839},{"__ignoreMap":7},[840],{"type":19,"value":834},{"type":14,"tag":309,"props":842,"children":843},{},[844],{"type":14,"tag":37,"props":845,"children":846},{},[847],{"type":19,"value":848},"result - returns wallet id used to identify the wallet in other API calls",{"type":14,"tag":466,"props":850,"children":851},{"id":742},[852],{"type":19,"value":742},{"type":14,"tag":15,"props":854,"children":855},{},[856],{"type":19,"value":857},"Open wallet with the given ID and password.",{"type":14,"tag":102,"props":859,"children":862},{"code":860,"language":554,"meta":7,"className":861},"\u003C--\n{\n    \"jsonrpc\": \"2.0\",\n    \"id\": \"123\",\n    \"method\": \"open_wallet\",\n    \"params\":\n    {\n        \"id\": \"\u003Cwallet ID>\",\n        \"pass\": \"\u003Cwallet password>\"\n    }\n}\n",[556],[863],{"type":14,"tag":54,"props":864,"children":865},{"__ignoreMap":7},[866],{"type":19,"value":860},{"type":14,"tag":309,"props":868,"children":869},{},[870,887],{"type":14,"tag":37,"props":871,"children":872},{},[873,875,879,881,885],{"type":19,"value":874},"id - wallet id returned by the ",{"type":14,"tag":43,"props":876,"children":877},{"href":730},[878],{"type":19,"value":733},{"type":19,"value":880}," method or by the ",{"type":14,"tag":54,"props":882,"children":883},{"className":7},[884],{"type":19,"value":574},{"type":19,"value":886}," method",{"type":14,"tag":37,"props":888,"children":889},{},[890],{"type":19,"value":891},"pass - wallet password used to create wallet",{"type":14,"tag":102,"props":893,"children":896},{"code":894,"language":554,"meta":7,"className":895},"-->\n{\n    \"jsonrpc\": \"2.0\",\n    \"id\": \"123\",\n    \"result\": \"adc18c1afbb74674b5853fb4350df70a\"\n}\n",[556],[897],{"type":14,"tag":54,"props":898,"children":899},{"__ignoreMap":7},[900],{"type":19,"value":894},{"type":14,"tag":309,"props":902,"children":903},{},[904],{"type":14,"tag":37,"props":905,"children":906},{},[907],{"type":19,"value":908},"result - unique session id. Reserved for the future use",{"type":14,"tag":466,"props":910,"children":911},{"id":751},[912],{"type":19,"value":751},{"type":14,"tag":15,"props":914,"children":915},{},[916],{"type":19,"value":917},"Change wallet password. Wallet must be already opened when this method is called.",{"type":14,"tag":102,"props":919,"children":922},{"code":920,"language":554,"meta":7,"className":921},"\u003C--\n{\n    \"jsonrpc\": \"2.0\",\n    \"id\": \"123\",\n    \"method\": \"change_password\",\n    \"params\":\n    {\n        \"new_pass\": \"new password\"\n    }\n}\n",[556],[923],{"type":14,"tag":54,"props":924,"children":925},{"__ignoreMap":7},[926],{"type":19,"value":920},{"type":14,"tag":309,"props":928,"children":929},{},[930],{"type":14,"tag":37,"props":931,"children":932},{},[933],{"type":19,"value":934},"new_pass - new wallet password",{"type":14,"tag":102,"props":936,"children":939},{"code":937,"language":554,"meta":7,"className":938},"-->\n{\n    \"jsonrpc\": \"2.0\",\n    \"id\": \"123\",\n    \"result\": \"done\"\n}\n",[556],[940],{"type":14,"tag":54,"props":941,"children":942},{"__ignoreMap":7},[943],{"type":19,"value":937},{"type":14,"tag":309,"props":945,"children":946},{},[947],{"type":14,"tag":37,"props":948,"children":949},{},[950],{"type":19,"value":951},"result - \"done\" on success",{"type":14,"tag":466,"props":953,"children":954},{"id":769},[955],{"type":19,"value":769},{"type":14,"tag":15,"props":957,"children":958},{},[959],{"type":19,"value":960},"Close (release) the currently opened wallet. Usually it is not necessary to call this method. Wallet would be automatically closed as soon as the web socket connection is released.",{"type":14,"tag":102,"props":962,"children":965},{"code":963,"language":554,"meta":7,"className":964},"\u003C--\n{\n    \"jsonrpc\": \"2.0\",\n    \"id\": \"123\",\n    \"method\": \"release\"\n}\n\n",[556],[966],{"type":14,"tag":54,"props":967,"children":968},{"__ignoreMap":7},[969],{"type":19,"value":963},{"type":14,"tag":15,"props":971,"children":972},{},[973],{"type":19,"value":974},"This method does not have any parameters.",{"type":14,"tag":102,"props":976,"children":978},{"code":937,"language":554,"meta":7,"className":977},[556],[979],{"type":14,"tag":54,"props":980,"children":981},{"__ignoreMap":7},[982],{"type":19,"value":937},{"type":14,"tag":309,"props":984,"children":985},{},[986],{"type":14,"tag":37,"props":987,"children":988},{},[989],{"type":19,"value":951},{"type":14,"tag":466,"props":991,"children":992},{"id":760},[993],{"type":19,"value":760},{"type":14,"tag":15,"props":995,"children":996},{},[997],{"type":19,"value":998},"Service method used to calculate change for the given transaction amount",{"type":14,"tag":102,"props":1000,"children":1003},{"code":1001,"language":554,"meta":7,"className":1002},"\u003C--\n{\n    \"jsonrpc\": \"2.0\",\n    \"id\": \"123\",\n    \"method\": \"calc_change\",\n    \"params\":\n    {\n        \"amount\": 100\n    }\n}\n",[556],[1004],{"type":14,"tag":54,"props":1005,"children":1006},{"__ignoreMap":7},[1007],{"type":19,"value":1001},{"type":14,"tag":309,"props":1009,"children":1010},{},[1011],{"type":14,"tag":37,"props":1012,"children":1013},{},[1014],{"type":19,"value":1015},"amount - transaction amount in groth",{"type":14,"tag":102,"props":1017,"children":1020},{"code":1018,"language":554,"meta":7,"className":1019},"-->\n{\n    \"jsonrpc\": \"2.0\",\n    \"id\": \"123\",\n    \"result\": {\n        \"change\": 499999900,\n        \"change_str\": \"499999900\"\n    }\n}\n",[556],[1021],{"type":14,"tag":54,"props":1022,"children":1023},{"__ignoreMap":7},[1024],{"type":19,"value":1018},{"type":14,"tag":309,"props":1026,"children":1027},{},[1028,1033],{"type":14,"tag":37,"props":1029,"children":1030},{},[1031],{"type":19,"value":1032},"change - transaction change in groth",{"type":14,"tag":37,"props":1034,"children":1035},{},[1036,1038,1043],{"type":19,"value":1037},"change_str - string representation of the ",{"type":14,"tag":54,"props":1039,"children":1040},{"className":7},[1041],{"type":19,"value":1042},"change",{"type":19,"value":1044}," parameter",{"type":14,"tag":466,"props":1046,"children":1047},{"id":778},[1048],{"type":19,"value":778},{"type":14,"tag":15,"props":1050,"children":1051},{},[1052],{"type":19,"value":1053},"Just a convenience ping (are you alive?) method. It is recommended not to use this method but to rely on the underlying websocket infrastructure which already implements ping-pong control frames.",{"type":14,"tag":102,"props":1055,"children":1058},{"code":1056,"language":554,"meta":7,"className":1057},"\u003C--\n{\n    \"jsonrpc\": \"2.0\",\n    \"id\": \"123\",\n    \"method\": \"ping\"\n}\n\n",[556],[1059],{"type":14,"tag":54,"props":1060,"children":1061},{"__ignoreMap":7},[1062],{"type":19,"value":1056},{"type":14,"tag":15,"props":1064,"children":1065},{},[1066],{"type":19,"value":974},{"type":14,"tag":102,"props":1068,"children":1071},{"code":1069,"language":554,"meta":7,"className":1070},"-->\n{\n    \"jsonrpc\": \"2.0\",\n    \"id\": \"123\",\n    \"result\": \"pong\"\n}\n",[556],[1072],{"type":14,"tag":54,"props":1073,"children":1074},{"__ignoreMap":7},[1075],{"type":19,"value":1069},{"type":14,"tag":309,"props":1077,"children":1078},{},[1079],{"type":14,"tag":37,"props":1080,"children":1081},{},[1082],{"type":19,"value":1083},"result - \"pong\" on success",{"type":14,"tag":466,"props":1085,"children":1087},{"id":1086},"wallet-api-methods",[1088],{"type":14,"tag":43,"props":1089,"children":1090},{"name":1086},[1091],{"type":19,"value":1092},"wallet API methods",{"type":14,"tag":15,"props":1094,"children":1095},{},[1096,1098,1105],{"type":19,"value":1097},"Wallet service also implements all the BEAM Wallet Protocol API methods. Please consult the ",{"type":14,"tag":43,"props":1099,"children":1102},{"href":1100,"rel":1101},"https://github.com/BeamMW/beam/wiki/Beam-wallet-protocol-API",[47],[1103],{"type":19,"value":1104},"Beam wallet protocol API",{"type":19,"value":464},{"type":14,"tag":466,"props":1107,"children":1109},{"id":1108},"webassembly-keykeeper",[1110],{"type":14,"tag":43,"props":1111,"children":1113},{"name":1112},"wasm-key-keeper",[1114],{"type":19,"value":1115},"WebAssembly Keykeeper",{"type":14,"tag":15,"props":1117,"children":1118},{},[1119],{"type":14,"tag":43,"props":1120,"children":1123},{"href":1121,"rel":1122},"https://builds.beam.mw/testnet/2020.06.16/MinSizeRel/wasm/wasm-key-keeper.tar.gz",[47],[1124],{"type":19,"value":1125},"Get latest testnet version",{"type":14,"tag":1127,"props":1128,"children":1130},"h4",{"id":1129},"keykeeper-initialization-example",[1131],{"type":19,"value":1132},"Keykeeper initialization example:",{"type":14,"tag":102,"props":1134,"children":1139},{"code":1135,"language":1136,"meta":7,"className":1137},"\u003C!DOCTYPE html>\n\u003Chtml>\n\u003Cscript src='wasm-key-keeper.js'>\u003C/script>\n\u003Cscript type=\"text/javascript\">\n    Module().then((Module) => console.log(`Key Keeper module successfully loaded.`))\n\u003C/script>\n\u003C/html>\n","html",[1138],"language-html",[1140],{"type":14,"tag":54,"props":1141,"children":1142},{"__ignoreMap":7},[1143],{"type":19,"value":1135},{"type":14,"tag":1127,"props":1145,"children":1147},{"id":1146},"wallet-service-client-keykeeper-methods",[1148],{"type":14,"tag":43,"props":1149,"children":1151},{"name":1150},"keykeeper-client-metods",[1152],{"type":19,"value":1153},"Wallet Service client keykeeper methods",{"type":14,"tag":309,"props":1155,"children":1156},{},[1157,1166,1174,1182,1190,1198],{"type":14,"tag":37,"props":1158,"children":1159},{},[1160],{"type":14,"tag":43,"props":1161,"children":1163},{"href":1162},"#keykeeper-methods",[1164],{"type":19,"value":1165},"get_kdf",{"type":14,"tag":37,"props":1167,"children":1168},{},[1169],{"type":14,"tag":43,"props":1170,"children":1171},{"href":1162},[1172],{"type":19,"value":1173},"get_slots",{"type":14,"tag":37,"props":1175,"children":1176},{},[1177],{"type":14,"tag":43,"props":1178,"children":1179},{"href":1162},[1180],{"type":19,"value":1181},"create_output",{"type":14,"tag":37,"props":1183,"children":1184},{},[1185],{"type":14,"tag":43,"props":1186,"children":1187},{"href":1162},[1188],{"type":19,"value":1189},"sign_receiver",{"type":14,"tag":37,"props":1191,"children":1192},{},[1193],{"type":14,"tag":43,"props":1194,"children":1195},{"href":1162},[1196],{"type":19,"value":1197},"sign_sender",{"type":14,"tag":37,"props":1199,"children":1200},{},[1201],{"type":14,"tag":43,"props":1202,"children":1203},{"href":1162},[1204],{"type":19,"value":1205},"sign_split",{"type":14,"tag":15,"props":1207,"children":1208},{},[1209],{"type":19,"value":1210},"These methods are supported by the default WASM keykeeper. Wallet Service Client should just implement a simple proxy:",{"type":14,"tag":102,"props":1212,"children":1215},{"code":1213,"language":1136,"meta":7,"className":1214},"\u003C!DOCTYPE html>\n\u003Chtml>\n\u003Cscript src='wasm-key-keeper.js'>\u003C/script>\n\u003Cscript type=\"text/javascript\">\n    Module().then((Module) => {\n        var connection = null;\n        var endpoint = 'ws://url-to-service';\n        var seed = Module.KeyKeeper.GeneratePhrase();\n    var keykeeper = new Module.KeyKeeper(seed);\n        connection = new WebSocket(endpoint);\n        connection.onmessage = e =>  {\n        var data = JSON.parse(e.data);\n            if(data.method) {\n            var res = keykeeper.invokeServiceMethod(e.data);\n        connection.send(res);\n        }\n       }\n    })\n\u003C/script>\n\u003C/html>\n",[1138],[1216],{"type":14,"tag":54,"props":1217,"children":1218},{"__ignoreMap":7},[1219],{"type":19,"value":1213},{"type":14,"tag":1221,"props":1222,"children":1223},"table",{},[1224,1253],{"type":14,"tag":1225,"props":1226,"children":1227},"thead",{},[1228],{"type":14,"tag":1229,"props":1230,"children":1231},"tr",{},[1232,1238,1243,1248],{"type":14,"tag":1233,"props":1234,"children":1235},"th",{},[1236],{"type":19,"value":1237},"Method",{"type":14,"tag":1233,"props":1239,"children":1240},{},[1241],{"type":19,"value":1242},"Description",{"type":14,"tag":1233,"props":1244,"children":1245},{},[1246],{"type":19,"value":1247},"Arguments",{"type":14,"tag":1233,"props":1249,"children":1250},{},[1251],{"type":19,"value":1252},"Return",{"type":14,"tag":1254,"props":1255,"children":1256},"tbody",{},[1257,1281,1304,1327,1350,1372],{"type":14,"tag":1229,"props":1258,"children":1259},{},[1260,1266,1271,1276],{"type":14,"tag":1261,"props":1262,"children":1263},"td",{},[1264],{"type":19,"value":1265},"getOwnerKey",{"type":14,"tag":1261,"props":1267,"children":1268},{},[1269],{"type":19,"value":1270},"get owner key from password",{"type":14,"tag":1261,"props":1272,"children":1273},{},[1274],{"type":19,"value":1275},"wallet password (string)",{"type":14,"tag":1261,"props":1277,"children":1278},{},[1279],{"type":19,"value":1280},"owner key (string)",{"type":14,"tag":1229,"props":1282,"children":1283},{},[1284,1289,1294,1299],{"type":14,"tag":1261,"props":1285,"children":1286},{},[1287],{"type":19,"value":1288},"ConvertTokenToJson",{"type":14,"tag":1261,"props":1290,"children":1291},{},[1292],{"type":19,"value":1293},"get token data",{"type":14,"tag":1261,"props":1295,"children":1296},{},[1297],{"type":19,"value":1298},"token (string)",{"type":14,"tag":1261,"props":1300,"children":1301},{},[1302],{"type":19,"value":1303},"PeerID (string), PeerWalletIdentity (string), TransactionType (number), tx_id (number)",{"type":14,"tag":1229,"props":1305,"children":1306},{},[1307,1312,1317,1322],{"type":14,"tag":1261,"props":1308,"children":1309},{},[1310],{"type":19,"value":1311},"getSendToken",{"type":14,"tag":1261,"props":1313,"children":1314},{},[1315],{"type":19,"value":1316},"generate token",{"type":14,"tag":1261,"props":1318,"children":1319},{},[1320],{"type":19,"value":1321},"sbbsAddressHex (string), identityStrHex (string), amountBase64 (string)",{"type":14,"tag":1261,"props":1323,"children":1324},{},[1325],{"type":19,"value":1326},"key (string)",{"type":14,"tag":1229,"props":1328,"children":1329},{},[1330,1335,1340,1345],{"type":14,"tag":1261,"props":1331,"children":1332},{},[1333],{"type":19,"value":1334},"getWalletID",{"type":14,"tag":1261,"props":1336,"children":1337},{},[1338],{"type":19,"value":1339},"get wallet id",{"type":14,"tag":1261,"props":1341,"children":1342},{},[1343],{"type":19,"value":1344},"-",{"type":14,"tag":1261,"props":1346,"children":1347},{},[1348],{"type":19,"value":1349},"wallet id (string)",{"type":14,"tag":1229,"props":1351,"children":1352},{},[1353,1358,1363,1367],{"type":14,"tag":1261,"props":1354,"children":1355},{},[1356],{"type":19,"value":1357},"GeneratePhrase",{"type":14,"tag":1261,"props":1359,"children":1360},{},[1361],{"type":19,"value":1362},"generate seed phrase",{"type":14,"tag":1261,"props":1364,"children":1365},{},[1366],{"type":19,"value":1344},{"type":14,"tag":1261,"props":1368,"children":1369},{},[1370],{"type":19,"value":1371},"seed phrase (string)",{"type":14,"tag":1229,"props":1373,"children":1374},{},[1375,1380,1385,1389],{"type":14,"tag":1261,"props":1376,"children":1377},{},[1378],{"type":19,"value":1379},"IsValidPhrase",{"type":14,"tag":1261,"props":1381,"children":1382},{},[1383],{"type":19,"value":1384},"seed phrase validation",{"type":14,"tag":1261,"props":1386,"children":1387},{},[1388],{"type":19,"value":1344},{"type":14,"tag":1261,"props":1390,"children":1391},{},[1392],{"type":19,"value":1393},"is seed valid (boolean)",{"type":14,"tag":1127,"props":1395,"children":1397},{"id":1396},"minimal-wallet-implementation-example",[1398],{"type":19,"value":1399},"Minimal Wallet implementation example:",{"type":14,"tag":102,"props":1401,"children":1403},{"code":1402},"﻿\u003C!doctype html>\n\u003Chtml lang=\"en\">\n\u003Chead>\n    \u003Ctitle>Beam Wallet Client\u003C/title>\n\n    \u003Cmeta charset=\"utf-8\">\n    \u003Cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n\n    \u003Clink rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\" integrity=\"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\" crossorigin=\"anonymous\">\n\u003C/head>\n\n\u003Cbody>\n    \u003Cdiv class=\"container\">\n        \u003Ch1 class=\"text-center\">Beam Wallet Client\u003C/h1>\n        \u003Chr>\n\n        \u003Chr>\n        \u003Cdiv id=\"login-panel\">\n          \u003Cspan class=\"badge badge-danger\">status: logging in, please wait...\u003C/span>\n        \u003C/div>\n\n        \u003Cdiv id=\"connecting-panel\" style=\"display: none;\">\n            \u003Cspan class=\"badge badge-danger\">status: connecting to the Wallet Service, please wait...\u003C/span>\n        \u003C/div>\n\n        \u003Cform id=\"create-wallet-panel\" style=\"display: none;\">\n            \u003Cdiv class=\"form-group\">\n                \u003Cspan class=\"badge badge-success\">status: connected to the Wallet Service\u003C/span>\n            \u003C/div>\n            \u003Cdiv class=\"form-group\">\n                \u003Clabel for=\"seed-phrase-input\">Generated seed phrase:\u003C/label>\n                \u003Cinput disabled type=\"text\" class=\"seed-phrase-input form-control\" placeholder=\"Enter seed phrase\">\n            \u003C/div>\n            \u003Cdiv class=\"form-group\">\n                \u003Clabel for=\"wallet-pass-input\">Enter wallet password:\u003C/label>\n                \u003Cinput type=\"password\" class=\"wallet-pass-input form-control\" placeholder=\"Enter wallet password\" value=\"456\">\n            \u003C/div>\n            \u003Cdiv class=\"form-group\">\n                \u003Cbutton type=\"button\" class=\"create-wallet-button btn btn-primary\">\n                    \u003Cspan class=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\" style=\"display: none;\">\u003C/span>\n                    Create new wallet\n                \u003C/button>\n            \u003C/div>\n        \u003C/form>\n\n        \u003Cform id=\"open-wallet-panel\" style=\"display: none;\">\n            \u003Cdiv class=\"form-group\">\n                \u003Cspan class=\"badge badge-success\">status: connected to the Wallet Service\u003C/span>\n            \u003C/div>\n            \u003Cdiv class=\"form-group\">\n                \u003Clabel for=\"wallet-pass-input\">Enter wallet password:\u003C/label>\n                \u003Cinput type=\"password\" class=\"wallet-pass-input form-control\" placeholder=\"Enter wallet password\" value=\"456\">\n            \u003C/div>\n            \u003Cdiv class=\"form-group\">\n                \u003Cbutton type=\"button\" class=\"open-wallet-button btn btn-primary\">\n                    \u003Cspan class=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\" style=\"display: none;\">\u003C/span>\n                    Open wallet\n                \u003C/button>\n                or\n                \u003Cbutton type=\"button\" class=\"delete-wallet-button btn btn-danger\">\n                        \u003Cspan class=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\" style=\"display: none;\">\u003C/span>\n                        Delete wallet\n                \u003C/button>\n            \u003C/div>\n        \u003C/form>\n\n        \u003Cform id=\"wallet-panel\" style=\"display: none;\">\n            \u003Cdiv class=\"form-group\">\n                \u003Cspan class=\"badge badge-success\">status: connected to the Wallet Service\u003C/span>\n            \u003C/div>\n            \u003Cdiv class=\"form-group\">\n                \u003Cdiv>Available: \u003Cspan class=\"available\">\u003C/span>\u003C/div>\n                \u003Cdiv>Sending: \u003Cspan class=\"sending\">\u003C/span>\u003C/div>\n                \u003Cdiv>Receiving: \u003Cspan class=\"receiving\">\u003C/span>\u003C/div>\n            \u003C/div>\n            \u003Cdiv class=\"form-group\">\n                Current height: \u003Cspan class=\"current_height\">\u003C/span>\n            \u003C/div>\n            \u003Chr>\n            \u003Ch3>Send\u003C/h3>\n                \u003Cdiv class=\"form-group\">\n                    \u003Clabel for=\"receiver-address-input\">Enter receiver address:\u003C/label>\n                    \u003Cinput type=\"text\" class=\"receiver-address-input form-control\" placeholder=\"Enter receiver address\" value=\"19f3b39d925ce49f19f67c3787b54bfe4414d490f0acf42b58527a23608427bbb34\">\n                \u003C/div>\n                \u003Cdiv class=\"form-group\">\n                    \u003Clabel for=\"amount-input\">Enter amount (GROTH):\u003C/label>\n                    \u003Cinput type=\"text\" class=\"amount-input form-control\" placeholder=\"Enter amount\">\n                \u003C/div>\n                \u003Cbutton type=\"button\" class=\"send-button btn btn-danger\">\n                    Send\n                \u003C/button>               \n            \u003Chr>\n            \u003Ch3>Transactions\u003C/h3>\n            \u003Ctable class=\"table transactions\">\n                \u003Cthead>\n                    \u003Ctr>\n                        \u003Cth>#\u003C/th>\n                        \u003Cth>created\u003C/th>\n                        \u003Cth>receiver\u003C/th>\n                        \u003Cth>sender\u003C/th>\n                        \u003Cth>amount\u003C/th>\n                        \u003Cth>status\u003C/th>\n                    \u003C/tr>\n                \u003C/thead>\n                \u003Ctbody>\u003C/tbody>\n            \u003C/table>\n            \u003Chr>\n            \u003Ch3>Addresses\u003C/h3>\n            \u003Ctable class=\"table addresses\">\n                \u003Cthead>\n                    \u003Ctr>\n                        \u003Cth>#\u003C/th>\n                        \u003Cth>address\u003C/th>\n                        \u003Cth>comment\u003C/th>\n                        \u003Cth>create time\u003C/th>\n                        \u003Cth>duration\u003C/th>\n                        \u003Cth>expired\u003C/th>\n                        \u003Cth>own\u003C/th>\n                    \u003C/tr>\n                \u003C/thead>\n                \u003Ctbody>\u003C/tbody>\n            \u003C/table>\n            \u003Cdiv id=\"push-panel\" style=\"display:none\">\n            \u003Cbutton class=\"btn btn-secondary\" id=\"push-enable\" style=\"display:none\">Enable Push Notifications\u003C/button>\n            \u003Cbutton class=\"btn btn-secondary\" id=\"push-disable\" style=\"display:none\">Disable Push Notifications\u003C/button>\n            \u003Cspan id=\"push-blocked\" style=\"display:none\">Push notifications are blocked by user\u003C/span>\n            \u003C/div>\n            \u003Chr>\n            \u003Ch3>UTXO\u003C/h3>\n            \u003Ctable class=\"table utxo\">\n                \u003Cthead>\n                    \u003Ctr>\n                        \u003Cth>#\u003C/th>\n                        \u003Cth>amount\u003C/th>\n                        \u003Cth>id\u003C/th>\n                        \u003Cth>maturity\u003C/th>\n                        \u003Cth>status\u003C/th>\n                        \u003Cth>type\u003C/th>\n                    \u003C/tr>\n                \u003C/thead>\n                \u003Ctbody>\u003C/tbody>\n            \u003C/table>\n            \u003Chr>\n            \u003Cbutton type=\"button\" class=\"close-wallet-button btn btn-secondary\">\n                Close wallet\n            \u003C/button>\n        \u003C/form>     \n    \n    \u003C/div>\n\u003C/body>\n    \u003Cscript src='wasm-key-keeper.js'>\u003C/script>\n    \u003Cscript src=\"https://code.jquery.com/jquery-3.3.1.slim.min.js\" integrity=\"sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo\" crossorigin=\"anonymous\">\u003C/script>\n    \u003Cscript src=\"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js\" integrity=\"sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1\" crossorigin=\"anonymous\">\u003C/script>\n    \u003Cscript src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js\" integrity=\"sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM\" crossorigin=\"anonymous\">\u003C/script>\n    \u003Cscript type=\"module\">\n    import WebPush from './webpush.js'\n    Module().then(function(Module) {\n        let keykeeper = null\n        var loginConnection = null\n        var connection = null\n        var webpush = null\n        var defaddr = null\n\n        login()\n\n        // If you change walletID/seed you should ALWAYS relogin\n        // If you lose loginConnection or connection, ALWAYS relogin\n        // Both loginConnection & connection should be active\n        function login() {\n            //keykeeper = initKeyKeeper(\"giraffe usage sad arrest sound chimney file select monster head clown ask\")\n            //localStorage.seed = \"giraffe usage sad arrest sound chimney file select monster head clown ask\"\n            //localStorage.id = keykeeper.getWalletID()\n\n            if (localStorage.id && localStorage.seed) {\n                console.log(`Stored WalletID:${localStorage.id}`)\n                console.log(`Stored Seed: ${localStorage.seed}`)\n                keykeeper = initKeyKeeper(localStorage.seed)\n                console.log(`Keykeeper created`);\n            } else {\n                let seed = Module.KeyKeeper.GeneratePhrase()\n                console.log(`New Seed: ${seed}`)\n                keykeeper = initKeyKeeper(seed)\n                console.log(`New WalletID: ${keykeeper.getWalletID()}`)\n                $('#create-wallet-panel .seed-phrase-input').val(seed)\n            }\n\n            console.log(\"Logging in...\")\n            loginConnection = new WebSocket('ws://127.0.0.1:20000/ws')\n\n            loginConnection.onclose = () => {\n                console.log('login_ws: connection lost')\n                loginConnection = null\n                relogin()\n            }\n\n            loginConnection.onerror = error => {\n                console.log(`login_ws: connection error: ${JSON.stringify(error)}`)\n            }\n\n            loginConnection.onopen = () => {\n                console.log('login_ws: connected...')\n\n                let loginParams = {\n                    WalletID: keykeeper.getWalletID()\n                }\n\n                loginConnection.send(JSON.stringify({\n                    jsonrpc: \"2.0\",\n                    id: 123,\n                    method: \"login\",\n                    params: loginParams\n                }))\n            }\n\n            loginConnection.onmessage = e => {\n                let data = JSON.parse(e.data)\n\n                if (data.result) {\n                    console.log(`login_ws: result is ${JSON.stringify(data.result)}`)\n                    if (data.id === 123) {\n                        console.log(\"login_ws: OK, endpoint is \", data.result.endpoint)\n                        let endpoint = ['ws://', data.result.endpoint].join('');\n                        start(endpoint)\n                    }\n                } else {\n                    console.log(\"login_ws: failed\")\n                    if (data.error) {\n                        console.log(`login_ws: error code:${data.error.code} text:${data.error.data}`)\n                    }\n                }\n            }\n        }\n\n        function relogin () {\n            console.log('relogin in 5 seconds...')\n            setTimeout(() => login(), 5000)\n            showPanel('#connecting-panel')\n        }\n\n        function start(url) {\n            console.log(\"STARTING...\")\n            showPanel('#connecting-panel')\n            connection = new WebSocket(url)\n\n            connection.onerror = error => {\n                console.log(`connection error: ${JSON.stringify(error)}`)\n            }\n\n            connection.onopen = () => {\n                console.log('Connected to the Wallet Servce...')\n                if (localStorage.id) {\n                    showPanel('#open-wallet-panel')\n                } else {\n                    showPanel('#create-wallet-panel')\n                }\n            }\n\n            connection.onclose = () =>\n            {\n                console.log('connection lost...')\n                connection = null\n                loginConnection.close()\n            }\n        }\n\n        function showPanel(id) {\n            ['#login-panel', '#connecting-panel', '#create-wallet-panel', '#open-wallet-panel', '#wallet-panel'].forEach(name => $(name).hide())\n            $(id).show()\n        }\n\n        function initKeyKeeper(seed) {\n            return new Module.KeyKeeper(seed);\n        }\n\n        function onkeykeeper(data) {\n            console.log(`\u003C\u003C\u003C keykeeper request: ${data}`)\n            let res = keykeeper.invokeServiceMethod(data)\n            console.log(`>>> keykeeper response: ${res}`)\n            connection.send(res);\n        }\n\n        /*function refresh()\n        {\n            if(localStorage.id) {\n                showPanel('#open-wallet-panel')\n            }\n            else\n            {\n                $('#create-wallet-panel .seed-phrase-input').val(Module.KeyKeeper.GeneratePhrase())\n                showPanel('#create-wallet-panel')\n            }\n        }*/\n\n        $('#create-wallet-panel .create-wallet-button').click(() =>\n        {\n            let seed = $('#create-wallet-panel .seed-phrase-input').val()\n            console.log(`Creating new wallet with seed phrase: ${seed}`)\n\n            var walletPass = $('#create-wallet-panel .wallet-pass-input').val()\n            var ownerKey = keykeeper.getOwnerKey(walletPass)\n            console.log('ownerKey is: data:application/octet-stream;base64,' + ownerKey)\n\n            $('#create-wallet-panel .create-wallet-button')\n                .attr('disabled', true)\n                .find('.spinner-border').show()\n\n            connection.onmessage = e =>  {\n                console.log(`got response: ${e.data}`)\n\n                var data = JSON.parse(e.data)\n\n                if(data.result && data.result.length)\n                {\n                    console.log(`result is: ${data.result}`)\n\n                    localStorage.clear()\n                    localStorage.seed = seed\n                    localStorage.id = data.result\n\n                    $('#create-wallet-panel .create-wallet-button')\n                        .attr('disabled', false)\n                        .find('.spinner-border').hide()\n\n                    showPanel('#open-wallet-panel')\n                }\n                else if(data.error)\n                    console.log(`error occured, code:${data.error.code} text:${data.error.data}`)\n                else if(data.method)\n                    onkeykeeper(e.data)\n            }\n\n            connection.send(JSON.stringify(\n            {\n                jsonrpc:'2.0',\n                id: 0,\n                method: 'create_wallet',\n                params:\n                {\n                    pass: walletPass,\n                    ownerkey: ownerKey\n                }\n            }))\n        })\n\n        $('#open-wallet-panel .delete-wallet-button').click(() => {\n            if (confirm('Are you sure want do delete current wallet data?')) {\n                pushNotifyUnsub(defaddr)\n                localStorage.clear()\n                connection.close()\n            }\n        })\n\n        $('#wallet-panel .close-wallet-button').click(() => {\n            if (confirm('Are you sure want do close the wallet?')) {\n                connection.close()\n            }\n        })\n\n        $('#open-wallet-panel .open-wallet-button').click(() => {\n            console.log(`Opening wallet with seed phrase: ${localStorage.seed}`)\n            let walletPass = $('#open-wallet-panel .wallet-pass-input').val()\n            let walletID = keykeeper.getWalletID()\n\n            console.log(`walletID: ${walletID}`)\n            connection.onmessage = e => {\n                console.log(`open wallet got response: ${e.data}`)\n                let data = JSON.parse(e.data)\n                if (data.result && data.result.length) {\n                    console.log(`wallet session: ${data.result}`)\n                    showPanel('#wallet-panel')\n                    showWalletStatus()\n                } else if (data.error)\n                    console.log(`error occured, code:${data.error.code} text:${data.error.data}`)\n                else if (data.method)\n                    onkeykeeper(e.data)\n            }\n\n            connection.send(JSON.stringify({\n                jsonrpc: '2.0',\n                id: 0,\n                method: 'open_wallet',\n                params: {\n                    id: localStorage.id,\n                    pass: walletPass\n                }\n            }))\n        })\n\n        function showWalletStatus() {\n            // unsubscribe if any\n            pushNotifyUnsub(defaddr)\n\n            connection.onmessage = e => {\n                let data = JSON.parse(e.data)\n                if (data.result) {\n                    $(\"#wallet-panel .available\").text(data.result.available)\n                    $(\"#wallet-panel .sending\").text(data.result.sending)\n                    $(\"#wallet-panel .receiving\").text(data.result.receiving)\n                    $(\"#wallet-panel .current_height\").text(data.result.current_height)\n                    showAddresses()\n                } else if (data.error)\n                    console.log(`error occured, code:${data.error.code} text:${data.error.data}`)\n                else if (data.method)\n                    onkeykeeper(e.data)\n            }\n            connection.send(JSON.stringify({\n                jsonrpc: '2.0',\n                id: 0,\n                method: 'wallet_status'\n            }))\n        }\n\n        function showAddresses() {\n            connection.onmessage = e => {\n                let data = JSON.parse(e.data)\n                if(data.result) {\n                    let body = $('#wallet-panel .addresses > tbody').empty()\n                    data.result.forEach && data.result.forEach((item, index) => {\n                        if (index === 0) defaddr = item\n                        console.log(JSON.stringify(item))\n                        body.append(`\u003Ctr>\n                                        \u003Ctd>${index+1}\u003C/td>\n                                        \u003Ctd>${item.address}\u003C/td>\n                                        \u003Ctd>${item.comment}\u003C/td>\n                                        \u003Ctd>${item.create_time}\u003C/td>\n                                        \u003Ctd>${item.duration}\u003C/td>\n                                        \u003Ctd>${item.expired}\u003C/td>\n                                        \u003Ctd>${item.own}\u003C/td>\n                                    \u003C/tr>`)\n                    })\n                    if (defaddr) {\n                        showPush()\n                    }\n                    showUtxo()\n                }\n                else if(data.error)\n                    console.log(`error occured, code:${data.error.code} text:${data.error.data}`)\n                else if(data.method)\n                    onkeykeeper(e.data)\n            }\n\n            connection.send(JSON.stringify({\n                jsonrpc: '2.0',\n                id: 0,\n                method: 'addr_list',\n                params: {\n                    own: true\n                }\n            }))\n        }\n        \n        async function pushNotifySub(addr) {\n            return new Promise((resolve, reject) => {\n                if (!addr) reject()\n                return webpush.notifyServer(true, loginConnection, {\n                    SbbsAddress: keykeeper.getSbbsAddress(addr.own_id_str),\n                    SbbsAddressPrivate: keykeeper.getSbbsAddressPrivate(addr.own_id_str),\n                    ExpiresAt: addr.create_time + addr.duration\n                })\n            })\n        }\n\n        async function pushNotifyUnsub(addr) {\n            return new Promise((resolve, reject) => {\n                if (!addr) reject()\n\n                if (!webpush.userSubscribed) {\n                    console.log('unsub: no previous subscription')\n                    reject()\n                    return\n                }\n                return webpush.notifyServer(false, loginConnection, {\n                    SbbsAddress: keykeeper.getSbbsAddress(addr.own_id_str),\n                    SbbsAddressPrivate: keykeeper.getSbbsAddressPrivate(addr.own_id_str)\n                })\n            })\n        }\n\n        function showPush() {\n            webpush = new Proxy(new WebPush(), {\n                set: function(obj, prop, value) {\n                    if (prop === \"subscription\") {\n                        if (value) {\n                            $(\"#push-enable\").hide()\n                            $(\"#push-disable\").show()\n                        } else {\n                            $(\"#push-enable\").show()\n                            $(\"#push-disable\").hide()\n                        }\n                        $(\"#push-panel\").show()\n                    }\n                    obj[prop] = value\n                    return true\n                }\n            })\n\n            if (webpush.blockedByUser) {\n                console.log(\"notifications blocked by user\")\n                $(\"#push-blocked\").show()\n                $(\"#push-panel\").show()\n                // may be push was disabled in settings\n                // remove any previous subscriptions\n                // TODO: check the same on service worker start (if possible)\n                pushNotifyUnsub(defaddr)\n            } else {\n                console.log(\"notifications enabled, notifying server\");\n                (async () => {\n                    if (await webpush.register(loginConnection)) {\n                        await pushNotifySub(defaddr)\n                        console.log(\"Push notification - OK\")\n                    }\n                })()\n            }\n\n            $(\"#push-enable\").click(() => {\n                (async () => {\n                    if (await webpush.subscribe()) {\n                        await pushNotifySub(defaddr)\n                    }\n                })()\n                return true\n            })\n\n            $(\"#push-disable\").click(() => {\n                (async () => {\n                    await pushNotifyUnsub()\n                    await webpush.unsubscribe()\n                })()\n                return true\n            })\n        }\n\n        function showUtxo() {\n            connection.onmessage = e => {\n                let data = JSON.parse(e.data)\n                if (data.result) {\n                    let body = $('#wallet-panel .utxo > tbody').empty()\n                    data.result.forEach && data.result.forEach((item, index) => body.append(`\u003Ctr>\n                            \u003Ctd>${index + 1}\u003C/td>\n                            \u003Ctd>${item.amount}\u003C/td>\n                            \u003Ctd>${item.id}\u003C/td>\n                            \u003Ctd>${item.maturity}\u003C/td>\n                            \u003Ctd>${item.status_string}\u003C/td>\n                            \u003Ctd>${item.type}\u003C/td>\n                            \u003C/tr>`))\n                    showTransactions()\n                } else if (data.error)\n                    console.log(`error occured, code:${data.error.code} text:${data.error.data}`)\n                else if (data.method)\n                    onkeykeeper(e.data)\n            }\n\n            connection.send(JSON.stringify({\n                jsonrpc: '2.0',\n                id: 0,\n                method: 'get_utxo'\n            }))\n        }\n\n        function showTransactions() {\n            connection.onmessage = e => {\n                let data = JSON.parse(e.data)\n                if (data.result) {\n                    let body = $('#wallet-panel .transactions > tbody').empty()\n                    data.result.forEach && data.result.forEach((item, index) => {\n                        body.append(`\u003Ctr>\n                            \u003Ctd>${index + 1}\u003C/td>\n                            \u003Ctd>${new Date(item.create_time * 1000).toLocaleString()}\u003C/td>\n                            \u003Ctd>${item.receiver.slice(0, 32)}...\u003C/td>\n                            \u003Ctd>${item.sender.slice(0, 32)}...\u003C/td>\n                            \u003Ctd>${item.value}\u003C/td>\n                            \u003Ctd>${item.status_string}\u003C/td>\n                            \u003C/tr>`)\n                    })\n                } else onkeykeeper(e.data)\n                if ($('#wallet-panel').is(\":visible\"))\n                    setTimeout(showWalletStatus, 5000)\n            }\n\n            connection.send(JSON.stringify({\n                jsonrpc: '2.0',\n                id: 0,\n                method: 'tx_list'\n            }))\n        }\n\n        $('#wallet-panel .send-button').click(() => {\n            let addr = $('#wallet-panel .receiver-address-input').val()\n            if (addr.length === 0) {\n                alert('Please, enter valid address.')\n                return\n            }\n\n            let amount = $('#wallet-panel .amount-input').val()\n            if (isNaN(parseInt(amount))) {\n                alert('Please, enter valid amount.')\n                return\n            }\n\n            if (confirm(`Are you sure want send ${amount} groth to ${addr}?`)) {\n                $('#wallet-panel .amount-input').val('')\n                send(parseInt(amount), addr)\n            }\n        })\n\n        function send(amount, address) {\n            console.log(`!!! sending ${amount} groth to ${address}...`)\n            connection.onmessage = (e) => {\n                let data = JSON.parse(e.data)\n                if (data.result)\n                    console.log(`result is ${data.result}`)\n                else if (data.error)\n                    console.log(`error occured, code:${data.error.code} text:${data.error.data}`)\n                else if (data.method)\n                    onkeykeeper(e.data)\n            }\n            connection.send(JSON.stringify({\n                jsonrpc: \"2.0\",\n                id: 123,\n                method: \"tx_send\",\n                params: {\n                    value: amount,\n                    fee: 100,\n                    address: address,\n                    comment: \"thank you!\"\n                }\n            }))\n        }\n\n        function createNewTestAddr() {\n            connection.send(JSON.stringify({\n                jsonrpc: '2.0',\n                id: 123,\n                method: 'create_address',\n                params:\n                        {\n                            expiration: '24h',\n                            comment: 'John Smith'\n                        }\n            }))\n        }\n    })\n    \u003C/script>\n\u003C/html>\n",[1404],{"type":14,"tag":54,"props":1405,"children":1406},{"__ignoreMap":7},[1407],{"type":19,"value":1402},{"type":14,"tag":21,"props":1409,"children":1411},{"id":1410},"reference-wallet-implementation",[1412],{"type":19,"value":1413},"Reference Wallet Implementation",{"type":14,"tag":15,"props":1415,"children":1416},{},[1417],{"type":19,"value":1418},"We provide the reference web wallet implementation that combines all the described APIs together and yields the working chrome extension.",{"type":14,"tag":309,"props":1420,"children":1421},{},[1422,1436],{"type":14,"tag":37,"props":1423,"children":1424},{},[1425,1427,1434],{"type":19,"value":1426},"Check out the ",{"type":14,"tag":43,"props":1428,"children":1431},{"href":1429,"rel":1430},"https://github.com/BeamMW/web-wallet",[47],[1432],{"type":19,"value":1433},"web-wallet repository",{"type":19,"value":1435}," for the source code",{"type":14,"tag":37,"props":1437,"children":1438},{},[1439,1441],{"type":19,"value":1440},"Install the testnet ",{"type":14,"tag":43,"props":1442,"children":1445},{"href":1443,"rel":1444},"https://chrome.google.com/webstore/detail/beam-web-wallet-testnet/ilhaljfiglknggcoegeknjghdgampffk?hl=en",[47],[1446],{"type":19,"value":1447},"chrome extension",{"title":7,"searchDepth":1449,"depth":1449,"links":1450},2,[1451,1452,1453,1454,1455,1471],{"id":23,"depth":1449,"text":26},{"id":291,"depth":1449,"text":294},{"id":376,"depth":1449,"text":379},{"id":387,"depth":1449,"text":393},{"id":422,"depth":1449,"text":425,"children":1456},[1457,1459,1460,1461,1462,1463,1464,1465,1466,1467,1468,1469,1470],{"id":468,"depth":1458,"text":471},3,{"id":488,"depth":1458,"text":488},{"id":506,"depth":1458,"text":506},{"id":515,"depth":1458,"text":515},{"id":713,"depth":1458,"text":716},{"id":733,"depth":1458,"text":733},{"id":742,"depth":1458,"text":742},{"id":751,"depth":1458,"text":751},{"id":769,"depth":1458,"text":769},{"id":760,"depth":1458,"text":760},{"id":778,"depth":1458,"text":778},{"id":1086,"depth":1458,"text":1092},{"id":1108,"depth":1458,"text":1115},{"id":1410,"depth":1449,"text":1413},"markdown","content:docs:core-tech:Wallet-Service.md","content","docs/core-tech/Wallet-Service.md","md",1702260924303]